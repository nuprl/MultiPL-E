{
  "name": "mbpp_468_max_product",
  "language": "rs",
  "prompt": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_468_max_product.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpwkr8co51.rs:10:34\n   |\n10 |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpwkr8co51.rs:16:34\n   |\n16 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut product = 1;\n    let mut last_max = 1;\n    for i in arr {\n        if i > last_max {\n            product *= i;\n            last_max = i;\n        } else {\n            max_product = max(max_product, product);\n            product = 1;\n            last_max = 1;\n        }\n    }\n    max(max_product, product)\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpog62evvh.rs:11:27\n   |\n11 |             max_product = max(max_product, product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpog62evvh.rs:16:5\n   |\n16 |     max(max_product, product)\n   |     ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut curr_product = 1;\n    let mut curr_max = 0;\n    for i in 0..arr.len() {\n        if arr[i] > curr_max {\n            curr_max = arr[i];\n            curr_product *= arr[i];\n        } else {\n            curr_product /= curr_max;\n            curr_max = arr[i];\n            curr_product *= arr[i];\n        }\n        if curr_product > max_product {\n            max_product = curr_product;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9000`,\n right: `3000`', /tmp/tmp8tm8yiax.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut product = 1;\n    let mut last_max = 0;\n    for i in 0..arr.len() {\n        if arr[i] > last_max {\n            product *= arr[i];\n            last_max = arr[i];\n        } else {\n            product = 1;\n            last_max = 0;\n        }\n        max_product = std::cmp::max(max_product, product);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `750`,\n right: `3000`', /tmp/tmpid2g14am.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut current_product = 1;\n    let mut current_max = 0;\n    for i in 0..arr.len() {\n        if arr[i] > current_max {\n            current_max = arr[i];\n            current_product *= arr[i];\n            if current_product > max_product {\n                max_product = current_product;\n            }\n        } else {\n            current_product = 1;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `300`,\n right: `3000`', /tmp/tmppt0t7pc5.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut curr_product = 1;\n    let mut prev = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > prev {\n            curr_product *= arr[i];\n            if curr_product > max_product {\n                max_product = curr_product;\n            }\n        } else {\n            curr_product = 1;\n        }\n        prev = arr[i];\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `750`,\n right: `3000`', /tmp/tmprecfv9rw.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = isize::min_value();\n    let mut max_product_so_far = isize::min_value();\n    let mut min_product_so_far = isize::max_value();\n\n    for i in 0..arr.len() {\n        if arr[i] < 0 {\n            let temp = max_product_so_far;\n            max_product_so_far = min_product_so_far;\n            min_product_so_far = temp;\n        }\n\n        max_product_so_far = max(arr[i], max_product_so_far * arr[i]);\n        min_product_so_far = min(arr[i], min_product_so_far * arr[i]);\n        max_product = max(max_product, max_product_so_far);\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp5oovsrjx.rs:14:30\n   |\n14 |         max_product_so_far = max(arr[i], max_product_so_far * arr[i]);\n   |                              ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp5oovsrjx.rs:15:30\n   |\n15 |         min_product_so_far = min(arr[i], min_product_so_far * arr[i]);\n   |                              ^^^\n...\n22 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n15 |         min_product_so_far = main(arr[i], min_product_so_far * arr[i]);\n   |                              ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp5oovsrjx.rs:16:23\n   |\n16 |         max_product = max(max_product, max_product_so_far);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut product = 1;\n    let mut last_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > last_max {\n            product *= arr[i];\n            last_max = arr[i];\n        } else {\n            max_product = max(max_product, product);\n            product = 1;\n            last_max = arr[i];\n        }\n    }\n    max(max_product, product)\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp4miolz2y.rs:11:27\n   |\n11 |             max_product = max(max_product, product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp4miolz2y.rs:16:5\n   |\n16 |     max(max_product, product)\n   |     ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut product = 1;\n    let mut start = 0;\n    let mut end = 0;\n    while end < arr.len() {\n        product *= arr[end];\n        if product > max_product {\n            max_product = product;\n        }\n        if product < 0 {\n            product = 1;\n            start = end + 1;\n        }\n        end += 1;\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmpfk83ye00.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_product = 0;\n    let mut product = 1;\n    for i in 0..arr.len() {\n        if arr[i] > max {\n            max = arr[i];\n            product *= arr[i];\n        } else {\n            product /= max;\n            product *= arr[i];\n        }\n        if product > max_product {\n            max_product = product;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `300`,\n right: `3000`', /tmp/tmp0k90m6sf.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > current_max {\n            current_max = arr[i];\n            current_product = current_product * arr[i];\n        } else {\n            current_product = current_product * arr[i];\n            max_product = max_product.max(current_product);\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1800000`,\n right: `3000`', /tmp/tmpibjpylud.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut max_product_ending_here = 1;\n    let mut min_product_ending_here = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_ending_here = max_product_ending_here * arr[i];\n            min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_ending_here = 1;\n            min_product_ending_here = 1;\n        } else {\n            let temp = max_product_ending_here;\n            max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n            min_product_ending_here = temp * arr[i];\n        }\n        if max_product_so_far < max_product_ending_here {\n            max_product_so_far = max_product_ending_here;\n        }\n    }\n    max_product_so_far\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmphsksuc66.rs:10:39\n   |\n10 |             min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n   |                                       ^^^\n...\n26 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_ending_here = main(min_product_ending_here * arr[i], 1);\n   |                                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmphsksuc66.rs:16:39\n   |\n16 |             max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n   |                                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far.max(max_so_far * arr[i]);\n            min_so_far = min_so_far.min(min_so_far * arr[i]);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = min_so_far.min(min_so_far * arr[i]);\n            min_so_far = temp.max(temp * arr[i]);\n        }\n        max_product = max_product.max(max_so_far);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `3000`', /tmp/tmp96z3e9pg.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpohd0eh2z.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpohd0eh2z.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > max_so_far {\n            max_so_far = arr[i];\n            max_product = max_product.max(max_so_far);\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `3000`', /tmp/tmpvey54zcz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut min_product_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(1, min_product_so_far * arr[i]);\n        } else if arr[i] == 0 {\n            max_product_so_far = 0;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(1, min_product_so_far * arr[i]);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbfzlfhct.rs:9:34\n   |\n9  |             min_product_so_far = min(1, min_product_so_far * arr[i]);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(1, min_product_so_far * arr[i]);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbfzlfhct.rs:15:34\n   |\n15 |             max_product_so_far = max(1, min_product_so_far * arr[i]);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpkmor9r98.rs:10:26\n   |\n10 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpkmor9r98.rs:16:26\n   |\n16 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n    for i in arr {\n        if i > 0 {\n            max_so_far = max_so_far * i;\n            min_so_far = min(min_so_far * i, 1);\n        } else if i == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * i, 1);\n            min_so_far = temp * i;\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpn245fext.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * i, 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * i, 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpn245fext.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * i, 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut product = 1;\n    let mut max_so_far = arr[0];\n    let mut min_so_far = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            let temp = max_so_far;\n            max_so_far = min_so_far;\n            min_so_far = temp;\n        }\n        max_so_far = max(arr[i], max_so_far * arr[i]);\n        min_so_far = min(arr[i], min_so_far * arr[i]);\n        max_product = max(max_product, max_so_far);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6kkz0v2o.rs:13:22\n   |\n13 |         max_so_far = max(arr[i], max_so_far * arr[i]);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6kkz0v2o.rs:14:22\n   |\n14 |         min_so_far = min(arr[i], min_so_far * arr[i]);\n   |                      ^^^\n...\n20 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n14 |         min_so_far = main(arr[i], min_so_far * arr[i]);\n   |                      ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6kkz0v2o.rs:15:23\n   |\n15 |         max_product = max(max_product, max_so_far);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut product = 1;\n    let mut max_so_far = arr[0];\n    let mut min_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut tmp_max = max_so_far;\n        max_so_far = max(max(max_so_far * arr[i], min_so_far * arr[i]), arr[i]);\n        min_so_far = min(min(tmp_max * arr[i], min_so_far * arr[i]), arr[i]);\n        max_product = max(max_product, max_so_far);\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpmeks878j.rs:10:22\n   |\n10 |         max_so_far = max(max(max_so_far * arr[i], min_so_far * arr[i]), arr[i]);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpmeks878j.rs:10:26\n   |\n10 |         max_so_far = max(max(max_so_far * arr[i], min_so_far * arr[i]), arr[i]);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpmeks878j.rs:11:22\n   |\n11 |         min_so_far = min(min(tmp_max * arr[i], min_so_far * arr[i]), arr[i]);\n   |                      ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_so_far = main(min(tmp_max * arr[i], min_so_far * arr[i]), arr[i]);\n   |                      ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpmeks878j.rs:11:26\n   |\n11 |         min_so_far = min(min(tmp_max * arr[i], min_so_far * arr[i]), arr[i]);\n   |                          ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_so_far = min(main(tmp_max * arr[i], min_so_far * arr[i]), arr[i]);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpmeks878j.rs:12:23\n   |\n12 |         max_product = max(max_product, max_so_far);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut prev_max = 0;\n    let mut prev_min = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            prev_max = std::cmp::max(prev_max * arr[i], arr[i]);\n            prev_min = std::cmp::min(prev_min * arr[i], arr[i]);\n        } else if arr[i] == 0 {\n            prev_max = 0;\n            prev_min = 0;\n        } else {\n            let temp = prev_max;\n            prev_max = std::cmp::max(prev_min * arr[i], arr[i]);\n            prev_min = std::cmp::min(temp * arr[i], arr[i]);\n        }\n        max_product = std::cmp::max(max_product, prev_max);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmpu1qnuec1.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_ending_here = 1;\n    let mut min_product_ending_here = 1;\n\n    for a in arr {\n        if a > 0 {\n            max_product_ending_here *= a;\n            min_product_ending_here = min(min_product_ending_here * a, 1);\n        } else if a == 0 {\n            max_product_ending_here = 1;\n            min_product_ending_here = 1;\n        } else {\n            let temp = max_product_ending_here;\n            max_product_ending_here = max(min_product_ending_here * a, 1);\n            min_product_ending_here = temp * a;\n        }\n\n        if max_product_ending_here > max_product {\n            max_product = max_product_ending_here;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpiqh5dt2i.rs:10:39\n   |\n10 |             min_product_ending_here = min(min_product_ending_here * a, 1);\n   |                                       ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_ending_here = main(min_product_ending_here * a, 1);\n   |                                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpiqh5dt2i.rs:16:39\n   |\n16 |             max_product_ending_here = max(min_product_ending_here * a, 1);\n   |                                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far *= arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmps1d9mhxg.rs:9:34\n   |\n9  |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmps1d9mhxg.rs:15:34\n   |\n15 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut product = 1;\n    let mut last_max = isize::min_value();\n    for i in arr {\n        if i > last_max {\n            product *= i;\n            last_max = i;\n        } else {\n            max_product = max(max_product, product);\n            product = 1;\n            last_max = isize::min_value();\n        }\n    }\n    max(max_product, product)\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbz3wr_25.rs:11:27\n   |\n11 |             max_product = max(max_product, product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbz3wr_25.rs:16:5\n   |\n16 |     max(max_product, product)\n   |     ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max(max_so_far * arr[i], arr[i]);\n            min_so_far = min(min_so_far * arr[i], arr[i]);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], arr[i]);\n            min_so_far = min(temp * arr[i], arr[i]);\n        }\n\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp2z31cj7f.rs:9:26\n  |\n9 |             max_so_far = max(max_so_far * arr[i], arr[i]);\n  |                          ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp2z31cj7f.rs:10:26\n   |\n10 |             min_so_far = min(min_so_far * arr[i], arr[i]);\n   |                          ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_so_far = main(min_so_far * arr[i], arr[i]);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2z31cj7f.rs:16:26\n   |\n16 |             max_so_far = max(min_so_far * arr[i], arr[i]);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp2z31cj7f.rs:17:26\n   |\n17 |             min_so_far = min(temp * arr[i], arr[i]);\n   |                          ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n17 |             min_so_far = main(temp * arr[i], arr[i]);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror: aborting due to 4 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut min_product_so_far = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(1, min_product_so_far * arr[i]);\n        } else if arr[i] == 0 {\n            max_product_so_far = 0;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(1, min_product_so_far * arr[i]);\n            min_product_so_far = temp * arr[i];\n        }\n\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmplda2llvo.rs:10:34\n   |\n10 |             min_product_so_far = min(1, min_product_so_far * arr[i]);\n   |                                  ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_so_far = main(1, min_product_so_far * arr[i]);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmplda2llvo.rs:16:34\n   |\n16 |             max_product_so_far = max(1, min_product_so_far * arr[i]);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = isize::min_value();\n    let mut product = 1;\n    let mut last_max = isize::min_value();\n    for i in 0..arr.len() {\n        if arr[i] > last_max {\n            product *= arr[i];\n            last_max = arr[i];\n        } else {\n            max_product = max(max_product, product);\n            product = 1;\n            last_max = isize::min_value();\n        }\n    }\n    max(max_product, product)\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpe7lcpnt1.rs:11:27\n   |\n11 |             max_product = max(max_product, product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpe7lcpnt1.rs:16:5\n   |\n16 |     max(max_product, product)\n   |     ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    let mut max_element = std::isize::MIN;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n        if arr[i] > max_element {\n            max_element = arr[i];\n        }\n    }\n    if max_product == 1 && max_element < 0 {\n        max_element\n    } else {\n        max_product\n    }\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpv2mqpw8o.rs:10:34\n   |\n10 |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n33 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpv2mqpw8o.rs:16:34\n   |\n16 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > current_max {\n            current_max = arr[i];\n            current_product = current_product * arr[i];\n        } else {\n            current_product = current_product * arr[i];\n            if current_product > max_product {\n                max_product = current_product;\n            }\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1800000`,\n right: `3000`', /tmp/tmpwb15fysa.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > current_max {\n            current_max = arr[i];\n            current_product = current_product * arr[i];\n        } else {\n            current_product = current_product * arr[i];\n            max_product = max(max_product, current_product);\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpx83qq1fy.rs:12:27\n   |\n12 |             max_product = max(max_product, current_product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = isize::min_value();\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    let mut max_element = isize::min_value();\n    let mut min_element = isize::max_value();\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far *= arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp10pxv0rf.rs:12:34\n   |\n12 |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n30 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp10pxv0rf.rs:18:34\n   |\n18 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > current_max {\n            current_max = arr[i];\n            current_product *= arr[i];\n            max_product = current_product;\n        } else {\n            current_product *= arr[i];\n            if current_product > max_product {\n                max_product = current_product;\n            }\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1800000`,\n right: `3000`', /tmp/tmpexyzp8b1.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far *= arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmps1d9mhxg.rs:9:34\n   |\n9  |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmps1d9mhxg.rs:15:34\n   |\n15 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp9p7o5h4x.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp9p7o5h4x.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut product = 1;\n    let mut last_max = 1;\n    for i in arr {\n        if i == 0 {\n            product = 1;\n            last_max = 1;\n        } else {\n            product *= i;\n            if product > 0 {\n                max_product = max(max_product, product / last_max);\n            } else {\n                max_product = max(max_product, product);\n                last_max = product;\n            }\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpc_fh2bf9.rs:13:31\n   |\n13 |                 max_product = max(max_product, product / last_max);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpc_fh2bf9.rs:15:31\n   |\n15 |                 max_product = max(max_product, product);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpfp5qdp_v.rs:9:34\n   |\n9  |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpfp5qdp_v.rs:15:34\n   |\n15 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in arr {\n        if i > 0 {\n            max_product_so_far *= i;\n            min_product_so_far = std::cmp::min(min_product_so_far * i, 1);\n        } else if i == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = std::cmp::max(min_product_so_far * i, 1);\n            min_product_so_far = temp * i;\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmpelfamy2s.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_product < max_so_far {\n            max_product = max_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp63ujzytd.rs:10:26\n   |\n10 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp63ujzytd.rs:16:26\n   |\n16 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_product < max_so_far {\n            max_product = max_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp143rkmt6.rs:10:26\n   |\n10 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp143rkmt6.rs:16:26\n   |\n16 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp9p7o5h4x.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp9p7o5h4x.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut current_product = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > arr[i - 1] {\n            current_product *= arr[i];\n        } else {\n            current_product = arr[i];\n        }\n        max_product = max(max_product, current_product);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpd8wnrwjj.rs:11:23\n   |\n11 |         max_product = max(max_product, current_product);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far *= arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpm8x5li59.rs:10:34\n   |\n10 |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpm8x5li59.rs:16:34\n   |\n16 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_max = arr[0];\n    let mut current_min = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > 0 {\n            current_max = current_max.max(arr[i]);\n            current_min = current_min.min(arr[i]);\n        } else {\n            let temp = current_max;\n            current_max = current_min.min(arr[i]);\n            current_min = temp.max(arr[i]);\n        }\n        if current_max > 1 {\n            current_product *= current_max;\n        }\n        max_product = max_product.max(current_product);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `22500000000`,\n right: `3000`', /tmp/tmpgnqq86oh.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpohd0eh2z.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpohd0eh2z.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpnlie28_f.rs:10:26\n   |\n10 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpnlie28_f.rs:16:26\n   |\n16 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in arr {\n        if i > 0 {\n            max_product_so_far *= i;\n            min_product_so_far = min(min_product_so_far * i, 1);\n        } else if i == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * i, 1);\n            min_product_so_far = temp * i;\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp7brohv73.rs:9:34\n   |\n9  |             min_product_so_far = min(min_product_so_far * i, 1);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(min_product_so_far * i, 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp7brohv73.rs:15:34\n   |\n15 |             max_product_so_far = max(min_product_so_far * i, 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut product = 1;\n    let mut prev = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > prev {\n            product *= arr[i];\n        } else {\n            max_product = max(max_product, product);\n            product = 1;\n        }\n        prev = arr[i];\n    }\n    max(max_product, product)\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpt72vebc2.rs:10:27\n   |\n10 |             max_product = max(max_product, product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpt72vebc2.rs:15:5\n   |\n15 |     max(max_product, product)\n   |     ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_product = 0;\n    for i in 0..arr.len() {\n        max = std::cmp::max(max, arr[i]);\n        max_product = std::cmp::max(max_product, max * (arr.len() - i) as isize);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `500`,\n right: `3000`', /tmp/tmpsevuyfke.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > current_max {\n            current_max = arr[i];\n            current_product = current_product * arr[i];\n        } else {\n            current_product = current_product * arr[i];\n            if current_product > max_product {\n                max_product = current_product;\n            }\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1800000`,\n right: `3000`', /tmp/tmpwb15fysa.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut last_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > last_max {\n            current_product *= arr[i];\n            last_max = arr[i];\n        } else {\n            max_product = max(max_product, current_product);\n            current_product = 1;\n        }\n    }\n    max(max_product, current_product)\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp_z9micxd.rs:11:27\n   |\n11 |             max_product = max(max_product, current_product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp_z9micxd.rs:15:5\n   |\n15 |     max(max_product, current_product)\n   |     ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut last_max = 1;\n    for i in arr {\n        if i > 0 {\n            current_product *= i;\n            max_product = max(max_product, current_product);\n        } else if i == 0 {\n            current_product = 1;\n            last_max = max_product;\n            max_product = max(max_product, 0);\n        } else {\n            let temp = current_product;\n            current_product = max(1, last_max * i);\n            last_max = temp;\n            max_product = max(max_product, current_product);\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp2uijghs_.rs:9:27\n  |\n9 |             max_product = max(max_product, current_product);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2uijghs_.rs:13:27\n   |\n13 |             max_product = max(max_product, 0);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2uijghs_.rs:16:31\n   |\n16 |             current_product = max(1, last_max * i);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2uijghs_.rs:18:27\n   |\n18 |             max_product = max(max_product, current_product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 4 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = isize::min_value();\n    let mut max_product_ending_here = 1;\n    let mut min_product_ending_here = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_ending_here *= arr[i];\n            min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_ending_here = 1;\n            min_product_ending_here = 1;\n        } else {\n            let temp = max_product_ending_here;\n            max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n            min_product_ending_here = temp * arr[i];\n        }\n        if max_product_ending_here > max_product {\n            max_product = max_product_ending_here;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp9ickg2tt.rs:9:39\n   |\n9  |             min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n   |                                       ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_ending_here = main(min_product_ending_here * arr[i], 1);\n   |                                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp9ickg2tt.rs:15:39\n   |\n15 |             max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n   |                                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = isize::min_value();\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for num in arr {\n        let (max_product_so_far_prev, min_product_so_far_prev) = (max_product_so_far, min_product_so_far);\n        max_product_so_far = std::cmp::max(\n            std::cmp::max(num, num * max_product_so_far_prev),\n            num * min_product_so_far_prev,\n        );\n        min_product_so_far = std::cmp::min(\n            std::cmp::min(num, num * max_product_so_far_prev),\n            num * min_product_so_far_prev,\n        );\n        max_product = std::cmp::max(max_product, max_product_so_far);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmpy2jb7c8d.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut curr_product = 1;\n    let mut curr_max = arr[0];\n    let mut curr_min = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            let temp = curr_max;\n            curr_max = curr_min;\n            curr_min = temp;\n        }\n        curr_max = max(arr[i], curr_max * arr[i]);\n        curr_min = min(arr[i], curr_min * arr[i]);\n        max_product = max(max_product, curr_max);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpe19f38rs.rs:13:20\n   |\n13 |         curr_max = max(arr[i], curr_max * arr[i]);\n   |                    ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpe19f38rs.rs:14:20\n   |\n14 |         curr_min = min(arr[i], curr_min * arr[i]);\n   |                    ^^^\n...\n20 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n14 |         curr_min = main(arr[i], curr_min * arr[i]);\n   |                    ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpe19f38rs.rs:15:23\n   |\n15 |         max_product = max(max_product, curr_max);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n\n        if max_product < max_product_so_far {\n            max_product = max_product_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmphmls21h8.rs:10:34\n   |\n10 |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmphmls21h8.rs:16:34\n   |\n16 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_ending_here = 1;\n    let mut min_product_ending_here = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_ending_here = max_product_ending_here * arr[i];\n            min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_ending_here = 1;\n            min_product_ending_here = 1;\n        } else {\n            let temp = max_product_ending_here;\n            max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n            min_product_ending_here = temp * arr[i];\n        }\n\n        if max_product < max_product_ending_here {\n            max_product = max_product_ending_here;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6gx6yd1w.rs:10:39\n   |\n10 |             min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n   |                                       ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_ending_here = main(min_product_ending_here * arr[i], 1);\n   |                                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6gx6yd1w.rs:16:39\n   |\n16 |             max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n   |                                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    for i in 0..arr.len() {\n        let mut product = 1;\n        for j in i..arr.len() {\n            product *= arr[j];\n            max_product = max(max_product, product);\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpyfrwfutk.rs:8:27\n  |\n8 |             max_product = max(max_product, product);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp9p7o5h4x.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp9p7o5h4x.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = isize::min_value();\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far *= arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpg4x8qqw7.rs:9:34\n   |\n9  |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpg4x8qqw7.rs:15:34\n   |\n15 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in arr {\n        if i > 0 {\n            max_product_so_far *= i;\n            min_product_so_far = std::cmp::min(min_product_so_far * i, 1);\n        } else if i == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = std::cmp::max(min_product_so_far * i, 1);\n            min_product_so_far = temp * i;\n        }\n        max_product = std::cmp::max(max_product, max_product_so_far);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmpgtz1yal8.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    for i in 0..arr.len() {\n        current_product *= arr[i];\n        if current_product > max_product {\n            max_product = current_product;\n        }\n        if current_product == 0 {\n            current_product = 1;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmpjp4z7x_2.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_product = 0;\n    let mut min = 0;\n    let mut min_product = 0;\n    for i in arr {\n        if i > 0 {\n            max_product = max_product * i;\n            min_product = min_product * i;\n            max_product = max_product.max(i);\n            min_product = min_product.min(i);\n        } else if i == 0 {\n            max_product = 0;\n            min_product = 0;\n        } else {\n            let temp = max_product;\n            max_product = min_product * i;\n            min_product = temp * i;\n            max_product = max_product.max(i);\n            min_product = min_product.min(i);\n        }\n        if max_product > max {\n            max = max_product;\n        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmp92fj8qij.rs:32:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut product = 1;\n    let mut last = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > last {\n            product *= arr[i];\n            if product > max_product {\n                max_product = product;\n            }\n        } else {\n            product = 1;\n        }\n        last = arr[i];\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `750`,\n right: `3000`', /tmp/tmp_eoznrc8.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far *= arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n        max_product = max(max_product, max_product_so_far);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp1vj0gn16.rs:9:34\n   |\n9  |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp1vj0gn16.rs:15:34\n   |\n15 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp1vj0gn16.rs:18:23\n   |\n18 |         max_product = max(max_product, max_product_so_far);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpp5lacm5q.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpp5lacm5q.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpohd0eh2z.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpohd0eh2z.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > current_max {\n            current_max = arr[i];\n            current_product = current_product * arr[i];\n        } else {\n            current_product = current_product * arr[i];\n        }\n        if current_product > max_product {\n            max_product = current_product;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1800000`,\n right: `3000`', /tmp/tmprh7c13fz.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut min_product_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 0;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp1533d9gw.rs:9:34\n   |\n9  |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp1533d9gw.rs:15:34\n   |\n15 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpfp5qdp_v.rs:9:34\n   |\n9  |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpfp5qdp_v.rs:15:34\n   |\n15 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut current_product = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > arr[i - 1] {\n            current_product *= arr[i];\n        } else {\n            max_product = current_product.max(max_product);\n            current_product = arr[i];\n        }\n    }\n    max_product.max(current_product)\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut min_product_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(1, min_product_so_far * arr[i]);\n        } else if arr[i] == 0 {\n            max_product_so_far = 0;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(1, min_product_so_far * arr[i]);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbfzlfhct.rs:9:34\n   |\n9  |             min_product_so_far = min(1, min_product_so_far * arr[i]);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(1, min_product_so_far * arr[i]);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbfzlfhct.rs:15:34\n   |\n15 |             max_product_so_far = max(1, min_product_so_far * arr[i]);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    let mut max_element_so_far = 1;\n    let mut min_element_so_far = 1;\n    for i in arr {\n        if i > 0 {\n            max_product_so_far = max_product_so_far * i;\n            min_product_so_far = min(min_product_so_far * i, 1);\n        } else if i == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * i, 1);\n            min_product_so_far = temp * i;\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpahwwxg0x.rs:11:34\n   |\n11 |             min_product_so_far = min(min_product_so_far * i, 1);\n   |                                  ^^^\n...\n27 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_product_so_far = main(min_product_so_far * i, 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpahwwxg0x.rs:17:34\n   |\n17 |             max_product_so_far = max(min_product_so_far * i, 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max = 1;\n    let mut min = 1;\n    let mut max_so_far = 1;\n    for i in arr {\n        if i > 0 {\n            max = max * i;\n            min = min.min(min * i);\n        } else if i == 0 {\n            max = 1;\n            min = 1;\n        } else {\n            let temp = max;\n            max = min * i;\n            min = temp * i;\n        }\n        if max > max_so_far {\n            max_so_far = max;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmpqbcnt19l.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut min_product_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(1, min_product_so_far * arr[i]);\n        } else if arr[i] == 0 {\n            max_product_so_far = 0;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(1, min_product_so_far * arr[i]);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbfzlfhct.rs:9:34\n   |\n9  |             min_product_so_far = min(1, min_product_so_far * arr[i]);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(1, min_product_so_far * arr[i]);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbfzlfhct.rs:15:34\n   |\n15 |             max_product_so_far = max(1, min_product_so_far * arr[i]);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_ending_here = 1;\n    let mut min_product_ending_here = 1;\n    for i in arr {\n        if i > 0 {\n            max_product_ending_here *= i;\n            min_product_ending_here = min(min_product_ending_here * i, 1);\n        } else if i == 0 {\n            max_product_ending_here = 1;\n            min_product_ending_here = 1;\n        } else {\n            let temp = max_product_ending_here;\n            max_product_ending_here = max(min_product_ending_here * i, 1);\n            min_product_ending_here = temp * i;\n        }\n        if max_product_ending_here > max_product {\n            max_product = max_product_ending_here;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpc31nnvkg.rs:9:39\n   |\n9  |             min_product_ending_here = min(min_product_ending_here * i, 1);\n   |                                       ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_ending_here = main(min_product_ending_here * i, 1);\n   |                                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpc31nnvkg.rs:15:39\n   |\n15 |             max_product_ending_here = max(min_product_ending_here * i, 1);\n   |                                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut product = 1;\n    let mut i = 0;\n    let mut j = 0;\n    while i < arr.len() {\n        if arr[i] > arr[j] {\n            product *= arr[i];\n            i += 1;\n        } else {\n            max = std::cmp::max(max, product);\n            product = 1;\n            j = i;\n            i += 1;\n        }\n    }\n    max = std::cmp::max(max, product);\n    max\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1800000`,\n right: `3000`', /tmp/tmp3dcixrv4.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut last_element = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > last_element {\n            current_product *= arr[i];\n            if current_product > max_product {\n                max_product = current_product;\n            }\n        } else {\n            current_product = 1;\n        }\n        last_element = arr[i];\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `750`,\n right: `3000`', /tmp/tmpvftbstwp.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut product = 1;\n    let mut last_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > last_max {\n            product *= arr[i];\n            last_max = arr[i];\n        } else {\n            product = 1;\n        }\n        max_product = max(max_product, product);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpvu70n56v.rs:13:23\n   |\n13 |         max_product = max(max_product, product);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far *= arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmps1d9mhxg.rs:9:34\n   |\n9  |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmps1d9mhxg.rs:15:34\n   |\n15 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut min_product_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(1, min_product_so_far * arr[i]);\n        } else if arr[i] == 0 {\n            max_product_so_far = 0;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(1, min_product_so_far * arr[i]);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbfzlfhct.rs:9:34\n   |\n9  |             min_product_so_far = min(1, min_product_so_far * arr[i]);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(1, min_product_so_far * arr[i]);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbfzlfhct.rs:15:34\n   |\n15 |             max_product_so_far = max(1, min_product_so_far * arr[i]);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut curr_product = 1;\n    let mut last_seen = std::isize::MIN;\n    for &num in arr.iter() {\n        if num > last_seen {\n            curr_product *= num;\n            last_seen = num;\n        } else {\n            max_product = max(max_product, curr_product);\n            curr_product = num;\n            last_seen = num;\n        }\n    }\n    max(max_product, curr_product)\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp514uvp03.rs:11:27\n   |\n11 |             max_product = max(max_product, curr_product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp514uvp03.rs:16:5\n   |\n16 |     max(max_product, curr_product)\n   |     ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpkmor9r98.rs:10:26\n   |\n10 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpkmor9r98.rs:16:26\n   |\n16 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in 0..arr.len() {\n        let mut current = arr[i];\n        if current > 0 {\n            max_product_so_far *= current;\n            min_product_so_far = min(min_product_so_far * current, 1);\n        } else if current == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * current, 1);\n            min_product_so_far = temp * current;\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp1j9o68bv.rs:10:34\n   |\n10 |             min_product_so_far = min(min_product_so_far * current, 1);\n   |                                  ^^^\n...\n26 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_so_far = main(min_product_so_far * current, 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp1j9o68bv.rs:16:34\n   |\n16 |             max_product_so_far = max(min_product_so_far * current, 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut last_number = arr[0];\n    for number in arr {\n        if number > last_number {\n            current_product *= number;\n        } else {\n            max_product = max(max_product, current_product);\n            current_product = number;\n        }\n        last_number = number;\n    }\n    max(max_product, current_product)\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2vohdm72.rs:10:27\n   |\n10 |             max_product = max(max_product, current_product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2vohdm72.rs:15:5\n   |\n15 |     max(max_product, current_product)\n   |     ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    for i in 0..arr.len() {\n        max_product_so_far = max_product_so_far * arr[i];\n        if max_product_so_far == 0 {\n            max_product_so_far = 1;\n        }\n        if max_product < max_product_so_far {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmpnn_zfjk5.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp3l7_j_j3.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3l7_j_j3.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut curr_product = 1;\n    let mut prev = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > prev {\n            curr_product *= arr[i];\n            if curr_product > max_product {\n                max_product = curr_product;\n            }\n        } else {\n            curr_product = 1;\n        }\n        prev = arr[i];\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `750`,\n right: `3000`', /tmp/tmprecfv9rw.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > current_max {\n            current_max = arr[i];\n            current_product = current_max;\n        } else {\n            current_product *= arr[i];\n        }\n        if current_product > max_product {\n            max_product = current_product;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2000`,\n right: `3000`', /tmp/tmpjrwlwyws.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut product = 1;\n    let mut max_so_far = arr[0];\n    let mut min_so_far = arr[0];\n    for i in 1..arr.len() {\n        let mut current = arr[i];\n        if current > 0 {\n            max_so_far = max_so_far.max(current * max_so_far);\n            min_so_far = min_so_far.min(current * min_so_far);\n        } else {\n            let temp = max_so_far;\n            max_so_far = max_so_far.max(current * min_so_far);\n            min_so_far = min_so_far.min(current * temp);\n        }\n        max_product = max_product.max(max_so_far);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmpa__gfp_w.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_product < max_so_far {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp1u7bo9l7.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp1u7bo9l7.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpohd0eh2z.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpohd0eh2z.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut curr_product = 1;\n    let mut curr_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > curr_max {\n            curr_max = arr[i];\n            curr_product = curr_max;\n        } else {\n            curr_product *= arr[i];\n        }\n        max_product = max(max_product, curr_product);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp9cykov57.rs:13:23\n   |\n13 |         max_product = max(max_product, curr_product);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut max_product_ending_here = 0;\n    for i in 0..arr.len() {\n        if max_product_ending_here == 0 {\n            max_product_ending_here = arr[i];\n        } else {\n            max_product_ending_here *= arr[i];\n        }\n        if max_product_so_far < max_product_ending_here {\n            max_product_so_far = max_product_ending_here;\n        }\n        if max_product_ending_here < 0 {\n            max_product_ending_here = 0;\n        }\n        if max_product < max_product_so_far {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmphvt14dgo.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut product = 1;\n    for i in 0..arr.len() {\n        product *= arr[i];\n        if product > max_product {\n            max_product = product;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmp_tyxujp4.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for num in arr {\n        if num < 0 {\n            let temp = max_product_so_far;\n            max_product_so_far = min_product_so_far;\n            min_product_so_far = temp;\n        }\n        max_product_so_far = max(max_product_so_far * num, num);\n        min_product_so_far = min(min_product_so_far * num, num);\n        max_product = max(max_product, max_product_so_far);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp9tmmixlf.rs:12:30\n   |\n12 |         max_product_so_far = max(max_product_so_far * num, num);\n   |                              ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp9tmmixlf.rs:13:30\n   |\n13 |         min_product_so_far = min(min_product_so_far * num, num);\n   |                              ^^^\n...\n19 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product_so_far = main(min_product_so_far * num, num);\n   |                              ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp9tmmixlf.rs:14:23\n   |\n14 |         max_product = max(max_product, max_product_so_far);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut curr_product = 1;\n    let mut prev = 1;\n    for i in arr {\n        if i > prev {\n            curr_product *= i;\n        } else {\n            max_product = max(max_product, curr_product);\n            curr_product = i;\n        }\n        prev = i;\n    }\n    max(max_product, curr_product)\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp4ji2n6ph.rs:10:27\n   |\n10 |             max_product = max(max_product, curr_product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp4ji2n6ph.rs:15:5\n   |\n15 |     max(max_product, curr_product)\n   |     ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpohd0eh2z.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpohd0eh2z.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_ending_here = 1;\n    let mut min_product_ending_here = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_ending_here = max_product_ending_here * arr[i];\n            min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_ending_here = 1;\n            min_product_ending_here = 1;\n        } else {\n            let temp = max_product_ending_here;\n            max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n            min_product_ending_here = temp * arr[i];\n        }\n\n        if max_product < max_product_ending_here {\n            max_product = max_product_ending_here;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6gx6yd1w.rs:10:39\n   |\n10 |             min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n   |                                       ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_ending_here = main(min_product_ending_here * arr[i], 1);\n   |                                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6gx6yd1w.rs:16:39\n   |\n16 |             max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n   |                                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut curr_product = 1;\n    let mut prev_max = 1;\n    let mut prev_min = 1;\n    for i in arr {\n        let mut curr_max = curr_product * i;\n        let mut curr_min = curr_product * i;\n        if curr_max < curr_min {\n            std::mem::swap(&mut curr_max, &mut curr_min);\n        }\n        curr_max = std::cmp::max(curr_max, i);\n        curr_min = std::cmp::min(curr_min, i);\n        curr_max = std::cmp::max(curr_max, prev_max * i);\n        curr_min = std::cmp::min(curr_min, prev_min * i);\n        curr_product = curr_max;\n        max_product = std::cmp::max(max_product, curr_product);\n        prev_max = curr_max;\n        prev_min = curr_min;\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmpgdc8uxwe.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpohd0eh2z.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpohd0eh2z.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut cur = 1;\n    for i in 0..arr.len() {\n        cur *= arr[i];\n        if cur > max {\n            max = cur;\n        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmplgnt9er_.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far *= arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp_9tc0o4c.rs:9:34\n   |\n9  |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp_9tc0o4c.rs:15:34\n   |\n15 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    for i in 0..arr.len() {\n        current_product *= arr[i];\n        if current_product > max_product {\n            max_product = current_product;\n        }\n        if current_product == 0 {\n            current_product = 1;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmpjp4z7x_2.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_max = 1;\n    for i in 0..arr.len() {\n        current_product *= arr[i];\n        if current_product > max_product {\n            max_product = current_product;\n        }\n        if current_product < current_max {\n            current_product = current_max;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmpeb8efajm.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far *= arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpm8x5li59.rs:10:34\n   |\n10 |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpm8x5li59.rs:16:34\n   |\n16 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut curr_product = 1;\n    let mut prev = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > prev {\n            curr_product *= arr[i];\n        } else {\n            max_product = max(max_product, curr_product);\n            curr_product = 1;\n        }\n        prev = arr[i];\n    }\n    max(max_product, curr_product)\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2t9g0sy6.rs:10:27\n   |\n10 |             max_product = max(max_product, curr_product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2t9g0sy6.rs:15:5\n   |\n15 |     max(max_product, curr_product)\n   |     ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut product = 1;\n    for i in 0..arr.len() {\n        product *= arr[i];\n        max_product = std::cmp::max(max_product, product);\n        if product == 0 {\n            product = 1;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmpkyn_ggkn.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far *= arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp_9tc0o4c.rs:9:34\n   |\n9  |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp_9tc0o4c.rs:15:34\n   |\n15 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > current_max {\n            current_max = arr[i];\n            current_product *= arr[i];\n        } else {\n            current_product *= arr[i];\n            max_product = max(max_product, current_product);\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpi2xb6vzm.rs:12:27\n   |\n12 |             max_product = max(max_product, current_product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpohd0eh2z.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpohd0eh2z.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut prev = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > prev {\n            current_product *= arr[i];\n            if current_product > max_product {\n                max_product = current_product;\n            }\n        } else {\n            current_product = 1;\n        }\n        prev = arr[i];\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `750`,\n right: `3000`', /tmp/tmpxwgqh1n0.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = std::cmp::max(max_so_far * arr[i], arr[i]);\n            min_so_far = std::cmp::min(min_so_far * arr[i], arr[i]);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = std::cmp::max(min_so_far * arr[i], arr[i]);\n            min_so_far = std::cmp::min(temp * arr[i], arr[i]);\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmphruab_9c.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut max_product_ending_here = 1;\n    let mut min_product_ending_here = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_ending_here *= arr[i];\n            min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_ending_here = 1;\n            min_product_ending_here = 1;\n        } else {\n            let temp = max_product_ending_here;\n            max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n            min_product_ending_here = temp * arr[i];\n        }\n        if max_product_so_far < max_product_ending_here {\n            max_product_so_far = max_product_ending_here;\n        }\n    }\n    max_product_so_far\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp39qtk3fb.rs:10:39\n   |\n10 |             min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n   |                                       ^^^\n...\n26 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_ending_here = main(min_product_ending_here * arr[i], 1);\n   |                                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp39qtk3fb.rs:16:39\n   |\n16 |             max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n   |                                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_ending_here = 1;\n    let mut min_product_ending_here = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_ending_here = max_product_ending_here * arr[i];\n            min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_ending_here = 1;\n            min_product_ending_here = 1;\n        } else {\n            let temp = max_product_ending_here;\n            max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n            min_product_ending_here = temp * arr[i];\n        }\n\n        if max_product < max_product_ending_here {\n            max_product = max_product_ending_here;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp80o0r1wc.rs:10:39\n   |\n10 |             min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n   |                                       ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_ending_here = main(min_product_ending_here * arr[i], 1);\n   |                                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp80o0r1wc.rs:16:39\n   |\n16 |             max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n   |                                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp9p7o5h4x.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp9p7o5h4x.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp3l7_j_j3.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3l7_j_j3.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut curr_product = 1;\n    let mut curr_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > curr_max {\n            curr_max = arr[i];\n            curr_product = curr_max;\n        } else {\n            curr_product *= arr[i];\n        }\n        max_product = max(max_product, curr_product);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp9cykov57.rs:13:23\n   |\n13 |         max_product = max(max_product, curr_product);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut product = 1;\n    let mut last_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > last_max {\n            product *= arr[i];\n            last_max = arr[i];\n        } else {\n            max_product = max(max_product, product);\n            product = 1;\n            last_max = arr[i];\n        }\n    }\n    max(max_product, product)\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp4miolz2y.rs:11:27\n   |\n11 |             max_product = max(max_product, product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp4miolz2y.rs:16:5\n   |\n16 |     max(max_product, product)\n   |     ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_max = arr[0];\n    let mut current_min = arr[0];\n\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            std::mem::swap(&mut current_max, &mut current_min);\n        }\n\n        current_max = std::cmp::max(arr[i], current_max * arr[i]);\n        current_min = std::cmp::min(arr[i], current_min * arr[i]);\n\n        max_product = std::cmp::max(max_product, current_max);\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmp2yq6jjl_.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max = std::isize::MIN;\n    let mut product = 1;\n    for i in 0..arr.len() {\n        product *= arr[i];\n        max = std::cmp::max(max, product);\n        if product == 0 {\n            product = 1;\n        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmp47w_eb1f.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in arr {\n        if i > 0 {\n            max_product_so_far *= i;\n            min_product_so_far = std::cmp::min(min_product_so_far * i, 1);\n        } else if i == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = std::cmp::max(min_product_so_far * i, 1);\n            min_product_so_far = temp * i;\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmpjio0yczn.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    for i in 0..arr.len() {\n        max_product_so_far = max_product_so_far * arr[i];\n        if max_product_so_far == 0 {\n            max_product_so_far = 1;\n        }\n        if max_product < max_product_so_far {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmpnn_zfjk5.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpohd0eh2z.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpohd0eh2z.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut min_product_so_far = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far.max(max_product_so_far * arr[i]);\n            min_product_so_far = min_product_so_far.min(min_product_so_far * arr[i]);\n        } else if arr[i] == 0 {\n            max_product_so_far = 0;\n            min_product_so_far = 0;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = min_product_so_far.min(min_product_so_far * arr[i]);\n            min_product_so_far = temp.max(temp * arr[i]);\n        }\n        max_product = max_product.max(max_product_so_far);\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `3000`', /tmp/tmp9ks2wfgp.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut product = 1;\n    let mut max_so_far = arr[0];\n    let mut min_so_far = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max(arr[i], max_so_far * arr[i]);\n            min_so_far = min(arr[i], min_so_far * arr[i]);\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(arr[i], min_so_far * arr[i]);\n            min_so_far = min(arr[i], temp * arr[i]);\n        }\n        max_product = max(max_product, max_so_far);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpxnotav10.rs:9:26\n  |\n9 |             max_so_far = max(arr[i], max_so_far * arr[i]);\n  |                          ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpxnotav10.rs:10:26\n   |\n10 |             min_so_far = min(arr[i], min_so_far * arr[i]);\n   |                          ^^^\n...\n21 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_so_far = main(arr[i], min_so_far * arr[i]);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpxnotav10.rs:13:26\n   |\n13 |             max_so_far = max(arr[i], min_so_far * arr[i]);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpxnotav10.rs:14:26\n   |\n14 |             min_so_far = min(arr[i], temp * arr[i]);\n   |                          ^^^\n...\n21 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n14 |             min_so_far = main(arr[i], temp * arr[i]);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpxnotav10.rs:16:23\n   |\n16 |         max_product = max(max_product, max_so_far);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_ending_here = 1;\n    let mut min_product_ending_here = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_ending_here = max_product_ending_here * arr[i];\n            min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_ending_here = 1;\n            min_product_ending_here = 1;\n        } else {\n            let temp = max_product_ending_here;\n            max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n            min_product_ending_here = temp * arr[i];\n        }\n        if max_product < max_product_ending_here {\n            max_product = max_product_ending_here;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp8indqsux.rs:9:39\n   |\n9  |             min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n   |                                       ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_ending_here = main(min_product_ending_here * arr[i], 1);\n   |                                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp8indqsux.rs:15:39\n   |\n15 |             max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n   |                                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_ending_here = 1;\n    let mut min_product_ending_here = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_ending_here *= arr[i];\n            min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_ending_here = 1;\n            min_product_ending_here = 1;\n        } else {\n            let temp = max_product_ending_here;\n            max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n            min_product_ending_here = temp * arr[i];\n        }\n\n        if max_product_ending_here > max_product {\n            max_product = max_product_ending_here;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp_u8snz5s.rs:10:39\n   |\n10 |             min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n   |                                       ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_ending_here = main(min_product_ending_here * arr[i], 1);\n   |                                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp_u8snz5s.rs:16:39\n   |\n16 |             max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n   |                                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max(max_so_far * arr[i], arr[i]);\n            min_so_far = min(min_so_far * arr[i], arr[i]);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], arr[i]);\n            min_so_far = min(temp * arr[i], arr[i]);\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpru92un6u.rs:8:26\n  |\n8 |             max_so_far = max(max_so_far * arr[i], arr[i]);\n  |                          ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpru92un6u.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], arr[i]);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], arr[i]);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpru92un6u.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], arr[i]);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpru92un6u.rs:16:26\n   |\n16 |             min_so_far = min(temp * arr[i], arr[i]);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n16 |             min_so_far = main(temp * arr[i], arr[i]);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror: aborting due to 4 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut max_product_ending_here = 0;\n    let mut min_product_ending_here = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_ending_here = max_product_ending_here * arr[i];\n            min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_ending_here = 0;\n            min_product_ending_here = 1;\n        } else {\n            let temp = max_product_ending_here;\n            max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n            min_product_ending_here = temp * arr[i];\n        }\n        if max_product_so_far < max_product_ending_here {\n            max_product_so_far = max_product_ending_here;\n        }\n    }\n    max_product_so_far\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpn35a0l7d.rs:10:39\n   |\n10 |             min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n   |                                       ^^^\n...\n26 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_ending_here = main(min_product_ending_here * arr[i], 1);\n   |                                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpn35a0l7d.rs:16:39\n   |\n16 |             max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n   |                                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut min_product_so_far = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(1, min_product_so_far * arr[i]);\n        } else if arr[i] == 0 {\n            max_product_so_far = 0;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(1, min_product_so_far * arr[i]);\n            min_product_so_far = temp * arr[i];\n        }\n\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmplda2llvo.rs:10:34\n   |\n10 |             min_product_so_far = min(1, min_product_so_far * arr[i]);\n   |                                  ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_so_far = main(1, min_product_so_far * arr[i]);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmplda2llvo.rs:16:34\n   |\n16 |             max_product_so_far = max(1, min_product_so_far * arr[i]);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > current_max {\n            current_max = arr[i];\n            current_product = current_product * arr[i];\n        } else {\n            current_product = current_product * arr[i];\n            max_product = max(current_product, max_product);\n            current_product = 1;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpvcsvlu0q.rs:12:27\n   |\n12 |             max_product = max(current_product, max_product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut product = 1;\n    let mut max_so_far = arr[0];\n    let mut min_so_far = arr[0];\n    for i in 1..arr.len() {\n        let mut temp = max_so_far;\n        max_so_far = max(max(max_so_far * arr[i], min_so_far * arr[i]), arr[i]);\n        min_so_far = min(min(temp * arr[i], min_so_far * arr[i]), arr[i]);\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpmktciqkn.rs:9:22\n  |\n9 |         max_so_far = max(max(max_so_far * arr[i], min_so_far * arr[i]), arr[i]);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpmktciqkn.rs:9:26\n  |\n9 |         max_so_far = max(max(max_so_far * arr[i], min_so_far * arr[i]), arr[i]);\n  |                          ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpmktciqkn.rs:10:22\n   |\n10 |         min_so_far = min(min(temp * arr[i], min_so_far * arr[i]), arr[i]);\n   |                      ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_so_far = main(min(temp * arr[i], min_so_far * arr[i]), arr[i]);\n   |                      ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpmktciqkn.rs:10:26\n   |\n10 |         min_so_far = min(min(temp * arr[i], min_so_far * arr[i]), arr[i]);\n   |                          ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_so_far = min(main(temp * arr[i], min_so_far * arr[i]), arr[i]);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror: aborting due to 4 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpfp5qdp_v.rs:9:34\n   |\n9  |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpfp5qdp_v.rs:15:34\n   |\n15 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n\n        if max_product < max_product_so_far {\n            max_product = max_product_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmphmls21h8.rs:10:34\n   |\n10 |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmphmls21h8.rs:16:34\n   |\n16 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut curr_product = 1;\n    let mut prev = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > prev {\n            curr_product *= arr[i];\n            max_product = max(max_product, curr_product);\n        } else {\n            curr_product = 1;\n        }\n        prev = arr[i];\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp0ktil8eg.rs:9:27\n  |\n9 |             max_product = max(max_product, curr_product);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut prev_max = 1;\n    let mut prev_min = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            prev_max = prev_max * arr[i];\n            prev_min = std::cmp::min(prev_min * arr[i], 1);\n        } else if arr[i] == 0 {\n            prev_max = 1;\n            prev_min = 1;\n        } else {\n            let temp = prev_max;\n            prev_max = std::cmp::max(prev_min * arr[i], 1);\n            prev_min = temp * arr[i];\n        }\n\n        if prev_max > max_product {\n            max_product = prev_max;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmp352jy2aa.rs:30:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    for i in arr {\n        if i > 0 {\n            max_so_far = max_so_far * i;\n            min_so_far = min(min_so_far * i, 1);\n        } else if i == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * i, 1);\n            min_so_far = temp * i;\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpwyp60xyy.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * i, 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * i, 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpwyp60xyy.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * i, 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut current_product = 1;\n    let mut last_max = 0;\n    for i in 0..arr.len() {\n        if arr[i] > last_max {\n            current_product *= arr[i];\n            last_max = arr[i];\n        } else {\n            if current_product > max_product {\n                max_product = current_product;\n            }\n            current_product = 1;\n        }\n    }\n    if current_product > max_product {\n        max_product = current_product;\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `300`,\n right: `3000`', /tmp/tmpx9fr5olq.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpohd0eh2z.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpohd0eh2z.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpfp5qdp_v.rs:9:34\n   |\n9  |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpfp5qdp_v.rs:15:34\n   |\n15 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = isize::min_value();\n    let mut max_product_so_far = isize::min_value();\n    let mut min_product_so_far = isize::max_value();\n\n    for i in 0..arr.len() {\n        if arr[i] < 0 {\n            let temp = max_product_so_far;\n            max_product_so_far = min_product_so_far;\n            min_product_so_far = temp;\n        }\n\n        max_product_so_far = max(arr[i], max_product_so_far * arr[i]);\n        min_product_so_far = min(arr[i], min_product_so_far * arr[i]);\n\n        max_product = max(max_product, max_product_so_far);\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp0m93_kpz.rs:14:30\n   |\n14 |         max_product_so_far = max(arr[i], max_product_so_far * arr[i]);\n   |                              ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp0m93_kpz.rs:15:30\n   |\n15 |         min_product_so_far = min(arr[i], min_product_so_far * arr[i]);\n   |                              ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n15 |         min_product_so_far = main(arr[i], min_product_so_far * arr[i]);\n   |                              ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp0m93_kpz.rs:17:23\n   |\n17 |         max_product = max(max_product, max_product_so_far);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n\n    for x in arr {\n        if x > 0 {\n            max_ending_here = max_ending_here * x;\n            min_ending_here = min(min_ending_here * x, 1);\n        } else if x == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * x, 1);\n            min_ending_here = temp * x;\n        }\n\n        if max_product < max_ending_here {\n            max_product = max_ending_here;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpsg9gv4yi.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * x, 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * x, 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpsg9gv4yi.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * x, 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_product < max_so_far {\n            max_product = max_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp143rkmt6.rs:10:26\n   |\n10 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp143rkmt6.rs:16:26\n   |\n16 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut product = 1;\n    let mut last_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > last_max {\n            product *= arr[i];\n            last_max = arr[i];\n        } else {\n            max_product = max(max_product, product);\n            product = 1;\n            last_max = arr[i];\n        }\n    }\n    max(max_product, product)\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp4miolz2y.rs:11:27\n   |\n11 |             max_product = max(max_product, product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp4miolz2y.rs:16:5\n   |\n16 |     max(max_product, product)\n   |     ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    if arr.len() == 0 {\n        return 0;\n    }\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        let mut temp = max_product;\n        max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n        min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6q98ko82.rs:11:23\n   |\n11 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6q98ko82.rs:11:27\n   |\n11 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6q98ko82.rs:12:23\n   |\n12 |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |         min_product = main(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6q98ko82.rs:12:27\n   |\n12 |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |         min_product = min(main(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6q98ko82.rs:13:22\n   |\n13 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information abou",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut max_product_ending_here = 1;\n    let mut min_product_ending_here = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_ending_here = max_product_ending_here * arr[i];\n            min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_ending_here = 1;\n            min_product_ending_here = 1;\n        } else {\n            let temp = max_product_ending_here;\n            max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n            min_product_ending_here = temp * arr[i];\n        }\n        if max_product_so_far < max_product_ending_here {\n            max_product_so_far = max_product_ending_here;\n        }\n    }\n    max_product_so_far\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmphsksuc66.rs:10:39\n   |\n10 |             min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n   |                                       ^^^\n...\n26 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_ending_here = main(min_product_ending_here * arr[i], 1);\n   |                                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmphsksuc66.rs:16:39\n   |\n16 |             max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n   |                                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut curr_product = 1;\n    let mut curr_max = 0;\n    for i in 0..arr.len() {\n        if arr[i] > curr_max {\n            curr_max = arr[i];\n            curr_product *= arr[i];\n            if curr_product > max_product {\n                max_product = curr_product;\n            }\n        } else {\n            curr_product = 1;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `300`,\n right: `3000`', /tmp/tmpjhnn5684.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp9p7o5h4x.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp9p7o5h4x.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut product = 1;\n    let mut max_so_far = arr[0];\n    let mut min_so_far = arr[0];\n    for i in 1..arr.len() {\n        let mut curr = arr[i];\n        if curr > 0 {\n            max_so_far = max_so_far.max(curr * max_so_far);\n            min_so_far = min_so_far.min(curr * min_so_far);\n        } else {\n            let temp = max_so_far;\n            max_so_far = max_so_far.max(curr * min_so_far);\n            min_so_far = temp.min(curr * min_so_far);\n        }\n        max_product = max_product.max(max_so_far);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmpeu_u3_fr.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far.max(max_so_far * arr[i]);\n            min_so_far = min_so_far.min(min_so_far * arr[i]);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = min_so_far.min(min_so_far * arr[i]);\n            min_so_far = temp.max(temp * arr[i]);\n        }\n\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `3000`', /tmp/tmp08umxrf1.rs:30:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpkmor9r98.rs:10:26\n   |\n10 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpkmor9r98.rs:16:26\n   |\n16 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut product = 1;\n    for i in 0..arr.len() {\n        product *= arr[i];\n        if product > max_product {\n            max_product = product;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmp8wnfsiw_.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = isize::min_value();\n    let mut product = 1;\n    let mut i = 0;\n    let mut j = 0;\n    while i < arr.len() {\n        if arr[i] > arr[j] {\n            product *= arr[i];\n            max_product = max(max_product, product);\n            i += 1;\n        } else {\n            product /= arr[j];\n            j += 1;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp7tu362dz.rs:10:27\n   |\n10 |             max_product = max(max_product, product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far *= arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpw1egcmqz.rs:10:34\n   |\n10 |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpw1egcmqz.rs:16:34\n   |\n16 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n    let mut min_ending_here = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 0;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_ending_here > max_so_far {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpip_goi0n.rs:11:31\n   |\n11 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n29 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpip_goi0n.rs:17:31\n   |\n17 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut product = 1;\n    let mut last_max = arr[0];\n\n    for i in 1..arr.len() {\n        if arr[i] > last_max {\n            product *= arr[i];\n            last_max = arr[i];\n        } else {\n            max_product = max(max_product, product);\n            product = 1;\n        }\n    }\n\n    max(max_product, product)\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpb18l8jrb.rs:12:27\n   |\n12 |             max_product = max(max_product, product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpb18l8jrb.rs:17:5\n   |\n17 |     max(max_product, product)\n   |     ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut min_product_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(1, min_product_so_far * arr[i]);\n        } else if arr[i] == 0 {\n            max_product_so_far = 0;\n            min_product_so_far = 0;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(1, min_product_so_far * arr[i]);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbjthsfi4.rs:9:34\n   |\n9  |             min_product_so_far = min(1, min_product_so_far * arr[i]);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(1, min_product_so_far * arr[i]);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbjthsfi4.rs:15:34\n   |\n15 |             max_product_so_far = max(1, min_product_so_far * arr[i]);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_ending_here = 1;\n    let mut min_product_ending_here = 1;\n    for num in arr {\n        if num > 0 {\n            max_product_ending_here *= num;\n            min_product_ending_here = min(min_product_ending_here * num, 1);\n        } else if num == 0 {\n            max_product_ending_here = 1;\n            min_product_ending_here = 1;\n        } else {\n            let temp = max_product_ending_here;\n            max_product_ending_here = max(min_product_ending_here * num, 1);\n            min_product_ending_here = temp * num;\n        }\n        if max_product_ending_here > max_product {\n            max_product = max_product_ending_here;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpwh82_hq5.rs:9:39\n   |\n9  |             min_product_ending_here = min(min_product_ending_here * num, 1);\n   |                                       ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_ending_here = main(min_product_ending_here * num, 1);\n   |                                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpwh82_hq5.rs:15:39\n   |\n15 |             max_product_ending_here = max(min_product_ending_here * num, 1);\n   |                                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_max = arr[0];\n    let mut current_min = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            let temp = current_max;\n            current_max = current_min;\n            current_min = temp;\n        }\n        current_max = max(arr[i], current_max * arr[i]);\n        current_min = min(arr[i], current_min * arr[i]);\n        max_product = max(max_product, current_max);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmphsx91f_l.rs:13:23\n   |\n13 |         current_max = max(arr[i], current_max * arr[i]);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmphsx91f_l.rs:14:23\n   |\n14 |         current_min = min(arr[i], current_min * arr[i]);\n   |                       ^^^\n...\n20 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n14 |         current_min = main(arr[i], current_min * arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmphsx91f_l.rs:15:23\n   |\n15 |         max_product = max(max_product, current_max);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = isize::min_value();\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for x in arr {\n        let mut max_product_ending_here = max_product_so_far;\n        max_product_so_far = max(max(max_product_so_far * x, min_product_so_far * x), x);\n        min_product_so_far = min(min(max_product_ending_here * x, min_product_so_far * x), x);\n        max_product = max(max_product, max_product_so_far);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpxoxoivix.rs:8:30\n  |\n8 |         max_product_so_far = max(max(max_product_so_far * x, min_product_so_far * x), x);\n  |                              ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpxoxoivix.rs:8:34\n  |\n8 |         max_product_so_far = max(max(max_product_so_far * x, min_product_so_far * x), x);\n  |                                  ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpxoxoivix.rs:9:30\n   |\n9  |         min_product_so_far = min(min(max_product_ending_here * x, min_product_so_far * x), x);\n   |                              ^^^\n...\n15 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         min_product_so_far = main(min(max_product_ending_here * x, min_product_so_far * x), x);\n   |                              ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpxoxoivix.rs:9:34\n   |\n9  |         min_product_so_far = min(min(max_product_ending_here * x, min_product_so_far * x), x);\n   |                                  ^^^\n...\n15 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         min_product_so_far = min(main(max_product_ending_here * x, min_product_so_far * x), x);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpxoxoivix.rs:10:23\n   |\n10 |         max_product = max(max_product, max_product_so_far);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut current_product = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > arr[i - 1] {\n            current_product *= arr[i];\n        } else {\n            current_product = arr[i];\n        }\n        if current_product > max_product {\n            max_product = current_product;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut product = 1;\n    let mut i = 0;\n    let mut j = 0;\n    while j < arr.len() {\n        product *= arr[j];\n        while i < j && arr[i] <= arr[j] {\n            product /= arr[i];\n            i += 1;\n        }\n        max = max.max(product);\n        j += 1;\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2000`,\n right: `3000`', /tmp/tmp0ti0v4f3.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut max_product_ending_here = 0;\n    for i in 0..arr.len() {\n        if max_product_ending_here == 0 {\n            max_product_ending_here = arr[i];\n        } else {\n            max_product_ending_here *= arr[i];\n        }\n        if max_product_so_far < max_product_ending_here {\n            max_product_so_far = max_product_ending_here;\n        }\n        if max_product_ending_here < 0 {\n            max_product_ending_here = 0;\n        }\n        if max_product < max_product_so_far {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmphvt14dgo.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 1;\n    for i in 0..arr.len() {\n        max_product_so_far *= arr[i];\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n        if max_product_so_far == 0 {\n            max_product_so_far = 1;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmprebg83zy.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpkmor9r98.rs:10:26\n   |\n10 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpkmor9r98.rs:16:26\n   |\n16 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpohd0eh2z.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpohd0eh2z.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpnlie28_f.rs:10:26\n   |\n10 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpnlie28_f.rs:16:26\n   |\n16 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpohd0eh2z.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpohd0eh2z.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_ending_here = 1;\n    let mut min_product_ending_here = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_ending_here *= arr[i];\n            min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_ending_here = 1;\n            min_product_ending_here = 1;\n        } else {\n            let temp = max_product_ending_here;\n            max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n            min_product_ending_here = temp * arr[i];\n        }\n\n        if max_product_ending_here > max_product {\n            max_product = max_product_ending_here;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpzjt2y360.rs:10:39\n   |\n10 |             min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n   |                                       ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_ending_here = main(min_product_ending_here * arr[i], 1);\n   |                                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpzjt2y360.rs:16:39\n   |\n16 |             max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n   |                                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > current_max {\n            current_max = arr[i];\n            current_product *= arr[i];\n            max_product = current_product;\n        } else {\n            current_product *= arr[i];\n            if current_product > max_product {\n                max_product = current_product;\n            }\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1800000`,\n right: `3000`', /tmp/tmpexyzp8b1.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = std::isize::MIN;\n    let mut max_so_far = 1;\n    for i in 0..arr.len() {\n        max_so_far = max_so_far * arr[i];\n        max_product = max(max_product, max_so_far);\n        if arr[i] == 0 {\n            max_so_far = 1;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpeeax0__y.rs:7:23\n  |\n7 |         max_product = max(max_product, max_so_far);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut min_product_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 0;\n            min_product_so_far = 0;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpml_45jx6.rs:9:34\n   |\n9  |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpml_45jx6.rs:15:34\n   |\n15 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far *= arr[i];\n            min_so_far = std::cmp::min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = std::cmp::max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmpnkw9ctf5.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far *= arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmps1d9mhxg.rs:9:34\n   |\n9  |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmps1d9mhxg.rs:15:34\n   |\n15 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut product = 1;\n    let mut i = 0;\n    let mut j = 0;\n    while i < arr.len() {\n        if arr[i] > arr[j] {\n            product *= arr[i];\n            i += 1;\n        } else {\n            max = std::cmp::max(max, product);\n            product = 1;\n            j = i;\n        }\n    }\n    max = std::cmp::max(max, product);\n    max\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122490,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut product = 1;\n    let mut max_so_far = arr[0];\n    let mut min_so_far = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            let temp = max_so_far;\n            max_so_far = min_so_far;\n            min_so_far = temp;\n        }\n        max_so_far = max(arr[i], max_so_far * arr[i]);\n        min_so_far = min(arr[i], min_so_far * arr[i]);\n        max_product = max(max_product, max_so_far);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6kkz0v2o.rs:13:22\n   |\n13 |         max_so_far = max(arr[i], max_so_far * arr[i]);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6kkz0v2o.rs:14:22\n   |\n14 |         min_so_far = min(arr[i], min_so_far * arr[i]);\n   |                      ^^^\n...\n20 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n14 |         min_so_far = main(arr[i], min_so_far * arr[i]);\n   |                      ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6kkz0v2o.rs:15:23\n   |\n15 |         max_product = max(max_product, max_so_far);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut curr_product = 1;\n    let mut prev = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > prev {\n            curr_product *= arr[i];\n            max_product = std::cmp::max(max_product, curr_product);\n        } else {\n            curr_product = 1;\n        }\n        prev = arr[i];\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `750`,\n right: `3000`', /tmp/tmpr85ky5dl.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpkmor9r98.rs:10:26\n   |\n10 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpkmor9r98.rs:16:26\n   |\n16 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut current_product = 1;\n    let mut current_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > current_max {\n            current_max = arr[i];\n            current_product = current_product * arr[i];\n        } else {\n            current_product = current_product * arr[i];\n            if current_product > max_product {\n                max_product = current_product;\n            }\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1800000`,\n right: `3000`', /tmp/tmp7kbowu_m.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_product < max_so_far {\n            max_product = max_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp143rkmt6.rs:10:26\n   |\n10 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp143rkmt6.rs:16:26\n   |\n16 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in arr {\n        if i > 0 {\n            max_product_so_far *= i;\n            min_product_so_far = min(min_product_so_far * i, 1);\n        } else if i == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * i, 1);\n            min_product_so_far = temp * i;\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpgch5wtvw.rs:9:34\n   |\n9  |             min_product_so_far = min(min_product_so_far * i, 1);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(min_product_so_far * i, 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpgch5wtvw.rs:15:34\n   |\n15 |             max_product_so_far = max(min_product_so_far * i, 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far.max(arr[i]);\n            min_so_far = min_so_far.min(arr[i]);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = min_so_far.min(arr[i]);\n            min_so_far = temp.max(arr[i]);\n        }\n\n        max_product_so_far = max_so_far.max(max_product_so_far);\n    }\n\n    max_product_so_far\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `3000`', /tmp/tmpw77mp_hp.rs:29:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > current_max {\n            current_max = arr[i];\n            current_product = current_product * arr[i];\n        } else {\n            current_product = current_product * arr[i];\n        }\n        if current_product > max_product {\n            max_product = current_product;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1800000`,\n right: `3000`', /tmp/tmprh7c13fz.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max(max_so_far * arr[i], arr[i]);\n            min_so_far = min(min_so_far * arr[i], arr[i]);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], arr[i]);\n            min_so_far = min(temp * arr[i], arr[i]);\n        }\n\n        if max_so_far > max_product_so_far {\n            max_product_so_far = max_so_far;\n        }\n    }\n\n    max_product_so_far\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpwmddr1pr.rs:10:26\n   |\n10 |             max_so_far = max(max_so_far * arr[i], arr[i]);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpwmddr1pr.rs:11:26\n   |\n11 |             min_so_far = min(min_so_far * arr[i], arr[i]);\n   |                          ^^^\n...\n29 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_so_far = main(min_so_far * arr[i], arr[i]);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpwmddr1pr.rs:17:26\n   |\n17 |             max_so_far = max(min_so_far * arr[i], arr[i]);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpwmddr1pr.rs:18:26\n   |\n18 |             min_so_far = min(temp * arr[i], arr[i]);\n   |                          ^^^\n...\n29 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n18 |             min_so_far = main(temp * arr[i], arr[i]);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror: aborting due to 4 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_prod = 1;\n    let mut curr_prod = 1;\n    let mut prev = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > prev {\n            curr_prod *= arr[i];\n            max_prod = max(max_prod, curr_prod);\n        } else {\n            curr_prod = 1;\n        }\n        prev = arr[i];\n    }\n    max_prod\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpgyajihy8.rs:9:24\n  |\n9 |             max_prod = max(max_prod, curr_prod);\n  |                        ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n    for i in arr {\n        if i > 0 {\n            max_so_far = max_so_far.max(max_so_far * i);\n            min_so_far = min_so_far.min(min_so_far * i);\n        } else if i == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = min_so_far.min(min_so_far * i);\n            min_so_far = temp.max(temp * i);\n        }\n        max_product = max_product.max(max_so_far);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `3000`', /tmp/tmpw6bwdqur.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut min_product_so_far = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(1, min_product_so_far * arr[i]);\n        } else if arr[i] == 0 {\n            max_product_so_far = 0;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(1, min_product_so_far * arr[i]);\n            min_product_so_far = temp * arr[i];\n        }\n\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmplda2llvo.rs:10:34\n   |\n10 |             min_product_so_far = min(1, min_product_so_far * arr[i]);\n   |                                  ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_so_far = main(1, min_product_so_far * arr[i]);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmplda2llvo.rs:16:34\n   |\n16 |             max_product_so_far = max(1, min_product_so_far * arr[i]);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far *= arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpw1egcmqz.rs:10:34\n   |\n10 |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpw1egcmqz.rs:16:34\n   |\n16 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_prod = 1;\n    let mut prod = 1;\n    let mut max_so_far = arr[0];\n    let mut min_so_far = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max(max_so_far * arr[i], arr[i]);\n            min_so_far = min(min_so_far * arr[i], arr[i]);\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], arr[i]);\n            min_so_far = min(temp * arr[i], arr[i]);\n        }\n        if max_so_far > max_prod {\n            max_prod = max_so_far;\n        }\n    }\n    max_prod\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpui5qjo00.rs:9:26\n  |\n9 |             max_so_far = max(max_so_far * arr[i], arr[i]);\n  |                          ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpui5qjo00.rs:10:26\n   |\n10 |             min_so_far = min(min_so_far * arr[i], arr[i]);\n   |                          ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_so_far = main(min_so_far * arr[i], arr[i]);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpui5qjo00.rs:13:26\n   |\n13 |             max_so_far = max(min_so_far * arr[i], arr[i]);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpui5qjo00.rs:14:26\n   |\n14 |             min_so_far = min(temp * arr[i], arr[i]);\n   |                          ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n14 |             min_so_far = main(temp * arr[i], arr[i]);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror: aborting due to 4 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n\n        if max_product < max_product_so_far {\n            max_product = max_product_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmphmls21h8.rs:10:34\n   |\n10 |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmphmls21h8.rs:16:34\n   |\n16 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_product < max_so_far {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp1u7bo9l7.rs:9:26\n   |\n9  |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp1u7bo9l7.rs:15:26\n   |\n15 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut max_product_ending_here = 0;\n    let mut min_product_ending_here = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_ending_here = max_product_ending_here * arr[i];\n            min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_ending_here = 0;\n            min_product_ending_here = 1;\n        } else {\n            let temp = max_product_ending_here;\n            max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n            min_product_ending_here = temp * arr[i];\n        }\n\n        if max_product_so_far < max_product_ending_here {\n            max_product_so_far = max_product_ending_here;\n        }\n    }\n\n    max_product_so_far\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpss9yr84t.rs:11:39\n   |\n11 |             min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n   |                                       ^^^\n...\n29 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_product_ending_here = main(min_product_ending_here * arr[i], 1);\n   |                                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpss9yr84t.rs:17:39\n   |\n17 |             max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n   |                                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > max_product_so_far {\n            max_product_so_far = arr[i];\n        }\n        max_product = max(max_product, max_product_so_far);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmph0qr175l.rs:9:23\n  |\n9 |         max_product = max(max_product, max_product_so_far);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            max_so_far = max(max_so_far, max_ending_here);\n        } else if arr[i] == 0 {\n            max_ending_here = 0;\n            max_so_far = max(max_so_far, max_ending_here);\n        } else {\n            max_ending_here = max_ending_here * arr[i];\n            if max_ending_here > max_so_far {\n                max_so_far = max_ending_here;\n            }\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpodinpp6y.rs:10:26\n   |\n10 |             max_so_far = max(max_so_far, max_ending_here);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpodinpp6y.rs:13:26\n   |\n13 |             max_so_far = max(max_so_far, max_ending_here);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut product = 1;\n    let mut max_so_far = arr[0];\n    let mut min_so_far = arr[0];\n    for i in 1..arr.len() {\n        let mut current = arr[i];\n        if current > 0 {\n            max_so_far = max(max_so_far * current, current);\n            min_so_far = min(min_so_far * current, current);\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * current, current);\n            min_so_far = min(temp * current, current);\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpb4k17u7o.rs:10:26\n   |\n10 |             max_so_far = max(max_so_far * current, current);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpb4k17u7o.rs:11:26\n   |\n11 |             min_so_far = min(min_so_far * current, current);\n   |                          ^^^\n...\n24 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_so_far = main(min_so_far * current, current);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpb4k17u7o.rs:14:26\n   |\n14 |             max_so_far = max(min_so_far * current, current);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpb4k17u7o.rs:15:26\n   |\n15 |             min_so_far = min(temp * current, current);\n   |                          ^^^\n...\n24 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n15 |             min_so_far = main(temp * current, current);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror: aborting due to 4 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut product = 1;\n    let mut max_so_far = arr[0];\n    let mut min_so_far = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far.max(max_so_far * arr[i]);\n            min_so_far = min_so_far.min(min_so_far * arr[i]);\n        } else {\n            let temp = max_so_far;\n            max_so_far = min_so_far.min(min_so_far * arr[i]);\n            min_so_far = temp.max(temp * arr[i]);\n        }\n        max_product = max_product.max(max_so_far);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5400000`,\n right: `3000`', /tmp/tmp1avvyrwx.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_product < max_so_far {\n            max_product = max_so_far;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp143rkmt6.rs:10:26\n   |\n10 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp143rkmt6.rs:16:26\n   |\n16 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut max_product_ending_here = 1;\n    let mut min_product_ending_here = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_ending_here = max_product_ending_here * arr[i];\n            min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_ending_here = 1;\n            min_product_ending_here = 1;\n        } else {\n            let temp = max_product_ending_here;\n            max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n            min_product_ending_here = temp * arr[i];\n        }\n\n        if max_product_so_far < max_product_ending_here {\n            max_product_so_far = max_product_ending_here;\n        }\n    }\n\n    max_product_so_far\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp3ffex53x.rs:11:39\n   |\n11 |             min_product_ending_here = min(min_product_ending_here * arr[i], 1);\n   |                                       ^^^\n...\n29 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_product_ending_here = main(min_product_ending_here * arr[i], 1);\n   |                                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3ffex53x.rs:17:39\n   |\n17 |             max_product_ending_here = max(min_product_ending_here * arr[i], 1);\n   |                                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far *= arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmps1d9mhxg.rs:9:34\n   |\n9  |             min_product_so_far = min(min_product_so_far * arr[i], 1);\n   |                                  ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product_so_far = main(min_product_so_far * arr[i], 1);\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmps1d9mhxg.rs:15:34\n   |\n15 |             max_product_so_far = max(min_product_so_far * arr[i], 1);\n   |                                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfn max_product(arr: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut product = 1;\n    let mut start = 0;\n    let mut end = 0;\n    while end < arr.len() {\n        if arr[end] > arr[end - 1] {\n            product *= arr[end];\n            if product > max {\n                max = product;\n            }\n        } else {\n            product = 1;\n            start = end;\n        }\n        end += 1;\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'attempt to subtract with overflow', /tmp/tmpsgpquvhu.rs:8:27\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_794_text_starta_endb",
  "language": "rs",
  "prompt": "/// Write a function that matches a string that has an 'a' followed by anything, ending in 'b'.\nfn text_starta_endb(text: String) -> bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_794_text_starta_endb.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = text_starta_endb;\n    assert_eq!(candidate(String::from(\"aabbbb\")), true);\n    assert_eq!(candidate(String::from(\"aabAbbbc\")), false);\n    assert_eq!(candidate(String::from(\"accddbbjjj\")), false);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    text.chars().nth(0) == Some('a') && text.chars().last() == Some('b')",
    "    text.starts_with(\"a\") && text.ends_with(\"b\")",
    "    let re = Regex::new(r\"^a.*b$\").unwrap();\n    re.is_match(&text)",
    "    text.starts_with(\"a\") && text.ends_with(\"b\")",
    "    let re = Regex::new(r\"^a.*b$\").unwrap();\n    re.is_match(&text)",
    "    text.starts_with(\"a\") && text.ends_with(\"b\")",
    "    let re = Regex::new(r\"^a.*b$\").unwrap();\n    re.is_match(&text)",
    "    let re = Regex::new(r\"^a.*b$\").unwrap();\n    re.is_match(&text)",
    "    let re = Regex::new(r\"^a.*b$\").unwrap();\n    re.is_match(&text)",
    "    text.chars().nth(0) == Some('a') && text.chars().last() == Some('b')",
    "    text.starts_with(\"a\") && text.ends_with(\"b\")",
    "    text.starts_with(\"a\") && text.ends_with(\"b\")",
    "    text.starts_with(\"a\") && text.ends_with(\"b\")",
    "    let re = Regex::new(r\"^a.*b$\").unwrap();\n    re.is_match(&text)",
    "    let re = Regex::new(r\"^a.*b$\").unwrap();\n    re.is_match(&text)",
    "    let re = Regex::new(r\"^a.*b$\").unwrap();\n    re.is_match(&text)",
    "    let re = Regex::new(r\"^a.*b$\").unwrap();\n    re.is_match(&text)",
    "    let re = Regex::new(r\"^a.*b$\").unwrap();\n    re.is_match(&text)",
    "    text.starts_with(\"a\") && text.ends_with(\"b\")",
    "    text.starts_with(\"a\") && text.ends_with(\"b\")"
  ]
}
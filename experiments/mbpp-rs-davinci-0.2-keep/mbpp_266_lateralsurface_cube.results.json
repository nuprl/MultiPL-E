{
  "name": "mbpp_266_lateralsurface_cube",
  "language": "rs",
  "prompt": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_266_lateralsurface_cube.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    return 4 * l * l;\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    return 4 * l * l;\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    return 4 * l * l;\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    4 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    l * l * 4\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the lateral surface area of a cube given its side length.\nfn lateralsurface_cube(l: isize) -> isize {\n    6 * l * l\n}\n\nfn main() {\n    let candidate = lateralsurface_cube;\n    assert_eq!(candidate(5), 100);\n    assert_eq!(candidate(9), 324);\n    assert_eq!(candidate(10), 400);\n}\n",
      "timestamp": 1665509859,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `150`,\n right: `100`', /tmp/tmpptm9jgpw.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_245_max_sum",
  "language": "rs",
  "prompt": "/// Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfn max_sum(arr: Vec<isize>) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_245_max_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = max_sum;\n    assert_eq!(candidate(vec![1, 15, 51, 45, 33, 100, 12, 18, 9]), 194);\n    assert_eq!(candidate(vec![80, 60, 30, 40, 20, 10]), 210);\n    assert_eq!(candidate(vec![2, 3, 14, 16, 21, 23, 29, 30]), 138);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() {\n            sum += arr[j];\n            if sum > max_sum {\n                max_sum = sum;\n            }\n            j += 1;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j-1] {\n            sum += arr[j];\n            j += 1;\n        }\n        while j < arr.len() && arr[j] < arr[j-1] {\n            sum += arr[j];\n            j += 1;\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() {\n            sum += arr[j];\n            if sum > max_sum {\n                max_sum = sum;\n            }\n            j += 1;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max_sum_left[i].max(max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max_sum_right[i].max(max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        if i > 0 && arr[i] > arr[i - 1] {\n            max_sum_left[i] += max_sum_left[i - 1];\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        if i < arr.len() - 1 && arr[i] > arr[i + 1] {\n            max_sum_right[i] += max_sum_right[i + 1];\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1..arr.len()).rev() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        sum += arr[j];\n        j += 1;\n        while j < arr.len() && arr[j] < arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        sum += arr[j];\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max(max_sum_left[i], max_sum_left[j] + arr[i]);\n            }\n        }\n        max_sum = max(max_sum, max_sum_left[i]);\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max(max_sum_right[i], max_sum_right[j] + arr[i]);\n            }\n        }\n        max_sum = max(max_sum, max_sum_right[i]);\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max(max_sum_left[i], max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max(max_sum_right[i], max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() {\n            sum += arr[j];\n            j += 1;\n            if j < arr.len() && arr[j] < arr[j - 1] {\n                break;\n            }\n        }\n        j = i;\n        while j >= 0 {\n            sum += arr[j];\n            j -= 1;\n            if j >= 0 && arr[j] < arr[j + 1] {\n                break;\n            }\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let n = arr.len();\n    let mut lis = vec![0; n];\n    let mut lds = vec![0; n];\n\n    for i in 0..n {\n        lis[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && lis[i] < lis[j] + arr[i] {\n                lis[i] = lis[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..n).rev() {\n        lds[i] = arr[i];\n        for j in (0..i).rev() {\n            if arr[i] > arr[j] && lds[i] < lds[j] + arr[i] {\n                lds[i] = lds[j] + arr[i];\n            }\n        }\n    }\n\n    let mut max = lis[0] + lds[0] - arr[0];\n    for i in 1..n {\n        if max < lis[i] + lds[i] - arr[i] {\n            max = lis[i] + lds[i] - arr[i];\n        }\n    }\n\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n    let mut max_sum_left_so_far = 0;\n    let mut max_sum_right_so_far = 0;\n\n    for i in 0..arr.len() {\n        max_sum_left_so_far = max(max_sum_left_so_far + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_so_far;\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right_so_far = max(max_sum_right_so_far + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_so_far;\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() {\n            sum += arr[j];\n            if sum > max_sum {\n                max_sum = sum;\n            }\n            j += 1;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_inc = vec![0; arr.len()];\n    let mut max_sum_dec = vec![0; arr.len()];\n\n    max_sum_inc[0] = arr[0];\n    max_sum_dec[arr.len() - 1] = arr[arr.len() - 1];\n\n    for i in 1..arr.len() {\n        max_sum_inc[i] = std::cmp::max(max_sum_inc[i - 1], arr[i]);\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        max_sum_dec[i] = std::cmp::max(max_sum_dec[i + 1], arr[i]);\n    }\n\n    for i in 0..arr.len() {\n        max_sum = std::cmp::max(max_sum, max_sum_inc[i] + max_sum_dec[i]);\n    }\n\n    max_sum"
  ]
}
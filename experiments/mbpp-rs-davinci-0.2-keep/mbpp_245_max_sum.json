{
  "name": "mbpp_245_max_sum",
  "language": "rs",
  "prompt": "/// Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfn max_sum(arr: Vec<isize>) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_245_max_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = max_sum;\n    assert_eq!(candidate(vec![1, 15, 51, 45, 33, 100, 12, 18, 9]), 194);\n    assert_eq!(candidate(vec![80, 60, 30, 40, 20, 10]), 210);\n    assert_eq!(candidate(vec![2, 3, 14, 16, 21, 23, 29, 30]), 138);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() {\n            sum += arr[j];\n            if sum > max_sum {\n                max_sum = sum;\n            }\n            j += 1;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j-1] {\n            sum += arr[j];\n            j += 1;\n        }\n        while j < arr.len() && arr[j] < arr[j-1] {\n            sum += arr[j];\n            j += 1;\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() {\n            sum += arr[j];\n            if sum > max_sum {\n                max_sum = sum;\n            }\n            j += 1;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max_sum_left[i].max(max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max_sum_right[i].max(max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        if i > 0 && arr[i] > arr[i - 1] {\n            max_sum_left[i] += max_sum_left[i - 1];\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        if i < arr.len() - 1 && arr[i] > arr[i + 1] {\n            max_sum_right[i] += max_sum_right[i + 1];\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1..arr.len()).rev() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        sum += arr[j];\n        j += 1;\n        while j < arr.len() && arr[j] < arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        sum += arr[j];\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max(max_sum_left[i], max_sum_left[j] + arr[i]);\n            }\n        }\n        max_sum = max(max_sum, max_sum_left[i]);\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max(max_sum_right[i], max_sum_right[j] + arr[i]);\n            }\n        }\n        max_sum = max(max_sum, max_sum_right[i]);\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max(max_sum_left[i], max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max(max_sum_right[i], max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() {\n            sum += arr[j];\n            j += 1;\n            if j < arr.len() && arr[j] < arr[j - 1] {\n                break;\n            }\n        }\n        j = i;\n        while j >= 0 {\n            sum += arr[j];\n            j -= 1;\n            if j >= 0 && arr[j] < arr[j + 1] {\n                break;\n            }\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let n = arr.len();\n    let mut lis = vec![0; n];\n    let mut lds = vec![0; n];\n\n    for i in 0..n {\n        lis[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && lis[i] < lis[j] + arr[i] {\n                lis[i] = lis[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..n).rev() {\n        lds[i] = arr[i];\n        for j in (0..i).rev() {\n            if arr[i] > arr[j] && lds[i] < lds[j] + arr[i] {\n                lds[i] = lds[j] + arr[i];\n            }\n        }\n    }\n\n    let mut max = lis[0] + lds[0] - arr[0];\n    for i in 1..n {\n        if max < lis[i] + lds[i] - arr[i] {\n            max = lis[i] + lds[i] - arr[i];\n        }\n    }\n\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n    let mut max_sum_left_so_far = 0;\n    let mut max_sum_right_so_far = 0;\n\n    for i in 0..arr.len() {\n        max_sum_left_so_far = max(max_sum_left_so_far + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_so_far;\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right_so_far = max(max_sum_right_so_far + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_so_far;\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() {\n            sum += arr[j];\n            if sum > max_sum {\n                max_sum = sum;\n            }\n            j += 1;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_inc = vec![0; arr.len()];\n    let mut max_sum_dec = vec![0; arr.len()];\n\n    max_sum_inc[0] = arr[0];\n    max_sum_dec[arr.len() - 1] = arr[arr.len() - 1];\n\n    for i in 1..arr.len() {\n        max_sum_inc[i] = std::cmp::max(max_sum_inc[i - 1], arr[i]);\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        max_sum_dec[i] = std::cmp::max(max_sum_dec[i + 1], arr[i]);\n    }\n\n    for i in 0..arr.len() {\n        max_sum = std::cmp::max(max_sum, max_sum_inc[i] + max_sum_dec[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut increasing = true;\n        for j in i..arr.len() {\n            if increasing {\n                if arr[j] < arr[j - 1] {\n                    increasing = false;\n                }\n            }\n            sum += arr[j];\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 1..arr.len() {\n        if arr[i] > arr[i - 1] {\n            max_sum_left[i] = max_sum_left[i - 1] + arr[i];\n        } else {\n            max_sum_left[i] = arr[i];\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        if arr[i] > arr[i + 1] {\n            max_sum_right[i] = max_sum_right[i + 1] + arr[i];\n        } else {\n            max_sum_right[i] = arr[i];\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max = 0;\n    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        max = max.max(arr[i]);\n        max_sum += max;\n    }\n    max_sum",
    "    let mut max = 0;\n    for i in 0..arr.len() {\n        let mut sum = arr[i];\n        let mut max_inc = arr[i];\n        let mut max_dec = arr[i];\n        for j in i+1..arr.len() {\n            if arr[j] > max_inc {\n                max_inc = arr[j];\n                sum += arr[j];\n            } else if arr[j] < max_dec {\n                max_dec = arr[j];\n                sum += arr[j];\n            }\n        }\n        if sum > max {\n            max = sum;\n        }\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1..arr.len()).rev() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max = 0;\n    let mut max_sum = 0;\n    let mut max_sum_rev = 0;\n    for i in 0..arr.len() {\n        max_sum += arr[i];\n        max_sum_rev += arr[arr.len() - 1 - i];\n        if max_sum < 0 {\n            max_sum = 0;\n        }\n        if max_sum_rev < 0 {\n            max_sum_rev = 0;\n        }\n        max = max.max(max_sum).max(max_sum_rev);\n    }\n    max",
    "    let mut inc = vec![0; arr.len()];\n    let mut dec = vec![0; arr.len()];\n\n    inc[0] = arr[0];\n    for i in 1..arr.len() {\n        inc[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && inc[i] < inc[j] + arr[i] {\n                inc[i] = inc[j] + arr[i];\n            }\n        }\n    }\n\n    dec[arr.len() - 1] = arr[arr.len() - 1];\n    for i in (0..arr.len() - 1).rev() {\n        dec[i] = arr[i];\n        for j in (i + 1..arr.len()).rev() {\n            if arr[i] > arr[j] && dec[i] < dec[j] + arr[i] {\n                dec[i] = dec[j] + arr[i];\n            }\n        }\n    }\n\n    let mut max = inc[0] + dec[0] - arr[0];\n    for i in 1..arr.len() {\n        if inc[i] + dec[i] - arr[i] > max {\n            max = inc[i] + dec[i] - arr[i];\n        }\n    }\n\n    max",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        sum += arr[j];\n        j += 1;\n        while j < arr.len() && arr[j] < arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        sum += arr[j];\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_inc = vec![0; arr.len()];\n    let mut max_sum_dec = vec![0; arr.len()];\n\n    max_sum_inc[0] = arr[0];\n    max_sum_dec[arr.len() - 1] = arr[arr.len() - 1];\n\n    for i in 1..arr.len() {\n        max_sum_inc[i] = max(max_sum_inc[i - 1] + arr[i], arr[i]);\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        max_sum_dec[i] = max(max_sum_dec[i + 1] + arr[i], arr[i]);\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = isize::min_value();\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        if i > 0 && max_sum_left[i - 1] > 0 {\n            max_sum_left[i] += max_sum_left[i - 1];\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        if i < arr.len() - 1 && max_sum_right[i + 1] > 0 {\n            max_sum_right[i] += max_sum_right[i + 1];\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max = arr[0];\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        sum += arr[i];\n        if sum > max {\n            max = sum;\n        }\n        if sum < 0 {\n            sum = 0;\n        }\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_l = vec![0; arr.len()];\n    let mut max_sum_r = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_l[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_l[i] < max_sum_l[j] + arr[i] {\n                max_sum_l[i] = max_sum_l[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_r[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_r[i] < max_sum_r[j] + arr[i] {\n                max_sum_r[i] = max_sum_r[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_l[i] + max_sum_r[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max = 0;\n    let mut sum = 0;\n    let mut i = 0;\n    let mut j = arr.len() - 1;\n    while i < j {\n        if arr[i] < arr[j] {\n            sum += arr[i];\n            i += 1;\n        } else if arr[i] > arr[j] {\n            sum += arr[j];\n            j -= 1;\n        } else {\n            max = sum;\n            sum = 0;\n            i += 1;\n            j -= 1;\n        }\n    }\n    if sum > max {\n        sum\n    } else {\n        max\n    }",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] >= arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        while j < arr.len() && arr[j] <= arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        max_sum = std::cmp::max(max_sum, sum);\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        if i > 0 && max_sum_left[i - 1] > 0 {\n            max_sum_left[i] += max_sum_left[i - 1];\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        if i < arr.len() - 1 && max_sum_right[i + 1] > 0 {\n            max_sum_right[i] += max_sum_right[i + 1];\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_so_far = 0;\n    let mut max_sum_so_far_reverse = 0;\n    let mut max_sum_so_far_reverse_temp = 0;\n    let mut max_sum_so_far_temp = 0;\n    let mut max_sum_so_far_temp_reverse = 0;\n    let mut max_sum_so_far_temp_reverse_temp = 0;\n    let mut max_sum_so_far_temp_reverse_temp_reverse = 0;\n    let mut max_sum_so_far_temp_reverse_temp_reverse_temp = 0;\n    let mut max_sum_so_far_temp_reverse_temp_reverse_temp_reverse = 0;\n    let mut max_sum_so_far_temp_reverse_temp_reverse_temp_reverse_temp = 0;\n    let mut max_sum_so_far_temp_reverse_temp_reverse_temp_reverse_temp_reverse = 0;\n    let mut max_sum_so_far_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp = 0;\n    let mut max_sum_so_far_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse = 0;\n    let mut max_sum_so_far_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp = 0;\n    let mut max_sum_so_far_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse = 0;\n    let mut max_sum_so_far_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp = 0;\n    let mut max_sum_so_far_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse = 0;\n    let mut max_sum_so_far_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp = 0;\n    let mut",
    "    let mut max_sum = 0;\n    let mut max_sum_so_far = 0;\n    let mut max_sum_so_far_rev = 0;\n    let mut max_sum_so_far_rev_arr = vec![0; arr.len()];\n    for i in (0..arr.len()).rev() {\n        max_sum_so_far_rev += arr[i];\n        max_sum_so_far_rev_arr[i] = max_sum_so_far_rev;\n    }\n    for i in 0..arr.len() {\n        max_sum_so_far += arr[i];\n        max_sum_so_far_rev -= arr[i];\n        max_sum = max(max_sum, max_sum_so_far + max_sum_so_far_rev_arr[i]);\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    max_sum_left[0] = arr[0];\n    max_sum_right[arr.len() - 1] = arr[arr.len() - 1];\n\n    for i in 1..arr.len() {\n        max_sum_left[i] = max(max_sum_left[i - 1], arr[i]);\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        max_sum_right[i] = max(max_sum_right[i + 1], arr[i]);\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut inc = vec![0; arr.len()];\n    let mut dec = vec![0; arr.len()];\n\n    inc[0] = arr[0];\n    dec[arr.len() - 1] = arr[arr.len() - 1];\n\n    for i in 1..arr.len() {\n        inc[i] = max(inc[i - 1] + arr[i], arr[i]);\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        dec[i] = max(dec[i + 1] + arr[i], arr[i]);\n    }\n\n    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut inc = vec![0; arr.len()];\n    let mut dec = vec![0; arr.len()];\n    inc[0] = arr[0];\n    dec[arr.len() - 1] = arr[arr.len() - 1];\n\n    for i in 1..arr.len() {\n        inc[i] = max(inc[i - 1], arr[i]);\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        dec[i] = max(dec[i + 1], arr[i]);\n    }\n\n    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max = isize::min_value();\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        sum += arr[j];\n        j += 1;\n        while j < arr.len() && arr[j] < arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        sum += arr[j];\n        max = max.max(sum);\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        while j < arr.len() && arr[j] < arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_inc = vec![0; arr.len()];\n    let mut max_sum_dec = vec![0; arr.len()];\n\n    max_sum_inc[0] = arr[0];\n    max_sum_dec[arr.len() - 1] = arr[arr.len() - 1];\n\n    for i in 1..arr.len() {\n        max_sum_inc[i] = max(max_sum_inc[i - 1] + arr[i], arr[i]);\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        max_sum_dec[i] = max(max_sum_dec[i + 1] + arr[i], arr[i]);\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n    let mut max_sum_left_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum_left_right[i] = max_sum_left[i] + max_sum_right[i] - arr[i];\n        if max_sum < max_sum_left_right[i] {\n            max_sum = max_sum_left_right[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_so_far = 0;\n    let mut max_sum_ending_here = 0;\n    let mut max_sum_ending_here_reverse = 0;\n    let mut max_sum_so_far_reverse = 0;\n    let mut max_sum_reverse = 0;\n\n    for i in 0..arr.len() {\n        max_sum_ending_here = max_sum_ending_here + arr[i];\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0;\n        }\n        if max_sum_so_far < max_sum_ending_here {\n            max_sum_so_far = max_sum_ending_here;\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_ending_here_reverse = max_sum_ending_here_reverse + arr[i];\n        if max_sum_ending_here_reverse < 0 {\n            max_sum_ending_here_reverse = 0;\n        }\n        if max_sum_so_far_reverse < max_sum_ending_here_reverse {\n            max_sum_so_far_reverse = max_sum_ending_here_reverse;\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum_reverse = max_sum_reverse + arr[i];\n        if max_sum_reverse < 0 {\n            max_sum_reverse = 0;\n        }\n        if max_sum < max_sum_reverse {\n            max_sum = max_sum_reverse;\n        }\n    }\n\n    if max_sum_so_far + max_sum_so_far_reverse > max_sum {\n        max_sum_so_far + max_sum_so_far_reverse\n    } else {\n        max_sum\n    }",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        while j < arr.len() && arr[j] < arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        if sum > max {\n            max = sum;\n        }\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        while j < arr.len() && arr[j] < arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        if sum > max {\n            max = sum;\n        }\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut left_sum = vec![0; arr.len()];\n    let mut right_sum = vec![0; arr.len()];\n    for i in 0..arr.len() {\n        left_sum[i] = arr[i];\n        if i > 0 && left_sum[i - 1] > 0 {\n            left_sum[i] += left_sum[i - 1];\n        }\n    }\n    for i in (0..arr.len()).rev() {\n        right_sum[i] = arr[i];\n        if i < arr.len() - 1 && right_sum[i + 1] > 0 {\n            right_sum[i] += right_sum[i + 1];\n        }\n    }\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(left_sum[i] + right_sum[i] - arr[i]);\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = arr[i];\n        let mut max = arr[i];\n        for j in i + 1..arr.len() {\n            if arr[j] > max {\n                sum += arr[j];\n                max = arr[j];\n            }\n        }\n        max = arr[i];\n        for j in (0..i).rev() {\n            if arr[j] < max {\n                sum += arr[j];\n                max = arr[j];\n            }\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() - 1 && arr[j] < arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        sum += arr[j];\n        while j < arr.len() - 1 && arr[j] > arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n    let mut max_sum_left_right = vec![0; arr.len()];\n    for i in 0..arr.len() {\n        sum += arr[i];\n        max_sum_left[i] = sum;\n        if sum < 0 {\n            sum = 0;\n        }\n    }\n    sum = 0;\n    for i in (0..arr.len()).rev() {\n        sum += arr[i];\n        max_sum_right[i] = sum;\n        if sum < 0 {\n            sum = 0;\n        }\n    }\n    for i in 0..arr.len() {\n        max_sum_left_right[i] = max_sum_left[i] + max_sum_right[i] - arr[i];\n        if max_sum_left_right[i] > max_sum {\n            max_sum = max_sum_left_right[i];\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        while j < arr.len() && arr[j] < arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() {\n            sum += arr[j];\n            if sum > max_sum {\n                max_sum = sum;\n            }\n            j += 1;\n        }\n    }\n    max_sum",
    "    let mut max = 0;\n    let mut sum = arr[0];\n    let mut max_sum = arr[0];\n    let mut min = arr[0];\n    let mut min_sum = arr[0];\n    for i in 1..arr.len() {\n        sum += arr[i];\n        max_sum = max_sum.max(sum);\n        sum = sum.max(0);\n        min_sum = min_sum.min(arr[i]);\n        min = min.min(arr[i]);\n        max = max.max(max_sum - min_sum);\n    }\n    max",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] >= arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        while j < arr.len() && arr[j] <= arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut left = vec![0; arr.len()];\n    let mut right = vec![0; arr.len()];\n    let mut max = 0;\n\n    for i in 0..arr.len() {\n        left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                left[i] = max(left[i], left[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                right[i] = max(right[i], right[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max = max(max, left[i] + right[i] - arr[i]);\n    }\n\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        if i > 0 && arr[i] > arr[i - 1] {\n            max_sum_left[i] += max_sum_left[i - 1];\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        if i < arr.len() - 1 && arr[i] > arr[i + 1] {\n            max_sum_right[i] += max_sum_right[i + 1];\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() {\n            sum += arr[j];\n            if sum > max {\n                max = sum;\n            }\n            j += 1;\n        }\n    }\n    max",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() {\n            sum += arr[j];\n            if sum > max_sum {\n                max_sum = sum;\n            }\n            j += 1;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        sum += arr[i];\n        max_sum_left[i] = sum;\n        if sum < 0 {\n            sum = 0;\n        }\n    }\n\n    sum = 0;\n    for i in (0..arr.len()).rev() {\n        sum += arr[i];\n        max_sum_right[i] = sum;\n        if sum < 0 {\n            sum = 0;\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max_sum_left[i].max(max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max_sum_right[i].max(max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max = 0;\n    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        max_sum += arr[i];\n        if max_sum < 0 {\n            max_sum = 0;\n        }\n        if max_sum > max {\n            max = max_sum;\n        }\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n    for i in 1..arr.len() {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i]);\n    }\n    for i in (0..arr.len() - 1).rev() {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i]);\n    }\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    max_sum",
    "    let mut max = 0;\n    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        max_sum += arr[i];\n        if max_sum < 0 {\n            max_sum = 0;\n        }\n        if max_sum > max {\n            max = max_sum;\n        }\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        if i > 0 && arr[i] > arr[i - 1] {\n            max_sum_left[i] += max_sum_left[i - 1];\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        if i < arr.len() - 1 && arr[i] > arr[i + 1] {\n            max_sum_right[i] += max_sum_right[i + 1];\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max(max_sum_left[i], max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max(max_sum_right[i], max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max_sum_left[i].max(max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max_sum_right[i].max(max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max(max_sum_left[i], max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max(max_sum_right[i], max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_so_far = 0;\n    let mut max_sum_ending_here = 0;\n    let mut max_sum_ending_here_reverse = 0;\n    let mut max_sum_so_far_reverse = 0;\n    let mut max_sum_reverse = 0;\n\n    for i in 0..arr.len() {\n        max_sum_ending_here += arr[i];\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0;\n        }\n        if max_sum_so_far < max_sum_ending_here {\n            max_sum_so_far = max_sum_ending_here;\n        }\n\n        max_sum_ending_here_reverse += arr[arr.len() - i - 1];\n        if max_sum_ending_here_reverse < 0 {\n            max_sum_ending_here_reverse = 0;\n        }\n        if max_sum_so_far_reverse < max_sum_ending_here_reverse {\n            max_sum_so_far_reverse = max_sum_ending_here_reverse;\n        }\n    }\n\n    max_sum = max_sum_so_far + max_sum_so_far_reverse;\n    for i in 0..arr.len() {\n        max_sum_reverse += arr[arr.len() - i - 1];\n        if max_sum_reverse < 0 {\n            max_sum_reverse = 0;\n        }\n        if max_sum < max_sum_reverse {\n            max_sum = max_sum_reverse;\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1..arr.len()).rev() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_so_far = 0;\n\n    for i in 0..arr.len() {\n        max_sum_so_far = max_sum_so_far + arr[i];\n        if max_sum_so_far < 0 {\n            max_sum_so_far = 0;\n        }\n        if max_sum < max_sum_so_far {\n            max_sum = max_sum_so_far;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_so_far = 0;\n    let mut max_sum_ending_here = 0;\n    let mut max_sum_ending_here_so_far = 0;\n    let mut max_sum_ending_here_so_far_index = 0;\n    let mut max_sum_ending_here_index = 0;\n    let mut max_sum_ending_here_index_so_far = 0;\n    let mut max_sum_ending_here_index_so_far_index = 0;\n    let mut max_sum_ending_here_index_so_far_index_index = 0;\n    let mut max_sum_ending_here_index_so_far_index_index_index = 0;\n    let mut max_sum_ending_here_index_so_far_index_index_index_index = 0;\n    let mut max_sum_ending_here_index_so_far_index_index_index_index_index = 0;\n    let mut max_sum_ending_here_index_so_far_index_index_index_index_index_index = 0;\n    let mut max_sum_ending_here_index_so_far_index_index_index_index_index_index_index = 0;\n    let mut max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index = 0;\n    let mut max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index = 0;\n    let mut max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index = 0;\n    let mut max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index = 0;\n    let mut max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index_index = 0;\n    let mut",
    "    let mut max_sum = 0;\n    let mut sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        sum += arr[i];\n        if sum < 0 {\n            sum = 0;\n        }\n        max_sum_left[i] = sum;\n    }\n\n    sum = 0;\n    for i in (0..arr.len()).rev() {\n        sum += arr[i];\n        if sum < 0 {\n            sum = 0;\n        }\n        max_sum_right[i] = sum;\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n    for i in 0..arr.len() {\n        sum += arr[i];\n        max_sum_left[i] = sum;\n        if sum < 0 {\n            sum = 0;\n        }\n    }\n    sum = 0;\n    for i in (0..arr.len()).rev() {\n        sum += arr[i];\n        max_sum_right[i] = sum;\n        if sum < 0 {\n            sum = 0;\n        }\n    }\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    // find max sum of increasing subsequence from left\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    // find max sum of increasing subsequence from right\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    // find max sum of bitonic subsequence\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max = 0;\n    let mut max_sum = vec![0; arr.len()];\n    let mut max_sum_rev = vec![0; arr.len()];\n    for i in 0..arr.len() {\n        max_sum[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum[i] < max_sum[j] + arr[i] {\n                max_sum[i] = max_sum[j] + arr[i];\n            }\n        }\n    }\n    for i in (0..arr.len()).rev() {\n        max_sum_rev[i] = arr[i];\n        for j in (i + 1..arr.len()).rev() {\n            if arr[i] > arr[j] && max_sum_rev[i] < max_sum_rev[j] + arr[i] {\n                max_sum_rev[i] = max_sum_rev[j] + arr[i];\n            }\n        }\n    }\n    for i in 0..arr.len() {\n        if max < max_sum[i] + max_sum_rev[i] - arr[i] {\n            max = max_sum[i] + max_sum_rev[i] - arr[i];\n        }\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = arr[i];\n        let mut max = arr[i];\n        for j in i + 1..arr.len() {\n            if arr[j] > max {\n                sum += arr[j];\n                max = arr[j];\n            } else {\n                break;\n            }\n        }\n        for j in (0..i).rev() {\n            if arr[j] < max {\n                sum += arr[j];\n            } else {\n                break;\n            }\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut dp = vec![0; arr.len()];\n    let mut dp_rev = vec![0; arr.len()];\n    let mut max = 0;\n    for i in 0..arr.len() {\n        dp[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && dp[i] < dp[j] + arr[i] {\n                dp[i] = dp[j] + arr[i];\n            }\n        }\n        if dp[i] > max {\n            max = dp[i];\n        }\n    }\n    for i in (0..arr.len()).rev() {\n        dp_rev[i] = arr[i];\n        for j in (i + 1..arr.len()).rev() {\n            if arr[i] > arr[j] && dp_rev[i] < dp_rev[j] + arr[i] {\n                dp_rev[i] = dp_rev[j] + arr[i];\n            }\n        }\n        if dp_rev[i] > max {\n            max = dp_rev[i];\n        }\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut sum = 0;\n    let mut max_sum_so_far = 0;\n    let mut max_sum_so_far_index = 0;\n    for i in 0..arr.len() {\n        sum += arr[i];\n        if sum < 0 {\n            sum = 0;\n        }\n        if sum > max_sum_so_far {\n            max_sum_so_far = sum;\n            max_sum_so_far_index = i;\n        }\n    }\n    max_sum = max_sum_so_far;\n    sum = 0;\n    for i in 0..max_sum_so_far_index {\n        sum += arr[i];\n        if sum < 0 {\n            sum = 0;\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    sum = 0;\n    for i in (max_sum_so_far_index + 1)..arr.len() {\n        sum += arr[i];\n        if sum < 0 {\n            sum = 0;\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max(max_sum_left[i], max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max(max_sum_right[i], max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = arr[0];\n    let mut max_sum_inc = vec![arr[0]; arr.len()];\n    let mut max_sum_dec = vec![arr[0]; arr.len()];\n\n    for i in 1..arr.len() {\n        max_sum_inc[i] = max(arr[i], max_sum_inc[i - 1] + arr[i]);\n        max_sum_dec[arr.len() - 1 - i] = max(arr[arr.len() - 1 - i], max_sum_dec[arr.len() - i] + arr[arr.len() - 1 - i]);\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        let mut max_sum_left_i = 0;\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left_i = max(max_sum_left_i, max_sum_left[j]);\n            }\n        }\n        max_sum_left[i] = max_sum_left_i + arr[i];\n    }\n\n    for i in (0..arr.len()).rev() {\n        let mut max_sum_right_i = 0;\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right_i = max(max_sum_right_i, max_sum_right[j]);\n            }\n        }\n        max_sum_right[i] = max_sum_right_i + arr[i];\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        while j < arr.len() && arr[j] < arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        if sum > max {\n            max = sum;\n        }\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut inc = vec![0; arr.len()];\n    let mut dec = vec![0; arr.len()];\n\n    inc[0] = arr[0];\n    dec[arr.len() - 1] = arr[arr.len() - 1];\n\n    for i in 1..arr.len() {\n        inc[i] = inc[i - 1].max(arr[i]);\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        dec[i] = dec[i + 1].max(arr[i]);\n    }\n\n    let mut max = 0;\n\n    for i in 0..arr.len() {\n        max = max.max(inc[i] + dec[i] - arr[i]);\n    }\n\n    max",
    "    let mut inc = vec![0; arr.len()];\n    let mut dec = vec![0; arr.len()];\n\n    inc[0] = arr[0];\n    for i in 1..arr.len() {\n        inc[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                inc[i] = inc[i].max(inc[j] + arr[i]);\n            }\n        }\n    }\n\n    dec[arr.len() - 1] = arr[arr.len() - 1];\n    for i in (0..arr.len() - 1).rev() {\n        dec[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                dec[i] = dec[i].max(dec[j] + arr[i]);\n            }\n        }\n    }\n\n    let mut max = 0;\n    for i in 0..arr.len() {\n        max = max.max(inc[i] + dec[i] - arr[i]);\n    }\n    max",
    "    let mut max = 0;\n    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        max_sum += arr[i];\n        if max_sum < 0 {\n            max_sum = 0;\n        }\n        if max_sum > max {\n            max = max_sum;\n        }\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max(max_sum_left[i], max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max(max_sum_right[i], max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        while j < arr.len() && arr[j] < arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        if sum > max {\n            max = sum;\n        }\n    }\n    max",
    "    let mut max = 0;\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        sum += arr[i];\n        if sum < 0 {\n            sum = 0;\n        }\n        max = std::cmp::max(max, sum);\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_inc = vec![0; arr.len()];\n    let mut max_sum_dec = vec![0; arr.len()];\n\n    max_sum_inc[0] = arr[0];\n    max_sum_dec[arr.len() - 1] = arr[arr.len() - 1];\n\n    for i in 1..arr.len() {\n        max_sum_inc[i] = max(max_sum_inc[i - 1] + arr[i], arr[i]);\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        max_sum_dec[i] = max(max_sum_dec[i + 1] + arr[i], arr[i]);\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut inc = vec![0; arr.len()];\n    let mut dec = vec![0; arr.len()];\n\n    inc[0] = arr[0];\n    for i in 1..arr.len() {\n        inc[i] = std::cmp::max(inc[i - 1], arr[i]);\n    }\n\n    dec[arr.len() - 1] = arr[arr.len() - 1];\n    for i in (0..arr.len() - 1).rev() {\n        dec[i] = std::cmp::max(dec[i + 1], arr[i]);\n    }\n\n    let mut max = std::isize::MIN;\n    for i in 0..arr.len() {\n        max = std::cmp::max(max, inc[i] + dec[i] - arr[i]);\n    }\n\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max_sum_left[i].max(max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max_sum_right[i].max(max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_so_far = 0;\n    let mut max_sum_ending_here = 0;\n    let mut max_sum_ending_here_so_far = 0;\n    let mut max_sum_starting_here = 0;\n    let mut max_sum_starting_here_so_far = 0;\n    for i in 0..arr.len() {\n        max_sum_ending_here += arr[i];\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0;\n        }\n        if max_sum_ending_here > max_sum_ending_here_so_far {\n            max_sum_ending_here_so_far = max_sum_ending_here;\n        }\n        max_sum_starting_here += arr[arr.len() - 1 - i];\n        if max_sum_starting_here < 0 {\n            max_sum_starting_here = 0;\n        }\n        if max_sum_starting_here > max_sum_starting_here_so_far {\n            max_sum_starting_here_so_far = max_sum_starting_here;\n        }\n    }\n    max_sum = max_sum_ending_here_so_far + max_sum_starting_here_so_far;\n    for i in 0..arr.len() - 1 {\n        max_sum_so_far += arr[i];\n        if max_sum_so_far < 0 {\n            max_sum_so_far = 0;\n        }\n        if max_sum_so_far > max_sum {\n            max_sum = max_sum_so_far;\n        }\n    }\n    max_sum",
    "    let mut dp = vec![0; arr.len()];\n    let mut dp2 = vec![0; arr.len()];\n    dp[0] = arr[0];\n    dp2[arr.len() - 1] = arr[arr.len() - 1];\n    for i in 1..arr.len() {\n        dp[i] = arr[i] + dp[i - 1];\n        dp2[arr.len() - 1 - i] = arr[arr.len() - 1 - i] + dp2[arr.len() - i];\n    }\n    let mut max = dp[0] + dp2[1];\n    for i in 1..arr.len() - 1 {\n        max = max.max(dp[i] + dp2[i + 1]);\n    }\n    max",
    "    let mut max = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() {\n            sum += arr[j];\n            if sum > max {\n                max = sum;\n            }\n            j += 1;\n        }\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max_sum_left[i].max(max_sum_left[j] + arr[i]);\n            }\n        }\n        max_sum = max_sum.max(max_sum_left[i]);\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max_sum_right[i].max(max_sum_right[j] + arr[i]);\n            }\n        }\n        max_sum = max_sum.max(max_sum_right[i]);\n    }\n\n    for i in 1..arr.len() - 1 {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max(max_sum_left[i], max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max(max_sum_right[i], max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        while j < arr.len() && arr[j] < arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        if sum > max {\n            max = sum;\n        }\n    }\n    max",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() {\n            sum += arr[j];\n            if sum > max_sum {\n                max_sum = sum;\n            }\n            j += 1;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = isize::min_value();\n    let mut max_sum_so_far = isize::min_value();\n    let mut max_sum_so_far_rev = isize::min_value();\n    let mut max_sum_rev = isize::min_value();\n    let mut max_sum_so_far_rev_temp = isize::min_value();\n    let mut max_sum_so_far_temp = isize::min_value();\n    for i in 0..arr.len() {\n        max_sum_so_far_temp = max_sum_so_far_temp.max(arr[i]);\n        max_sum_so_far = max_sum_so_far.max(max_sum_so_far_temp);\n        max_sum_so_far_rev_temp = max_sum_so_far_rev_temp.max(arr[arr.len() - 1 - i]);\n        max_sum_so_far_rev = max_sum_so_far_rev.max(max_sum_so_far_rev_temp);\n        max_sum = max_sum.max(max_sum_so_far + max_sum_so_far_rev - arr[i]);\n        max_sum_rev = max_sum_rev.max(max_sum_so_far_rev + max_sum_so_far - arr[arr.len() - 1 - i]);\n    }\n    max_sum.max(max_sum_rev)",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n    let mut max_sum_left_temp = 0;\n    let mut max_sum_right_temp = 0;\n\n    for i in 0..arr.len() {\n        max_sum_left_temp = max_sum_left_temp + arr[i];\n        max_sum_left[i] = max_sum_left_temp;\n        if max_sum_left_temp < 0 {\n            max_sum_left_temp = 0;\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right_temp = max_sum_right_temp + arr[i];\n        max_sum_right[i] = max_sum_right_temp;\n        if max_sum_right_temp < 0 {\n            max_sum_right_temp = 0;\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        for j in i..arr.len() {\n            sum += arr[j];\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut inc = vec![0; arr.len()];\n    let mut dec = vec![0; arr.len()];\n    inc[0] = arr[0];\n    dec[arr.len() - 1] = arr[arr.len() - 1];\n    for i in 1..arr.len() {\n        inc[i] = max(arr[i], inc[i - 1] + arr[i]);\n    }\n    for i in (0..arr.len() - 1).rev() {\n        dec[i] = max(arr[i], dec[i + 1] + arr[i]);\n    }\n    let mut max_sum = inc[0] + dec[1];\n    for i in 1..arr.len() - 1 {\n        max_sum = max(max_sum, inc[i] + dec[i + 1]);\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() {\n            sum += arr[j];\n            if sum > max_sum {\n                max_sum = sum;\n            }\n            j += 1;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() {\n            sum += arr[j];\n            if sum > max_sum {\n                max_sum = sum;\n            }\n            j += 1;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max_sum_left[i].max(max_sum_left[j] + arr[i]);\n            }\n        }\n        max_sum = max_sum.max(max_sum_left[i]);\n    }\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max_sum_right[i].max(max_sum_right[j] + arr[i]);\n            }\n        }\n        max_sum = max_sum.max(max_sum_right[i]);\n    }\n    for i in 1..arr.len() - 1 {\n        max_sum = max_sum.max(max_sum_left[i - 1] + max_sum_right[i + 1]);\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        for j in i..arr.len() {\n            sum += arr[j];\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        while j < arr.len() && arr[j] < arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        max_sum = max(max_sum, sum);\n    }\n    max_sum",
    "    let mut max = 0;\n    let mut inc = vec![0; arr.len()];\n    let mut dec = vec![0; arr.len()];\n\n    inc[0] = arr[0];\n    dec[arr.len() - 1] = arr[arr.len() - 1];\n\n    for i in 1..arr.len() {\n        inc[i] = max(inc[i - 1] + arr[i], arr[i]);\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        dec[i] = max(dec[i + 1] + arr[i], arr[i]);\n    }\n\n    for i in 0..arr.len() {\n        max = max(max, inc[i] + dec[i] - arr[i]);\n    }\n\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut sum = 0;\n    let mut max_sum_arr = vec![0; arr.len()];\n    for i in 0..arr.len() {\n        sum += arr[i];\n        max_sum_arr[i] = sum;\n        if sum < 0 {\n            sum = 0;\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    let mut sum = 0;\n    let mut max_sum_rev_arr = vec![0; arr.len()];\n    for i in (0..arr.len()).rev() {\n        sum += arr[i];\n        max_sum_rev_arr[i] = sum;\n        if sum < 0 {\n            sum = 0;\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    for i in 1..arr.len()-1 {\n        let sum = max_sum_arr[i-1] + max_sum_rev_arr[i+1];\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max = 0;\n    let mut inc = vec![0; arr.len()];\n    let mut dec = vec![0; arr.len()];\n\n    inc[0] = arr[0];\n    for i in 1..arr.len() {\n        inc[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                inc[i] = std::cmp::max(inc[i], inc[j] + arr[i]);\n            }\n        }\n    }\n\n    dec[arr.len() - 1] = arr[arr.len() - 1];\n    for i in (0..arr.len() - 1).rev() {\n        dec[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                dec[i] = std::cmp::max(dec[i], dec[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max = std::cmp::max(max, inc[i] + dec[i] - arr[i]);\n    }\n\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n    let mut max_sum_left_so_far = 0;\n    let mut max_sum_right_so_far = 0;\n\n    for i in 0..arr.len() {\n        max_sum_left_so_far = max(max_sum_left_so_far + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_so_far;\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right_so_far = max(max_sum_right_so_far + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_so_far;\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut inc = vec![0; arr.len()];\n    let mut dec = vec![0; arr.len()];\n    inc[0] = arr[0];\n    dec[arr.len() - 1] = arr[arr.len() - 1];\n    for i in 1..arr.len() {\n        inc[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && inc[i] < inc[j] + arr[i] {\n                inc[i] = inc[j] + arr[i];\n            }\n        }\n    }\n    for i in (0..arr.len() - 1).rev() {\n        dec[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && dec[i] < dec[j] + arr[i] {\n                dec[i] = dec[j] + arr[i];\n            }\n        }\n    }\n    let mut max = 0;\n    for i in 0..arr.len() {\n        if max < inc[i] + dec[i] - arr[i] {\n            max = inc[i] + dec[i] - arr[i];\n        }\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        sum += arr[i];\n        max_sum_left[i] = sum;\n        if sum < 0 {\n            sum = 0;\n        }\n    }\n\n    sum = 0;\n    for i in (0..arr.len()).rev() {\n        sum += arr[i];\n        max_sum_right[i] = sum;\n        if sum < 0 {\n            sum = 0;\n        }\n    }\n\n    for i in 1..arr.len() - 1 {\n        max_sum = max_sum.max(max_sum_left[i - 1] + max_sum_right[i + 1]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max_sum_left[i].max(max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max_sum_right[i].max(max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n    max_sum_left[0] = arr[0];\n    max_sum_right[arr.len() - 1] = arr[arr.len() - 1];\n    for i in 1..arr.len() {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i]);\n    }\n    for i in (0..arr.len() - 1).rev() {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i]);\n    }\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_so_far = 0;\n    let mut max_sum_so_far_rev = 0;\n    let mut max_sum_so_far_rev_arr = vec![0; arr.len()];\n    let mut max_sum_so_far_arr = vec![0; arr.len()];\n    for i in (0..arr.len()).rev() {\n        max_sum_so_far_rev += arr[i];\n        max_sum_so_far_rev_arr[i] = max_sum_so_far_rev;\n    }\n    for i in 0..arr.len() {\n        max_sum_so_far += arr[i];\n        max_sum_so_far_arr[i] = max_sum_so_far;\n    }\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_so_far_arr[i] + max_sum_so_far_rev_arr[i] - arr[i]);\n    }\n    max_sum",
    "    let mut max = 0;\n    let mut inc = vec![0; arr.len()];\n    let mut dec = vec![0; arr.len()];\n\n    inc[0] = arr[0];\n    dec[arr.len() - 1] = arr[arr.len() - 1];\n\n    for i in 1..arr.len() {\n        inc[i] = arr[i] + inc[i - 1];\n        dec[arr.len() - 1 - i] = arr[arr.len() - 1 - i] + dec[arr.len() - i];\n    }\n\n    for i in 0..arr.len() {\n        max = std::cmp::max(max, inc[i] + dec[i] - arr[i]);\n    }\n\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_inc = vec![0; arr.len()];\n    let mut max_sum_dec = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_inc[i] = arr[i];\n        max_sum_dec[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_inc[i] < max_sum_inc[j] + arr[i] {\n                max_sum_inc[i] = max_sum_inc[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        for j in (0..arr.len()).rev() {\n            if arr[i] > arr[j] && max_sum_dec[i] < max_sum_dec[j] + arr[i] {\n                max_sum_dec[i] = max_sum_dec[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_inc[i] + max_sum_dec[i] - arr[i] {\n            max_sum = max_sum_inc[i] + max_sum_dec[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    max_sum_left[0] = arr[0];\n    max_sum_right[arr.len() - 1] = arr[arr.len() - 1];\n\n    for i in 1..arr.len() {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i]);\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i]);\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max_sum_left[i].max(max_sum_left[j] + arr[i]);\n            }\n        }\n        max_sum = max_sum.max(max_sum_left[i]);\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max_sum_right[i].max(max_sum_right[j] + arr[i]);\n            }\n        }\n        max_sum = max_sum.max(max_sum_right[i]);\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max_sum_left[i].max(max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max_sum_right[i].max(max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        while j < arr.len() && arr[j] < arr[j + 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut max = 0;\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        sum += arr[i];\n        if sum < 0 {\n            sum = 0;\n        } else if sum > max {\n            max = sum;\n        }\n        i += 1;\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut inc = vec![0; arr.len()];\n    let mut dec = vec![0; arr.len()];\n\n    inc[0] = arr[0];\n    for i in 1..arr.len() {\n        inc[i] = max(inc[i - 1], arr[i]);\n    }\n\n    dec[arr.len() - 1] = arr[arr.len() - 1];\n    for i in (0..arr.len() - 1).rev() {\n        dec[i] = max(dec[i + 1], arr[i]);\n    }\n\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        sum = max(sum, inc[i] + dec[i] - arr[i]);\n    }\n\n    sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max_sum_left[i].max(max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max_sum_right[i].max(max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    max_sum_left[0] = arr[0];\n    max_sum_right[arr.len() - 1] = arr[arr.len() - 1];\n\n    for i in 1..arr.len() {\n        max_sum_left[i] = std::cmp::max(max_sum_left[i - 1], arr[i]);\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        max_sum_right[i] = std::cmp::max(max_sum_right[i + 1], arr[i]);\n    }\n\n    for i in 0..arr.len() {\n        max_sum += std::cmp::max(max_sum_left[i], max_sum_right[i]) - arr[i];\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        sum += arr[i];\n        if sum < 0 {\n            sum = 0;\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i += 1;\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut sum = 0;\n    let mut max_val = 0;\n    for i in 0..arr.len() {\n        sum += arr[i];\n        if arr[i] > max_val {\n            max_val = arr[i];\n        }\n        if sum < 0 {\n            sum = 0;\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum + max_val",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    max_sum_left[0] = arr[0];\n    max_sum_right[arr.len() - 1] = arr[arr.len() - 1];\n\n    for i in 1..arr.len() {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i]);\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i]);\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut inc = true;\n        let mut dec = true;\n        for j in i..arr.len() {\n            if inc {\n                if arr[j] < arr[j - 1] {\n                    inc = false;\n                }\n            } else if dec {\n                if arr[j] > arr[j - 1] {\n                    dec = false;\n                }\n            }\n            sum += arr[j];\n            if !inc && !dec {\n                break;\n            }\n        }\n        if sum > max {\n            max = sum;\n        }\n    }\n    max",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        while j < arr.len() && arr[j] < arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut left_sum = vec![0; arr.len()];\n    let mut right_sum = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        left_sum[i] = arr[i];\n        if i > 0 && left_sum[i] < left_sum[i - 1] + arr[i] {\n            left_sum[i] = left_sum[i - 1] + arr[i];\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        right_sum[i] = arr[i];\n        if i < arr.len() - 1 && right_sum[i] < right_sum[i + 1] + arr[i] {\n            right_sum[i] = right_sum[i + 1] + arr[i];\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < left_sum[i] + right_sum[i] - arr[i] {\n            max_sum = left_sum[i] + right_sum[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut dp1 = vec![0; arr.len()];\n    let mut dp2 = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        dp1[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                dp1[i] = dp1[i].max(dp1[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        dp2[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                dp2[i] = dp2[i].max(dp2[j] + arr[i]);\n            }\n        }\n    }\n\n    let mut max = 0;\n    for i in 0..arr.len() {\n        max = max.max(dp1[i] + dp2[i] - arr[i]);\n    }\n\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n    let mut max_sum_left_so_far = 0;\n    let mut max_sum_right_so_far = 0;\n    for i in 0..arr.len() {\n        max_sum_left_so_far = max(max_sum_left_so_far + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_so_far;\n    }\n    for i in (0..arr.len()).rev() {\n        max_sum_right_so_far = max(max_sum_right_so_far + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_so_far;\n    }\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    max_sum",
    "    let mut max = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        while j < arr.len() && arr[j] < arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        if sum > max {\n            max = sum;\n        }\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max(max_sum_left[i], max_sum_left[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max(max_sum_right[i], max_sum_right[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max = 0;\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        sum += arr[i];\n        if sum < 0 {\n            sum = 0;\n        }\n        if sum > max {\n            max = sum;\n        }\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        if i > 0 && max_sum_left[i - 1] > 0 {\n            max_sum_left[i] += max_sum_left[i - 1];\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        if i < arr.len() - 1 && max_sum_right[i + 1] > 0 {\n            max_sum_right[i] += max_sum_right[i + 1];\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() {\n            sum += arr[j];\n            if sum > max_sum {\n                max_sum = sum;\n            }\n            j += 1;\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        while j < arr.len() && arr[j] < arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        max_sum = max(max_sum, sum);\n    }\n    max_sum",
    "    let mut max = 0;\n    let mut sum = 0;\n    let mut i = 0;\n    let mut j = arr.len() - 1;\n    while i < j {\n        if arr[i] < arr[j] {\n            sum += arr[i];\n            i += 1;\n        } else {\n            sum += arr[j];\n            j -= 1;\n        }\n        if sum > max {\n            max = sum;\n        }\n    }\n    max",
    "    let mut inc = vec![0; arr.len()];\n    let mut dec = vec![0; arr.len()];\n\n    inc[0] = arr[0];\n    for i in 1..arr.len() {\n        inc[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                inc[i] = max(inc[i], inc[j] + arr[i]);\n            }\n        }\n    }\n\n    dec[arr.len() - 1] = arr[arr.len() - 1];\n    for i in (0..arr.len() - 1).rev() {\n        dec[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                dec[i] = max(dec[i], dec[j] + arr[i]);\n            }\n        }\n    }\n\n    let mut max_sum = 0;\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max = 0;\n    for i in 0..arr.len() {\n        let mut sum = 0;\n        let mut j = i;\n        while j < arr.len() && arr[j] > arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        while j < arr.len() && arr[j] < arr[j - 1] {\n            sum += arr[j];\n            j += 1;\n        }\n        max = max.max(sum);\n    }\n    max",
    "    let mut dp_inc = vec![0; arr.len()];\n    let mut dp_dec = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        dp_inc[i] = arr[i];\n        dp_dec[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                dp_inc[i] = dp_inc[i].max(dp_inc[j] + arr[i]);\n            }\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        for j in (0..i).rev() {\n            if arr[j] > arr[i] {\n                dp_dec[i] = dp_dec[i].max(dp_dec[j] + arr[i]);\n            }\n        }\n    }\n\n    let mut max = 0;\n    for i in 0..arr.len() {\n        max = max.max(dp_inc[i] + dp_dec[i] - arr[i]);\n    }\n    max",
    "    let mut max_sum = std::isize::MIN;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        if i > 0 && max_sum_left[i - 1] > 0 {\n            max_sum_left[i] += max_sum_left[i - 1];\n        }\n    }\n\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        if i < arr.len() - 1 && max_sum_right[i + 1] > 0 {\n            max_sum_right[i] += max_sum_right[i + 1];\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let n = arr.len();\n    let mut inc = vec![0; n];\n    let mut dec = vec![0; n];\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for i in 1..n {\n        inc[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                inc[i] = inc[i].max(inc[j] + arr[i]);\n            }\n        }\n    }\n    for i in (0..n - 1).rev() {\n        dec[i] = arr[i];\n        for j in (i + 1)..n {\n            if arr[j] < arr[i] {\n                dec[i] = dec[i].max(dec[j] + arr[i]);\n            }\n        }\n    }\n    let mut max = 0;\n    for i in 0..n {\n        max = max.max(inc[i] + dec[i] - arr[i]);\n    }\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_inc = vec![0; arr.len()];\n    let mut max_sum_dec = vec![0; arr.len()];\n\n    max_sum_inc[0] = arr[0];\n    for i in 1..arr.len() {\n        max_sum_inc[i] = max(max_sum_inc[i - 1] + arr[i], arr[i]);\n    }\n\n    max_sum_dec[arr.len() - 1] = arr[arr.len() - 1];\n    for i in (0..arr.len() - 1).rev() {\n        max_sum_dec[i] = max(max_sum_dec[i + 1] + arr[i], arr[i]);\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = arr[0];\n    let mut max_sum_so_far = arr[0];\n    let mut max_sum_so_far_reverse = arr[arr.len() - 1];\n    let mut max_sum_reverse = arr[arr.len() - 1];\n    for i in 1..arr.len() {\n        max_sum_so_far = max(max_sum_so_far + arr[i], arr[i]);\n        max_sum = max(max_sum, max_sum_so_far);\n        max_sum_so_far_reverse = max(max_sum_so_far_reverse + arr[arr.len() - 1 - i], arr[arr.len() - 1 - i]);\n        max_sum_reverse = max(max_sum_reverse, max_sum_so_far_reverse);\n    }\n    max(max_sum, max_sum_reverse)",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n    for i in 0..arr.len() {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i];\n        }\n    }\n    max_sum",
    "    let mut left = vec![0; arr.len()];\n    let mut right = vec![0; arr.len()];\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[j] < arr[i] && left[i] < left[j] {\n                left[i] = left[j];\n            }\n        }\n        left[i] += arr[i];\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && right[i] < right[j] {\n                right[i] = right[j];\n            }\n        }\n        right[i] += arr[i];\n    }\n\n    let mut max = 0;\n    for i in 0..arr.len() {\n        max = max.max(left[i] + right[i] - arr[i]);\n    }\n\n    max",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n    let mut max_sum_left_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n        max_sum_left_right[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max(max_sum_left[i], max_sum_left[j] + arr[i]);\n            }\n        }\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max(max_sum_right[i], max_sum_right[j] + arr[i]);\n            }\n        }\n        for j in 0..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_left_right[i] = max(max_sum_left_right[i], max_sum_left_right[j] + arr[i]);\n            }\n        }\n        max_sum = max(max_sum, max_sum_left[i]);\n        max_sum = max(max_sum, max_sum_right[i]);\n        max_sum = max(max_sum, max_sum_left_right[i]);\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        for j in 0..i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n    for i in (0..arr.len()).rev() {\n        max_sum_right[i] = arr[i];\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1)..arr.len() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max_sum.max(max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_left = vec![0; arr.len()];\n    let mut max_sum_right = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        let mut max_sum_left_i = 0;\n        for j in 0..i {\n            if arr[j] < arr[i] {\n                max_sum_left_i = max(max_sum_left_i, max_sum_left[j]);\n            }\n        }\n        max_sum_left[i] = max_sum_left_i + arr[i];\n    }\n\n    for i in (0..arr.len()).rev() {\n        let mut max_sum_right_i = 0;\n        for j in (i + 1)..arr.len() {\n            if arr[j] < arr[i] {\n                max_sum_right_i = max(max_sum_right_i, max_sum_right[j]);\n            }\n        }\n        max_sum_right[i] = max_sum_right_i + arr[i];\n    }\n\n    for i in 0..arr.len() {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    max_sum",
    "    let mut max_sum = 0;\n    let mut max_sum_inc = vec![0; arr.len()];\n    let mut max_sum_dec = vec![0; arr.len()];\n\n    for i in 0..arr.len() {\n        max_sum_inc[i] = arr[i];\n        max_sum_dec[i] = arr[i];\n    }\n\n    for i in 1..arr.len() {\n        for j in 0..i {\n            if arr[i] > arr[j] && max_sum_inc[i] < max_sum_inc[j] + arr[i] {\n                max_sum_inc[i] = max_sum_inc[j] + arr[i];\n            }\n        }\n    }\n\n    for i in (0..arr.len() - 1).rev() {\n        for j in (i + 1..arr.len()).rev() {\n            if arr[i] > arr[j] && max_sum_dec[i] < max_sum_dec[j] + arr[i] {\n                max_sum_dec[i] = max_sum_dec[j] + arr[i];\n            }\n        }\n    }\n\n    for i in 0..arr.len() {\n        if max_sum < max_sum_inc[i] + max_sum_dec[i] - arr[i] {\n            max_sum = max_sum_inc[i] + max_sum_dec[i] - arr[i];\n        }\n    }\n\n    max_sum"
  ]
}
{
  "name": "mbpp_451_remove_whitespaces",
  "language": "rs",
  "prompt": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_451_remove_whitespaces.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.split_whitespace().collect::<Vec<&str>>().join(\"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    let mut text2 = String::new();\n    for c in text1.chars() {\n        if c != ' ' {\n            text2.push(c);\n        }\n    }\n    text2\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    let mut text2 = String::new();\n    for c in text1.chars() {\n        if c != ' ' {\n            text2.push(c);\n        }\n    }\n    text2\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.split_whitespace().collect::<Vec<&str>>().join(\"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    let mut text2 = String::new();\n    for c in text1.chars() {\n        if c != ' ' {\n            text2.push(c);\n        }\n    }\n    text2\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    let mut text2 = String::new();\n    for c in text1.chars() {\n        if !c.is_whitespace() {\n            text2.push(c);\n        }\n    }\n    text2\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517433,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    let mut text2 = String::new();\n    for c in text1.chars() {\n        if c != ' ' {\n            text2.push(c);\n        }\n    }\n    text2\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    let mut text2 = String::new();\n    for c in text1.chars() {\n        if !c.is_whitespace() {\n            text2.push(c);\n        }\n    }\n    text2\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517433,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    let mut text2 = String::new();\n    for c in text1.chars() {\n        if c != ' ' {\n            text2.push(c);\n        }\n    }\n    text2\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.split_whitespace().collect()\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1666123564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.chars().filter(|c| !c.is_whitespace()).collect()\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.chars().filter(|c| !c.is_whitespace()).collect()\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    let mut text2 = String::new();\n    for c in text1.chars() {\n        if c != ' ' {\n            text2.push(c);\n        }\n    }\n    text2\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    let mut text2 = String::new();\n    for c in text1.chars() {\n        if !c.is_whitespace() {\n            text2.push(c);\n        }\n    }\n    text2\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517433,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    let mut text2 = String::new();\n    for c in text1.chars() {\n        if !c.is_whitespace() {\n            text2.push(c);\n        }\n    }\n    text2\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517433,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.chars().filter(|c| !c.is_whitespace()).collect()\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.chars().filter(|c| !c.is_whitespace()).collect()\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    let mut text2 = String::new();\n    for c in text1.chars() {\n        if !c.is_whitespace() {\n            text2.push(c);\n        }\n    }\n    text2\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517433,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.split_whitespace().collect::<Vec<&str>>().join(\"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.split_whitespace().collect::<Vec<&str>>().join(\"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.split_whitespace().collect::<Vec<&str>>().join(\"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.split_whitespace().collect::<Vec<&str>>().join(\"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    let mut text2 = String::new();\n    for ch in text1.chars() {\n        if !ch.is_whitespace() {\n            text2.push(ch);\n        }\n    }\n    text2\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.split_whitespace().collect::<Vec<&str>>().join(\"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.chars().filter(|x| !x.is_whitespace()).collect()\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1666123564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.split_whitespace().collect::<Vec<&str>>().join(\"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    let mut text2 = String::new();\n    for c in text1.chars() {\n        if !c.is_whitespace() {\n            text2.push(c);\n        }\n    }\n    text2\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517433,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.split_whitespace().collect::<Vec<&str>>().join(\"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.chars().filter(|c| !c.is_whitespace()).collect()\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    let text2: String = text1.chars().filter(|c| !c.is_whitespace()).collect();\n    text2\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.split_whitespace().collect::<Vec<&str>>().join(\"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.split_whitespace().collect::<Vec<&str>>().join(\"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.chars().filter(|c| !c.is_whitespace()).collect()\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.chars().filter(|&c| c != ' ').collect()\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    let mut text = text1.clone();\n    text.retain(|c| !c.is_whitespace());\n    text\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.chars().filter(|c| !c.is_whitespace()).collect()\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.split_whitespace().collect::<Vec<&str>>().join(\"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.split_whitespace().collect::<Vec<&str>>().join(\"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    let mut text2 = String::new();\n    for c in text1.chars() {\n        if c != ' ' {\n            text2.push(c);\n        }\n    }\n    text2\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.split_whitespace().collect::<Vec<&str>>().join(\"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    let mut text2 = String::new();\n    for c in text1.chars() {\n        if c != ' ' {\n            text2.push(c);\n        }\n    }\n    text2\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.split_whitespace().collect::<Vec<&str>>().join(\"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove all whitespaces from the given string.\nfn remove_whitespaces(text1: String) -> String {\n    text1.replace(\" \", \"\")\n}\n\nfn main() {\n    let candidate = remove_whitespaces;\n    assert_eq!(candidate(String::from(\" Google    Flutter \")), String::from(\"GoogleFlutter\"));\n    assert_eq!(candidate(String::from(\" Google    Dart \")), String::from(\"GoogleDart\"));\n    assert_eq!(candidate(String::from(\" iOS    Swift \")), String::from(\"iOSSwift\"));\n}\n",
      "timestamp": 1665517432,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
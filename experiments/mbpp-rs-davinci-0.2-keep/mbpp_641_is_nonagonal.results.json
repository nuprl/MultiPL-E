{
  "name": "mbpp_641_is_nonagonal",
  "language": "rs",
  "prompt": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_641_is_nonagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    (n * (3 * n - 1)) / 2\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `145`,\n right: `325`', /tmp/tmpmm166ytr.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpuc6e5s1w.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    -1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpo0hnl26u.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 1) / 2 < n {\n        i += 1;\n    }\n    i * (3 * i - 1) / 2\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `12`,\n right: `325`', /tmp/tmpwhq051am.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    loop {\n        let x = i * (3 * i - 1) / 2;\n        if x == n {\n            return i;\n        } else if x > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `325`', /tmp/tmpkmeem74h.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut n = n;\n    let mut i = 0;\n    while n > 0 {\n        i += 1;\n        n -= i;\n    }\n    n + i\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpfx7n_hms.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    loop {\n        let nth = i * (3 * i - 1) / 2;\n        if nth == n {\n            return i;\n        }\n        if nth > n {\n            return -1;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `325`', /tmp/tmp4iram_2b.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 1;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpi20le8v0.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpuc6e5s1w.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 1;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        return i;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpdiaeaik4.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpuc6e5s1w.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (1.0 + 8.0 * n).sqrt();\n    let x = x - 1.0;\n    let x = x / 2.0;\n    let x = x.ceil();\n    x as isize\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpdn0xh2w7.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpuc6e5s1w.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    loop {\n        sum += i;\n        if sum == n {\n            return i;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmplk58j2so.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpuc6e5s1w.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122599,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpv7oecyq4.rs:5:9\n  |\n2 | fn is_nonagonal(n: isize) -> isize {\n  |                 - help: consider making this binding mutable: `mut n`\n...\n5 |         n -= i;\n  |         ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmps4edyj0d.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    loop {\n        sum += i;\n        if sum == n {\n            return i;\n        }\n        if sum > n {\n            return -1;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpzp_8nj97.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    loop {\n        sum += i;\n        if sum == n {\n            return i;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmplk58j2so.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    loop {\n        k += 1;\n        i += 1;\n        j += 1;\n        if k == n {\n            return i;\n        }\n        k += 1;\n        i += 1;\n        j += 2;\n        if k == n {\n            return i;\n        }\n        k += 1;\n        i += 1;\n        j += 3;\n        if k == n {\n            return i;\n        }\n        k += 1;\n        i += 1;\n        j += 4;\n        if k == n {\n            return i;\n        }\n        k += 1;\n        i += 1;\n        j += 5;\n        if k == n {\n            return i;\n        }\n        k += 1;\n        i += 1;\n        j += 6;\n        if k == n {\n            return i;\n        }\n        k += 1;\n        i += 1;\n        j += 7;\n        if k == n {\n            return i;\n        }\n        k += 1;\n        i += 1;\n        j += 8;\n        if k == n {\n            return i;\n        }\n        k += 1;\n        i += 1;\n        j += 9;\n        if k == n {\n            return i;\n        }\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmplygw6aci.rs:66:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        j = i;\n        k = i;\n        sum = 0;\n        while k > 0 {\n            sum += j;\n            j += 1;\n            k -= 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `12`,\n right: `325`', /tmp/tmp1iedni8g.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmppugu_9wl.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    n * (3 * n - 2)\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `280`,\n right: `325`', /tmp/tmp5fq2claf.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut n = n;\n    let mut i = 0;\n    while n > 0 {\n        i += 1;\n        n -= i;\n    }\n    n + i\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpfx7n_hms.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    loop {\n        let nth = (i * (3 * i - 1)) / 2;\n        if nth == n {\n            return i;\n        }\n        if nth > n {\n            return -1;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `325`', /tmp/tmpc9gzdyty.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 1;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpi20le8v0.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122599,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpv7oecyq4.rs:5:9\n  |\n2 | fn is_nonagonal(n: isize) -> isize {\n  |                 - help: consider making this binding mutable: `mut n`\n...\n5 |         n -= i;\n  |         ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    -1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpo0hnl26u.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    n * (3 * n - 2)\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `280`,\n right: `325`', /tmp/tmp5fq2claf.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = 0;\n    let mut count = 0;\n    let mut sum = 0;\n    while count < n {\n        sum = (i + 1) * (i + 2) / 2 + (j + 1) * (j + 2) / 2 - 1;\n        if i == j {\n            i += 1;\n        } else {\n            j += 1;\n        }\n        count += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `35`,\n right: `325`', /tmp/tmp35c4stum.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmps4edyj0d.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut nth = 0;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 1) / 2;\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `12`,\n right: `325`', /tmp/tmpgxb3iuqe.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let nth = i * (3 * i - 1) / 2;\n        if nth == n {\n            return i;\n        } else if nth > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `325`', /tmp/tmpvkfg2ceu.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `325`', /tmp/tmpqns3gosp.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 1) / 2 < n {\n        i += 1;\n    }\n    if i * (3 * i - 1) / 2 == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `325`', /tmp/tmprrtrvymk.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122599,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpv7oecyq4.rs:5:9\n  |\n2 | fn is_nonagonal(n: isize) -> isize {\n  |                 - help: consider making this binding mutable: `mut n`\n...\n5 |         n -= i;\n  |         ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    loop {\n        sum += i;\n        if sum == n {\n            return i;\n        } else if sum > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmp0lp4bc7z.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    loop {\n        sum += i;\n        if sum == n {\n            return i;\n        } else if sum > n {\n            return -1;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmp3iyt6wbd.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    loop {\n        let nth = nth_nonagonal(i);\n        if nth == n {\n            return i;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `nth_nonagonal` in this scope\n --> /tmp/tmp29en8wmr.rs:5:19\n  |\n5 |         let nth = nth_nonagonal(i);\n  |                   ^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    -1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpo0hnl26u.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    loop {\n        i += 1;\n        sum += i;\n        if sum == n {\n            return i;\n        } else if sum > n {\n            return -1;\n        }\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpofye2ri8.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 1) / 2 < n {\n        i += 1;\n    }\n    i * (3 * i - 1) / 2\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `12`,\n right: `325`', /tmp/tmpwhq051am.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 1) / 2 < n {\n        i += 1;\n    }\n    i * (3 * i - 1) / 2\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `12`,\n right: `325`', /tmp/tmpwhq051am.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let nth = (i * (3 * i - 1)) / 2;\n        if nth == n {\n            return i;\n        } else if nth > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `325`', /tmp/tmppu22xt7_.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpr8flxakv.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmps4edyj0d.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpuc6e5s1w.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    loop {\n        i += 1;\n        let nth = i * (3 * i - 1) / 2;\n        if nth == n {\n            return i;\n        }\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    while n > 0 {\n        i += 1;\n        n -= i;\n    }\n    i\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpz0x917rn.rs:6:9\n  |\n2 | fn is_nonagonal(n: isize) -> isize {\n  |                 - help: consider making this binding mutable: `mut n`\n...\n6 |         n -= i;\n  |         ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpuc6e5s1w.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    loop {\n        sum += i;\n        if sum == n {\n            return i;\n        } else if sum > n {\n            return -1;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmp3iyt6wbd.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpuc6e5s1w.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmppugu_9wl.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n    let mut z = 0;\n    let mut aa = 0;\n    let mut bb = 0;\n    let mut cc = 0;\n    let mut dd = 0;\n    let mut ee = 0;\n    let mut ff = 0;\n    let mut gg = 0;\n    let mut hh = 0;\n    let mut ii = 0;\n    let mut jj = 0;\n    let mut kk = 0;\n    let mut ll = 0;\n    let mut mm = 0;\n    let mut nn = 0;\n    let mut oo = 0;\n    let mut pp = 0;\n    let mut qq = 0;\n    let mut rr = 0;\n    let mut ss = 0;\n    let mut tt = 0;\n    let mut uu = 0;\n    let mut vv = 0;\n    let mut ww = 0;\n    let mut xx = 0;\n    let mut yy = 0;\n    let mut zz = 0;\n    let mut aaa = 0;\n    let mut bbb = 0;\n    let mut ccc = 0;\n    let mut ddd = 0;\n    let mut eee = 0;\n    let mut fff = 0;\n    let mut ggg = 0;\n    let mut hhh = 0;\n    let mut iii = 0;\n    let mut jjj = 0;\n    let mut kkk = 0;\n    let mut lll = 0;\n    let mut mmm = 0;\n    let mut nnn = 0;\n    let mut ooo = 0;\n    let mut ppp = 0;\n    let mut qqq = 0\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "error: expected `;`, found `}`\n  --> /tmp/tmpv_b_a_5z.rs:62:20\n   |\n62 |     let mut qqq = 0\n   |                    ^ help: add `;` here\n63 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpv_b_a_5z.rs:2:30\n  |\n2 | fn is_nonagonal(n: isize) -> isize {\n  |    ------------              ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail or `return` expression\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    loop {\n        let x = i * (3 * i - 1) / 2;\n        if x == n {\n            return i;\n        }\n        if x > n {\n            return -1;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `325`', /tmp/tmpa0vwmrrg.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let nth = i * (3 * i - 1) / 2;\n        if nth == n {\n            return i;\n        }\n        if nth > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `325`', /tmp/tmphye5vzzr.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    loop {\n        let nth = i * (3 * i - 1) / 2;\n        if nth == n {\n            return i;\n        }\n        if nth > n {\n            return -1;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `325`', /tmp/tmp4iram_2b.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 1;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        return i;\n    }\n    -1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmp3qnxarqt.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpr947cvng.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    } else {\n        return 0;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpwmiuyse2.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    -1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpo0hnl26u.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmppugu_9wl.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 1;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        i\n    } else {\n        -1\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmp3ivoxg0k.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        j = i;\n        k = i;\n        sum = 0;\n        while k > 0 {\n            sum += j;\n            j += 1;\n            k -= 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `12`,\n right: `325`', /tmp/tmp1iedni8g.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while n > sum {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpu25i32hm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let nth = i * (3 * i - 1) / 2;\n        if nth == n {\n            return i;\n        } else if nth > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `325`', /tmp/tmpvkfg2ceu.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    n * (3 * n - 2)\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `280`,\n right: `325`', /tmp/tmp5fq2claf.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    if n <= 0 {\n        return 0;\n    }\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpdmxx7aeb.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let nth = (i * (3 * i - 1)) / 2;\n        if nth == n {\n            return i;\n        }\n        if nth > n {\n            return -1;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `325`', /tmp/tmp06aq1min.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        i\n    } else {\n        -1\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpwkx_eud0.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        return i;\n    }\n    -1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpdbm4ka24.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        return i;\n    }\n    -1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpdbm4ka24.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 1;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        i\n    } else {\n        -1\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmp3ivoxg0k.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    n * (3 * n - 2)\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `280`,\n right: `325`', /tmp/tmp5fq2claf.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpr947cvng.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 1) / 2 < n {\n        i += 1;\n    }\n    i * (3 * i - 1) / 2\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `12`,\n right: `325`', /tmp/tmpwhq051am.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        i - 1\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpwr3epnp4.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut nth = 0;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 1) / 2;\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `12`,\n right: `325`', /tmp/tmpgxb3iuqe.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        return i;\n    }\n    -1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpdbm4ka24.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmps4edyj0d.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmps4edyj0d.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut n = n;\n    let mut i = 0;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpeb1p7iu_.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    loop {\n        let val = i * (3 * i - 1) / 2;\n        if val == n {\n            return i;\n        } else if val > n {\n            return -1;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `325`', /tmp/tmp2ee94z2k.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122599,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpv7oecyq4.rs:5:9\n  |\n2 | fn is_nonagonal(n: isize) -> isize {\n  |                 - help: consider making this binding mutable: `mut n`\n...\n5 |         n -= i;\n  |         ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmps4edyj0d.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmps4edyj0d.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122599,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpv7oecyq4.rs:5:9\n  |\n2 | fn is_nonagonal(n: isize) -> isize {\n  |                 - help: consider making this binding mutable: `mut n`\n...\n5 |         n -= i;\n  |         ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let nth = i * (3 * i - 1) / 2;\n        if nth == n {\n            return i;\n        } else if nth > n {\n            return -1;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `325`', /tmp/tmpguq4vaxp.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    -1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpo0hnl26u.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = 0;\n    let mut count = 0;\n    while count < n {\n        if i == 0 {\n            i = 1;\n            j += 1;\n        } else {\n            i -= 1;\n            j += 1;\n        }\n        count += 1;\n    }\n    i + j\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp839dc4n0.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    let mut k = 1;\n    while k < n {\n        i += 1;\n        j += 1;\n        k += i + j;\n    }\n    k\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `11`,\n right: `325`', /tmp/tmpovbe98ms.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    if n == 1 {\n        return 1;\n    }\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122601,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpokp9yjba.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpuc6e5s1w.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpuc6e5s1w.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmp_7woyutm.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    -1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `325`', /tmp/tmpo0hnl26u.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    n * (3 * n - 2)\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `280`,\n right: `325`', /tmp/tmp5fq2claf.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1666122599,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpv7oecyq4.rs:5:9\n  |\n2 | fn is_nonagonal(n: isize) -> isize {\n  |                 - help: consider making this binding mutable: `mut n`\n...\n5 |         n -= i;\n  |         ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `325`', /tmp/tmpf2rsitsf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    }
  ]
}
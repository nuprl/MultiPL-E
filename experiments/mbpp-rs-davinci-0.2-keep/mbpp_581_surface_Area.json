{
  "name": "mbpp_581_surface_Area",
  "language": "rs",
  "prompt": "/// Write a python function to find the surface area of a square pyramid with a given base edge and height.\nfn surface_Area(b: isize, s: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_581_surface_Area.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = surface_Area;\n    assert_eq!(candidate(3, 4), 33);\n    assert_eq!(candidate(4, 5), 56);\n    assert_eq!(candidate(1, 2), 5);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let area = b * b + 2 * b * s;\n    area",
    "    let area = b * b + 2 * b * s;\n    area",
    "    let area = b * b + 2 * b * s;\n    return area;",
    "    let area = b * b + 2 * b * s;\n    return area;",
    "    let area: isize = b * b + 2 * b * s;\n    return area;",
    "    let area = b * b + 2 * b * s.sqrt();\n    area as isize",
    "    let area = b * b + 2 * b * s;\n    return area;",
    "    let area = b * b + 2 * b * s.sqrt();\n    area as isize",
    "    return (b * b) + (2 * b * s);",
    "    let area = b * b + 2 * b * s;\n    return area;",
    "    let area = (b * b) + (2 * b * s.sqrt());\n    area as isize",
    "    let area = b * b + 2 * b * s;\n    return area;",
    "    b * b + 2 * b * s",
    "    let a = (b * b) + (4 * b * s);\n    return a;",
    "    let area = b * b + 2 * b * s.pow(2).sqrt();\n    area as isize",
    "    let area = b * b + 2 * b * s;\n    return area;",
    "    let area = b * b + 2 * b * s;\n    area",
    "    let area = b * b + 2 * b * s;\n    return area;",
    "    let area = b * b + 2 * b * s;\n    area",
    "    let mut area = 0;\n    area = b * s + (b * b);\n    area"
  ]
}
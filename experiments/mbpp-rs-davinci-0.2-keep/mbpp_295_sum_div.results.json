{
  "name": "mbpp_295_sum_div",
  "language": "rs",
  "prompt": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_295_sum_div.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..(number + 1) {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `15`,\n right: `7`', /tmp/tmpneyqr6yo.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    let mut i = 1;\n    while i <= number {\n        if number % i == 0 {\n            sum += i;\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `15`,\n right: `7`', /tmp/tmpq5cdplht.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
      "timestamp": 1665510143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
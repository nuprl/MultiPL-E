{
  "name": "mbpp_776_count_vowels",
  "language": "rs",
  "prompt": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_776_count_vowels.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    for c in iter {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpkedv4dkw.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp103wt1r1.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp103wt1r1.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmppzocyjsa.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while let Some(c) = curr {\n        if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp_c734b0x.rs:9:12\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp_c734b0x.rs:9:46\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                              ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp_c734b0x.rs:9:91\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev_char = ' ';\n    let mut next_char = ' ';\n    for (i, c) in test_str.chars().enumerate() {\n        if i > 0 {\n            prev_char = test_str.chars().nth(i - 1).unwrap();\n        }\n        if i < test_str.len() - 1 {\n            next_char = test_str.chars().nth(i + 1).unwrap();\n        }\n        if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpy93lh_s8.rs:13:12\n   |\n13 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpy93lh_s8.rs:13:28\n   |\n13 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpy93lh_s8.rs:13:51\n   |\n13 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if let Some(p) = prev {\n            if is_vowel(p) && is_vowel(c) {\n                count += 1;\n            }\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpmnrua1bu.rs:8:16\n  |\n8 |             if is_vowel(p) && is_vowel(c) {\n  |                ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpmnrua1bu.rs:8:31\n  |\n8 |             if is_vowel(p) && is_vowel(c) {\n  |                               ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpz6rariil.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    for (i, c) in test_str.chars().enumerate() {\n        if vowels.contains(&c) {\n            if i > 0 && vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n            if i < test_str.len() - 1 && vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `7`', /tmp/tmp5vvs5llq.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut vowels = HashSet::new();\n    vowels.insert('a');\n    vowels.insert('e');\n    vowels.insert('i');\n    vowels.insert('o');\n    vowels.insert('u');\n    for (i, c) in test_str.chars().enumerate() {\n        if vowels.contains(&c) {\n            if i > 0 && vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n            if i < test_str.len() - 1 && vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpo2nugvp6.rs:4:22\n  |\n4 |     let mut vowels = HashSet::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next().unwrap();\n    for c in chars {\n        if vowels.contains(&c) || vowels.contains(&prev) {\n            count += 1;\n        }\n        prev = c;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmpr1ju5jdo.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev_char = ' ';\n    for c in test_str.chars() {\n        if is_vowel(c) {\n            if is_vowel(prev_char) {\n                count += 1;\n            }\n        }\n        prev_char = c;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpg8ebz_fw.rs:6:12\n  |\n6 |         if is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpg8ebz_fw.rs:7:16\n  |\n7 |             if is_vowel(prev_char) {\n  |                ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp8de16ia9.rs:9:12\n  |\n9 |         if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp8de16ia9.rs:9:39\n  |\n9 |         if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp8de16ia9.rs:9:12\n  |\n9 |         if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp8de16ia9.rs:9:39\n  |\n9 |         if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(c) && is_vowel(*prev) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpo2rjrc5o.rs:7:12\n  |\n7 |         if is_vowel(c) && is_vowel(*prev) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpo2rjrc5o.rs:7:27\n  |\n7 |         if is_vowel(c) && is_vowel(*prev) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror[E0614]: type `Option<char>` cannot be dereferenced\n --> /tmp/tmpo2rjrc5o.rs:7:36\n  |\n7 |         if is_vowel(c) && is_vowel(*prev) {\n  |                                    ^^^^^\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0425, E0614.\nFor more information about an error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    while let Some(c) = curr {\n        if is_vowel(prev) || is_vowel(curr) {\n            count += 1;\n        }\n        prev = curr;\n        curr = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmplryjs4oz.rs:8:12\n  |\n8 |         if is_vowel(prev) || is_vowel(curr) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmplryjs4oz.rs:8:30\n  |\n8 |         if is_vowel(prev) || is_vowel(curr) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    let mut next = iter.next();\n    while let Some(c) = curr {\n        if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpsazi9fd6.rs:9:12\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpsazi9fd6.rs:9:46\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                              ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpsazi9fd6.rs:9:91\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    while curr.is_some() {\n        if vowels.contains(&curr.unwrap()) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpojevxtl9.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev_char = ' ';\n    for c in test_str.chars() {\n        if is_vowel(c) && is_vowel(prev_char) {\n            count += 1;\n        }\n        prev_char = c;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp68mch1yl.rs:6:12\n  |\n6 |         if is_vowel(c) && is_vowel(prev_char) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp68mch1yl.rs:6:27\n  |\n6 |         if is_vowel(c) && is_vowel(prev_char) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut test_str = test_str.chars();\n    let mut prev = test_str.next();\n    for c in test_str {\n        if prev.is_some() && is_vowel(c) && is_vowel(*prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp20gaaamp.rs:7:30\n  |\n7 |         if prev.is_some() && is_vowel(c) && is_vowel(*prev.unwrap()) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp20gaaamp.rs:7:45\n  |\n7 |         if prev.is_some() && is_vowel(c) && is_vowel(*prev.unwrap()) {\n  |                                             ^^^^^^^^ not found in this scope\n\nerror[E0614]: type `char` cannot be dereferenced\n --> /tmp/tmp20gaaamp.rs:7:54\n  |\n7 |         if prev.is_some() && is_vowel(c) && is_vowel(*prev.unwrap()) {\n  |                                                      ^^^^^^^^^^^^^^\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0425, E0614.\nFor more information about an error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    for c in iter {\n        if prev.is_some() && is_vowel(prev.unwrap()) && is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpt7p4si2d.rs:7:30\n  |\n7 |         if prev.is_some() && is_vowel(prev.unwrap()) && is_vowel(c) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpt7p4si2d.rs:7:57\n  |\n7 |         if prev.is_some() && is_vowel(prev.unwrap()) && is_vowel(c) {\n  |                                                         ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if vowels.contains(&curr.unwrap()) && (prev.is_some() && vowels.contains(&prev.unwrap()) || next.is_some() && vowels.contains(&next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `7`', /tmp/tmpmkd45cuw.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    let mut curr_char = chars.next();\n    let mut next_char = chars.next();\n    while curr_char != None {\n        if is_vowel(curr_char.unwrap()) && (prev_char != None && is_vowel(prev_char.unwrap()) || next_char != None && is_vowel(next_char.unwrap())) {\n            count += 1;\n        }\n        prev_char = curr_char;\n        curr_char = next_char;\n        next_char = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fndn39y.rs:9:12\n  |\n9 | ...   if is_vowel(curr_char.unwrap()) && (prev_char != None && is_vowel(prev_char.unwrap()) || next_char != None && is_vowel(next_char.un...\n  |          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fndn39y.rs:9:66\n  |\n9 | ...   if is_vowel(curr_char.unwrap()) && (prev_char != None && is_vowel(prev_char.unwrap()) || next_char != None && is_vowel(next_char.un...\n  |                                                                ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fndn39y.rs:9:119\n  |\n9 | ..._vowel(prev_char.unwrap()) || next_char != None && is_vowel(next_char.unwrap())) {\n  |                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next.is_some() {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpckf55mop.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpckf55mop.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpz6rariil.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        } else if i == test_str.len() - 1 {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n        } else {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap())\n                || vowels.contains(&test_str.chars().nth(i + 1).unwrap())\n            {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmpx7jt844_.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpz6rariil.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp103wt1r1.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp103wt1r1.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while let Some(c) = curr {\n        if is_vowel(c) && (prev.map_or(false, is_vowel) || next.map_or(false, is_vowel)) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmppcye0wjo.rs:9:12\n  |\n9 |         if is_vowel(c) && (prev.map_or(false, is_vowel) || next.map_or(false, is_vowel)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `is_vowel` in this scope\n --> /tmp/tmppcye0wjo.rs:9:47\n  |\n9 |         if is_vowel(c) && (prev.map_or(false, is_vowel) || next.map_or(false, is_vowel)) {\n  |                                               ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `is_vowel` in this scope\n --> /tmp/tmppcye0wjo.rs:9:79\n  |\n9 |         if is_vowel(c) && (prev.map_or(false, is_vowel) || next.map_or(false, is_vowel)) {\n  |                                                                               ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpz6rariil.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut curr_char = chars.next();\n    let mut next_char = chars.next();\n    while curr_char != None {\n        if vowels.contains(&curr_char.unwrap()) && vowels.contains(&next_char.unwrap_or(' ')) {\n            count += 1;\n        }\n        curr_char = next_char;\n        next_char = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmp61dhoflf.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if prev.unwrap().is_vowel() || c.is_vowel() {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0599]: no method named `is_vowel` found for type `char` in the current scope\n --> /tmp/tmpfdb3e38v.rs:7:26\n  |\n7 |         if prev.unwrap().is_vowel() || c.is_vowel() {\n  |                          ^^^^^^^^ method not found in `char`\n\nerror[E0599]: no method named `is_vowel` found for type `char` in the current scope\n --> /tmp/tmpfdb3e38v.rs:7:42\n  |\n7 |         if prev.unwrap().is_vowel() || c.is_vowel() {\n  |                                          ^^^^^^^^ method not found in `char`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n\n    while let Some(c) = curr {\n        if is_vowel(prev) || is_vowel(Some(c)) {\n            count += 1;\n        }\n        prev = curr;\n        curr = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpyvfwr4hi.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(Some(c)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpyvfwr4hi.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(Some(c)) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    let mut next = iter.next();\n    while let Some(c) = curr {\n        if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpsazi9fd6.rs:9:12\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpsazi9fd6.rs:9:46\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                              ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpsazi9fd6.rs:9:91\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next().unwrap();\n    for c in chars {\n        if vowels.contains(&prev) || vowels.contains(&c) {\n            count += 1;\n        }\n        prev = c;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmpzi6_4_6w.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp8de16ia9.rs:9:12\n  |\n9 |         if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp8de16ia9.rs:9:39\n  |\n9 |         if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp8de16ia9.rs:9:12\n  |\n9 |         if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp8de16ia9.rs:9:39\n  |\n9 |         if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev) || is_vowel(&c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fz17syo.rs:7:12\n  |\n7 |         if is_vowel(prev) || is_vowel(&c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fz17syo.rs:7:30\n  |\n7 |         if is_vowel(prev) || is_vowel(&c) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoplfuysr.rs:9:12\n  |\n9 |         if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoplfuysr.rs:9:39\n  |\n9 |         if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    for (i, c) in test_str.chars().enumerate() {\n        if vowels.contains(&c) {\n            if i > 0 && vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n            if i < test_str.len() - 1 && vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `7`', /tmp/tmpob8u8pbi.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next().unwrap();\n    for c in chars {\n        if vowels.contains(&prev) || vowels.contains(&c) {\n            count += 1;\n        }\n        prev = c;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmpn539k7z2.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    while let Some(c) = curr {\n        if vowels.contains(&c) {\n            if let Some(p) = prev {\n                if vowels.contains(&p) {\n                    count += 1;\n                }\n            }\n            if let Some(n) = iter.next() {\n                if vowels.contains(&n) {\n                    count += 1;\n                }\n            }\n        }\n        prev = curr;\n        curr = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `7`', /tmp/tmpfttb6i8q.rs:29:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut vowels = HashSet::new();\n    vowels.insert('a');\n    vowels.insert('e');\n    vowels.insert('i');\n    vowels.insert('o');\n    vowels.insert('u');\n    for (i, c) in test_str.chars().enumerate() {\n        if vowels.contains(&c) {\n            if i > 0 && vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n            if i < test_str.len() - 1 && vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpo2nugvp6.rs:4:22\n  |\n4 |     let mut vowels = HashSet::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoplfuysr.rs:9:12\n  |\n9 |         if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoplfuysr.rs:9:39\n  |\n9 |         if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoe9ucc68.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoe9ucc68.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    let mut prev = ' ';\n    for c in test_str.chars() {\n        if vowels.contains(&c) && vowels.contains(&prev) {\n            count += 1;\n        }\n        prev = c;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmprmxvy7yk.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next.is_some() {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpckf55mop.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpckf55mop.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    let mut next = iter.next();\n    while next.is_some() {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmppjadtvc_.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmppjadtvc_.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    for c in chars {\n        if is_vowel(prev_char) && is_vowel(Some(c)) {\n            count += 1;\n        }\n        prev_char = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpi_sext7s.rs:7:12\n  |\n7 |         if is_vowel(prev_char) && is_vowel(Some(c)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpi_sext7s.rs:7:35\n  |\n7 |         if is_vowel(prev_char) && is_vowel(Some(c)) {\n  |                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = 1;\n    let mut k = 2;\n    let mut l = 3;\n    let mut m = 4;\n    let mut n = 5;\n    let mut o = 6;\n    let mut p = 7;\n    let mut q = 8;\n    let mut r = 9;\n    let mut s = 10;\n    let mut t = 11;\n    let mut u = 12;\n    let mut v = 13;\n    let mut w = 14;\n    let mut x = 15;\n    let mut y = 16;\n    let mut z = 17;\n    let mut a = 18;\n    let mut e = 19;\n    let mut i = 20;\n    let mut o = 21;\n    let mut u = 22;\n    let mut y = 23;\n    let mut a = 24;\n    let mut e = 25;\n    let mut i = 26;\n    let mut o = 27;\n    let mut u = 28;\n    let mut y = 29;\n    let mut a = 30;\n    let mut e = 31;\n    let mut i = 32;\n    let mut o = 33;\n    let mut u = 34;\n    let mut y = 35;\n    let mut a = 36;\n    let mut e = 37;\n    let mut i = 38;\n    let mut o = 39;\n    let mut u = 40;\n    let mut y = 41;\n    let mut a = 42;\n    let mut e = 43;\n    let mut i = 44;\n    let mut o = 45;\n    let mut u = 46;\n    let mut y = 47;\n    let mut a = 48;\n    let mut e = 49;\n    let mut i = 50;\n    let mut o = 51;\n    let mut u = 52;\n    let mut y = 53;\n    let mut a = 54;\n    let mut e = 55;\n    let mut i = 56;\n    let mut o = 57;\n    let mut u = 58;\n    let mut y = 59;\n    let mut a = 60;\n    let mut e = 61;\n    let mut i = 62;\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmp382owe4n.rs:2:38\n  |\n2 | fn count_vowels(test_str: String) -> isize {\n  |    ------------                      ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail or `return` expression\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    loop {\n        let c = chars.next();\n        if c.is_none() {\n            break;\n        }\n        let c = c.unwrap();\n        if vowels.contains(&c) {\n            count += 1;\n        }\n        let c = chars.next();\n        if c.is_none() {\n            break;\n        }\n        let c = c.unwrap();\n        if vowels.contains(&c) {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `7`', /tmp/tmpbpxj1ym_.rs:29:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    for c in chars {\n        if is_vowel(prev_char) || is_vowel(Some(c)) {\n            count += 1;\n        }\n        prev_char = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2nhol3yk.rs:7:12\n  |\n7 |         if is_vowel(prev_char) || is_vowel(Some(c)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2nhol3yk.rs:7:35\n  |\n7 |         if is_vowel(prev_char) || is_vowel(Some(c)) {\n  |                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if prev.unwrap().is_vowel() || c.is_vowel() {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0599]: no method named `is_vowel` found for type `char` in the current scope\n --> /tmp/tmpfdb3e38v.rs:7:26\n  |\n7 |         if prev.unwrap().is_vowel() || c.is_vowel() {\n  |                          ^^^^^^^^ method not found in `char`\n\nerror[E0599]: no method named `is_vowel` found for type `char` in the current scope\n --> /tmp/tmpfdb3e38v.rs:7:42\n  |\n7 |         if prev.unwrap().is_vowel() || c.is_vowel() {\n  |                                          ^^^^^^^^ method not found in `char`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let mut vowels: HashSet<char> = HashSet::new();\n    vowels.insert('a');\n    vowels.insert('e');\n    vowels.insert('i');\n    vowels.insert('o');\n    vowels.insert('u');\n\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for curr in chars {\n        if prev.is_some() && vowels.contains(&prev.unwrap()) && vowels.contains(&curr) {\n            count += 1;\n        }\n        prev = Some(curr);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpmckugp31.rs:4:21\n  |\n4 |     let mut vowels: HashSet<char> = HashSet::new();\n  |                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpmckugp31.rs:4:37\n  |\n4 |     let mut vowels: HashSet<char> = HashSet::new();\n  |                                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev) || is_vowel(&c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fz17syo.rs:7:12\n  |\n7 |         if is_vowel(prev) || is_vowel(&c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fz17syo.rs:7:30\n  |\n7 |         if is_vowel(prev) || is_vowel(&c) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) || vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmpum8y3h49.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    let mut next = iter.next();\n    while next.is_some() {\n        if prev.is_some() && curr.is_some() && next.is_some() {\n            if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n                count += 1;\n            }\n        }\n        prev = curr;\n        curr = next;\n        next = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpr5vp10kd.rs:10:16\n   |\n10 |             if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n   |                ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpr5vp10kd.rs:10:43\n   |\n10 |             if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n   |                                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    let mut next = iter.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpj9d39ce8.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpj9d39ce8.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next.is_some() {\n        if is_vowel(curr.unwrap()) && (is_vowel(prev.unwrap()) || is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpg50brznz.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (is_vowel(prev.unwrap()) || is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpg50brznz.rs:9:40\n  |\n9 |         if is_vowel(curr.unwrap()) && (is_vowel(prev.unwrap()) || is_vowel(next.unwrap())) {\n  |                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpg50brznz.rs:9:67\n  |\n9 |         if is_vowel(curr.unwrap()) && (is_vowel(prev.unwrap()) || is_vowel(next.unwrap())) {\n  |                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    let mut next = iter.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpj9d39ce8.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpj9d39ce8.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    while let Some(c) = curr {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmp67wtttyl.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next().unwrap();\n    for c in chars {\n        if vowels.contains(&prev) || vowels.contains(&c) {\n            count += 1;\n        }\n        prev = c;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmpzi6_4_6w.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123202,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:12\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:31\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                               ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:49\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                                                 ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while let Some(c) = curr {\n        if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp_c734b0x.rs:9:12\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp_c734b0x.rs:9:46\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                              ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp_c734b0x.rs:9:91\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 && vowels.contains(&c) {\n            count += 1;\n        } else if i == test_str.len() - 1 && vowels.contains(&c) {\n            count += 1;\n        } else if i > 0 && i < test_str.len() - 1 && vowels.contains(&c) && vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmp5p5yjd72.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123202,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:12\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:31\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                               ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:49\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                                                 ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpz6rariil.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut test_str = test_str.chars();\n    let mut prev = test_str.next();\n    for c in test_str {\n        if is_vowel(c) && is_vowel(prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpovq4khid.rs:7:12\n  |\n7 |         if is_vowel(c) && is_vowel(prev.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpovq4khid.rs:7:27\n  |\n7 |         if is_vowel(c) && is_vowel(prev.unwrap()) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while let (Some(p), Some(c), Some(n)) = (prev, curr, next) {\n        if is_vowel(p) || is_vowel(n) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfq9rorgk.rs:9:12\n  |\n9 |         if is_vowel(p) || is_vowel(n) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfq9rorgk.rs:9:27\n  |\n9 |         if is_vowel(p) || is_vowel(n) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut next = chars.next();\n    while let Some(c) = next {\n        if vowels.contains(&c) && prev.map_or(false, |p| vowels.contains(&p)) {\n            count += 1;\n        }\n        prev = Some(c);\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmp485rjrn4.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmppzocyjsa.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next.is_some() {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpckf55mop.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpckf55mop.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    for c in chars {\n        if is_vowel(prev_char) && is_vowel(Some(c)) {\n            count += 1;\n        }\n        prev_char = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpi_sext7s.rs:7:12\n  |\n7 |         if is_vowel(prev_char) && is_vowel(Some(c)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpi_sext7s.rs:7:35\n  |\n7 |         if is_vowel(prev_char) && is_vowel(Some(c)) {\n  |                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    let mut next = iter.next();\n    while next != None {\n        if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpi0b85qp3.rs:9:12\n  |\n9 |         if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpi0b85qp3.rs:9:39\n  |\n9 |         if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev_char = ' ';\n    let mut next_char = ' ';\n    let mut index = 0;\n    let mut test_str = test_str.to_lowercase();\n    let mut test_str: Vec<char> = test_str.chars().collect();\n    for c in test_str.clone() {\n        if index == 0 {\n            next_char = test_str[index + 1];\n        } else if index == test_str.len() - 1 {\n            prev_char = test_str[index - 1];\n        } else {\n            prev_char = test_str[index - 1];\n            next_char = test_str[index + 1];\n        }\n        if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n            count += 1;\n        }\n        index += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpo1u4xxgy.rs:18:12\n   |\n18 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpo1u4xxgy.rs:18:28\n   |\n18 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpo1u4xxgy.rs:18:51\n   |\n18 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev_char = ' ';\n    let mut next_char = ' ';\n    let mut chars = test_str.chars();\n    let mut iter = chars.next();\n    while iter.is_some() {\n        let curr_char = iter.unwrap();\n        iter = chars.next();\n        if iter.is_some() {\n            next_char = iter.unwrap();\n        } else {\n            next_char = ' ';\n        }\n        if is_vowel(curr_char) && (is_vowel(prev_char) || is_vowel(next_char)) {\n            count += 1;\n        }\n        prev_char = curr_char;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpjlazwxiw.rs:16:12\n   |\n16 |         if is_vowel(curr_char) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpjlazwxiw.rs:16:36\n   |\n16 |         if is_vowel(curr_char) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                                    ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpjlazwxiw.rs:16:59\n   |\n16 |         if is_vowel(curr_char) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                                                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev = ' ';\n    let mut next = ' ';\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            next = test_str.chars().nth(i + 1).unwrap();\n        } else if i == test_str.len() - 1 {\n            prev = test_str.chars().nth(i - 1).unwrap();\n        } else {\n            prev = test_str.chars().nth(i - 1).unwrap();\n            next = test_str.chars().nth(i + 1).unwrap();\n        }\n        if is_vowel(c) && (is_vowel(prev) || is_vowel(next)) {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp639d0y9n.rs:15:12\n   |\n15 |         if is_vowel(c) && (is_vowel(prev) || is_vowel(next)) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp639d0y9n.rs:15:28\n   |\n15 |         if is_vowel(c) && (is_vowel(prev) || is_vowel(next)) {\n   |                            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp639d0y9n.rs:15:46\n   |\n15 |         if is_vowel(c) && (is_vowel(prev) || is_vowel(next)) {\n   |                                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if prev.is_some() && is_vowel(prev.unwrap()) && is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpcc6qhzwg.rs:7:30\n  |\n7 |         if prev.is_some() && is_vowel(prev.unwrap()) && is_vowel(c) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpcc6qhzwg.rs:7:57\n  |\n7 |         if prev.is_some() && is_vowel(prev.unwrap()) && is_vowel(c) {\n  |                                                         ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    let mut curr_char = chars.next();\n    let mut next_char = chars.next();\n    while next_char != None {\n        if is_vowel(prev_char) || is_vowel(next_char) {\n            count += 1;\n        }\n        prev_char = curr_char;\n        curr_char = next_char;\n        next_char = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp0npehrfh.rs:9:12\n  |\n9 |         if is_vowel(prev_char) || is_vowel(next_char) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp0npehrfh.rs:9:35\n  |\n9 |         if is_vowel(prev_char) || is_vowel(next_char) {\n  |                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev_char = ' ';\n    let mut next_char = ' ';\n    let mut index = 0;\n    let mut chars = test_str.chars();\n    while let Some(c) = chars.next() {\n        if index == 0 {\n            next_char = chars.next().unwrap();\n        } else if index == test_str.len() - 1 {\n            prev_char = test_str.chars().nth(index - 1).unwrap();\n        } else {\n            prev_char = test_str.chars().nth(index - 1).unwrap();\n            next_char = chars.next().unwrap();\n        }\n        if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n            count += 1;\n        }\n        index += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp61pio1nm.rs:17:12\n   |\n17 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp61pio1nm.rs:17:28\n   |\n17 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp61pio1nm.rs:17:51\n   |\n17 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 && vowels.contains(&c) {\n            count += 1;\n        } else if i == test_str.len() - 1 && vowels.contains(&c) {\n            count += 1;\n        } else if vowels.contains(&c) && vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n            count += 1;\n        } else if vowels.contains(&c) && vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `7`', /tmp/tmpk2tc4jxz.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(c) && is_vowel(prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmplsybfbon.rs:7:12\n  |\n7 |         if is_vowel(c) && is_vowel(prev.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmplsybfbon.rs:7:27\n  |\n7 |         if is_vowel(c) && is_vowel(prev.unwrap()) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoplfuysr.rs:9:12\n  |\n9 |         if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoplfuysr.rs:9:39\n  |\n9 |         if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if prev.unwrap().is_vowel() || c.is_vowel() {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0599]: no method named `is_vowel` found for type `char` in the current scope\n --> /tmp/tmpfdb3e38v.rs:7:26\n  |\n7 |         if prev.unwrap().is_vowel() || c.is_vowel() {\n  |                          ^^^^^^^^ method not found in `char`\n\nerror[E0599]: no method named `is_vowel` found for type `char` in the current scope\n --> /tmp/tmpfdb3e38v.rs:7:42\n  |\n7 |         if prev.unwrap().is_vowel() || c.is_vowel() {\n  |                                          ^^^^^^^^ method not found in `char`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let mut prev_char: char = ' ';\n    let mut next_char: char = ' ';\n    let mut index: usize = 0;\n    let mut index_next: usize = 0;\n    for c in test_str.chars() {\n        if index == 0 {\n            prev_char = ' ';\n        } else {\n            prev_char = test_str.chars().nth(index - 1).unwrap();\n        }\n        if index == test_str.len() - 1 {\n            next_char = ' ';\n        } else {\n            index_next = index + 1;\n            next_char = test_str.chars().nth(index_next).unwrap();\n        }\n        if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n            count += 1;\n        }\n        index += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp5f12azrt.rs:20:12\n   |\n20 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp5f12azrt.rs:20:28\n   |\n20 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp5f12azrt.rs:20:51\n   |\n20 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) &&\n            (prev == None || is_vowel(prev.unwrap())) &&\n            (next == None || is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpc4vf7cmb.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) &&\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpc4vf7cmb.rs:10:30\n   |\n10 |             (prev == None || is_vowel(prev.unwrap())) &&\n   |                              ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpc4vf7cmb.rs:11:30\n   |\n11 |             (next == None || is_vowel(next.unwrap())) {\n   |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let mut i: usize = 0;\n    let mut j: usize = 1;\n    let mut k: usize = 2;\n    let mut l: usize = 3;\n    let mut m: usize = 4;\n    let mut n: usize = 5;\n    let mut o: usize = 6;\n    let mut p: usize = 7;\n    let mut q: usize = 8;\n    let mut r: usize = 9;\n    let mut s: usize = 10;\n    let mut t: usize = 11;\n    let mut u: usize = 12;\n    let mut v: usize = 13;\n    let mut w: usize = 14;\n    let mut x: usize = 15;\n    let mut y: usize = 16;\n    let mut z: usize = 17;\n    let mut a: usize = 18;\n    let mut e: usize = 19;\n    let mut i: usize = 20;\n    let mut o: usize = 21;\n    let mut u: usize = 22;\n    let mut test_str: Vec<char> = test_str.chars().collect();\n    while i < test_str.len() {\n        if test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u' {\n            if test_str[j] == 'a' || test_str[j] == 'e' || test_str[j] == 'i' || test_str[j] == 'o' || test_str[j] == 'u' {\n                count += 1;\n            }\n            if test_str[k] == 'a' || test_str[k] == 'e' || test_str[k] == 'i' || test_str[k] == 'o' || test_str[k] == 'u' {\n                count += 1;\n            }\n            if test_str[l] == 'a' || test_str[l] == '\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0762]: unterminated character literal\n  --> /tmp/tmp8kjak6h2.rs:36:53\n   |\n36 |             if test_str[l] == 'a' || test_str[l] == '\n   |                                                     ^\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0762`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev_char = ' ';\n    let mut next_char = ' ';\n    let mut iter = test_str.chars();\n    let mut curr_char = iter.next();\n    while curr_char != None {\n        next_char = iter.next().unwrap_or(' ');\n        if is_vowel(curr_char.unwrap()) && (is_vowel(prev_char) || is_vowel(next_char)) {\n            count += 1;\n        }\n        prev_char = curr_char.unwrap();\n        curr_char = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp5z546hb9.rs:10:12\n   |\n10 |         if is_vowel(curr_char.unwrap()) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp5z546hb9.rs:10:45\n   |\n10 |         if is_vowel(curr_char.unwrap()) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                                             ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp5z546hb9.rs:10:68\n   |\n10 |         if is_vowel(curr_char.unwrap()) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                                                                    ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if prev.unwrap().is_vowel() || c.is_vowel() {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0599]: no method named `is_vowel` found for type `char` in the current scope\n --> /tmp/tmpfdb3e38v.rs:7:26\n  |\n7 |         if prev.unwrap().is_vowel() || c.is_vowel() {\n  |                          ^^^^^^^^ method not found in `char`\n\nerror[E0599]: no method named `is_vowel` found for type `char` in the current scope\n --> /tmp/tmpfdb3e38v.rs:7:42\n  |\n7 |         if prev.unwrap().is_vowel() || c.is_vowel() {\n  |                                          ^^^^^^^^ method not found in `char`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let mut i: usize = 0;\n    let mut j: usize = 1;\n    let mut k: usize = 2;\n    let mut l: usize = 3;\n    let mut m: usize = 4;\n    let mut n: usize = 5;\n    let mut o: usize = 6;\n    let mut p: usize = 7;\n    let mut q: usize = 8;\n    let mut r: usize = 9;\n    let mut s: usize = 10;\n    let mut t: usize = 11;\n    let mut u: usize = 12;\n    let mut v: usize = 13;\n    let mut w: usize = 14;\n    let mut x: usize = 15;\n    let mut y: usize = 16;\n    let mut z: usize = 17;\n    let mut a: usize = 18;\n    let mut e: usize = 19;\n    let mut i: usize = 20;\n    let mut o: usize = 21;\n    let mut u: usize = 22;\n    let mut test_str_vec: Vec<char> = test_str.chars().collect();\n    let mut test_str_len: usize = test_str_vec.len();\n    while i < test_str_len {\n        if test_str_vec[i] == 'a' {\n            if test_str_vec[j] == 'a' || test_str_vec[j] == 'e' || test_str_vec[j] == 'i' || test_str_vec[j] == 'o' || test_str_vec[j] == 'u' {\n                count += 1;\n            }\n            if test_str_vec[k] == 'a' || test_str_vec[k] == 'e' || test_str_vec[k] == 'i' || test_str_vec[k] == 'o' || test_str_vec[k] == 'u' {\n                count += 1;\n            }\n            if test_str_vec[l] == 'a' || test_str_vec[\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmp1j1eisqo.rs:45:3\n   |\n2  | fn count_vowels(test_str: String) -> isize {\n   |                                            - unclosed delimiter\n...\n29 |     while i < test_str_len {\n   |                            - unclosed delimiter\n30 |         if test_str_vec[i] == 'a' {\n   |                                   - this delimiter might not be properly closed...\n...\n38 | }\n   | - ...as it matches this but it has different indentation\n...\n45 | }\n   |   ^\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmp1j1eisqo.rs:37:54\n   |\n2  | fn count_vowels(test_str: String) -> isize {\n   |                                            - closing delimiter possibly meant for this\n...\n37 |             if test_str_vec[l] == 'a' || test_str_vec[\n   |                                                      ^ unclosed delimiter\n38 | }\n   | ^ mismatched closing delimiter\n\nerror: expected expression, found `]`\n  --> /tmp/tmp1j1eisqo.rs:38:1\n   |\n38 | }\n   | ^ expected expression\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1j1eisqo.rs:29:5\n   |\n2  |   fn count_vowels(test_str: String) -> isize {\n   |                                        ----- expected `isize` because of return type\n...\n29 | /     while i < test_str_len {\n30 | |         if test_str_vec[i] == 'a' {\n31 | |             if test_str_vec[j] == 'a' || test_str_vec[j] == 'e' || test_str_vec[j] == 'i' || test_str_vec[j] == 'o' || test_str_vec[j] ==...\n32 | |                 count += 1;\n...  |\n44 | |     assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n45 | | }\n   | |__^ expected `isize`, found `()`\n\nerror: aborting due to 4 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpqpw_wbpc.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    while let Some(c) = curr {\n        if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || iter.peek().is_some() && is_vowel(iter.peek().unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpn4al6spj.rs:8:12\n  |\n8 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || iter.peek().is_some() && is_vowel(iter.peek().unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpn4al6spj.rs:8:46\n  |\n8 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || iter.peek().is_some() && is_vowel(iter.peek().unwrap())) {\n  |                                              ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpn4al6spj.rs:8:98\n  |\n8 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || iter.peek().is_some() && is_vowel(iter.peek().unwrap())) {\n  |                                                                                                  ^^^^^^^^ not found in this scope\n\nerror[E0599]: no method named `peek` found for struct `Chars` in the current scope\n --> /tmp/tmpn4al6spj.rs:8:78\n  |\n8 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || iter.peek().is_some() && is_vowel(iter.peek().unwrap())) {\n  |                                                                              ^^^^ method not found in `Chars<'_>`\n\nerror[E0599]: no method named `peek` found for struct `Chars` in the current scope\n --> /tmp/tmpn4al6spj.rs:8:112\n  |\n8 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || iter.peek().is_some() && is_vowel(iter.peek().unwrap())) {\n  |                                                                                                                ^^^^ method not found in `Chars<'_>`\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0425, E0599.\nFor more information about an error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123202,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:12\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:31\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                               ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:49\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                                                 ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = 1;\n    let mut k = 2;\n    let mut l = 3;\n    let mut m = 4;\n    let mut n = 5;\n    let mut o = 6;\n    let mut p = 7;\n    let mut q = 8;\n    let mut r = 9;\n    let mut s = 10;\n    let mut t = 11;\n    let mut u = 12;\n    let mut v = 13;\n    let mut w = 14;\n    let mut x = 15;\n    let mut y = 16;\n    let mut z = 17;\n    let mut a = 18;\n    let mut e = 19;\n    let mut i = 20;\n    let mut o = 21;\n    let mut u = 22;\n    let mut test_str = test_str.to_lowercase();\n    let test_str = test_str.as_str();\n    let test_str = test_str.as_bytes();\n    let mut test_str = test_str.to_vec();\n    let mut test_str_len = test_str.len();\n    test_str_len = test_str_len - 1;\n    let mut test_str_len = test_str_len as isize;\n    let mut test_str_len = test_str_len - 1;\n    let mut test_str_len = test_str_len as usize;\n    let mut test_str_len = test_str_len - 1;\n    let mut test_str_len = test_str_len as isize;\n    let mut test_str_len = test_str_len - 1;\n    let mut test_str_len = test_str_len as usize;\n    let mut test_str_len = test_str_len - 1;\n    let mut test_str_len = test_str_len as isize;\n    let mut test_str_len = test_str_len - 1;\n    let mut test_str_len = test_str_len as usize;\n    let mut test_str_len = test_str_len - 1;\n    let\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error: expected pattern, found `}`\n  --> /tmp/tmpb0hsq940.rs:46:1\n   |\n46 | }\n   | ^ expected pattern\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpz6rariil.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    let mut prev_char = ' ';\n    let mut next_char = ' ';\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            next_char = test_str.chars().nth(i + 1).unwrap();\n        } else if i == test_str.len() - 1 {\n            prev_char = test_str.chars().nth(i - 1).unwrap();\n        } else {\n            prev_char = test_str.chars().nth(i - 1).unwrap();\n            next_char = test_str.chars().nth(i + 1).unwrap();\n        }\n        if vowels.contains(&c) && (vowels.contains(&prev_char) || vowels.contains(&next_char)) {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `7`', /tmp/tmpgfzskm08.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        } else if i == test_str.len() - 1 {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n        } else {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap())\n                || vowels.contains(&test_str.chars().nth(i + 1).unwrap())\n            {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmp8jw_ksy6.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if vowels.contains(&curr.unwrap()) &&\n            (prev.is_some() && vowels.contains(&prev.unwrap()) ||\n             next.is_some() && vowels.contains(&next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `7`', /tmp/tmpfmydss9z.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = 1;\n    let mut k = 2;\n    let mut l = 3;\n    let mut m = 4;\n    let mut n = 5;\n    let mut o = 6;\n    let mut p = 7;\n    let mut q = 8;\n    let mut r = 9;\n    let mut s = 10;\n    let mut t = 11;\n    let mut u = 12;\n    let mut v = 13;\n    let mut w = 14;\n    let mut x = 15;\n    let mut y = 16;\n    let mut z = 17;\n    let mut a = 18;\n    let mut b = 19;\n    let mut c = 20;\n    let mut d = 21;\n    let mut e = 22;\n    let mut f = 23;\n    let mut g = 24;\n    let mut h = 25;\n    let mut ii = 26;\n    let mut jj = 27;\n    let mut kk = 28;\n    let mut ll = 29;\n    let mut mm = 30;\n    let mut nn = 31;\n    let mut oo = 32;\n    let mut pp = 33;\n    let mut qq = 34;\n    let mut rr = 35;\n    let mut ss = 36;\n    let mut tt = 37;\n    let mut uu = 38;\n    let mut vv = 39;\n    let mut ww = 40;\n    let mut xx = 41;\n    let mut yy = 42;\n    let mut zz = 43;\n    let mut aa = 44;\n    let mut bb = 45;\n    let mut cc = 46;\n    let mut dd = 47;\n    let mut ee = 48;\n    let mut ff = 49;\n    let mut gg = 50;\n    let mut hh = 51;\n    let mut iii = 52;\n    let mut jjj = 53;\n    let mut kkk = 54;\n    let mut lll = 55;\n    let mut mmm = 56;\n    let mut nnn = 57;\n    let mut ooo = 58;\n    let mut ppp = 59;\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmp_s_b15ie.rs:2:38\n  |\n2 | fn count_vowels(test_str: String) -> isize {\n  |    ------------                      ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail or `return` expression\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n\n    while let Some(c) = curr {\n        if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpdiyi0z3u.rs:10:12\n   |\n10 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpdiyi0z3u.rs:10:46\n   |\n10 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n   |                                              ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpdiyi0z3u.rs:10:91\n   |\n10 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n   |                                                                                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n\n    while next.is_some() {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpqqt2yjnx.rs:10:12\n   |\n10 |         if is_vowel(prev) || is_vowel(next) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpqqt2yjnx.rs:10:30\n   |\n10 |         if is_vowel(prev) || is_vowel(next) {\n   |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmppzocyjsa.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (is_vowel(prev.unwrap_or(' ')) || is_vowel(next.unwrap_or(' '))) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpz9sypp57.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (is_vowel(prev.unwrap_or(' ')) || is_vowel(next.unwrap_or(' '))) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpz9sypp57.rs:9:40\n  |\n9 |         if is_vowel(curr.unwrap()) && (is_vowel(prev.unwrap_or(' ')) || is_vowel(next.unwrap_or(' '))) {\n  |                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpz9sypp57.rs:9:73\n  |\n9 |         if is_vowel(curr.unwrap()) && (is_vowel(prev.unwrap_or(' ')) || is_vowel(next.unwrap_or(' '))) {\n  |                                                                         ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    for (i, c) in test_str.chars().enumerate() {\n        if vowels.contains(&c) {\n            if i > 0 && vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n            if i < test_str.len() - 1 && vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `7`', /tmp/tmpob8u8pbi.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    return count;\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpywf_3i47.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpywf_3i47.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev = ' ';\n    let mut next = ' ';\n    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n    let mut z = 0;\n    let mut a = 0;\n    let mut e = 0;\n    let mut i = 0;\n    let mut o = 0;\n    let mut u = 0;\n    let mut test_str = test_str.to_lowercase();\n    let mut test_str = test_str.chars().collect::<Vec<char>>();\n    for i in 0..test_str.len() {\n        if i == 0 {\n            prev = ' ';\n        } else {\n            prev = test_str[i - 1];\n        }\n        if i == test_str.len() - 1 {\n            next = ' ';\n        } else {\n            next = test_str[i + 1];\n        }\n        if test_str[i] == 'a' {\n            a += 1;\n            if prev == 'a' || next == 'a' {\n                count += 1;\n            }\n        }\n        if test_str[i] == 'e' {\n            e += 1;\n            if prev == 'e' || next == 'e' {\n                count += 1;\n            }\n        }\n        if test_str[i] == 'i' {\n            i += 1;\n            if prev == 'i' || next == 'i' {\n                count += 1;\n            }\n        }\n        if test_str[i] == 'o' {\n            o += 1;\n            if prev == 'o' || next ==\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpq2zsm05f.rs:70:3\n   |\n2  | fn count_vowels(test_str: String) -> isize {\n   |                                            - unclosed delimiter\n...\n31 |     for i in 0..test_str.len() {\n   |                                - unclosed delimiter\n...\n60 |         if test_str[i] == 'o' {\n   |                               - this delimiter might not be properly closed...\n...\n63 | }\n   | - ...as it matches this but it has different indentation\n...\n70 | }\n   |   ^\n\nerror: expected expression, found `}`\n  --> /tmp/tmpq2zsm05f.rs:63:1\n   |\n63 | }\n   | ^ expected expression\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpq2zsm05f.rs:31:5\n   |\n2  |   fn count_vowels(test_str: String) -> isize {\n   |                                        ----- expected `isize` because of return type\n...\n31 | /     for i in 0..test_str.len() {\n32 | |         if i == 0 {\n33 | |             prev = ' ';\n34 | |         } else {\n...  |\n69 | |     assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n70 | | }\n   | |__^ expected `isize`, found `()`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123202,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:12\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:31\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                               ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:49\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                                                 ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoplfuysr.rs:9:12\n  |\n9 |         if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoplfuysr.rs:9:39\n  |\n9 |         if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp103wt1r1.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp103wt1r1.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpz6rariil.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    while let Some(c) = curr {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmp67wtttyl.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if vowels.contains(&curr.unwrap()) &&\n           (prev.is_some() && vowels.contains(&prev.unwrap()) ||\n            next.is_some() && vowels.contains(&next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `7`', /tmp/tmpjtryc4e1.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoplfuysr.rs:9:12\n  |\n9 |         if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoplfuysr.rs:9:39\n  |\n9 |         if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next.is_some() {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpckf55mop.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpckf55mop.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123202,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:12\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:31\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                               ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:49\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                                                 ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next.is_some() {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpckf55mop.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpckf55mop.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next().unwrap();\n    for c in chars {\n        if vowels.contains(&prev) || vowels.contains(&c) {\n            count += 1;\n        }\n        prev = c;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmpzi6_4_6w.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    while let Some(c) = curr {\n        if is_vowel(c) && (prev.map_or(false, |p| is_vowel(p))) {\n            count += 1;\n        }\n        prev = curr;\n        curr = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpdgp5nbyq.rs:8:12\n  |\n8 |         if is_vowel(c) && (prev.map_or(false, |p| is_vowel(p))) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpdgp5nbyq.rs:8:51\n  |\n8 |         if is_vowel(c) && (prev.map_or(false, |p| is_vowel(p))) {\n  |                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(c) && is_vowel(*prev) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpo2rjrc5o.rs:7:12\n  |\n7 |         if is_vowel(c) && is_vowel(*prev) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpo2rjrc5o.rs:7:27\n  |\n7 |         if is_vowel(c) && is_vowel(*prev) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror[E0614]: type `Option<char>` cannot be dereferenced\n --> /tmp/tmpo2rjrc5o.rs:7:36\n  |\n7 |         if is_vowel(c) && is_vowel(*prev) {\n  |                                    ^^^^^\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0425, E0614.\nFor more information about an error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev) || is_vowel(&c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fz17syo.rs:7:12\n  |\n7 |         if is_vowel(prev) || is_vowel(&c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fz17syo.rs:7:30\n  |\n7 |         if is_vowel(prev) || is_vowel(&c) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev) || is_vowel(&c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fz17syo.rs:7:12\n  |\n7 |         if is_vowel(prev) || is_vowel(&c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fz17syo.rs:7:30\n  |\n7 |         if is_vowel(prev) || is_vowel(&c) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp103wt1r1.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp103wt1r1.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev_char.unwrap()) {\n            count += 1;\n        }\n        prev_char = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmppssvucur.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    let mut next_char = chars.next();\n    while next_char != None {\n        if vowels.contains(&prev_char.unwrap()) || vowels.contains(&next_char.unwrap()) {\n            count += 1;\n        }\n        prev_char = next_char;\n        next_char = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmp5yj7mvye.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        } else if i == test_str.len() - 1 {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n        } else {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) || vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmpqn5jfe2v.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev_char = ' ';\n    for c in test_str.chars() {\n        if is_vowel(c) && is_vowel(prev_char) {\n            count += 1;\n        }\n        prev_char = c;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123204,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp68mch1yl.rs:6:12\n  |\n6 |         if is_vowel(c) && is_vowel(prev_char) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp68mch1yl.rs:6:27\n  |\n6 |         if is_vowel(c) && is_vowel(prev_char) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        } else if i == test_str.len() - 1 {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n        } else {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap())\n                || vowels.contains(&test_str.chars().nth(i + 1).unwrap())\n            {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmp8jw_ksy6.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp8de16ia9.rs:9:12\n  |\n9 |         if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp8de16ia9.rs:9:39\n  |\n9 |         if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
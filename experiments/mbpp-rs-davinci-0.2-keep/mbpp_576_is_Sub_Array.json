{
  "name": "mbpp_576_is_Sub_Array",
  "language": "rs",
  "prompt": "/// Write a python function to check whether a list is sublist of another or not.\nfn is_Sub_Array(A: Vec<isize>, B: Vec<isize>) -> bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_576_is_Sub_Array.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = is_Sub_Array;\n    assert_eq!(candidate(vec![1, 4, 3, 5], vec![1, 2]), false);\n    assert_eq!(candidate(vec![1, 2, 1], vec![1, 2, 1]), true);\n    assert_eq!(candidate(vec![1, 0, 2, 2], vec![2, 2, 0]), false);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    let mut n = A.len();\n    let mut m = B.len();\n    while i < n && j < m {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        flag = true;\n    }\n    flag",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    let mut n = A.len();\n    let mut m = B.len();\n    while i < n && j < m {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        flag = true;\n    }\n    flag",
    "    let mut is_sub_array = false;\n    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut is_match = false;\n    let mut is_match_found = false;\n    let mut is_match_found_again = false;\n    let mut is_match_found_again_again = false;\n    while i < A.len() {\n        if A[i] == B[j] {\n            is_match = true;\n            is_match_found = true;\n            k = i;\n            l = j;\n            while is_match {\n                if A[k] == B[l] {\n                    is_match_found_again = true;\n                    k += 1;\n                    l += 1;\n                } else {\n                    is_match_found_again = false;\n                    is_match = false;\n                }\n            }\n            if is_match_found_again {\n                is_match_found_again_again = true;\n            }\n        }\n        i += 1;\n        j += 1;\n    }\n    if is_match_found_again_again {\n        is_sub_array = true;\n    }\n    is_sub_array",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    while i < A.len() && j < B.len() {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n        if j == B.len() {\n            flag = true;\n            break;\n        }\n    }\n    flag",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    while i < A.len() && j < B.len() {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == B.len() {\n        flag = true;\n    }\n    flag",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    while i < A.len() && j < B.len() {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n        if j == B.len() {\n            flag = true;\n            break;\n        }\n    }\n    flag",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    let mut n = A.len();\n    let mut m = B.len();\n    while i < n && j < m {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n        if j == m {\n            flag = true;\n            break;\n        }\n    }\n    flag",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    while i < A.len() && j < B.len() {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == B.len() {\n        flag = true;\n    }\n    flag",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    while i < A.len() && j < B.len() {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n        if j == B.len() {\n            flag = true;\n            break;\n        }\n    }\n    flag",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    let mut n = A.len();\n    let mut m = B.len();\n    while i < n && j < m {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        flag = true;\n    }\n    flag",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    while i < A.len() && j < B.len() {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == B.len() {\n        flag = true;\n    }\n    flag",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    while i < A.len() && j < B.len() {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n            flag = true;\n        } else {\n            i += 1;\n            flag = false;\n        }\n    }\n    flag",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    while i < A.len() && j < B.len() {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n            flag = true;\n        } else {\n            i += 1;\n            j = 0;\n            flag = false;\n        }\n    }\n    flag",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n    let mut z = 0;\n    let mut aa = 0;\n    let mut bb = 0;\n    let mut cc = 0;\n    let mut dd = 0;\n    let mut ee = 0;\n    let mut ff = 0;\n    let mut gg = 0;\n    let mut hh = 0;\n    let mut ii = 0;\n    let mut jj = 0;\n    let mut kk = 0;\n    let mut ll = 0;\n    let mut mm = 0;\n    let mut nn = 0;\n    let mut oo = 0;\n    let mut pp = 0;\n    let mut qq = 0;\n    let mut rr = 0;\n    let mut ss = 0;\n    let mut tt = 0;\n    let mut uu = 0;\n    let mut vv = 0;\n    let mut ww = 0;\n    let mut xx = 0;\n    let mut yy = 0;\n    let mut zz = 0;\n    let mut aaa = 0;\n    let mut bbb = 0;\n    let mut ccc = 0;\n    let mut ddd = 0;\n    let mut eee = 0;\n    let mut fff = 0;\n    let mut ggg = 0;\n    let mut hhh = 0;\n    let mut iii = 0;\n    let mut jjj = 0;\n    let mut kkk = 0;\n    let mut lll = 0;\n    let mut mmm = 0;\n    let mut nnn = 0;\n    let mut ooo = 0;\n",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    while i < A.len() && j < B.len() {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n        }\n        if j == B.len() {\n            flag = true;\n            break;\n        }\n    }\n    flag",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    while i < A.len() && j < B.len() {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n        }\n        if j == B.len() {\n            flag = true;\n            break;\n        }\n    }\n    flag",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    let mut n = A.len();\n    let mut m = B.len();\n    while i < n && j < m {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        flag = true;\n    }\n    flag",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    while i < A.len() && j < B.len() {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n        if j == B.len() {\n            flag = true;\n        }\n    }\n    flag",
    "    let mut i = 0;\n    let mut j = 0;\n    while i < A.len() && j < B.len() {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == B.len() {\n        return true;\n    }\n    return false;",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut flag = false;\n    while i < A.len() && j < B.len() {\n        if A[i] == B[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n        if j == B.len() {\n            flag = true;\n        }\n    }\n    flag"
  ]
}
{
  "name": "mbpp_478_remove_lowercase",
  "language": "rs",
  "prompt": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_478_remove_lowercase.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::from(\"\");\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| c.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| c.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars()\n        .filter(|c| c.is_uppercase())\n        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if !c.is_lowercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| !c.is_lowercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars()\n        .filter(|c| c.is_uppercase())\n        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|x| !x.is_lowercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| c.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if !c.is_lowercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| !c.is_lowercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars()\n        .filter(|c| c.is_uppercase())\n        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if !c.is_lowercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars()\n        .filter(|c| c.is_uppercase())\n        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| c.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if !c.is_lowercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut res = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            res.push(c);\n        }\n    }\n    res\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if !c.is_lowercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for ch in str1.chars() {\n        if ch.is_uppercase() {\n            str2.push(ch);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str_vec: Vec<char> = str1.chars().collect();\n    let mut index = 0;\n    while index < str_vec.len() {\n        if str_vec[index].is_lowercase() {\n            str_vec.remove(index);\n        } else {\n            index += 1;\n        }\n    }\n    str_vec.into_iter().collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if !c.is_lowercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars()\n        .filter(|c| c.is_uppercase())\n        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|x| x.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| c.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if !c.is_lowercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| c.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| c.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for ch in str1.chars() {\n        if ch.is_uppercase() {\n            str2.push(ch);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|x| x.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| c.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| c.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| !c.is_lowercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|x| x.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars()\n        .filter(|c| c.is_uppercase())\n        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| c.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| c.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if !c.is_lowercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if !c.is_lowercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| c.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    let mut lowercase = false;\n    for c in str1.chars() {\n        if c.is_lowercase() {\n            lowercase = true;\n            continue;\n        }\n        if lowercase {\n            result.push(c);\n            lowercase = false;\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if !c.is_lowercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars()\n        .filter(|c| c.is_uppercase())\n        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if !c.is_lowercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| c.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut res = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            res.push(c);\n        }\n    }\n    res\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars()\n        .filter(|c| c.is_uppercase())\n        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| c.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| !c.is_lowercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| !c.is_lowercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for ch in str1.chars() {\n        if ch.is_uppercase() {\n            result.push(ch);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars()\n        .filter(|c| !c.is_lowercase())\n        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| !c.is_lowercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut res = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            res.push(c);\n        }\n    }\n    res\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if !c.is_lowercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|x| x.is_uppercase()).collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if !c.is_lowercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    str1.chars().filter(|c| !c.is_lowercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut new_str = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            new_str.push(c);\n        }\n    }\n    new_str\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut str2 = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            str2.push(c);\n        }\n    }\n    str2\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to remove lowercase substrings from a given string.\nfn remove_lowercase(str1: String) -> String {\n    let mut result = String::new();\n    for c in str1.chars() {\n        if c.is_uppercase() {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_lowercase;\n    assert_eq!(candidate(String::from(\"PYTHon\")), String::from(\"PYTH\"));\n    assert_eq!(candidate(String::from(\"FInD\")), String::from(\"FID\"));\n    assert_eq!(candidate(String::from(\"STRinG\")), String::from(\"STRG\"));\n}\n",
      "timestamp": 1665509681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_270_sum_even_and_even_index",
  "language": "rs",
  "prompt": "/// Write a python function to find the sum of even numbers at even positions of a list.\nfn sum_even_and_even_index(arr: Vec<isize>) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_270_sum_even_and_even_index.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = sum_even_and_even_index;\n    assert_eq!(candidate(vec![5, 6, 12, 1, 18, 8]), 30);\n    assert_eq!(candidate(vec![3, 20, 17, 9, 2, 10, 18, 13, 6, 18]), 26);\n    assert_eq!(candidate(vec![5, 6, 12, 1]), 12);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut sum = 0;\n    for (i, x) in arr.iter().enumerate() {\n        if i % 2 == 0 && x % 2 == 0 {\n            sum += x;\n        }\n    }\n    sum",
    "    arr.iter().enumerate().filter(|(i, _)| i % 2 == 0).filter(|(_, x)| x % 2 == 0).map(|(_, x)| x).sum()",
    "    let mut sum = 0;\n    for (i, x) in arr.iter().enumerate() {\n        if i % 2 == 0 && x % 2 == 0 {\n            sum += x;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for (i, x) in arr.iter().enumerate() {\n        if i % 2 == 0 && x % 2 == 0 {\n            sum += x;\n        }\n    }\n    sum",
    "    arr.iter()\n        .enumerate()\n        .filter(|(i, _)| i % 2 == 0)\n        .filter(|(_, x)| x % 2 == 0)\n        .map(|(_, x)| *x)\n        .sum()",
    "    let mut sum = 0;\n    for (i, x) in arr.iter().enumerate() {\n        if i % 2 == 0 && x % 2 == 0 {\n            sum += x;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for (i, v) in arr.iter().enumerate() {\n        if i % 2 == 0 && v % 2 == 0 {\n            sum += v;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for (i, x) in arr.iter().enumerate() {\n        if i % 2 == 0 && x % 2 == 0 {\n            sum += x;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for (i, v) in arr.iter().enumerate() {\n        if i % 2 == 0 && v % 2 == 0 {\n            sum += v;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for (i, x) in arr.iter().enumerate() {\n        if i % 2 == 0 && x % 2 == 0 {\n            sum += x;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for (i, n) in arr.iter().enumerate() {\n        if i % 2 == 0 && n % 2 == 0 {\n            sum += n;\n        }\n    }\n    sum",
    "    arr.iter()\n        .enumerate()\n        .filter(|&(i, _)| i % 2 == 0)\n        .filter(|&(_, x)| x % 2 == 0)\n        .map(|(_, x)| *x)\n        .sum()",
    "    let mut sum = 0;\n    for (i, val) in arr.iter().enumerate() {\n        if i % 2 == 0 && val % 2 == 0 {\n            sum += val;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..arr.len() {\n        if i % 2 == 0 && arr[i] % 2 == 0 {\n            sum += arr[i];\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for (i, x) in arr.iter().enumerate() {\n        if i % 2 == 0 && x % 2 == 0 {\n            sum += x;\n        }\n    }\n    sum",
    "    arr.iter().enumerate().filter(|(i, _)| i % 2 == 0).filter(|(_, x)| x % 2 == 0).map(|(_, x)| x).sum()",
    "    let mut sum = 0;\n    for (i, v) in arr.iter().enumerate() {\n        if i % 2 == 0 && v % 2 == 0 {\n            sum += v;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for (i, x) in arr.iter().enumerate() {\n        if i % 2 == 0 && x % 2 == 0 {\n            sum += x;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for (i, x) in arr.iter().enumerate() {\n        if i % 2 == 0 && x % 2 == 0 {\n            sum += x;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for (i, v) in arr.iter().enumerate() {\n        if i % 2 == 0 && v % 2 == 0 {\n            sum += v;\n        }\n    }\n    sum"
  ]
}
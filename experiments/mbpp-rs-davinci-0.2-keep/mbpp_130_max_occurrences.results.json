{
  "name": "mbpp_130_max_occurrences",
  "language": "rs",
  "prompt": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_130_max_occurrences.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmppox_49rc.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpa6itl_42.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp6mtfy7bt.rs:6:22\n  |\n6 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpdo9lqbv6.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpa6itl_42.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_occurrences_num = 0;\n    let mut occurrences: HashMap<isize, isize> = HashMap::new();\n\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_occurrences_num = num;\n        }\n    }\n\n    max_occurrences_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpn6r8e6uc.rs:5:26\n  |\n5 |     let mut occurrences: HashMap<isize, isize> = HashMap::new();\n  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpn6r8e6uc.rs:5:50\n  |\n5 |     let mut occurrences: HashMap<isize, isize> = HashMap::new();\n  |                                                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp_5df5olr.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_occurrences = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_occurrences {\n            max_occurrences = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0d6hh15c.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_occurrences_num = 0;\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_occurrences_num = num;\n        }\n    }\n    max_occurrences_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb3maqo7n.rs:5:27\n  |\n5 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpv4thtuli.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences: HashMap<isize, isize> = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp9b7a7v2v.rs:3:26\n  |\n3 |     let mut occurrences: HashMap<isize, isize> = HashMap::new();\n  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp9b7a7v2v.rs:3:50\n  |\n3 |     let mut occurrences: HashMap<isize, isize> = HashMap::new();\n  |                                                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpa6itl_42.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_occurrences = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_occurrences {\n            max_occurrences = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0d6hh15c.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpw0jl05lj.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpdo9lqbv6.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_key = 0;\n    for (key, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_key = key;\n        }\n    }\n    max_key\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp7xe1gq_j.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_occurrences = 0;\n    let mut max_occurrences_num = 0;\n    for (num, count) in occurrences {\n        if count > max_occurrences {\n            max_occurrences = count;\n            max_occurrences_num = num;\n        }\n    }\n    max_occurrences_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpkzkht6cs.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpdo9lqbv6.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpm9mz3x0v.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpa6itl_42.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_occurrences_num = 0;\n    let mut occurrences_map = HashMap::new();\n    for num in nums {\n        let occurrences = occurrences_map.entry(num).or_insert(0);\n        *occurrences += 1;\n        if *occurrences > max_occurrences {\n            max_occurrences = *occurrences;\n            max_occurrences_num = num;\n        }\n    }\n    max_occurrences_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp3ulpwk5i.rs:5:31\n  |\n5 |     let mut occurrences_map = HashMap::new();\n  |                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_occurrence = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_occurrence {\n            max_occurrence = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpeqdkxmbo.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts.iter() {\n        if *count > max_count {\n            max_count = *count;\n            max_num = *num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpxukducyf.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    counts.into_iter().max_by_key(|&(_, count)| count).unwrap().0\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpsotst0xi.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    occurrences.into_iter().max_by_key(|&(_, count)| count).unwrap().0\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp4kj5i_ps.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n\n        if *count > max {\n            max = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp894bq113.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut num_counts = HashMap::new();\n    for num in nums {\n        let count = num_counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp9evyw6wm.rs:5:26\n  |\n5 |     let mut num_counts = HashMap::new();\n  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpw0jl05lj.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_freq = 0;\n    let mut max_num = 0;\n    for (num, freq) in map {\n        if freq > max_freq {\n            max_freq = freq;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp7avbgnrc.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp8r078_sz.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    let mut max_occurrence = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_occurrence {\n            max_occurrence = count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp1oer44lx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_occurrences_num = 0;\n    let mut occurrences = HashMap::new();\n\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_occurrences_num = num;\n        }\n    }\n\n    max_occurrences_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp98crf834.rs:5:27\n  |\n5 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpw0jl05lj.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    counts.into_iter().max_by_key(|&(_, count)| count).unwrap().0\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpsotst0xi.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpw0jl05lj.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max {\n            max = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpj8hxnwif.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_key = 0;\n    let mut max_value = 0;\n    for (key, value) in occurrences {\n        if value > max_value {\n            max_key = key;\n            max_value = value;\n        }\n    }\n    max_key\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpla5di2fc.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpw0jl05lj.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max {\n            max = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp_l38chx2.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n\n    for num in nums {\n        let count = nums.iter().filter(|&n| *n == num).count();\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `nums`\n   --> /tmp/tmp6i7crtfx.rs:7:21\n    |\n2   | fn max_occurrences(nums: Vec<isize>) -> isize {\n    |                    ---- move occurs because `nums` has type `Vec<isize>`, which does not implement the `Copy` trait\n...\n6   |     for num in nums {\n    |                ---- `nums` moved due to this implicit call to `.into_iter()`\n7   |         let count = nums.iter().filter(|&n| *n == num).count();\n    |                     ^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `nums`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n6   |     for num in &nums {\n    |                +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_num = 0;\n    for num in nums {\n        let count = nums.iter().filter(|&x| *x == num).count();\n        if count > max {\n            max = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `nums`\n   --> /tmp/tmpu6_4nihj.rs:6:21\n    |\n2   | fn max_occurrences(nums: Vec<isize>) -> isize {\n    |                    ---- move occurs because `nums` has type `Vec<isize>`, which does not implement the `Copy` trait\n...\n5   |     for num in nums {\n    |                ---- `nums` moved due to this implicit call to `.into_iter()`\n6   |         let count = nums.iter().filter(|&x| *x == num).count();\n    |                     ^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `nums`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n5   |     for num in &nums {\n    |                +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_occurrences_num = 0;\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_occurrences_num = num;\n        }\n    }\n    max_occurrences_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb3maqo7n.rs:5:27\n  |\n5 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpm9mz3x0v.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for num in nums {\n        let count = nums.iter().filter(|&x| *x == num).count();\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `nums`\n   --> /tmp/tmptk2xilhy.rs:6:21\n    |\n2   | fn max_occurrences(nums: Vec<isize>) -> isize {\n    |                    ---- move occurs because `nums` has type `Vec<isize>`, which does not implement the `Copy` trait\n...\n5   |     for num in nums {\n    |                ---- `nums` moved due to this implicit call to `.into_iter()`\n6   |         let count = nums.iter().filter(|&x| *x == num).count();\n    |                     ^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `nums`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n5   |     for num in &nums {\n    |                +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpa6itl_42.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpw0jl05lj.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_occurrences_num = 0;\n    let mut occurrences: HashMap<isize, isize> = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_occurrences_num = num;\n        }\n    }\n    max_occurrences_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpr_729dn8.rs:5:26\n  |\n5 |     let mut occurrences: HashMap<isize, isize> = HashMap::new();\n  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpr_729dn8.rs:5:50\n  |\n5 |     let mut occurrences: HashMap<isize, isize> = HashMap::new();\n  |                                                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp_5df5olr.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp_5df5olr.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_num = 0;\n    let mut max_count = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_num = num;\n            max_count = count;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpx3hzhhgr.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_num = 0;\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpog8hk6yp.rs:5:27\n  |\n5 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max {\n            max = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp6jpk7ip4.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpw0jl05lj.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_num = 0;\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max {\n            max = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp21ehbn2_.rs:5:19\n  |\n5 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_occurrence = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_occurrence {\n            max_occurrence = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpeqdkxmbo.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut freq = HashMap::new();\n    for num in nums {\n        *freq.entry(num).or_insert(0) += 1;\n    }\n    let mut max = 0;\n    let mut max_num = 0;\n    for (num, count) in freq {\n        if count > max {\n            max = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp93t6y_0w.rs:3:20\n  |\n3 |     let mut freq = HashMap::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_key = 0;\n    let mut max_val = 0;\n    for (key, val) in &occurrences {\n        if val > &max_val {\n            max_key = *key;\n            max_val = *val;\n        }\n    }\n    max_key\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmptj2jx7xi.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpw0jl05lj.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max {\n            max = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp6jpk7ip4.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrence = 0;\n    let mut max_occurrence_item = 0;\n    let mut occurrences: HashMap<isize, isize> = HashMap::new();\n\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_occurrence {\n            max_occurrence = *count;\n            max_occurrence_item = num;\n        }\n    }\n\n    max_occurrence_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp4xwscz77.rs:5:26\n  |\n5 |     let mut occurrences: HashMap<isize, isize> = HashMap::new();\n  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp4xwscz77.rs:5:50\n  |\n5 |     let mut occurrences: HashMap<isize, isize> = HashMap::new();\n  |                                                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts: HashMap<isize, isize> = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp1f6w9pxq.rs:3:21\n  |\n3 |     let mut counts: HashMap<isize, isize> = HashMap::new();\n  |                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp1f6w9pxq.rs:3:45\n  |\n3 |     let mut counts: HashMap<isize, isize> = HashMap::new();\n  |                                             ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpw0jl05lj.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut count = 0;\n    let mut num = 0;\n    for n in nums {\n        if n == num {\n            count += 1;\n        } else {\n            if count > max_count {\n                max_count = count;\n                max_num = num;\n            }\n            count = 1;\n            num = n;\n        }\n    }\n    if count > max_count {\n        max_num = num;\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `8`', /tmp/tmpjxqkrf4p.rs:28:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_key = 0;\n    let mut max_value = 0;\n    for (key, value) in occurrences {\n        if value > max_value {\n            max_key = key;\n            max_value = value;\n        }\n    }\n    max_key\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpla5di2fc.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpdo9lqbv6.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut count = 0;\n    let mut num = 0;\n    for i in nums {\n        if i == num {\n            count += 1;\n        } else {\n            if count > max_count {\n                max_count = count;\n                max_num = num;\n            }\n            num = i;\n            count = 1;\n        }\n    }\n    if count > max_count {\n        max_num = num;\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `8`', /tmp/tmp7fhqsaev.rs:28:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_occurrence = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_occurrence {\n            max_occurrence = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpeqdkxmbo.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_num = 0;\n    let mut occurrences = HashMap::new();\n\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max {\n            max = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp90wmiirb.rs:5:27\n  |\n5 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp_5df5olr.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_key = 0;\n    let mut max_count = 0;\n    for (key, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_key = key;\n        }\n    }\n    max_key\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpc_baloj8.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_num = 0;\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max {\n            max = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp21ehbn2_.rs:5:19\n  |\n5 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpdo9lqbv6.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_occurrences_num = 0;\n    for num in nums {\n        let occurrences = nums.iter().filter(|&n| *n == num).count();\n        if occurrences > max_occurrences {\n            max_occurrences = occurrences;\n            max_occurrences_num = num;\n        }\n    }\n    max_occurrences_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `nums`\n   --> /tmp/tmpbmlcw2al.rs:6:27\n    |\n2   | fn max_occurrences(nums: Vec<isize>) -> isize {\n    |                    ---- move occurs because `nums` has type `Vec<isize>`, which does not implement the `Copy` trait\n...\n5   |     for num in nums {\n    |                ---- `nums` moved due to this implicit call to `.into_iter()`\n6   |         let occurrences = nums.iter().filter(|&n| *n == num).count();\n    |                           ^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `nums`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n5   |     for num in &nums {\n    |                +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpw0jl05lj.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max {\n            max = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpj8hxnwif.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpa6itl_42.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_num = 0;\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max {\n            max = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp21ehbn2_.rs:5:19\n  |\n5 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in &nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_num = 0;\n    let mut max_count = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_num = *num;\n            max_count = count;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp_3r95ah5.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max {\n            max = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp62vcfd_u.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_item = 0;\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp9omjo0bn.rs:5:27\n  |\n5 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_num = 0;\n    let mut max_count = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_num = num;\n            max_count = count;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpx3hzhhgr.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max {\n            max = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp_l38chx2.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in &occurrences {\n        if count > &max_count {\n            max_count = *count;\n            max_num = *num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp6tunc5xr.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpgn0ruot5.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    for num in nums {\n        let count = nums.iter().filter(|&x| *x == num).count();\n        if count > max_count {\n            max_count = count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `nums`\n   --> /tmp/tmpwvoqst2t.rs:6:21\n    |\n2   | fn max_occurrences(nums: Vec<isize>) -> isize {\n    |                    ---- move occurs because `nums` has type `Vec<isize>`, which does not implement the `Copy` trait\n...\n5   |     for num in nums {\n    |                ---- `nums` moved due to this implicit call to `.into_iter()`\n6   |         let count = nums.iter().filter(|&x| *x == num).count();\n    |                     ^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `nums`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n5   |     for num in &nums {\n    |                +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_freq = 0;\n    let mut max_item = 0;\n    let mut freq = HashMap::new();\n    for num in nums {\n        let count = freq.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_freq {\n            max_freq = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpmdvm0wk_.rs:5:20\n  |\n5 |     let mut freq = HashMap::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_num = 0;\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max {\n            max = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp21ehbn2_.rs:5:19\n  |\n5 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_occurrences_item = 0;\n\n    let mut occurrences = HashMap::new();\n\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_occurrences_item = num;\n        }\n    }\n\n    max_occurrences_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0m1z0f3z.rs:6:27\n  |\n6 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpdo9lqbv6.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_key = 0;\n    let mut max_count = 0;\n    for (key, count) in counts {\n        if count > max_count {\n            max_key = key;\n            max_count = count;\n        }\n    }\n    max_key\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp3qzfnb4v.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpdo9lqbv6.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp_5df5olr.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_occurrence = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_occurrence {\n            max_occurrence = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpeqdkxmbo.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpdo9lqbv6.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpdo9lqbv6.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp_5df5olr.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpdo9lqbv6.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpa6itl_42.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpm9mz3x0v.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_occurrences_item = 0;\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_occurrences_item = num;\n        }\n    }\n    max_occurrences_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp15dhhnq6.rs:5:27\n  |\n5 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_num = 0;\n    let mut max_count = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_num = num;\n            max_count = count;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpmxd9kvhn.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp_5df5olr.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for num in nums {\n        let count = nums.iter().filter(|&x| *x == num).count();\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `nums`\n   --> /tmp/tmptk2xilhy.rs:6:21\n    |\n2   | fn max_occurrences(nums: Vec<isize>) -> isize {\n    |                    ---- move occurs because `nums` has type `Vec<isize>`, which does not implement the `Copy` trait\n...\n5   |     for num in nums {\n    |                ---- `nums` moved due to this implicit call to `.into_iter()`\n6   |         let count = nums.iter().filter(|&x| *x == num).count();\n    |                     ^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `nums`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n5   |     for num in &nums {\n    |                +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpdo9lqbv6.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpa6itl_42.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_occurrences_item = 0;\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_occurrences_item = num;\n        }\n    }\n    max_occurrences_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp15dhhnq6.rs:5:27\n  |\n5 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpdo9lqbv6.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_num = 0;\n    let mut max_count = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_num = num;\n            max_count = count;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpx3hzhhgr.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max {\n            max = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp7q6oyk_7.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_num = 0;\n    let mut occurrences = HashMap::new();\n\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpaz5jnbnq.rs:5:27\n  |\n5 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpa6itl_42.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpv4thtuli.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_occurrences = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_occurrences {\n            max_occurrences = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0d6hh15c.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpngombf.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpw0jl05lj.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given list.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8l918do.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "rs",
  "prompt": "/// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nfn is_Sum_Of_Powers_Of_Two(n: isize) -> bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = is_Sum_Of_Powers_Of_Two;\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(7), false);\n    assert_eq!(candidate(14), true);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut n = n;\n    let mut sum = 0;\n    while n > 0 {\n        sum += n & 1;\n        n >>= 1;\n    }\n    sum == 1",
    "    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        if n % 2 == 0 {\n            n = n / 2;\n            i = i + 1;\n        } else {\n            n = n - 1;\n        }\n    }\n    return i == n;",
    "    let mut n = n;\n    while n > 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n -= 1;\n    }\n    false",
    "    let mut n = n;\n    let mut result = false;\n    while n > 0 {\n        if n & 1 == 1 {\n            if n == 1 {\n                result = true;\n            } else {\n                result = false;\n            }\n            break;\n        }\n        n = n >> 1;\n    }\n    result",
    "    let mut n = n;\n    let mut result = false;\n    while n > 0 {\n        if n & 1 == 1 {\n            result = true;\n            break;\n        }\n        n >>= 1;\n    }\n    result",
    "    let mut num = n;\n    while num > 0 {\n        if num & 1 == 1 {\n            num -= 1;\n        } else {\n            num /= 2;\n        }\n    }\n    return num == 0;",
    "    let mut n = n;\n    while n > 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n -= 1;\n    }\n    false",
    "    let mut n = n;\n    while n > 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n -= 1;\n    }\n    false",
    "    let mut n = n;\n    let mut result = false;\n    while n > 0 {\n        if n & 1 == 1 {\n            if result {\n                return false;\n            }\n            result = true;\n        }\n        n >>= 1;\n    }\n    result",
    "    let mut n = n;\n    let mut i = 0;\n    while n > 0 {\n        if n & 1 == 1 {\n            if n != 1 {\n                return false;\n            }\n            n = n - 2_i64.pow(i);\n        }\n        i += 1;\n        n = n >> 1;\n    }\n    true",
    "    let mut num = n;\n    let mut sum = 0;\n    while num > 0 {\n        let rem = num % 2;\n        num /= 2;\n        sum += rem;\n    }\n    sum == 1",
    "    let mut n = n;\n    while n > 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n -= 1;\n    }\n    false",
    "    let mut n = n;\n    let mut i = 0;\n    while n > 0 {\n        n = n - 2i32.pow(i);\n        i += 1;\n    }\n    n == 0",
    "    let mut n = n;\n    let mut i = 0;\n    while n > 0 {\n        if n & 1 == 1 {\n            if n & (n - 1) != 0 {\n                return false;\n            }\n            n -= 1 << i;\n        }\n        i += 1;\n    }\n    true",
    "    let mut n = n;\n    while n > 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n -= 1;\n    }\n    return false;",
    "    let mut n = n;\n    while n > 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n -= 1;\n    }\n    false",
    "    let mut n = n;\n    while n > 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n -= 1;\n    }\n    false",
    "    let mut n = n;\n    let mut sum = 0;\n    while n > 0 {\n        sum += 2_isize.pow((n % 2) as u32);\n        n /= 2;\n    }\n    sum == n",
    "    let mut num = n;\n    let mut sum = 0;\n    while num > 0 {\n        let rem = num % 2;\n        if rem == 1 {\n            sum += 1;\n        }\n        num /= 2;\n    }\n    if sum == 1 {\n        return true;\n    }\n    return false;",
    "    let mut n = n;\n    let mut count = 0;\n    while n > 0 {\n        n = n & (n - 1);\n        count += 1;\n    }\n    count == 1"
  ]
}
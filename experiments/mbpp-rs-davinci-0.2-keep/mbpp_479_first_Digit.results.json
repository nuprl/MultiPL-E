{
  "name": "mbpp_479_first_Digit",
  "language": "rs",
  "prompt": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_479_first_Digit.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n = n / 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n = n / 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 10 {\n        n = n / 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut num = n;\n    while num >= 10 {\n        num = num / 10;\n    }\n    num\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n = n / 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut num = n;\n    while num > 9 {\n        num /= 10;\n    }\n    num\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n = n / 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n = n / 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n = n / 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n = n / 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n = n / 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut m = n;\n    while m >= 10 {\n        m = m / 10;\n    }\n    m\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n = n / 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut num = n;\n    while num >= 10 {\n        num /= 10;\n    }\n    num\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    n.abs() / 10\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `12`,\n right: `1`', /tmp/tmpz_9nvrxy.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut num = n;\n    while num >= 10 {\n        num /= 10;\n    }\n    num\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n = n / 10;\n    }\n    return n;\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut num = n;\n    while num >= 10 {\n        num /= 10;\n    }\n    num\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut num = n;\n    while num >= 10 {\n        num /= 10;\n    }\n    num\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    if n < 0 {\n        n = -n;\n    }\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut num = n;\n    while num > 9 {\n        num = num / 10;\n    }\n    return num;\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut num = n;\n    while num >= 10 {\n        num /= 10;\n    }\n    num\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n = n / 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n = n / 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut num = n;\n    while num > 9 {\n        num /= 10;\n    }\n    num\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut num = n;\n    while num > 9 {\n        num /= 10;\n    }\n    num\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1666124233,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n = n / 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n = n / 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n >= 10 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the first digit of a given number.\nfn first_Digit(n: isize) -> isize {\n    let mut n = n;\n    while n > 9 {\n        n /= 10;\n    }\n    n\n}\n\nfn main() {\n    let candidate = first_Digit;\n    assert_eq!(candidate(123), 1);\n    assert_eq!(candidate(456), 4);\n    assert_eq!(candidate(12), 1);\n}\n",
      "timestamp": 1665510683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
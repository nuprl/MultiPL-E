{
  "name": "mbpp_777_find_sum",
  "language": "rs",
  "prompt": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_777_find_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if !arr.contains(&i) {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for num in arr {\n        if !seen.contains(&num) {\n            sum += num;\n            seen.insert(num);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut arr = arr;\n    arr.sort();\n    for i in 0..arr.len() {\n        if i == 0 {\n            sum += arr[i];\n        } else if arr[i] != arr[i - 1] {\n            sum += arr[i];\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for x in arr {\n        if !set.contains(&x) {\n            sum += x;\n            set.insert(x);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for n in arr {\n        if !seen.contains(&n) {\n            sum += n;\n            seen.insert(n);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum: isize = 0;\n    let mut set: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if set.contains(&i) {\n            sum -= i;\n        } else {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut count = 0;\n        for j in 0..arr.len() {\n            if arr[i] == arr[j] {\n                count += 1;\n            }\n        }\n        if count == 1 {\n            sum += arr[i];\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut arr_set = HashSet::new();\n    for i in arr {\n        if !arr_set.contains(&i) {\n            sum += i;\n            arr_set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if set.contains(&i) {\n            sum -= i;\n        } else {\n            set.insert(i);\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.contains(&i) {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for x in arr {\n        if !seen.contains(&x) {\n            sum += x;\n            seen.insert(x);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = 0;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = 1;\n                break;\n            }\n        }\n        if flag == 0 {\n            sum += arr[i];\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut found = false;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                found = true;\n                break;\n            }\n        }\n        if !found {\n            sum += arr[i];\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut arr_set: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if !arr_set.contains(&i) {\n            sum += i;\n            arr_set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut arr_set: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if !arr_set.contains(&i) {\n            sum += i;\n            arr_set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| x == &i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n\n    for i in arr {\n        if seen.contains(&i) {\n            continue;\n        } else {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut count = 0;\n        for j in 0..arr.len() {\n            if arr[i] == arr[j] {\n                count += 1;\n            }\n        }\n        if count == 1 {\n            sum += arr[i];\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut arr_set: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if arr_set.contains(&i) {\n            sum -= i;\n        } else {\n            sum += i;\n            arr_set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum: isize = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut count = 0;\n        for j in 0..arr.len() {\n            if arr[i] == arr[j] {\n                count += 1;\n            }\n        }\n        if count == 1 {\n            sum += arr[i];\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr.iter() {\n        if arr.iter().filter(|&x| x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut count = 0;\n        for j in 0..arr.len() {\n            if arr[i] == arr[j] {\n                count += 1;\n            }\n        }\n        if count == 1 {\n            sum += arr[i];\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for n in arr {\n        if !seen.contains(&n) {\n            sum += n;\n            seen.insert(n);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut i = 0;\n    let mut j = 0;\n    while i < arr.len() {\n        j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum: isize = 0;\n    let mut seen: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum: isize = 0;\n    let mut arr_set: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if !arr_set.contains(&i) {\n            sum += i;\n            arr_set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut arr_set = arr.clone().into_iter().collect::<HashSet<isize>>();\n    for i in arr {\n        if arr_set.contains(&i) {\n            sum += i;\n            arr_set.remove(&i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if !arr.contains(&i) {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| x == &i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| x == &i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if seen.contains(&i) {\n            sum -= i;\n        } else {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        let count = map.entry(i).or_insert(0);\n        *count += 1;\n    }\n    for (key, value) in map {\n        if value == 1 {\n            sum += key;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n\n    for x in arr {\n        if !set.contains(&x) {\n            sum += x;\n            set.insert(x);\n        }\n    }\n\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum"
  ]
}
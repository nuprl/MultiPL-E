{
  "name": "mbpp_777_find_sum",
  "language": "rs",
  "prompt": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_777_find_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if !arr.contains(&i) {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmp3nq6eibc.rs:5:13\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if !arr.contains(&i) {\n    |             ^^^^^^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for num in arr {\n        if !seen.contains(&num) {\n            sum += num;\n            seen.insert(num);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfdru5hjj.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut arr = arr;\n    arr.sort();\n    for i in 0..arr.len() {\n        if i == 0 {\n            sum += arr[i];\n        } else if arr[i] != arr[i - 1] {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for x in arr {\n        if !set.contains(&x) {\n            sum += x;\n            set.insert(x);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpyjc3rcoz.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for n in arr {\n        if !seen.contains(&n) {\n            sum += n;\n            seen.insert(n);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmppzthprkm.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `23`,\n right: `21`', /tmp/tmpv3dzbr26.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    let mut set: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if set.contains(&i) {\n            sum -= i;\n        } else {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpqnho7mtr.rs:4:18\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpqnho7mtr.rs:4:35\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut count = 0;\n        for j in 0..arr.len() {\n            if arr[i] == arr[j] {\n                count += 1;\n            }\n        }\n        if count == 1 {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpqdb7rti2.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `23`,\n right: `21`', /tmp/tmpv3dzbr26.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut arr_set = HashSet::new();\n    for i in arr {\n        if !arr_set.contains(&i) {\n            sum += i;\n            arr_set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpchslds4x.rs:4:23\n  |\n4 |     let mut arr_set = HashSet::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if set.contains(&i) {\n            sum -= i;\n        } else {\n            set.insert(i);\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpdfa22q52.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.contains(&i) {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpi8ebnent.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.contains(&i) {\n    |            ^^^^^^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for x in arr {\n        if !seen.contains(&x) {\n            sum += x;\n            seen.insert(x);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpxqhmuopz.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = 0;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = 1;\n                break;\n            }\n        }\n        if flag == 0 {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmp7a3ouw5d.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut found = false;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                found = true;\n                break;\n            }\n        }\n        if !found {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpolrkkrsg.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut arr_set: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if !arr_set.contains(&i) {\n            sum += i;\n            arr_set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpus072hcp.rs:4:22\n  |\n4 |     let mut arr_set: HashSet<isize> = HashSet::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpus072hcp.rs:4:39\n  |\n4 |     let mut arr_set: HashSet<isize> = HashSet::new();\n  |                                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut arr_set: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if !arr_set.contains(&i) {\n            sum += i;\n            arr_set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpus072hcp.rs:4:22\n  |\n4 |     let mut arr_set: HashSet<isize> = HashSet::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpus072hcp.rs:4:39\n  |\n4 |     let mut arr_set: HashSet<isize> = HashSet::new();\n  |                                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| x == &i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpgq9j43a7.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| x == &i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n\n    for i in arr {\n        if seen.contains(&i) {\n            continue;\n        } else {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmplfetdrsm.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut count = 0;\n        for j in 0..arr.len() {\n            if arr[i] == arr[j] {\n                count += 1;\n            }\n        }\n        if count == 1 {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpqdb7rti2.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut arr_set: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if arr_set.contains(&i) {\n            sum -= i;\n        } else {\n            sum += i;\n            arr_set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpl9x8z8q_.rs:4:22\n  |\n4 |     let mut arr_set: HashSet<isize> = HashSet::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpl9x8z8q_.rs:4:39\n  |\n4 |     let mut arr_set: HashSet<isize> = HashSet::new();\n  |                                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmp6b440vow.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum: isize = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut count = 0;\n        for j in 0..arr.len() {\n            if arr[i] == arr[j] {\n                count += 1;\n            }\n        }\n        if count == 1 {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpqdb7rti2.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `23`,\n right: `21`', /tmp/tmpv3dzbr26.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `23`,\n right: `21`', /tmp/tmpv3dzbr26.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr.iter() {\n        if arr.iter().filter(|&x| x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpi_24i_fl.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut count = 0;\n        for j in 0..arr.len() {\n            if arr[i] == arr[j] {\n                count += 1;\n            }\n        }\n        if count == 1 {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpqdb7rti2.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpwsrbpuq6.rs:4:18\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpwsrbpuq6.rs:4:35\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for n in arr {\n        if !seen.contains(&n) {\n            sum += n;\n            seen.insert(n);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmppzthprkm.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    let mut j = 0;\n    while i < arr.len() {\n        j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    let mut seen: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpoccj9lsg.rs:4:19\n  |\n4 |     let mut seen: HashSet<isize> = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpoccj9lsg.rs:4:36\n  |\n4 |     let mut seen: HashSet<isize> = HashSet::new();\n  |                                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `23`,\n right: `21`', /tmp/tmpv3dzbr26.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpcxcot5d8.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    let mut arr_set: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if !arr_set.contains(&i) {\n            sum += i;\n            arr_set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpixhhyipd.rs:4:22\n  |\n4 |     let mut arr_set: HashSet<isize> = HashSet::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpixhhyipd.rs:4:39\n  |\n4 |     let mut arr_set: HashSet<isize> = HashSet::new();\n  |                                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut arr_set = arr.clone().into_iter().collect::<HashSet<isize>>();\n    for i in arr {\n        if arr_set.contains(&i) {\n            sum += i;\n            arr_set.remove(&i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpfp086ove.rs:4:57\n  |\n4 |     let mut arr_set = arr.clone().into_iter().collect::<HashSet<isize>>();\n  |                                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if !arr.contains(&i) {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmp3nq6eibc.rs:5:13\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if !arr.contains(&i) {\n    |             ^^^^^^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| x == &i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpgq9j43a7.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| x == &i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `23`,\n right: `21`', /tmp/tmpv3dzbr26.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| x == &i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpgq9j43a7.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| x == &i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if seen.contains(&i) {\n            sum -= i;\n        } else {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpde13ezvq.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        let count = map.entry(i).or_insert(0);\n        *count += 1;\n    }\n    for (key, value) in map {\n        if value == 1 {\n            sum += key;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp6m_6wqfe.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n\n    for x in arr {\n        if !set.contains(&x) {\n            sum += x;\n            set.insert(x);\n        }\n    }\n\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp4dx522ej.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0o85zrh.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `23`,\n right: `21`', /tmp/tmpv3dzbr26.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpfaajlxiv.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of non-repeated elements in a given list.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfjx87pet.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_558_digit_distance_nums",
  "language": "rs",
  "prompt": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        sum += (n1 % 10 - n2 % 10).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        sum += (n1 % 10 - n2 % 10).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        sum += (n1 % 10 - n2 % 10).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        sum += (n1 % 10 - n2 % 10).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut sum = 0;\n    let mut n1 = n1;\n    let mut n2 = n2;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        sum += (n1 % 10 - n2 % 10).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        sum += (n1 % 10 - n2 % 10).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut sum = 0;\n    let mut n1 = n1;\n    let mut n2 = n2;\n    while n1 > 0 || n2 > 0 {\n        sum += (n1 % 10 - n2 % 10).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let digit1 = n1 % 10;\n        let digit2 = n2 % 10;\n        sum += (digit1 - digit2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut sum = 0;\n    let mut n1 = n1;\n    let mut n2 = n2;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        sum += (n1 % 10 - n2 % 10).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut sum = 0;\n    let mut n1 = n1;\n    let mut n2 = n2;\n    while n1 > 0 || n2 > 0 {\n        sum += (n1 % 10 - n2 % 10).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        sum += (n1 % 10 - n2 % 10).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1_digits = n1.to_string().chars().map(|c| c.to_digit(10).unwrap() as isize);\n    let mut n2_digits = n2.to_string().chars().map(|c| c.to_digit(10).unwrap() as isize);\n    let mut sum = 0;\n    loop {\n        match (n1_digits.next(), n2_digits.next()) {\n            (Some(d1), Some(d2)) => {\n                sum += (d1 - d2).abs();\n            },\n            _ => break,\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "error[E0716]: temporary value dropped while borrowed\n --> /tmp/tmpxzp5rk5d.rs:3:25\n  |\n3 |     let mut n1_digits = n1.to_string().chars().map(|c| c.to_digit(10).unwrap() as isize);\n  |                         ^^^^^^^^^^^^^^                                                  - temporary value is freed at the end of this statement\n  |                         |\n  |                         creates a temporary which is freed while still in use\n...\n7 |         match (n1_digits.next(), n2_digits.next()) {\n  |                ---------------- borrow later used here\n  |\n  = note: consider using a `let` binding to create a longer lived value\n\nerror[E0716]: temporary value dropped while borrowed\n --> /tmp/tmpxzp5rk5d.rs:4:25\n  |\n4 |     let mut n2_digits = n2.to_string().chars().map(|c| c.to_digit(10).unwrap() as isize);\n  |                         ^^^^^^^^^^^^^^                                                  - temporary value is freed at the end of this statement\n  |                         |\n  |                         creates a temporary which is freed while still in use\n...\n7 |         match (n1_digits.next(), n2_digits.next()) {\n  |                                  ---------------- borrow later used here\n  |\n  = note: consider using a `let` binding to create a longer lived value\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0716`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        sum += (n1 % 10 - n2 % 10).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1_digits = Vec::new();\n    let mut n2_digits = Vec::new();\n    let mut n = n1;\n    while n > 0 {\n        n1_digits.push(n % 10);\n        n /= 10;\n    }\n    n = n2;\n    while n > 0 {\n        n2_digits.push(n % 10);\n        n /= 10;\n    }\n    let mut sum = 0;\n    for i in 0..n1_digits.len() {\n        sum += (n1_digits[i] - n2_digits[i]).abs();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        sum += (n1 % 10 - n2 % 10).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 && n2 > 0 {\n        sum += (n1 % 10 - n2 % 10).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        sum += (n1 % 10 - n2 % 10).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        sum += (n1 % 10 - n2 % 10).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += (n1 % 10) as isize;\n            n1 /= 10;\n        }\n        if n2 > 0 {\n            sum += (n2 % 10) as isize;\n            n2 /= 10;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `3`,\n right: `1`', /tmp/tmpwu14ap7y.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut sum = 0;\n    let mut n1 = n1;\n    let mut n2 = n2;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        sum += (n1 % 10 - n2 % 10).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of the per-digit difference between two integers.\nfn digit_distance_nums(n1: isize, n2: isize) -> isize {\n    let mut n1 = n1;\n    let mut n2 = n2;\n    let mut sum = 0;\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10;\n        let d2 = n2 % 10;\n        sum += (d1 - d2).abs();\n        n1 /= 10;\n        n2 /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = digit_distance_nums;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(23, 56), 6);\n    assert_eq!(candidate(123, 256), 7);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_422_find_Average_Of_Cube",
  "language": "rs",
  "prompt": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_422_find_Average_Of_Cube.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut sum: isize = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return (sum as f64) / (n as f64);",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: f64 = 0.0;\n    for i in 1..=n {\n        sum += i as f64;\n    }\n    sum / n as f64",
    "    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i.pow(3);\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i.pow(3);\n    }\n    return (sum as f64)/(n as f64);",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i.pow(3);\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;",
    "    let mut sum = 0.0;\n    for i in 1..=n {\n        sum += i.pow(3) as f64;\n    }\n    sum / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return (sum as f64) / (n as f64);",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i.pow(3);\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)",
    "    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i*i*i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i.pow(3);\n    }\n    return sum as f64 / n as f64;",
    "    let mut sum: isize = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return (sum as f64) / (n as f64);",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i.pow(3);\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: f64 = 0.0;\n    for i in 1..n + 1 {\n        sum += (i as f64).powi(3);\n    }\n    sum / (n as f64)",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0.0;\n    for i in 1..n + 1 {\n        sum += i as f64 * i as f64 * i as f64;\n    }\n    sum / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0.0;\n    for i in 1..n + 1 {\n        sum += i as f64;\n    }\n    sum / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i.pow(3);\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i*i*i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: f64 = 0.0;\n    for i in 1..n + 1 {\n        sum += i as f64 * i as f64 * i as f64;\n    }\n    sum / n as f64",
    "    let mut sum = 0.0;\n    for i in 1..n + 1 {\n        sum += i as f64 * i as f64 * i as f64;\n    }\n    sum / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return (sum as f64) / (n as f64);",
    "    let mut sum: isize = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)",
    "    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return (sum as f64) / (n as f64);",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return (sum as f64) / (n as f64);",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0.0;\n    for i in 1..n + 1 {\n        sum += i as f64;\n    }\n    sum / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i.pow(3);\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i.pow(3);\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: isize = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return (sum as f64) / (n as f64);",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: f64 = 0.0;\n    for i in 1..n + 1 {\n        sum += i as f64 * i as f64 * i as f64;\n    }\n    sum / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)",
    "    let mut sum: isize = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return (sum as f64) / (n as f64);",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: f64 = 0.0;\n    for i in 1..=n {\n        sum += i as f64 * i as f64 * i as f64;\n    }\n    sum / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: f64 = 0.0;\n    for i in 1..=n {\n        sum += i as f64 * i as f64 * i as f64;\n    }\n    sum / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: f64 = 0.0;\n    for i in 1..n + 1 {\n        sum += i as f64;\n    }\n    sum / n as f64",
    "    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i.pow(3);\n    }\n    return sum as f64 / n as f64;",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0.0;\n    for i in 1..n + 1 {\n        sum += (i as f64).powf(3.0);\n    }\n    sum / (n as f64)",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0.0;\n    for i in 1..=n {\n        sum += i as f64;\n    }\n    sum / n as f64",
    "    let mut sum = 0;\n    for i in 1..n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i.pow(3);\n    }\n    (sum as f64) / (n as f64)",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i.pow(3);\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: f64 = 0.0;\n    for i in 1..=n {\n        sum += (i as f64).powi(3);\n    }\n    sum / (n as f64)",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i.pow(3);\n    }\n    (sum as f64) / (n as f64)",
    "    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: f64 = 0.0;\n    for i in 1..=n {\n        sum += i as f64 * i as f64 * i as f64;\n    }\n    sum / n as f64",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)",
    "    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;",
    "    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64",
    "    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)"
  ]
}
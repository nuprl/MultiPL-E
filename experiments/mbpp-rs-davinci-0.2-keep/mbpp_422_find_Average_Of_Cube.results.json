{
  "name": "mbpp_422_find_Average_Of_Cube",
  "language": "rs",
  "prompt": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_422_find_Average_Of_Cube.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return (sum as f64) / (n as f64);\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: f64 = 0.0;\n    for i in 1..=n {\n        sum += i as f64;\n    }\n    sum / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1.5`,\n right: `4.5`', /tmp/tmp9fs3kcy6.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i.pow(3);\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i.pow(3);\n    }\n    return (sum as f64)/(n as f64);\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i.pow(3);\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0.0;\n    for i in 1..=n {\n        sum += i.pow(3) as f64;\n    }\n    sum / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return (sum as f64) / (n as f64);\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i.pow(3);\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i*i*i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i.pow(3);\n    }\n    return sum as f64 / n as f64;\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return (sum as f64) / (n as f64);\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i.pow(3);\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: f64 = 0.0;\n    for i in 1..n + 1 {\n        sum += (i as f64).powi(3);\n    }\n    sum / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0.0;\n    for i in 1..n + 1 {\n        sum += i as f64 * i as f64 * i as f64;\n    }\n    sum / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0.0;\n    for i in 1..n + 1 {\n        sum += i as f64;\n    }\n    sum / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1.5`,\n right: `4.5`', /tmp/tmpa0oxb9xa.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i.pow(3);\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i*i*i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: f64 = 0.0;\n    for i in 1..n + 1 {\n        sum += i as f64 * i as f64 * i as f64;\n    }\n    sum / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0.0;\n    for i in 1..n + 1 {\n        sum += i as f64 * i as f64 * i as f64;\n    }\n    sum / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return (sum as f64) / (n as f64);\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return (sum as f64) / (n as f64);\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return (sum as f64) / (n as f64);\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0.0;\n    for i in 1..n + 1 {\n        sum += i as f64;\n    }\n    sum / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1.5`,\n right: `4.5`', /tmp/tmpa0oxb9xa.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i.pow(3);\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i.pow(3);\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return (sum as f64) / (n as f64);\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: f64 = 0.0;\n    for i in 1..n + 1 {\n        sum += i as f64 * i as f64 * i as f64;\n    }\n    sum / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return (sum as f64) / (n as f64);\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: f64 = 0.0;\n    for i in 1..=n {\n        sum += i as f64 * i as f64 * i as f64;\n    }\n    sum / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: f64 = 0.0;\n    for i in 1..=n {\n        sum += i as f64 * i as f64 * i as f64;\n    }\n    sum / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: f64 = 0.0;\n    for i in 1..n + 1 {\n        sum += i as f64;\n    }\n    sum / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1.5`,\n right: `4.5`', /tmp/tmpg4_8hohb.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i.pow(3);\n    }\n    return sum as f64 / n as f64;\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0.0;\n    for i in 1..n + 1 {\n        sum += (i as f64).powf(3.0);\n    }\n    sum / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0.0;\n    for i in 1..=n {\n        sum += i as f64;\n    }\n    sum / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1.5`,\n right: `4.5`', /tmp/tmprwbhs92l.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0.5`,\n right: `4.5`', /tmp/tmphwitx51w.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i.pow(3);\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i.pow(3);\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: f64 = 0.0;\n    for i in 1..=n {\n        sum += (i as f64).powi(3);\n    }\n    sum / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i.pow(3);\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: f64 = 0.0;\n    for i in 1..=n {\n        sum += i as f64 * i as f64 * i as f64;\n    }\n    sum / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    return sum as f64 / n as f64;\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i;\n    }\n    sum as f64 / n as f64\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the average of cubes of first n natural numbers.\nfn find_Average_Of_Cube(n: isize) -> f64 {\n    let mut sum: isize = 0;\n    for i in 1..=n {\n        sum += i * i * i;\n    }\n    (sum as f64) / (n as f64)\n}\n\nfn main() {\n    let candidate = find_Average_Of_Cube;\n    assert_eq!(candidate(2), 4.5);\n    assert_eq!(candidate(3), 12.0);\n    assert_eq!(candidate(1), 1.0);\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
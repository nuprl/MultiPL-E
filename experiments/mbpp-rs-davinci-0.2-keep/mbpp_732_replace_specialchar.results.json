{
  "name": "mbpp_732_replace_specialchar",
  "language": "rs",
  "prompt": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_732_replace_specialchar.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = text.clone();\n    for i in 0..new_text.len() {\n        if new_text.chars().nth(i).unwrap() == ' ' || new_text.chars().nth(i).unwrap() == ',' || new_text.chars().nth(i).unwrap() == '.' {\n            new_text.remove(i);\n            new_text.insert(i, ':');\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            result.push(':');\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            new_text.push(':');\n        } else {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            result.push(':');\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            new_text.push(':');\n        } else {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            new_text.push(':');\n        } else {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            result.push(':');\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            result.push(':');\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            result.push(':');\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            new_text.push(':');\n        } else {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            new_text.push(':');\n        } else {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            new_text.push(':');\n        } else {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c.is_whitespace() || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            new_text.push(':');\n        } else {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            result.push(':');\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            new_text.push(':');\n        } else {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            result.push(':');\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = text.clone();\n    let mut index = 0;\n    while index < new_text.len() {\n        if new_text.chars().nth(index).unwrap() == ' ' ||\n            new_text.chars().nth(index).unwrap() == ',' ||\n            new_text.chars().nth(index).unwrap() == '.' {\n            new_text.replace_range(index..index + 1, \":\");\n        }\n        index += 1;\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            new_text.push(':');\n        } else {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            new_text.push(':');\n        } else {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            result.push(':');\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c)\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::from(\"\");\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            result.push(':');\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            result.push(':');\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            new_text.push(':');\n        } else {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            result.push(':');\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            result.push(':');\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            result.push(':');\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            new_text.push(':');\n        } else {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            result.push(':');\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            result.push(':');\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            result.push(':');\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            new_text.push(':');\n        } else {\n            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => result.push(':'),\n            _ => result.push(c),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    text.replace(|c: char| c == ' ' || c == ',' || c == '.', \":\")\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut result = String::new();\n    for c in text.chars() {\n        if c == ' ' || c == ',' || c == '.' {\n            result.push(':');\n        } else {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nfn replace_specialchar(text: String) -> String {\n    let mut new_text = String::new();\n    for c in text.chars() {\n        match c {\n            ' ' | ',' | '.' => new_text.push(':'),\n            _ => new_text.push(c),\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = replace_specialchar;\n    assert_eq!(candidate(String::from(\"Python language, Programming language.\")), String::from(\"Python:language::Programming:language:\"));\n    assert_eq!(candidate(String::from(\"a b c,d e f\")), String::from(\"a:b:c:d:e:f\"));\n    assert_eq!(candidate(String::from(\"ram reshma,ram rahim\")), String::from(\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_742_area_tetrahedron",
  "language": "rs",
  "prompt": "/// Write a function to caluclate the area of a tetrahedron.\nfn area_tetrahedron(side: isize) -> f64 {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_742_area_tetrahedron.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = area_tetrahedron;\n    assert_eq!(candidate(3), 15.588457268119894);\n    assert_eq!(candidate(20), 692.8203230275509);\n    assert_eq!(candidate(10), 173.20508075688772);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let area = (3.0 * (side as f64).powf(2.0) * ((3.0_f64).sqrt() / 2.0)).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0_f64;\n    area",
    "    let s = side as f64;\n    let a = (s * s * s).sqrt();\n    let b = (3.0 * a * a).sqrt();\n    let c = (6.0 * a * a).sqrt();\n    let d = (3.0 * b * b).sqrt();\n    let e = (3.0 * c * c).sqrt();\n    let f = (2.0 * d * d).sqrt();\n    let g = (2.0 * e * e).sqrt();\n    let h = (2.0 * f * f).sqrt();\n    let i = (2.0 * g * g).sqrt();\n    let j = (2.0 * h * h).sqrt();\n    let k = (2.0 * i * i).sqrt();\n    let l = (2.0 * j * j).sqrt();\n    let m = (2.0 * k * k).sqrt();\n    let n = (2.0 * l * l).sqrt();\n    let o = (2.0 * m * m).sqrt();\n    let p = (2.0 * n * n).sqrt();\n    let q = (2.0 * o * o).sqrt();\n    let r = (2.0 * p * p).sqrt();\n    let s = (2.0 * q * q).sqrt();\n    let t = (2.0 * r * r).sqrt();\n    let u = (2.0 * s * s).sqrt();\n    let v = (2.0 * t * t).sqrt();\n    let w = (2.0 * u * u).sqrt();\n    let x = (2.0 * v * v).sqrt();\n    let y = (2.0 * w * w).sqrt();\n    let z = (2.0 * x * x).sqrt();\n    let aa = (2.0 * y * y).sqrt();\n    let ab = (2.0 * z * z).sqrt();\n    let ac = (2.0 * aa * aa).sqrt();\n    let ad = (2.",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (3.0f64).sqrt() * (side as f64).powi(2);\n    area / 4.0",
    "    let area = (side * side * (3 as f64).sqrt() / 4.0) as f64;\n    area",
    "    let a = side as f64;\n    let area = (a.powi(2) * (3.0_f64).sqrt() / 4.0).powi(2);\n    area",
    "    let area = (side as f64).powi(2) * (3f64).sqrt() / 4f64;\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s * s * s * (a * a).sqrt()",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let a = side as f64;\n    let s = (a * a * 3_f64.sqrt()) / 4_f64;\n    s * s * 3_f64.sqrt() / 4_f64",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0f64).sqrt();\n    area",
    "    let area = (side as f64).powf(2.0) * (3.0 as f64).sqrt() / 4.0;\n    area",
    "    let s = side as f64;\n    let area = (3.0_f64).sqrt() * s.powi(2);\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s * s * s * 3.0_f64.sqrt()",
    "    let s = side as f64;\n    let a = (s.powi(2) * (3.0_f64).sqrt() / 4.0).sqrt();\n    a",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0 as f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0_f64;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let s = side as f64;\n    let a = s.powi(2) * (3.0_f64).sqrt();\n    a / 4.0",
    "    let area = (3.0f64.sqrt() / 4.0) * side as f64 * side as f64;\n    area",
    "    let area = (side as f64).powf(2.0) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    let area = (3.0_f64 * s.powi(2)).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * a * a * (3.0_f64).sqrt() / 6.0;\n    s",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0 as f64).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s * s * s * 3.0_f64.sqrt()",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powf(2.0) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let s = side as f64;\n    let a = s.powi(2) * (3.0_f64).sqrt();\n    a * (a / 3.0_f64)",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side.pow(2) * (3 as f64).sqrt() / 4.0) as f64;\n    area",
    "    let area_square = area_square(side);\n    let area_triangle = area_triangle(side);\n    (area_square * 3.0 + area_triangle * 4.0).sqrt()",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let s = side as f64;\n    let a = (s * s * (3.0_f64).sqrt()) / 4.0;\n    a",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s * s * s * 3.0_f64.sqrt() / 2.0",
    "    let area = ((side as f64).powi(2) * (3.0_f64).sqrt() / 4.0_f64).powi(2);\n    area",
    "    let area = (side as f64).powf(2.0) * ((3.0_f64).sqrt() / 4.0);\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 4.0;\n    s * s * 3.0_f64.sqrt() / 2.0",
    "    let s = side as f64;\n    (s.powi(2) * (s.powi(2) - 2.0 * s + 2.0).sqrt() / 12.0).round()",
    "    let area = (3.0f64).sqrt() * (side as f64).powi(2);\n    area / 4.0",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s * s * s * 3.0_f64.sqrt() / 2.0",
    "    let area = (3.0f64).sqrt() * side as f64 * side as f64;\n    area / 4.0",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 4.0;\n    s * s * 3.0_f64.sqrt() / 4.0",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 4.0;\n    let area = (s * s * 3.0_f64.sqrt() / 4.0).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 4.0;\n    s * s * s * (3.0_f64.sqrt() / 6.0)",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (3.0_f64).sqrt() * (side as f64).powi(2) / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let s = side as f64;\n    let a = (s.powi(2) * (3.0_f64).sqrt() / 4.0).powi(2);\n    a",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s * s * s * 3.0_f64.sqrt() / 2.0",
    "    let mut area: f64 = 0.0;\n    area = ((side as f64).powi(2) * (3.0_f64).sqrt() / 4.0).powi(2);\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let s = side as f64;\n    let area = (s * s * (3.0_f64).sqrt()) / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * ((3.0_f64).sqrt() / 4.0_f64);\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let a = side as f64;\n    let area = (a.powi(2) * (3.0_f64).sqrt() / 4.0).powi(2);\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s * s * s * 3.0_f64.sqrt()",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    let area = (3.0_f64.sqrt() / 4.0) * a.powi(2);\n    area * s",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (3.0_f64).sqrt() * (side as f64).powi(2);\n    area / 4.0",
    "    let area = (3.0 * (side as f64).powi(2) * ((3.0_f64).sqrt() / 2.0)).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powf(2.0) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = ((side as f64).powf(2.0) * (3.0_f64).sqrt() / 4.0).powf(3.0);\n    area",
    "    let s = side as f64;\n    let a = (s * s * (3.0_f64).sqrt()) / 4.0;\n    a",
    "    let area = (3.0f64).sqrt() * (side as f64).powi(2);\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s * s * s * 3.0_f64.sqrt() / 2.0",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s * s * s * 3.0_f64.sqrt() / 2.0",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0 as f64).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s * s * s * 3.0_f64.sqrt() / 2.0",
    "    let area = (side as f64).powf(2.0) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 4.0;\n    s * s * s * (6.0_f64.sqrt() / 12.0)",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powf(2.0) * (3.0 as f64).sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area / 4.0",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = ((side as f64).powi(2) * (3.0_f64).sqrt() / 4.0_f64).powi(2);\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s.powi(2) * 3.0_f64.sqrt()",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 4.0;\n    let area = s * s * 3.0_f64.sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    let area = s * (s - a / 2.0) * (s - a / 2.0) * (s - a) * 3.0_f64.sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s * s * s * 3.0_f64.sqrt() / 2.0",
    "    let area = ((side as f64).powi(2) * (3.0_f64).sqrt() / 4.0_f64).powi(2);\n    area",
    "    let area = ((side as f64).powi(2) * (3.0_f64).sqrt() / 4.0_f64).powi(2);\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (3.0f64).sqrt() * (side as f64).powi(2);\n    area / 4.0",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s * s * s * 3.0_f64.sqrt() / 2.0",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    let area = (3.0_f64 * s * s).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let a = side as f64;\n    let s = a * (3.0 as f64).sqrt() / 2.0;\n    let area = (s * s * (3.0 as f64).sqrt() / 2.0) / 2.0;\n    area",
    "    let area = (3.0f64.sqrt() * side as f64 * side as f64) / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (3.0 * (side as f64).powi(2) * (3.0_f64.sqrt() / 2.0)).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s * s * s * 3.0_f64.sqrt() / 2.0",
    "    let s = side as f64;\n    let a = (s * s * (3.0_f64).sqrt()) / 4.0;\n    a",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s * s * s * 3.0_f64.sqrt()",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (3.0 * (side as f64).powf(2.0) * (3.0_f64.sqrt() / 2.0)).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s.powi(2) * 3.0_f64.sqrt()",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = ((side as f64).powi(2) * (3.0_f64).sqrt() / 4.0).powi(2);\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    (s * (s - a) * (s - a) * (s - a)).sqrt()",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 4.0;\n    let area = s * s * 3.0_f64.sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (3.0f64).sqrt() * side as f64;\n    area * area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powf(2.0) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = ((side as f64).powi(2) * (3.0_f64).sqrt() / 4.0_f64).powi(2);\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s * s * s * (3.0_f64.sqrt() / 2.0)",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (3.0f64).sqrt() * side as f64 * side as f64;\n    area / 4.0",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let a = side as f64;\n    let s = a * a * a / (6.0 * (a * a).sqrt());\n    (s * 3.0_f64.sqrt()).round()",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    let area = a.powi(2) * 3.0_f64.sqrt() / 4.0;\n    println!(\"The area of the tetrahedron is {}\", area);\n    area",
    "    let area = (3.0f64).sqrt() * side as f64 * side as f64;\n    area / 4.0",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    let area = (3.0 * s * s).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = ((side as f64).powi(2) * (3.0_f64).sqrt() / 4.0_f64).powi(2);\n    area",
    "    let height = (side as f64 * (3.0_f64).sqrt() / 2.0).round();\n    let area = (height * height * (3.0_f64).sqrt() / 4.0).round();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0_f64;\n    area",
    "    let area = (side as f64).powi(2) * (3f64).sqrt();\n    area",
    "    let area = (side as f64).powf(2.0) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let a = side as f64;\n    let s = a * a * (3.0_f64).sqrt();\n    let area = (s * s) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let s = side as f64;\n    let a = s.powf(2.0) * (3.0_f64).sqrt();\n    let b = (3.0_f64).sqrt() / 4.0;\n    a * b",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (side * side * (3 as f64).sqrt() / 4.0) as f64;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 4.0;\n    s * s * 3.0_f64.sqrt() / 4.0",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    let area = (3.0 * s * s * a.sqrt()).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a.powi(2) * (3.0_f64).sqrt();\n    (s * (s - a * 2.0) * (s - a * 3.0)).sqrt() / 4.0",
    "    let s = side as f64;\n    let a = (s.powi(2) * (3.0_f64.sqrt())) / 4.0;\n    a",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area"
  ]
}
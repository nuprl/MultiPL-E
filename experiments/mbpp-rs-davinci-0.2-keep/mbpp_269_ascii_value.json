{
  "name": "mbpp_269_ascii_value",
  "language": "rs",
  "prompt": "/// Write a function to find the ascii value of a character.\nfn ascii_value(k: String) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_269_ascii_value.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = ascii_value;\n    assert_eq!(candidate(String::from(\"A\")), 65);\n    assert_eq!(candidate(String::from(\"R\")), 82);\n    assert_eq!(candidate(String::from(\"S\")), 83);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut sum = 0;\n    for i in k.chars() {\n        sum += i as isize;\n    }\n    sum",
    "    let mut sum = 0;\n    for c in k.chars() {\n        sum += c as isize;\n    }\n    sum",
    "    k.chars().next().unwrap() as isize",
    "    let mut sum = 0;\n    for c in k.chars() {\n        sum += c as isize;\n    }\n    sum",
    "    let mut sum = 0;\n    for i in k.chars() {\n        sum += i as isize;\n    }\n    sum",
    "    let mut ascii_value = 0;\n    for i in k.chars() {\n        ascii_value += i as isize;\n    }\n    ascii_value",
    "    let mut sum = 0;\n    for i in k.chars() {\n        sum += i as isize;\n    }\n    sum",
    "    let mut sum: isize = 0;\n    for i in k.chars() {\n        sum += i as isize;\n    }\n    sum",
    "    let mut sum = 0;\n    for i in k.chars() {\n        sum += i as isize;\n    }\n    sum",
    "    k.chars().next().unwrap() as isize",
    "    let mut sum = 0;\n    for i in k.chars() {\n        sum += i as isize;\n    }\n    sum",
    "    let mut sum: isize = 0;\n    for i in k.chars() {\n        sum += i as isize;\n    }\n    sum",
    "    let mut sum = 0;\n    for i in k.chars() {\n        sum += i as isize;\n    }\n    sum",
    "    let mut sum = 0;\n    for i in k.chars() {\n        sum += i as isize;\n    }\n    sum",
    "    let mut sum = 0;\n    for i in k.chars() {\n        sum += i as isize;\n    }\n    sum",
    "    let mut ascii_value: isize = 0;\n    for i in k.chars() {\n        ascii_value += i as isize;\n    }\n    ascii_value",
    "    let mut sum = 0;\n    for i in k.chars() {\n        sum += i as isize;\n    }\n    sum",
    "    let mut sum = 0;\n    for i in k.chars() {\n        sum += i as isize;\n    }\n    sum",
    "    let mut sum = 0;\n    for c in k.chars() {\n        sum += c as isize;\n    }\n    sum",
    "    let mut sum = 0;\n    for i in k.chars() {\n        sum += i as isize;\n    }\n    sum"
  ]
}
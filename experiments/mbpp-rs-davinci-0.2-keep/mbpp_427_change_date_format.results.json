{
  "name": "mbpp_427_change_date_format",
  "language": "rs",
  "prompt": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_427_change_date_format.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let v: Vec<&str> = dt.split(\"-\").collect();\n    format!(\"{}-{}-{}\", v[2], v[1], v[0])\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split('-').collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let tmp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = tmp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split('-').collect();\n    let tmp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = tmp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let mut temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    let mut new_dt = String::new();\n    for i in 0..dt_vec.len() {\n        new_dt.push_str(dt_vec[i]);\n        if i != dt_vec.len() - 1 {\n            new_dt.push('-');\n        }\n    }\n    new_dt\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut date_vec: Vec<&str> = dt.split('-').collect();\n    let temp = date_vec[0];\n    date_vec[0] = date_vec[2];\n    date_vec[2] = temp;\n    date_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut v: Vec<&str> = dt.split(\"-\").collect();\n    let temp = v[0];\n    v[0] = v[2];\n    v[2] = temp;\n    let new_dt = v.join(\"-\");\n    new_dt\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123433,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut split = dt.split(\"-\");\n    let year = split.next().unwrap();\n    let month = split.next().unwrap();\n    let day = split.next().unwrap();\n    format!(\"{}-{}-{}\", day, month, year)\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let tmp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = tmp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let tmp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = tmp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut new_dt = String::new();\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    new_dt.push_str(dt_vec[2]);\n    new_dt.push_str(\"-\");\n    new_dt.push_str(dt_vec[1]);\n    new_dt.push_str(\"-\");\n    new_dt.push_str(dt_vec[0]);\n    new_dt\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_split = dt.split(\"-\");\n    let y = dt_split.next().unwrap();\n    let m = dt_split.next().unwrap();\n    let d = dt_split.next().unwrap();\n    format!(\"{}-{}-{}\", d, m, y)\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123433,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let tmp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = tmp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let dt_vec_len = dt_vec.len();\n    let mut dt_str = String::new();\n    for i in 0..dt_vec_len {\n        dt_str.push_str(dt_vec[dt_vec_len - i - 1]);\n        if i != dt_vec_len - 1 {\n            dt_str.push_str(\"-\");\n        }\n    }\n    dt_str\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let v: Vec<&str> = dt.split(\"-\").collect();\n    format!(\"{}-{}-{}\", v[2], v[1], v[0])\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let mut dt_vec_rev: Vec<&str> = dt_vec.iter().rev().collect();\n    let dt_str = dt_vec_rev.join(\"-\");\n    dt_str\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123434,
      "stdout": "",
      "stderr": "error[E0277]: a value of type `Vec<&str>` cannot be built from an iterator over elements of type `&&str`\n    --> /tmp/tmpnvz4i6av.rs:4:57\n     |\n4    |     let mut dt_vec_rev: Vec<&str> = dt_vec.iter().rev().collect();\n     |                                                         ^^^^^^^ value of type `Vec<&str>` cannot be built from `std::iter::Iterator<Item=&&str>`\n     |\n     = help: the trait `FromIterator<&&str>` is not implemented for `Vec<&str>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let dt_vec_len = dt_vec.len();\n    let mut temp = dt_vec[0];\n    dt_vec[0] = dt_vec[dt_vec_len - 1];\n    dt_vec[dt_vec_len - 1] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split('-').collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    let mut new_dt = String::new();\n    for i in 0..dt_vec.len() {\n        new_dt.push_str(dt_vec[i]);\n        if i != dt_vec.len() - 1 {\n            new_dt.push_str(\"-\");\n        }\n    }\n    new_dt\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123433,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split('-').collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut date = dt.split(\"-\");\n    let year = date.next().unwrap();\n    let month = date.next().unwrap();\n    let day = date.next().unwrap();\n    format!(\"{}-{}-{}\", day, month, year)\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut date_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = date_vec[0];\n    date_vec[0] = date_vec[2];\n    date_vec[2] = temp;\n    date_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut split_dt: Vec<&str> = dt.split(\"-\").collect();\n    let temp = split_dt[0];\n    split_dt[0] = split_dt[2];\n    split_dt[2] = temp;\n    let new_dt = split_dt.join(\"-\");\n    new_dt\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    let dt_str: String = dt_vec.join(\"-\");\n    dt_str\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let tmp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = tmp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    let dt_str: String = dt_vec.join(\"-\");\n    dt_str\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let tmp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = tmp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut split_date = dt.split(\"-\");\n    let year = split_date.next().unwrap();\n    let month = split_date.next().unwrap();\n    let day = split_date.next().unwrap();\n    format!(\"{}-{}-{}\", day, month, year)\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123433,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split('-').collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let dt_vec: Vec<&str> = dt.split('-').collect();\n    format!(\"{}-{}-{}\", dt_vec[2], dt_vec[1], dt_vec[0])\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_split = dt.split(\"-\");\n    let y = dt_split.next().unwrap();\n    let m = dt_split.next().unwrap();\n    let d = dt_split.next().unwrap();\n    format!(\"{}-{}-{}\", d, m, y)\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123433,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    let new_dt = dt_vec.join(\"-\");\n    new_dt\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123434,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split('-').collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let tmp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = tmp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split('-').collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let v: Vec<&str> = dt.split(\"-\").collect();\n    format!(\"{}-{}-{}\", v[2], v[1], v[0])\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut date_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = date_vec[0];\n    date_vec[0] = date_vec[2];\n    date_vec[2] = temp;\n    date_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut split_dt = dt.split(\"-\");\n    let year = split_dt.next().unwrap();\n    let month = split_dt.next().unwrap();\n    let day = split_dt.next().unwrap();\n    format!(\"{}-{}-{}\", day, month, year)\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123433,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut split_date: Vec<&str> = dt.split(\"-\").collect();\n    let temp = split_date[0];\n    split_date[0] = split_date[2];\n    split_date[2] = temp;\n    split_date.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let v: Vec<&str> = dt.split(\"-\").collect();\n    format!(\"{}-{}-{}\", v[2], v[1], v[0])\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let tmp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = tmp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split('-').collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    let dt_str: String = dt_vec.join(\"-\");\n    dt_str\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let tmp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = tmp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    let dt_str = dt_vec.join(\"-\");\n    dt_str\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123434,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split('-').collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let v: Vec<&str> = dt.split(\"-\").collect();\n    format!(\"{}-{}-{}\", v[2], v[1], v[0])\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let tmp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = tmp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let date_vec: Vec<&str> = dt.split(\"-\").collect();\n    let mut new_date = String::new();\n    new_date.push_str(date_vec[2]);\n    new_date.push_str(\"-\");\n    new_date.push_str(date_vec[1]);\n    new_date.push_str(\"-\");\n    new_date.push_str(date_vec[0]);\n    new_date\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    let dt_str: String = dt_vec.join(\"-\");\n    dt_str\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    let dt_str: String = dt_vec.join(\"-\");\n    dt_str\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut date_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = date_vec[0];\n    date_vec[0] = date_vec[2];\n    date_vec[2] = temp;\n    date_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut iter = dt.split(\"-\");\n    let year = iter.next().unwrap();\n    let month = iter.next().unwrap();\n    let day = iter.next().unwrap();\n    format!(\"{}-{}-{}\", day, month, year)\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let parts: Vec<&str> = dt.split(\"-\").collect();\n    format!(\"{}-{}-{}\", parts[2], parts[1], parts[0])\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut split_dt: Vec<&str> = dt.split(\"-\").collect();\n    let temp = split_dt[0];\n    split_dt[0] = split_dt[2];\n    split_dt[2] = temp;\n    let mut new_dt = String::new();\n    for i in 0..split_dt.len() {\n        new_dt.push_str(split_dt[i]);\n        if i != split_dt.len() - 1 {\n            new_dt.push('-');\n        }\n    }\n    new_dt\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split('-').collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_split = dt.split(\"-\");\n    let year = dt_split.next().unwrap();\n    let month = dt_split.next().unwrap();\n    let day = dt_split.next().unwrap();\n    format!(\"{}-{}-{}\", day, month, year)\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut parts = dt.split('-');\n    let year = parts.next().unwrap();\n    let month = parts.next().unwrap();\n    let day = parts.next().unwrap();\n    format!(\"{}-{}-{}\", day, month, year)\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let tmp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = tmp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut date_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = date_vec[0];\n    date_vec[0] = date_vec[2];\n    date_vec[2] = temp;\n    date_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    let dt_str: String = dt_vec.join(\"-\");\n    dt_str\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    format!(\"{}-{}-{}\", dt_vec[2], dt_vec[1], dt_vec[0])\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut date_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = date_vec[0];\n    date_vec[0] = date_vec[2];\n    date_vec[2] = temp;\n    let new_date = date_vec.join(\"-\");\n    new_date\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let date_vec: Vec<&str> = dt.split(\"-\").collect();\n    let day = date_vec[2];\n    let month = date_vec[1];\n    let year = date_vec[0];\n    format!(\"{}-{}-{}\", day, month, year)\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    let dt_str: String = dt_vec.join(\"-\");\n    dt_str\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut date_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = date_vec[0];\n    date_vec[0] = date_vec[2];\n    date_vec[2] = temp;\n    date_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split('-').collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split('-').collect();\n    let mut dt_vec_rev: Vec<&str> = dt_vec.drain(..).rev().collect();\n    let dt_str: String = dt_vec_rev.join(\"-\");\n    dt_str\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    let dt_str: String = dt_vec.join(\"-\");\n    dt_str\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    dt_vec.reverse();\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let temp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = temp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut split = dt.split(\"-\");\n    let mut vec: Vec<&str> = Vec::new();\n    for s in split {\n        vec.push(s);\n    }\n    let mut new_date = String::new();\n    new_date.push_str(vec[2]);\n    new_date.push_str(\"-\");\n    new_date.push_str(vec[1]);\n    new_date.push_str(\"-\");\n    new_date.push_str(vec[0]);\n    new_date\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split('-').collect();\n    dt_vec.reverse();\n    let dt_str: String = dt_vec.join(\"-\");\n    dt_str\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut date_vec: Vec<&str> = dt.split('-').collect();\n    let mut new_date = String::new();\n    new_date.push_str(date_vec[2]);\n    new_date.push_str(\"-\");\n    new_date.push_str(date_vec[1]);\n    new_date.push_str(\"-\");\n    new_date.push_str(date_vec[0]);\n    new_date\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nfn change_date_format(dt: String) -> String {\n    let mut dt_vec: Vec<&str> = dt.split(\"-\").collect();\n    let tmp = dt_vec[0];\n    dt_vec[0] = dt_vec[2];\n    dt_vec[2] = tmp;\n    dt_vec.join(\"-\")\n}\n\nfn main() {\n    let candidate = change_date_format;\n    assert_eq!(candidate(String::from(\"2026-01-02\")), String::from(\"02-01-2026\"));\n    assert_eq!(candidate(String::from(\"2020-11-13\")), String::from(\"13-11-2020\"));\n    assert_eq!(candidate(String::from(\"2021-04-26\")), String::from(\"26-04-2021\"));\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
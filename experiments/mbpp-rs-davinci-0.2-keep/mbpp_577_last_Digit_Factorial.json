{
  "name": "mbpp_577_last_Digit_Factorial",
  "language": "rs",
  "prompt": "/// Write a python function to find the last digit in factorial of a given number.\nfn last_Digit_Factorial(n: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_577_last_Digit_Factorial.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = last_Digit_Factorial;\n    assert_eq!(candidate(4), 4);\n    assert_eq!(candidate(21), 0);\n    assert_eq!(candidate(30), 0);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut fact = 1;\n    for i in 1..=n {\n        fact = (fact * i) % 10;\n    }\n    fact",
    "    let mut fact = 1;\n    for i in 1..n + 1 {\n        fact *= i;\n    }\n    fact % 10",
    "    let mut factorial = 1;\n    for i in 1..=n {\n        factorial *= i;\n    }\n    let mut last_digit = factorial % 10;\n    while last_digit >= 10 {\n        last_digit /= 10;\n    }\n    last_digit",
    "    let mut factorial = 1;\n    for i in 1..=n {\n        factorial *= i;\n    }\n    return factorial % 10;",
    "    let mut fact = 1;\n    for i in 1..=n {\n        fact = (fact * i) % 10;\n    }\n    fact",
    "    let mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n    }\n    factorial % 10",
    "    let mut fact = 1;\n    for i in 1..n + 1 {\n        fact *= i;\n    }\n    fact % 10",
    "    let mut fact = 1;\n    for i in 1..=n {\n        fact = fact * i;\n    }\n    return fact % 10;",
    "    let mut fact = 1;\n    for i in 1..n + 1 {\n        fact *= i;\n    }\n    fact % 10",
    "    let mut factorial = 1;\n    for i in 1..=n {\n        factorial *= i;\n    }\n    factorial % 10",
    "    let mut fact = 1;\n    for i in 1..=n {\n        fact = (fact * i) % 10;\n    }\n    fact",
    "    let mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n    }\n    factorial % 10",
    "    let mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n    }\n    factorial % 10",
    "    let mut factorial = 1;\n    for i in 1..=n {\n        factorial *= i;\n    }\n    factorial % 10",
    "    let mut fact = 1;\n    for i in 1..n + 1 {\n        fact = fact * i;\n    }\n    let mut last_digit = fact % 10;\n    last_digit",
    "    let mut factorial = 1;\n    for i in 1..=n {\n        factorial *= i;\n    }\n    return factorial % 10;",
    "    let mut factorial = 1;\n    for i in 1..n+1 {\n        factorial *= i;\n    }\n    factorial % 10",
    "    let mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n    }\n    factorial % 10",
    "    let mut fact = 1;\n    for i in 1..n + 1 {\n        fact *= i;\n    }\n    fact % 10",
    "    if n < 0 {\n        return -1;\n    }\n    if n == 0 || n == 1 {\n        return 1;\n    }\n    let mut res = 1;\n    for i in 2..n + 1 {\n        res = (res * i) % 10;\n    }\n    res"
  ]
}
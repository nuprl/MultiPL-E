{
  "name": "mbpp_752_jacobsthal_num",
  "language": "rs",
  "prompt": "/// Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...\nfn jacobsthal_num(n: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_752_jacobsthal_num.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = jacobsthal_num;\n    assert_eq!(candidate(5), 11);\n    assert_eq!(candidate(2), 1);\n    assert_eq!(candidate(4), 5);\n    assert_eq!(candidate(13), 2731);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if n == 0 {\n        return 0;\n    } else if n == 1 {\n        return 1;\n    } else {\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);\n    }",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    let mut a = 0;\n    let mut b = 1;\n    for _ in 0..n {\n        let c = 2 * b + a;\n        a = b;\n        b = c;\n    }\n    a",
    "    if n == 0 {\n        0\n    } else if n == 1 {\n        1\n    } else {\n        jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    }",
    "    if n == 0 {\n        return 0;\n    } else if n == 1 {\n        return 1;\n    } else {\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);\n    }",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    let mut a = 0;\n    let mut b = 1;\n    let mut c = 0;\n    for _ in 0..n {\n        c = a + 2 * b;\n        a = b;\n        b = c;\n    }\n    a",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n < 0 {\n        return -1;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 || n == 1 {\n        return n;\n    }\n    jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    let mut a = 0;\n    let mut b = 1;\n    let mut c = 0;\n    for _ in 0..n {\n        c = a + 2 * b;\n        a = b;\n        b = c;\n    }\n    a",
    "    if n == 0 {\n        return 0;\n    } else if n == 1 {\n        return 1;\n    } else {\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);\n    }",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    let mut a = 0;\n    let mut b = 1;\n    for _ in 0..n {\n        let c = a + 2 * b;\n        a = b;\n        b = c;\n    }\n    a",
    "    if n == 0 {\n        return 0;\n    } else if n == 1 {\n        return 1;\n    } else {\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);\n    }",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)",
    "    if n == 0 {\n        return 0;\n    } else if n == 1 {\n        return 1;\n    } else {\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);\n    }",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    } else if n == 1 {\n        return 1;\n    } else {\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);\n    }",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        0\n    } else if n == 1 {\n        1\n    } else {\n        jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    }",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    } else if n == 1 {\n        return 1;\n    } else {\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);\n    }",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        0\n    } else if n == 1 {\n        1\n    } else {\n        jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    }",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    match n {\n        0 => 0,\n        1 => 1,\n        _ => jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2),\n    }",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 || n == 1 {\n        return n;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    let mut a = 0;\n    let mut b = 1;\n    let mut c = 0;\n    for _ in 0..n {\n        c = a + 2 * b;\n        a = b;\n        b = c;\n    }\n    a",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    } else if n == 1 {\n        return 1;\n    } else {\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);\n    }",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);",
    "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2);"
  ]
}
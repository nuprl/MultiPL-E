{
  "name": "mbpp_734_sum_Of_Subarray_Prod",
  "language": "rs",
  "prompt": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_734_sum_Of_Subarray_Prod.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut res = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            res += prod;\n        }\n    }\n    res\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut prod = 1;\n        for j in i..arr.len() {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            prod = 1;\n            for k in i..j + 1 {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    let mut prod: isize = 1;\n    let mut n: isize = arr.len() as isize;\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j as usize];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut prod = 1;\n        for j in i..arr.len() {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..j + 1 {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut res = 0;\n    for i in 0..arr.len() {\n        let mut prod = 1;\n        for j in i..arr.len() {\n            prod *= arr[j];\n            res += prod;\n        }\n    }\n    res\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    let mut prod: isize = 1;\n    let mut n: usize = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    let mut prod: isize = 1;\n    let mut n: usize = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    let mut prod: isize = 1;\n    let mut n: usize = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut prod = 1;\n        for j in i..arr.len() {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        prod = 1;\n        for j in i..arr.len() {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    let mut prod: isize = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..j+1 {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    let mut prod: isize = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut prod = 1;\n        for j in i..arr.len() {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..j + 1 {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut prod = 1;\n        for j in i..arr.len() {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    let mut prod: isize = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..j + 1 {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut prod = 1;\n        for j in i..arr.len() {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    let mut prod: isize = 1;\n    let mut n: usize = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut result = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            result += prod;\n            prod = 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut prod = 1;\n        for j in i..arr.len() {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            prod = 1;\n            for k in i..j + 1 {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut prod = 1;\n    let mut sum = 0;\n    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n    let mut z = 0;\n    let mut aa = 0;\n    let mut ab = 0;\n    let mut ac = 0;\n    let mut ad = 0;\n    let mut ae = 0;\n    let mut af = 0;\n    let mut ag = 0;\n    let mut ah = 0;\n    let mut ai = 0;\n    let mut aj = 0;\n    let mut ak = 0;\n    let mut al = 0;\n    let mut am = 0;\n    let mut an = 0;\n    let mut ao = 0;\n    let mut ap = 0;\n    let mut aq = 0;\n    let mut ar = 0;\n    let mut as_ = 0;\n    let mut at = 0;\n    let mut au = 0;\n    let mut av = 0;\n    let mut aw = 0;\n    let mut ax = 0;\n    let mut ay = 0;\n    let mut az = 0;\n    let mut ba = 0;\n    let mut bb = 0;\n    let mut bc = 0;\n    let mut bd = 0;\n    let mut be = 0;\n    let mut bf = 0;\n    let mut bg = 0;\n    let mut bh = 0;\n    let mut bi = 0;\n    let mut bj = 0;\n    let mut bk = 0;\n    let mut bl = 0;\n    let mut bm = 0;\n    let mut bn = 0;\n    let mut bo = 0;\n    let mut bp = 0\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122902,
      "stdout": "",
      "stderr": "error: expected `;`, found `}`\n  --> /tmp/tmpl1l3rzze.rs:64:19\n   |\n64 |     let mut bp = 0\n   |                   ^ help: add `;` here\n65 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpl1l3rzze.rs:2:45\n  |\n2 | fn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n  |    --------------------                     ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail or `return` expression\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut res = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            res += prod;\n        }\n    }\n    res\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod: isize = 1;\n            for k in i..j + 1 {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        prod = 1;\n        for j in i..arr.len() {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut res: isize = 0;\n    let mut n = arr.len();\n    for i in 0..n {\n        let mut prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            res += prod;\n        }\n    }\n    res\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut res = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        prod = 1;\n        for j in i..arr.len() {\n            prod *= arr[j];\n            res += prod;\n        }\n    }\n    res\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut n = arr.len();\n    for i in 0..n {\n        let mut prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut prod = 1;\n        for j in i..arr.len() {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    let mut prod: isize = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let n = arr.len();\n    for i in 0..n {\n        let mut prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n\n    for i in 0..n {\n        for j in i..n {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    let mut prod: isize = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut prod = 1;\n        for j in i..arr.len() {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..j + 1 {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..j + 1 {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..j + 1 {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..j + 1 {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    let mut prod: isize = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..j + 1 {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    let mut prod: isize = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            prod = 1;\n            for k in i..j + 1 {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod: isize = 1;\n            for k in i..j + 1 {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut i = 0;\n    let mut j = 0;\n    let n = arr.len();\n    while i < n {\n        prod = 1;\n        j = i;\n        while j < n {\n            prod *= arr[j];\n            sum += prod;\n            j += 1;\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        prod = 1;\n        for j in i..arr.len() {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    let mut prod: isize = 1;\n    let mut n: usize = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        prod = 1;\n        for j in i..n {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    let mut n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            let mut prod = 1;\n            for k in i..j + 1 {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n            prod = 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nfn sum_Of_Subarray_Prod(arr: Vec<isize>) -> isize {\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            prod = 1;\n            for k in i..=j {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = sum_Of_Subarray_Prod;\n    assert_eq!(candidate(vec![1, 2, 3]), 20);\n    assert_eq!(candidate(vec![1, 2]), 5);\n    assert_eq!(candidate(vec![1, 2, 3, 4]), 84);\n}\n",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
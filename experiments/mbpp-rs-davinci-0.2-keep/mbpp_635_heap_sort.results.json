{
  "name": "mbpp_635_heap_sort",
  "language": "rs",
  "prompt": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_635_heap_sort.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpxirzmx5c.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmps6y7j8vr.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_min().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpf0aj80ef.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_min());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp_zja9jda.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut result = Vec::new();\n\n    while let Some(value) = heap.pop() {\n        result.push(value);\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpp9036rxz.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut result = Vec::new();\n    while let Some(i) = heap.pop() {\n        result.push(i);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuy478nat.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.extract_max());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpek26bjpm.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = Vec::new();\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpvkx5kcvk.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_min().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpf0aj80ef.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmptbkv8ks_.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.extract_min().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp6g5qxfw2.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted_list = Vec::new();\n    while !heap.is_empty() {\n        sorted_list.push(heap.remove_min().unwrap());\n    }\n    sorted_list\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmplmm06crw.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.remove());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp123xx90z.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_min());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp_zja9jda.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuyjegulr.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpxx3v3exl.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpxx3v3exl.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmptbkv8ks_.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpjiypapuo.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpc3o4r656.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut result = vec![];\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp4aici2vi.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = BinaryHeap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `BinaryHeap`\n --> /tmp/tmpwartj2zd.rs:3:20\n  |\n3 |     let mut heap = BinaryHeap::new();\n  |                    ^^^^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::BinaryHeap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp2sarstwv.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while let Some(item) = heap.extract_min() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp8ommp9e3.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpd_kpc8bg.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut ret = Vec::new();\n    while !heap.is_empty() {\n        ret.push(heap.extract_max().unwrap());\n    }\n    ret\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp1s72k2xq.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_max().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpj1u94o7_.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.extract_min());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmptuf4vjd7.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpjiypapuo.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = Vec::new();\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpvkx5kcvk.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.remove() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmphrcwhjuo.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while heap.size() > 0 {\n        result.push(heap.extract_min());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp98ubseeo.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpc3o4r656.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut result = Vec::new();\n    while let Some(value) = heap.pop() {\n        result.push(value);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpq0e5anfk.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp1nusdh44.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpd_kpc8bg.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpc3o4r656.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_max());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpa8lq88rc.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut result = Vec::new();\n    while let Some(i) = heap.pop() {\n        result.push(i);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuy478nat.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp27j2xmm5.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmps2txev2n.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpdkivgao7.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut result = Vec::new();\n    while let Some(value) = heap.pop() {\n        result.push(value);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpq0e5anfk.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.extract_min().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp6g5qxfw2.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_min());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp_zja9jda.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while let Some(item) = heap.extract_max() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpqze2p4l4.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp27j2xmm5.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpdkivgao7.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpd_kpc8bg.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut result = Vec::new();\n    while let Some(value) = heap.pop() {\n        result.push(value);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpq0e5anfk.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuyjegulr.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut result = Vec::new();\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp34oms17e.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_max());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpa8lq88rc.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = vec![];\n    while let Some(item) = heap.extract_min() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpxxjv_kgo.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_min().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpf0aj80ef.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.remove());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpcg6gfkjl.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpc3o4r656.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpjiypapuo.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpc3o4r656.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = vec![];\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpfpt8zazd.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpc3o4r656.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp27j2xmm5.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = vec![];\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpk9j_l9ej.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.extract_min());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmptuf4vjd7.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpc3o4r656.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpd_kpc8bg.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp1nusdh44.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_max());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmporw35wrs.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp27j2xmm5.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut result = Vec::new();\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp34oms17e.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuyjegulr.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.extract_min().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp6g5qxfw2.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpslqxgkhp.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.extract_max());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpek26bjpm.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop_max());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmptigvcbaa.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuyjegulr.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.push(i);\n    }\n\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpbsfmmdp4.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_min());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp_zja9jda.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut result = Vec::new();\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp34oms17e.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut sorted = vec![];\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmplcn0bdk4.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut result = vec![];\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp4aici2vi.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmps6y7j8vr.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.extract_min().unwrap());\n    }\n\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpr14s90k8.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuyjegulr.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuyjegulr.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpxx3v3exl.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = Vec::new();\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpvkx5kcvk.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpd_kpc8bg.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut result = Vec::new();\n    while heap.size() > 0 {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp87tj5uj3.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpdkivgao7.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut result = Vec::new();\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp34oms17e.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.extract_max() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpfnu92f_b.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpxx3v3exl.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpkki66sox.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        let item = heap.extract_min();\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpseglre8e.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpjiypapuo.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut result = Vec::new();\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp34oms17e.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmps2txev2n.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_min().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpf0aj80ef.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.extract_min() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp071z1oze.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_min().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpjhhyh5nw.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n\n    while !heap.is_empty() {\n        sorted.push(heap.pop().unwrap());\n    }\n\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp31w6wmt7.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_min().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpjhhyh5nw.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpjiypapuo.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_min().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpf0aj80ef.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = vec![];\n    while !heap.is_empty() {\n        result.push(heap.extract_min().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpow4ez9qb.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop_min());\n    }\n\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmphog2b63j.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n\n    for item in iterable {\n        heap.insert(item);\n    }\n\n    let mut sorted = Vec::new();\n\n    while let Some(item) = heap.extract_max() {\n        sorted.push(item);\n    }\n\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpds4wgoxr.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpc3o4r656.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpxx3v3exl.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpd_kpc8bg.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpxx3v3exl.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpjiypapuo.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_min().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpf0aj80ef.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpc3o4r656.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpd_kpc8bg.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while heap.len() > 0 {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpb4ltlt_j.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n    while let Some(val) = heap.pop() {\n        sorted.push(val);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp34czc_n6.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuyjegulr.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpgghfm1d4.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.extract_min() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp071z1oze.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_min());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp_zja9jda.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.extract_min() {\n        sorted.push(item);\n    }\n\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpt461ji8b.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.extract_min() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp071z1oze.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_max());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmporw35wrs.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp27j2xmm5.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp5hwwz48p.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpxx3v3exl.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp27j2xmm5.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for element in iterable {\n        heap.insert(element);\n    }\n    let mut sorted = Vec::new();\n    while let Some(element) = heap.pop() {\n        sorted.push(element);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpvc887mrw.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut result = Vec::new();\n    while let Some(value) = heap.pop() {\n        result.push(value);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpq0e5anfk.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop_min().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpx10d_5tq.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpjiypapuo.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpjiypapuo.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = BinaryHeap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `BinaryHeap`\n --> /tmp/tmp51t7jw9l.rs:3:20\n  |\n3 |     let mut heap = BinaryHeap::new();\n  |                    ^^^^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::BinaryHeap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_max());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmporw35wrs.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpjiypapuo.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while let Some(item) = heap.remove() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpm7lzcitt.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpsu10zfw6.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpc3o4r656.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp27j2xmm5.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_min().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpf0aj80ef.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpxx3v3exl.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.push(i);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp0nvuktwa.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpdkivgao7.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_min());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp_zja9jda.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuyjegulr.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = vec![];\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpcbfzdwwt.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpc3o4r656.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpc3o4r656.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpc3o4r656.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.push(i);\n    }\n    let mut result = Vec::new();\n    while let Some(i) = heap.pop() {\n        result.push(i);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpnilxrwf5.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_min().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpf0aj80ef.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpjiypapuo.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpxx3v3exl.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpjiypapuo.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpc3o4r656.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp27j2xmm5.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.extract_min() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp071z1oze.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpdkivgao7.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpc3o4r656.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    heap.build_heap(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpxlb1egky.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp27j2xmm5.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut result = Vec::new();\n    while heap.len() > 0 {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp6prq9lrn.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmps6y7j8vr.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.remove_max());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpln7wgm8f.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuyjegulr.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuyjegulr.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.insert(i);\n    }\n\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpgghfm1d4.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n    while !heap.is_empty() {\n        sorted.push(heap.pop().unwrap());\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmps6y7j8vr.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.push(i);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp0nvuktwa.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    let mut sorted = Vec::new();\n    while let Some(item) = heap.pop() {\n        sorted.push(item);\n    }\n    sorted\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpxx3v3exl.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.insert(item);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.extract_min());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp_zja9jda.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new(iterable);\n    heap.sort()\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpuqjd6fw5.rs:3:20\n  |\n3 |     let mut heap = Heap::new(iterable);\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for item in iterable {\n        heap.push(item);\n    }\n    let mut result = vec![];\n    while let Some(item) = heap.pop() {\n        result.push(item);\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmpcbfzdwwt.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.push(i);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp0nvuktwa.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to sort the given list.\nfn heap_sort(iterable: Vec<isize>) -> Vec<isize> {\n    let mut heap = Heap::new();\n    for i in iterable {\n        heap.push(i);\n    }\n    let mut result = Vec::new();\n    while !heap.is_empty() {\n        result.push(heap.pop().unwrap());\n    }\n    result\n}\n\nfn main() {\n    let candidate = heap_sort;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 9, 2, 4, 6, 8, 0]), vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    assert_eq!(candidate(vec![25, 35, 22, 85, 14, 65, 75, 25, 58]), vec![14, 22, 25, 25, 35, 58, 65, 75, 85]);\n    assert_eq!(candidate(vec![7, 1, 9, 5]), vec![1, 5, 7, 9]);\n}\n",
      "timestamp": 1666124223,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Heap`\n --> /tmp/tmp0nvuktwa.rs:3:20\n  |\n3 |     let mut heap = Heap::new();\n  |                    ^^^^ use of undeclared type `Heap`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_83_get_Char",
  "language": "rs",
  "prompt": "/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfn get_Char(strr: String) -> String {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_83_get_Char.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = get_Char;\n    assert_eq!(candidate(String::from(\"abc\")), String::from(\"f\"));\n    assert_eq!(candidate(String::from(\"gfg\")), String::from(\"t\"));\n    assert_eq!(candidate(String::from(\"ab\")), String::from(\"c\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let mut ch = (sum % 26) as u8;\n    if ch == 0 {\n        ch = 26;\n    }\n    let ch = (ch + 64) as char;\n    ch.to_string()",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let res = sum % 26;\n    let res = res as u8;\n    let res = res + 65;\n    let res = res as char;\n    let res = res.to_string();\n    res",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u32;\n    }\n    let res = sum % 26;\n    let mut result = String::new();\n    result.push((res + 97) as u8 as char);\n    result",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let mut ch = (sum % 26) as u8;\n    if ch == 0 {\n        ch = 122;\n    } else {\n        ch += 96;\n    }\n    let mut s = String::new();\n    s.push(ch as char);\n    s",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let mut ch = (sum % 26) as u8 + 65;\n    if ch > 90 {\n        ch = ch - 26;\n    }\n    let s = ch as char;\n    s.to_string()",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u32;\n    }\n    let sum = sum % 26;\n    let mut result = String::new();\n    result.push((sum + 97) as u8 as char);\n    result",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let mut sum = sum % 26;\n    let mut res = String::new();\n    res.push((sum + 97) as char);\n    res",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let res = sum % 26;\n    let ch = (res + 97) as u8;\n    let ch = ch as char;\n    ch.to_string()",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u32;\n    }\n    let res = sum % 26;\n    let ch = (res + 97) as u8;\n    let ch = ch as char;\n    format!(\"{}\", ch)",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let res = (sum % 26) as u8;\n    let res_char = res as char;\n    let res_str = res_char.to_string();\n    res_str",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u32;\n    }\n    let res = (sum % 26) as u8;\n    let res = res + 65;\n    let res = res as char;\n    res.to_string()",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let res = sum % 26;\n    let res = res + 65;\n    let res = res as u8 as char;\n    format!(\"{}\", res)",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u32;\n    }\n    let mut res = (sum % 26) as u8;\n    res += 65;\n    return res.to_string();",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let ch = (sum % 26) as u8 + 97;\n    let ch = ch as char;\n    ch.to_string()",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let mut ch = (sum % 26) as u8;\n    if ch == 0 {\n        ch = 122;\n    } else {\n        ch += 96;\n    }\n    let mut s = String::new();\n    s.push(ch as char);\n    s",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u32;\n    }\n    let mut result = (sum % 26) as u8;\n    result += 65;\n    let mut res = String::new();\n    res.push(result as char);\n    res",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let res = sum % 26;\n    let result = (res + 65) as char;\n    return result.to_string();",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let res = sum % 26;\n    let res = res as u8;\n    let res = res + 65;\n    let res = res as char;\n    let res = res.to_string();\n    res",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u32;\n    }\n    let res = (sum % 26) as u8;\n    let res = res + 65;\n    let res = res as char;\n    let res = res.to_string();\n    res",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u32;\n    }\n    let res = sum % 26;\n    let mut res_char = 'a';\n    for i in 0..26 {\n        if i == res {\n            res_char = (i + 97) as u8 as char;\n        }\n    }\n    res_char.to_string()"
  ]
}
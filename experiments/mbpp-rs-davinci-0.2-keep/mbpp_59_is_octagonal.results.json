{
  "name": "mbpp_59_is_octagonal",
  "language": "rs",
  "prompt": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_59_is_octagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        j += 1;\n        i = j * (3 * j - 2);\n    }\n    if i == n {\n        return j;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmppz0pz271.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let x = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if x == x.floor() {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `65`', /tmp/tmppx3ppjgi.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while j < n {\n        i += 1;\n        j = i * (3 * i - 2);\n    }\n    if j == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpy_64cq80.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let x = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if x == x.floor() {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `65`', /tmp/tmppx3ppjgi.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpa0l76bzc.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let x = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if x == x.floor() {\n        x as isize\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `65`', /tmp/tmp78uos8n5.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut c = 0;\n    while c < n {\n        i += 1;\n        c = i * (3 * i - 2);\n    }\n    c\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpny9f9ggg.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut result = 0;\n    while result < n {\n        result = i * (3 * i - 2);\n        i += 1;\n    }\n    if result == n {\n        return i - 1;\n    } else {\n        return 0;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpnk3adl08.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let x = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if x == x.round() {\n        x as isize\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `65`', /tmp/tmp55p1bx05.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpwwfuve3b.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (n + 1.0 / 3.0).sqrt();\n    if x.fract() == 0.0 {\n        let x = x as isize;\n        if x * (3 * x - 2) == n {\n            return x;\n        }\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmp03h8i6ha.rs:7:31\n  |\n7 |         if x * (3 * x - 2) == n {\n  |                               ^ expected `isize`, found `f64`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let x = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if x == x.floor() {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `65`', /tmp/tmppx3ppjgi.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut nth_octagonal = 0;\n    while nth_octagonal < n {\n        i += 1;\n        nth_octagonal = i * (3 * i - 2);\n    }\n    if nth_octagonal == n {\n        nth_octagonal\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmprun_bva7.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (n + 1.0 / 3.0).sqrt();\n    if x.fract() == 0.0 {\n        let x = x as isize;\n        let y = (x * x * 3 - 1) / 2;\n        if y == n {\n            return x;\n        }\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpf8lkvnjz.rs:8:17\n  |\n8 |         if y == n {\n  |                 ^ expected `isize`, found `f64`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (n + 1.0 / 3.0).sqrt();\n    if x == x.floor() {\n        (x * 3.0 - 1.0) / 2.0\n    } else {\n        0.0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmp29jhpzjv.rs:6:9\n  |\n2 | fn is_octagonal(n: isize) -> isize {\n  |                              ----- expected `isize` because of return type\n...\n6 |         (x * 3.0 - 1.0) / 2.0\n  |         ^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `f64`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp29jhpzjv.rs:8:9\n  |\n2 | fn is_octagonal(n: isize) -> isize {\n  |                              ----- expected `isize` because of return type\n...\n8 |         0.0\n  |         ^^^ expected `isize`, found floating-point number\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 1;\n    while octagonal < n {\n        i += 1;\n        octagonal = i * (3 * i - 2);\n    }\n    if octagonal == n {\n        octagonal\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp0frhe52k.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (n + (1.0 / 3.0)).sqrt();\n    if x.fract() == 0.0 {\n        let x = x as isize;\n        if x * (3 * x - 2) == n {\n            return n;\n        }\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmp0cvendzx.rs:7:31\n  |\n7 |         if x * (3 * x - 2) == n {\n  |                               ^ expected `isize`, found `f64`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp0cvendzx.rs:8:20\n  |\n2 | fn is_octagonal(n: isize) -> isize {\n  |                              ----- expected `isize` because of return type\n...\n8 |             return n;\n  |                    ^ expected `isize`, found `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpzz110qh3.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let d = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if d == d.floor() {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `65`', /tmp/tmpn_7kt736.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut count = 1;\n    while count < n {\n        i += 1;\n        count = i * (3 * i - 2);\n    }\n    count\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp_ve99208.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpyihwwlyz.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpznukghga.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let x = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if x == x.floor() {\n        x as isize\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `65`', /tmp/tmp78uos8n5.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1z0r2ac0.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1z0r2ac0.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (n + 1.0 / 3.0).sqrt();\n    if x.fract() == 0.0 {\n        let x = x as isize;\n        if x * (3 * x - 2) == n {\n            return x;\n        }\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmp03h8i6ha.rs:7:31\n  |\n7 |         if x * (3 * x - 2) == n {\n  |                               ^ expected `isize`, found `f64`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut res = 0;\n    while res < n {\n        res = i * (3 * i - 2);\n        i += 1;\n    }\n    if res == n {\n        return i - 1;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeu79c3_s.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = 0;\n    while i < n {\n        j += 1;\n        i = j * (3 * j - 2);\n    }\n    if i == n {\n        j\n    } else {\n        -1\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `65`', /tmp/tmpfskf8_vb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        i = j * (3 * j - 2);\n        j += 1;\n    }\n    if i == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpsvqgxvou.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = 1;\n    while i < n {\n        i += j;\n        j += 3;\n    }\n    if i == n {\n        return n;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `65`', /tmp/tmpohjbfk8l.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (n + 1.0 / 3.0).sqrt();\n    let y = (n + 1.0 / 2.0).sqrt();\n    if x == x.floor() && y == y.floor() {\n        n as isize\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpituincn8.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        }\n        if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp6k24lv3l.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpa0l76bzc.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let x = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if x == x.floor() {\n        x as isize\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `65`', /tmp/tmp78uos8n5.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let a = (2.0 + 2.0 * (2.0 + 2.0 * n).sqrt()).sqrt();\n    if a == a.round() {\n        (a - 1.0) / 2.0\n    } else {\n        0.0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmp339_3x94.rs:6:9\n  |\n2 | fn is_octagonal(n: isize) -> isize {\n  |                              ----- expected `isize` because of return type\n...\n6 |         (a - 1.0) / 2.0\n  |         ^^^^^^^^^^^^^^^ expected `isize`, found `f64`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp339_3x94.rs:8:9\n  |\n2 | fn is_octagonal(n: isize) -> isize {\n  |                              ----- expected `isize` because of return type\n...\n8 |         0.0\n  |         ^^^ expected `isize`, found floating-point number\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (n + 1.0 / 3.0).sqrt();\n    if x.fract() == 0.0 {\n        let x = x as isize;\n        if x % 2 == 1 {\n            return x * (3 * x - 2);\n        }\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpjmnes1wz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpa0l76bzc.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 0;\n    while nth < n {\n        nth = i * (3 * i - 2);\n        i += 1;\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpmi5508q4.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmptzuk8_yr.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let x = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if x == x.floor() {\n        x as isize\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `65`', /tmp/tmp78uos8n5.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = (n as f64).sqrt();\n    let n = n.floor();\n    let n = n as isize;\n    if n * (3 * n - 2) == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmptl8f1g_r.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        -1\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `65`', /tmp/tmprod10v1g.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut result = 0;\n    while result < n {\n        result = i * (3 * i - 2);\n        i += 1;\n    }\n    if result == n {\n        return i - 1;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp6y_qgbt_.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        }\n        if oct > n {\n            return -1;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `65`', /tmp/tmpoal2661x.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmppzd1nhck.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpa0l76bzc.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (n + 1.0) / 2.0;\n    let x = x.sqrt();\n    let x = x.floor();\n    if x == (x as isize) as f64 {\n        let x = x as isize;\n        return (x * (3 * x - 2));\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `65`', /tmp/tmpn5sfxap1.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let x = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if x.fract() == 0.0 {\n        x as isize\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `65`', /tmp/tmpc3xxvnuc.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 1;\n    while octagonal < n {\n        i += 1;\n        octagonal = i * (3 * i - 2);\n    }\n    if octagonal == n {\n        octagonal\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp0frhe52k.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    if octagonal == n {\n        octagonal\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp0jsao09h.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = (n as f64).sqrt();\n    if n == n.floor() {\n        let n = n as isize;\n        if (n * (3 * n - 2)).is_positive() {\n            return n * (3 * n - 2);\n        }\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpwkfspsqj.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = (n as f64).sqrt();\n    if n.fract() == 0.0 {\n        let n = n as isize;\n        if n % 2 == 0 {\n            n * n / 2\n        } else {\n            n * (n + 1) / 2\n        }\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpesgv0nxr.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 1;\n    while octagonal < n {\n        i += 1;\n        octagonal = i * (3 * i - 2);\n    }\n    if octagonal == n {\n        octagonal\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp0frhe52k.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        return i;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpg_v39h29.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    -1\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `65`', /tmp/tmpnyzrawc4.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1z0r2ac0.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut oct = 0;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        return i;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpoqaysmqg.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut n = n;\n    let mut i = 0;\n    while n > 0 {\n        i += 1;\n        n -= i * 3 - 2;\n    }\n    if n == 0 {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `65`', /tmp/tmp0xgsvte2.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 0;\n    while nth < n {\n        nth = i * (3 * i - 2);\n        i += 1;\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpmi5508q4.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        }\n        if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp0y7asaq4.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 0;\n    while nth < n {\n        nth = i * (3 * i - 2);\n        i += 1;\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpmi5508q4.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        }\n        if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp6k24lv3l.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpznukghga.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpa0l76bzc.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut result = 0;\n    while result < n {\n        result = i * (3 * i - 2);\n        i += 1;\n    }\n    if result == n {\n        return i - 1;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp6y_qgbt_.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1z0r2ac0.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let a = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if a == a.floor() {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `65`', /tmp/tmp17gqi1k4.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpa0l76bzc.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        i = 3 * j * j - j + 1;\n        j += 1;\n    }\n    if i == n {\n        return n;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpj5qx_uqz.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut num = 1;\n    while i < n {\n        num += 3 * i + 2;\n        i += 1;\n    }\n    num\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `39`,\n right: `65`', /tmp/tmpf4zae0_n.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = (n as f64).sqrt();\n    if n.fract() == 0.0 {\n        let n = n as isize;\n        if (n * (3 * n - 2)) % 2 == 0 {\n            return (n * (3 * n - 2)) / 2;\n        }\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpd7uodepn.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let x = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if x == x.floor() {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `65`', /tmp/tmppx3ppjgi.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut nth = 0;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp1alkg4ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        i = j * (3 * j - 2);\n        j += 1;\n    }\n    if i == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpsvqgxvou.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        -1\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `65`', /tmp/tmprod10v1g.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpa0l76bzc.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut nth = 0;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp1alkg4ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    -1\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `65`', /tmp/tmpnyzrawc4.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let n = (n * (3.0_f64.sqrt() - 1.0) / 2.0).round() as isize;\n    if n * (3 * n - 2) == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpnh42sigd.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    let mut k = 1;\n    while k <= n {\n        i += 1;\n        j += 3 * i - 2;\n        k += 1;\n    }\n    j\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `51`,\n right: `65`', /tmp/tmpxup37cf0.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (n + 1.0 / 3.0).sqrt();\n    if x.fract() == 0.0 {\n        let x = x as isize;\n        if x % 2 == 1 {\n            return x * x * 2 - 1;\n        }\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpuhb94c8m.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut num = 1;\n    while i < n {\n        i += 1;\n        num = i * (3 * i - 2);\n    }\n    num\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let x = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if x == x.floor() {\n        x as isize\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `65`', /tmp/tmp78uos8n5.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth_octagonal = 1;\n    while nth_octagonal < n {\n        i += 1;\n        nth_octagonal = i * (3 * i - 2);\n    }\n    if nth_octagonal == n {\n        nth_octagonal\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeg7v8wno.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpa0l76bzc.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut result = 0;\n    while result < n {\n        i += 1;\n        result = i * (3 * i - 2);\n    }\n    if result == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpmbnsahsv.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1z0r2ac0.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    if octagonal == n {\n        octagonal\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp0jsao09h.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    loop {\n        let oct = (i * (3 * i - 2)) as isize;\n        if oct == n {\n            return i;\n        }\n        if oct > n {\n            return -1;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `65`', /tmp/tmp33_x7brr.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = (i * (3 * i - 2));\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpw4udvqsr.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpa0l76bzc.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut result = 0;\n    while result < n {\n        result = i * (3 * i - 2);\n        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30_5nkyf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while j < n {\n        i += 1;\n        j = i * (3 * i - 2);\n    }\n    if j == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpy_64cq80.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1z0r2ac0.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        }\n        if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp6k24lv3l.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut num = 1;\n    while i < n {\n        num += 3 * i + 2;\n        i += 1;\n    }\n    num\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `39`,\n right: `65`', /tmp/tmpf4zae0_n.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut result = 0;\n    while result < n {\n        result = i * (3 * i - 2);\n        i += 1;\n    }\n    if result == n {\n        return i - 1;\n    } else {\n        return 0;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpnk3adl08.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let n = (n + 1.0) / 2.0;\n    let n = n.sqrt();\n    let n = n.floor();\n    let n = 2.0 * n - 1.0;\n    let n = n * n;\n    n as isize\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `65`', /tmp/tmp2egeedr3.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmphc70g2n5.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpa0l76bzc.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpyihwwlyz.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut result = 0;\n    while result < n {\n        result = i * (3 * i - 2);\n        i += 1;\n    }\n    if result == n {\n        return i - 1;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp6y_qgbt_.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (n + 1.0) / 2.0;\n    let x = x.sqrt();\n    let x = x.floor();\n    let x = x - 1.0;\n    let x = x * (3.0 * x - 2.0);\n    let x = x.floor();\n    x as isize\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpflwkj31x.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (n + (1.0 / 3.0) * (9.0 + 3.0 * (n * n).sqrt())).cbrt();\n    if x.fract() == 0.0 {\n        x as isize\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpkshcu0p_.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        i = j * (3 * j - 2);\n        j += 1;\n    }\n    if i == n {\n        return 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpn19_ux3k.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        nth = i * (3 * i - 2);\n        i += 1;\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpl6q4_vt5.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (1.0 + (1.0 + 24.0 * n).sqrt()) / 6.0;\n    if x.fract() == 0.0 {\n        x as isize\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `65`', /tmp/tmp61irmwe8.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut oct = 0;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpkzzf8kg5.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        return i;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpg_v39h29.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut x = 1;\n    let mut i = 1;\n    while x < n {\n        x = i * (3 * i - 2);\n        i += 1;\n    }\n    if x == n {\n        return 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpxdq8ia1_.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        return i;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpg_v39h29.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpa0l76bzc.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        }\n        if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp6k24lv3l.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        i = j * (3 * j - 2);\n        j += 1;\n    }\n    if i == n {\n        return n;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpw_eokpm_.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    if octagonal == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp2gp_j66t.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        i = 3 * j * j - j + 1;\n        j += 1;\n    }\n    if i == n {\n        return i;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpxflyy6lq.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        j += 1;\n        i = j * (3 * j - 2);\n    }\n    if i == n {\n        return j;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpxxj000rx.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpzz110qh3.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth_octagonal = 1;\n    while nth_octagonal < n {\n        i += 1;\n        nth_octagonal = i * (3 * i - 2);\n    }\n    if nth_octagonal == n {\n        nth_octagonal\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeg7v8wno.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut octagonal = 0;\n    while octagonal < n {\n        i += 1;\n        octagonal = i * (3 * i - 2);\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp37j4o33d.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut nth = 0;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp1alkg4ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let a = (1.0 + (1.0 + 24.0 * n).sqrt()) / 6.0;\n    if a == a.round() {\n        a as isize\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `65`', /tmp/tmp54mzwrpc.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = 0;\n    while i < n {\n        j += 1;\n        i = j * (3 * j - 2);\n    }\n    if i == n {\n        return j;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpqa66fck3.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let x = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if x == x.floor() {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `65`', /tmp/tmppx3ppjgi.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510624,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpa0l76bzc.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut result = 0;\n    while result < n {\n        result = i * (3 * i - 2);\n        i += 1;\n    }\n    if result == n {\n        return i - 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpa3geqogz.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    }
  ]
}
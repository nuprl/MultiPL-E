{
  "name": "mbpp_555_difference",
  "language": "rs",
  "prompt": "/// Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.\nfn difference(n: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_555_difference.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = difference;\n    assert_eq!(candidate(3), 30);\n    assert_eq!(candidate(5), 210);\n    assert_eq!(candidate(2), 6);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum();\n    let sum = (1..n + 1).sum();\n    sum_of_cubes - sum * sum",
    "    let mut sum_of_cubes: isize = 0;\n    let mut sum: isize = 0;\n    for i in 1..n+1 {\n        sum_of_cubes += i*i*i;\n        sum += i;\n    }\n    sum*sum - sum_of_cubes",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_squares = (1..n + 1).map(|x| x * x).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum * sum - sum_of_squares",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).sum();\n    let sum = (1..n+1).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum_of_numbers = (1..=n).sum::<isize>();\n\n    sum_of_cubes - sum_of_numbers.pow(2)",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).sum();\n    let sum = (1..n+1).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).sum();\n    let sum = (1..n+1).sum();\n    sum*sum - sum_of_cubes",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum();\n    let sum = (1..n + 1).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum * sum",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum * sum - sum_of_cubes",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum * sum - sum_of_cubes",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..=n {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum * sum - sum_of_cubes",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum_of_cubes += i*i*i;\n        sum += i;\n    }\n    sum*sum - sum_of_cubes",
    "    let sum_of_cubes = (1..n + 1).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum();\n    let sum = (1..n + 1).sum();\n    sum * sum - sum_of_cubes",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).sum();\n    let sum = (1..n+1).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum",
    "    let sum_of_squares = (1..=n).map(|x| x * x).sum::<isize>();\n    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum::<isize>();\n    sum_of_squares - sum_of_cubes",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum_of_numbers = (1..=n).sum();\n    sum_of_cubes - sum_of_numbers",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum();\n    let sum = (1..n + 1).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).sum();\n    let sum_of_numbers = (1..n+1).sum();\n    sum_of_cubes - sum_of_numbers",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..=n {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum * sum - sum_of_cubes",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum();\n    let sum = (1..n + 1).sum();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum",
    "    let sum_of_squares = (1..n + 1).map(|x| x * x).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum * sum - sum_of_squares",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..=n {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum * sum - sum_of_cubes",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum();\n    let sum = (1..n + 1).sum();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..=n {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum * sum - sum_of_cubes",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum * sum - sum_of_cubes",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum_of_cubes += i.pow(3);\n        sum += i;\n    }\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).sum();\n    let sum = (1..n+1).sum();\n    sum*sum - sum_of_cubes",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum();\n    let sum = (1..n + 1).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..n + 1).map(|x| x.pow(3)).sum();\n    let sum = (1..n + 1).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    (1..=n).map(|x| x * x * x).sum::<isize>() - (1..=n).sum::<isize>() * (1..=n).sum::<isize>()",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum * sum - sum_of_cubes",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum_of_numbers = (1..=n).sum::<isize>();\n    sum_of_cubes - sum_of_numbers.pow(2)",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum_of_numbers = (1..=n).sum::<isize>();\n    sum_of_cubes - sum_of_numbers.pow(2)",
    "    let sum_of_cubes = (1..n + 1).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_squares = (1..n + 1).map(|x| x * x).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum * sum - sum_of_squares",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_squares = (1..n+1).map(|x| x*x).sum();\n    let sum = (1..n+1).sum();\n    sum*sum - sum_of_squares",
    "    let sum_of_squares = (1..n + 1).map(|x| x * x).sum::<isize>();\n    let sum_of_naturals = (1..n + 1).sum::<isize>();\n    sum_of_squares - sum_of_naturals",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum_of_cubes += i*i*i;\n        sum += i;\n    }\n    sum_of_cubes - sum*sum",
    "    (1..=n).map(|x| x.pow(3)).sum::<isize>() - (1..=n).sum::<isize>()",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let sum_of_squares = (1..n + 1).map(|x| x * x).sum::<isize>();\n    let sum_of_numbers = (1..n + 1).sum::<isize>();\n    sum_of_squares - sum_of_numbers * sum_of_numbers",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum();\n    let sum = (1..n + 1).sum();\n    sum * sum - sum_of_cubes",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum * sum - sum_of_cubes",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum();\n    let sum = (1..n + 1).sum();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum();\n    let sum = (1..n + 1).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..n+1).map(|x| x.pow(3)).sum();\n    let sum_of_numbers = (1..n+1).sum();\n    sum_of_cubes - sum_of_numbers",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum_of_numbers = (1..=n).sum();\n    sum_of_cubes - sum_of_numbers",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_squares = (1..n + 1).map(|x| x * x).sum::<isize>();\n    let square_of_sum = (1..n + 1).sum::<isize>().pow(2);\n    square_of_sum - sum_of_squares",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).sum();\n    let sum = (1..n+1).sum();\n    sum*sum - sum_of_cubes",
    "    let mut sum: isize = 0;\n    let mut sum_of_cubes: isize = 0;\n    for i in 1..n+1 {\n        sum += i;\n        sum_of_cubes += i*i*i;\n    }\n    sum*sum - sum_of_cubes",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum * sum - sum_of_cubes",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..n + 1).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).sum();\n    let sum_of_nums = (1..n+1).sum();\n    sum_of_cubes - sum_of_nums",
    "    let sum_of_squares = (1..n + 1).map(|x| x * x).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum * sum - sum_of_squares",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum * sum - sum_of_cubes",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..=n {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum * sum - sum_of_cubes",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).sum();\n    let sum = (1..n+1).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).sum();\n    let sum = (1..n+1).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).sum();\n    let sum = (1..n+1).sum();\n    sum_of_cubes - sum*sum",
    "    let mut sum_of_cubes = 0;\n    let mut sum_of_numbers = 0;\n    for i in 1..=n {\n        sum_of_cubes += i * i * i;\n        sum_of_numbers += i;\n    }\n    sum_of_cubes - sum_of_numbers * sum_of_numbers",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum();\n    let sum = (1..n + 1).sum();\n    sum * sum - sum_of_cubes",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum();\n    let sum = (1..n + 1).sum();\n    sum * sum - sum_of_cubes",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..n+1).map(|x| x.pow(3)).sum();\n    let sum = (1..n+1).sum();\n    sum_of_cubes - sum",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum_of_cubes - sum * sum",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum * sum - sum_of_cubes",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum_of_numbers = (1..=n).sum();\n    sum_of_cubes - sum_of_numbers",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let mut sum = 0;\n    let mut sum_of_cubes = 0;\n    for i in 1..n + 1 {\n        sum += i;\n        sum_of_cubes += i * i * i;\n    }\n    sum * sum - sum_of_cubes",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).fold(0, |acc, x| acc + x);\n    let sum = (1..n+1).fold(0, |acc, x| acc + x);\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum * sum - sum_of_cubes",
    "    let sum_of_squares = (1..n+1).map(|x| x*x).sum();\n    let square_of_sum = (1..n+1).sum::<isize>().pow(2);\n    square_of_sum - sum_of_squares",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).sum();\n    let sum = (1..n+1).sum();\n    sum_of_cubes - sum",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..=n {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum * sum - sum_of_cubes",
    "    let sum_of_squares = (1..n + 1).map(|x| x * x).sum::<isize>();\n    let sum_of_numbers = (1..n + 1).sum::<isize>();\n    (sum_of_numbers * sum_of_numbers) - sum_of_squares",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum_of_numbers = (1..=n).sum();\n    sum_of_cubes - sum_of_numbers",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum();\n    let sum_of_numbers = (1..n + 1).sum();\n    sum_of_cubes - sum_of_numbers",
    "    let sum_of_squares = (1..n+1).map(|x| x*x).sum();\n    let sum_of_numbers = (1..n+1).sum();\n    sum_of_squares - sum_of_numbers",
    "    (1..n+1).map(|x| x*x*x).sum::<isize>() - (1..n+1).sum::<isize>()",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum * sum - sum_of_cubes",
    "    let mut sum_of_cubes = 0;\n    let mut sum_of_numbers = 0;\n    for i in 1..=n {\n        sum_of_cubes += i.pow(3);\n        sum_of_numbers += i;\n    }\n    sum_of_cubes - sum_of_numbers.pow(2)",
    "    let mut sum_of_squares = 0;\n    let mut sum_of_cubes = 0;\n    for i in 1..n+1 {\n        sum_of_squares += i*i;\n        sum_of_cubes += i*i*i;\n    }\n    sum_of_cubes - sum_of_squares",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum",
    "    let mut sum_of_squares = 0;\n    let mut sum_of_cubes = 0;\n    for i in 1..n+1 {\n        sum_of_squares += i * i;\n        sum_of_cubes += i * i * i;\n    }\n    sum_of_squares - sum_of_cubes",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum * sum - sum_of_cubes",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).sum();\n    let sum = (1..n+1).sum();\n    sum_of_cubes - sum",
    "    let sum_of_squares = (1..n+1).map(|x| x*x).fold(0, |acc, x| acc + x);\n    let sum_of_cubes = (1..n+1).map(|x| x*x*x).fold(0, |acc, x| acc + x);\n    sum_of_squares - sum_of_cubes",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum * sum - sum_of_cubes",
    "    let sum_of_cubes = (1..n + 1).map(|x| x.pow(3)).sum();\n    let sum_of_numbers = (1..n + 1).sum();\n    sum_of_cubes - sum_of_numbers",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum_of_numbers = (1..=n).sum();\n    sum_of_cubes - sum_of_numbers",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum();\n    let sum = (1..n + 1).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..n+1).map(|x| x * x * x).fold(0, |acc, x| acc + x);\n    let sum = (1..n+1).fold(0, |acc, x| acc + x);\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).sum();\n    let sum = (1..n+1).sum();\n    sum_of_cubes - sum",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum * sum - sum_of_cubes",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum::<isize>();\n    let sum_of_numbers = (1..=n).sum::<isize>();\n    sum_of_cubes - sum_of_numbers",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum",
    "    let sum_of_squares = (1..n+1).map(|x| x*x).fold(0, |acc, x| acc + x);\n    let sum = (1..n+1).fold(0, |acc, x| acc + x);\n    let square_of_sum = sum * sum;\n    square_of_sum - sum_of_squares",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_squares = (1..n + 1).map(|x| x * x).sum::<isize>();\n    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum::<isize>();\n    sum_of_squares - sum_of_cubes",
    "    let sum_of_cubes = (1..n+1).map(|x| x.pow(3)).sum();\n    let sum = (1..n+1).sum();\n    sum_of_cubes - sum",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum_of_cubes += i*i*i;\n        sum += i;\n    }\n    sum*sum - sum_of_cubes",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum_of_cubes - sum * sum",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum",
    "    sum_of_cubes(n) - sum_of_numbers(n)",
    "    let sum_of_squares = (1..n + 1).map(|x| x * x).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum * sum - sum_of_squares",
    "    let sum_of_squares = (1..=n).map(|x| x * x).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum * sum - sum_of_squares",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum * sum",
    "    let sum_of_squares = (1..=n).map(|x| x * x).sum::<isize>();\n    let sum_of_naturals = (1..=n).sum::<isize>();\n    sum_of_squares - sum_of_naturals * sum_of_naturals",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes: isize = (1..=n).map(|x| x.pow(3)).sum();\n    let sum: isize = (1..=n).sum();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let sum_of_squares = (1..n + 1).map(|x| x * x).sum::<isize>();\n    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum::<isize>();\n    sum_of_squares - sum_of_cubes",
    "    let sum_of_cubes = (1..n+1).map(|x| x * x * x).sum();\n    let sum = (1..n+1).sum();\n    sum * sum - sum_of_cubes",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).sum();\n    let sum = (1..n+1).sum();\n    sum_of_cubes - sum",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum_of_cubes += i.pow(3);\n        sum += i;\n    }\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..n + 1).map(|x| x * x * x).sum();\n    let sum = (1..n + 1).sum();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).sum();\n    let sum = (1..n+1).sum();\n    sum_of_cubes - sum*sum",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum_of_n = (1..=n).sum();\n    sum_of_cubes - sum_of_n",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum_of_cubes += i*i*i;\n        sum += i;\n    }\n    sum_of_cubes - sum*sum",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum * sum - sum_of_cubes",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum();\n    let sum_of_numbers = (1..=n).sum();\n    sum_of_cubes - sum_of_numbers",
    "    let sum_of_cubes = (1..n+1).map(|x| x*x*x).sum();\n    let sum = (1..n+1).sum();\n    sum_of_cubes - sum",
    "    let mut sum_of_squares = 0;\n    let mut sum_of_cubes = 0;\n    for i in 1..n + 1 {\n        sum_of_squares += i * i;\n        sum_of_cubes += i * i * i;\n    }\n    sum_of_cubes - sum_of_squares",
    "    let sum_of_squares = n * (n + 1) * (2 * n + 1) / 6;\n    let sum_of_numbers = n * (n + 1) / 2;\n    sum_of_squares - sum_of_numbers",
    "    (1..n+1).map(|x| x*x*x).sum::<isize>() - (1..n+1).sum::<isize>()",
    "    let sum_of_cubes = (1..=n).map(|x| x * x * x).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..=n).sum::<isize>();\n    sum_of_cubes - sum.pow(2)",
    "    let sum_of_cubes = (1..=n).map(|x| x.pow(3)).sum();\n    let sum = (1..=n).sum();\n    sum_of_cubes - sum.pow(2)",
    "    let mut sum_of_cubes = 0;\n    let mut sum = 0;\n    for i in 1..=n {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    sum_of_cubes - sum * sum",
    "    let sum_of_cubes = (1..n + 1).map(|x| x.pow(3)).sum::<isize>();\n    let sum = (1..n + 1).sum::<isize>();\n    sum_of_cubes - sum.pow(2)"
  ]
}
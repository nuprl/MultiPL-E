{
  "name": "mbpp_86_centered_hexagonal_number",
  "language": "rs",
  "prompt": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_86_centered_hexagonal_number.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    let n = n as f64;\n    let n = n * (2.0 * n - 1.0);\n    n as isize\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1666122874,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmp31g1g_a1.rs:10:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    let mut n = n;\n    let mut result = 0;\n    while n > 0 {\n        result += 6 * n - 1;\n        n -= 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1666122875,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `320`,\n right: `271`', /tmp/tmpzwfu8x9a.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    let n = n as f64;\n    let x = (n * 2.0).sqrt();\n    let x = x.floor();\n    let x = x as isize;\n    let y = x * (x - 1) + 1;\n    y\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1666122875,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `13`,\n right: `271`', /tmp/tmp1oyb47ok.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    let x = (n * (2 * n - 1)) as isize;\n    x\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1666122875,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmp5p40wucw.rs:9:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    (n * (2 * n - 1))\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmph19a6uc9.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    n * (2 * n - 1)\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `190`,\n right: `271`', /tmp/tmps2d161ze.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find nth centered hexagonal number.\nfn centered_hexagonal_number(n: isize) -> isize {\n    3 * n * (n - 1) + 1\n}\n\nfn main() {\n    let candidate = centered_hexagonal_number;\n    assert_eq!(candidate(10), 271);\n    assert_eq!(candidate(2), 7);\n    assert_eq!(candidate(9), 217);\n}\n",
      "timestamp": 1665510305,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
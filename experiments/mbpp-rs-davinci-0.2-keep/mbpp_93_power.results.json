{
  "name": "mbpp_93_power",
  "language": "rs",
  "prompt": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_93_power.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b < 0 {\n        return power(a, b + 1) / a;\n    }\n    return power(a, b - 1) * a;\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b < 0 {\n        return 1 / power(a, -b);\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b < 0 {\n        return 0;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    let mut result = 1;\n    for _ in 0..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    if b == 1 {\n        return a;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124078,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b < 0 {\n        return power(a, b + 1) / a;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    if b == 1 {\n        return a;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124078,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b % 2 == 0 {\n        let res = power(a, b / 2);\n        return res * res;\n    }\n    return a * power(a, b - 1);\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124078,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b % 2 == 0 {\n        let x = power(a, b / 2);\n        return x * x;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b % 2 == 0 {\n        let x = power(a, b / 2);\n        return x * x;\n    }\n    return a * power(a, b - 1);\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124078,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b % 2 == 0 {\n        return power(a * a, b / 2);\n    }\n    return a * power(a * a, b / 2);\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    let mut result = 1;\n    for _ in 0..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result = result * a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124078,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else if b == 1 {\n        a\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b < 0 {\n        return 1 / power(a, -b);\n    }\n    if b % 2 == 0 {\n        let p = power(a, b / 2);\n        return p * p;\n    }\n    return a * power(a, b - 1);\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124078,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b < 0 {\n        return 1 / power(a, -b);\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124078,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    let mut result = 1;\n    for _ in 0..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut x = a;\n    for _ in 1..b {\n        x *= a;\n    }\n    x\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124078,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b % 2 == 0 {\n        let x = power(a, b / 2);\n        return x * x;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b < 0 {\n        return power(a, b + 1) / a;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b < 0 {\n        return 1 / power(a, -b);\n    }\n    let mut result = 1;\n    for _ in 0..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124078,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124078,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    unimplemented!()\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124078,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'not implemented', /tmp/tmpeum1s8ms.rs:3:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    let mut result = 1;\n    for _ in 0..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b < 0 {\n        return 1 / power(a, -b);\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for _ in 0..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    let mut result = 1;\n    for _ in 0..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b % 2 == 0 {\n        return power(a * a, b / 2);\n    }\n    a * power(a * a, b / 2)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124078,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b < 0 {\n        return 1 / power(a, -b);\n    }\n    if b % 2 == 0 {\n        let half = power(a, b / 2);\n        return half * half;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b < 0 {\n        return 1 / power(a, -b);\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b % 2 == 0 {\n        return power(a * a, b / 2);\n    }\n    return a * power(a * a, b / 2);\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b % 2 == 0 {\n        let half = power(a, b / 2);\n        return half * half;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124078,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b < 0 {\n        return power(a, b + 1) / a;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b < 0 {\n        return 1 / power(a, -b);\n    }\n    if b % 2 == 0 {\n        let half = power(a, b / 2);\n        return half * half;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else if b == 1 {\n        a\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    if b == 1 {\n        return a;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b < 0 {\n        return power(1 / a, -b);\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124078,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    let mut result = 1;\n    for _ in 0..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b < 0 {\n        return 0;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124078,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b < 0 {\n        return 1 / power(a, -b);\n    }\n    let mut res = a;\n    for _ in 1..b {\n        res *= a;\n    }\n    res\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124078,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b % 2 == 0 {\n        return power(a * a, b / 2);\n    }\n    return a * power(a * a, b / 2);\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        1\n    } else {\n        a * power(a, b - 1)\n    }\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    a * power(a, b - 1)\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n\n    if b < 0 {\n        return 0;\n    }\n\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124078,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b % 2 == 0 {\n        return power(a * a, b / 2);\n    }\n    return a * power(a * a, b / 2);\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    if b == 1 {\n        return a;\n    }\n    if b < 0 {\n        return power(a, b + 1) / a;\n    }\n    return power(a, b - 1) * a;\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to calculate the value of 'a' to the power 'b'.\nfn power(a: isize, b: isize) -> isize {\n    if b == 0 {\n        return 1;\n    }\n    let mut result = a;\n    for _ in 1..b {\n        result *= a;\n    }\n    result\n}\n\nfn main() {\n    let candidate = power;\n    assert_eq!(candidate(3, 4), 81);\n    assert_eq!(candidate(2, 3), 8);\n    assert_eq!(candidate(5, 5), 3125);\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
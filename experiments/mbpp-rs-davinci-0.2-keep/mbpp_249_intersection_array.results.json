{
  "name": "mbpp_249_intersection_array",
  "language": "rs",
  "prompt": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_249_intersection_array.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut map = HashMap::new();\n    for num in array_nums1 {\n        map.insert(num, true);\n    }\n\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpeabow7lf.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    let mut hash_map = HashMap::new();\n\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpxqxehoi4.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp7clefncd.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp7clefncd.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp52w7ypr3.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp52w7ypr3.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            hash_map.insert(num, count + 1);\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n            let count = hash_map.get(&num).unwrap();\n            if *count == 1 {\n                hash_map.remove(&num);\n            } else {\n                hash_map.insert(num, count - 1);\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpelfuot_0.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpelfuot_0.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    for num in array_nums1 {\n        if array_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut array_nums1 = array_nums1;\n    let mut array_nums2 = array_nums2;\n    array_nums1.sort();\n    array_nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    while i < array_nums1.len() && j < array_nums2.len() {\n        if array_nums1[i] == array_nums2[j] {\n            result.push(array_nums1[i]);\n            i += 1;\n            j += 1;\n        } else if array_nums1[i] < array_nums2[j] {\n            i += 1;\n        } else {\n            j += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut array_nums1 = array_nums1;\n    let mut array_nums2 = array_nums2;\n    array_nums1.sort();\n    array_nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    while i < array_nums1.len() && j < array_nums2.len() {\n        if array_nums1[i] == array_nums2[j] {\n            result.push(array_nums1[i]);\n            i += 1;\n            j += 1;\n        } else if array_nums1[i] < array_nums2[j] {\n            i += 1;\n        } else {\n            j += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp64lbzn68.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp64lbzn68.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut map = HashMap::new();\n    for num in array_nums1 {\n        map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpe9s0cixb.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set: HashSet<isize> = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpf4zspklx.rs:4:18\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpf4zspklx.rs:4:35\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set_nums1: HashSet<isize> = HashSet::new();\n    let mut set_nums2: HashSet<isize> = HashSet::new();\n\n    for num in array_nums1 {\n        set_nums1.insert(num);\n    }\n\n    for num in array_nums2 {\n        set_nums2.insert(num);\n    }\n\n    for num in set_nums1 {\n        if set_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:4:24\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:4:41\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:5:24\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:5:41\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut map = HashMap::new();\n    for num in array_nums1 {\n        map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpe9s0cixb.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut map = HashMap::new();\n\n    for num in array_nums1 {\n        map.insert(num, true);\n    }\n\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpfdk6h0rc.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpb9dbddva.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..array_nums1.len() {\n        if map.contains_key(&array_nums1[i]) {\n            let count = map.get_mut(&array_nums1[i]).unwrap();\n            *count += 1;\n        } else {\n            map.insert(array_nums1[i], 1);\n        }\n    }\n    for i in 0..array_nums2.len() {\n        if map.contains_key(&array_nums2[i]) {\n            let count = map.get_mut(&array_nums2[i]).unwrap();\n            if *count > 0 {\n                result.push(array_nums2[i]);\n                *count -= 1;\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpub9x7v2i.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpub9x7v2i.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set_nums1: HashSet<isize> = HashSet::new();\n    let mut set_nums2: HashSet<isize> = HashSet::new();\n    for num in array_nums1 {\n        set_nums1.insert(num);\n    }\n    for num in array_nums2 {\n        set_nums2.insert(num);\n    }\n    for num in set_nums1 {\n        if set_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpshm5bl5h.rs:4:24\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpshm5bl5h.rs:4:41\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpshm5bl5h.rs:5:24\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpshm5bl5h.rs:5:41\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp52w7ypr3.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp52w7ypr3.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpduqc00so.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    for num in array_nums1 {\n        if array_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            *count -= 1;\n            if *count == 0 {\n                hash_map.remove(&num);\n            }\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpuxtcpayg.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpuxtcpayg.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection_array: Vec<isize> = Vec::new();\n    let mut set_nums1: HashSet<isize> = HashSet::new();\n    let mut set_nums2: HashSet<isize> = HashSet::new();\n\n    for num in array_nums1 {\n        set_nums1.insert(num);\n    }\n\n    for num in array_nums2 {\n        set_nums2.insert(num);\n    }\n\n    for num in set_nums1 {\n        if set_nums2.contains(&num) {\n            intersection_array.push(num);\n        }\n    }\n\n    intersection_array\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpidvy9w7e.rs:4:24\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpidvy9w7e.rs:4:41\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpidvy9w7e.rs:5:24\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpidvy9w7e.rs:5:41\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        let count = hash_map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    for num in array_nums2 {\n        let count = hash_map.entry(num).or_insert(0);\n        if *count > 0 {\n            result.push(num);\n            *count -= 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpqyxxg0mc.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpqyxxg0mc.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut array_nums1 = array_nums1.clone();\n    array_nums1.sort();\n    let mut array_nums2 = array_nums2.clone();\n    array_nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    while i < array_nums1.len() && j < array_nums2.len() {\n        if array_nums1[i] == array_nums2[j] {\n            result.push(array_nums1[i]);\n            i += 1;\n            j += 1;\n        } else if array_nums1[i] < array_nums2[j] {\n            i += 1;\n        } else {\n            j += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            if *count > 0 {\n                *count -= 1;\n                intersection.push(num);\n            }\n        }\n    }\n    intersection\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpl8iwtvfg.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpl8iwtvfg.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp2llxsptn.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp8qo60jzf.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut nums1 = array_nums1.clone();\n    let mut nums2 = array_nums2.clone();\n    nums1.sort();\n    nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    while i < nums1.len() && j < nums2.len() {\n        if nums1[i] == nums2[j] {\n            result.push(nums1[i]);\n            i += 1;\n            j += 1;\n        } else if nums1[i] < nums2[j] {\n            i += 1;\n        } else {\n            j += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, true);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpiufi90mu.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, true);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpiufi90mu.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            hash_map.insert(num, count + 1);\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                hash_map.insert(num, count - 1);\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpm04alehs.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut hash_map = HashMap::new();\n    let mut intersection = Vec::new();\n\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            intersection.push(num);\n        }\n    }\n\n    intersection\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp64kcbpur.rs:3:24\n  |\n3 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut map = HashMap::new();\n    for num in array_nums1 {\n        map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpe9s0cixb.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpb9dbddva.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection_array = Vec::new();\n    for num1 in array_nums1 {\n        for num2 in array_nums2 {\n            if num1 == num2 {\n                intersection_array.push(num1);\n                break;\n            }\n        }\n    }\n    intersection_array\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0382]: use of moved value: `array_nums2`\n   --> /tmp/tmp3se0ft1z.rs:5:21\n    |\n2   | fn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    |                                                ----------- move occurs because `array_nums2` has type `Vec<isize>`, which does not implement the `Copy` trait\n...\n5   |         for num2 in array_nums2 {\n    |                     ^^^^^^^^^^^ `array_nums2` moved due to this implicit call to `.into_iter()`, in previous iteration of loop\n    |\nnote: this function takes ownership of the receiver `self`, which moves `array_nums2`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n5   |         for num2 in &array_nums2 {\n    |                     +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        match hash_map.get(&num) {\n            Some(_) => result.push(num),\n            None => (),\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpuwzb4_hc.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        let count = hash_map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    for num in array_nums2 {\n        let count = hash_map.entry(num).or_insert(0);\n        if *count > 0 {\n            result.push(num);\n            *count -= 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpqyxxg0mc.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpqyxxg0mc.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set_nums1 = HashSet::new();\n    let mut set_nums2 = HashSet::new();\n\n    for num in array_nums1 {\n        set_nums1.insert(num);\n    }\n\n    for num in array_nums2 {\n        set_nums2.insert(num);\n    }\n\n    for num in set_nums1 {\n        if set_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgax4xqkn.rs:4:25\n  |\n4 |     let mut set_nums1 = HashSet::new();\n  |                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgax4xqkn.rs:5:25\n  |\n5 |     let mut set_nums2 = HashSet::new();\n  |                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut map = HashMap::new();\n\n    for num in array_nums1 {\n        map.insert(num, true);\n    }\n\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpfdk6h0rc.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpduqc00so.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n\n    for num in array_nums1 {\n        if array_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get(&num).unwrap();\n            map.insert(num, count + 1);\n        } else {\n            map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            let count = map.get(&num).unwrap();\n            if count > &0 {\n                result.push(num);\n                map.insert(num, count - 1);\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpooe687r5.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpooe687r5.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        let count = hash_map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    for num in array_nums2 {\n        if let Some(count) = hash_map.get(&num) {\n            if *count > 0 {\n                result.push(num);\n                hash_map.insert(num, *count - 1);\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpowddld0f.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection = vec![];\n    let mut hash_map = HashMap::new();\n\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            intersection.push(num);\n        }\n    }\n\n    intersection\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpqq1dskor.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        let count = hash_map.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    for num in array_nums2 {\n        let count = hash_map.entry(num).or_insert(0);\n        if *count > 0 {\n            result.push(num);\n            *count -= 1;\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpeta4668p.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpeta4668p.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut map = HashMap::new();\n    for num in array_nums1 {\n        map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpe9s0cixb.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp8qo60jzf.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp2llxsptn.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get(&num).unwrap();\n            map.insert(num, *count + 1);\n        } else {\n            map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            let count = map.get(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                map.insert(num, *count - 1);\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpaq6n2hm2.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpaq6n2hm2.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            hash_map.insert(num, count + 1);\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                hash_map.insert(num, count - 1);\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmplhjoqagw.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmplhjoqagw.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1.iter() {\n        if map.contains_key(num) {\n            let count = map.get_mut(num).unwrap();\n            *count += 1;\n        } else {\n            map.insert(*num, 1);\n        }\n    }\n    for num in array_nums2.iter() {\n        if map.contains_key(num) {\n            let count = map.get_mut(num).unwrap();\n            *count -= 1;\n            if *count == 0 {\n                map.remove(num);\n            }\n            result.push(*num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpa8evjs4j.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpa8evjs4j.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut nums1 = array_nums1.clone();\n    let mut nums2 = array_nums2.clone();\n    nums1.sort();\n    nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    while i < nums1.len() && j < nums2.len() {\n        if nums1[i] < nums2[j] {\n            i += 1;\n        } else if nums1[i] > nums2[j] {\n            j += 1;\n        } else {\n            result.push(nums1[i]);\n            i += 1;\n            j += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        let count = hash_map.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    for num in array_nums2 {\n        let count = hash_map.entry(num).or_insert(0);\n        if *count > 0 {\n            result.push(num);\n            *count -= 1;\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpeta4668p.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpeta4668p.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut nums1 = array_nums1.clone();\n    let mut nums2 = array_nums2.clone();\n    nums1.sort();\n    nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    while i < nums1.len() && j < nums2.len() {\n        if nums1[i] == nums2[j] {\n            result.push(nums1[i]);\n            i += 1;\n            j += 1;\n        } else if nums1[i] < nums2[j] {\n            i += 1;\n        } else {\n            j += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            hash_map.insert(num, count + 1);\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n            let count = hash_map.get(&num).unwrap();\n            if *count > 1 {\n                hash_map.insert(num, count - 1);\n            } else {\n                hash_map.remove(&num);\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp4fkhmlqr.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp4fkhmlqr.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection: Vec<isize> = vec![];\n    let mut hash_map: HashMap<isize, bool> = HashMap::new();\n\n    for num in array_nums1 {\n        hash_map.insert(num, true);\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            intersection.push(num);\n        }\n    }\n\n    intersection\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpt8io6qi7.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, bool> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpt8io6qi7.rs:4:46\n  |\n4 |     let mut hash_map: HashMap<isize, bool> = HashMap::new();\n  |                                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp2llxsptn.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection_array = Vec::new();\n    let mut array_nums1 = array_nums1.clone();\n    let mut array_nums2 = array_nums2.clone();\n    array_nums1.sort();\n    array_nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    while i < array_nums1.len() && j < array_nums2.len() {\n        if array_nums1[i] < array_nums2[j] {\n            i += 1;\n        } else if array_nums1[i] > array_nums2[j] {\n            j += 1;\n        } else {\n            intersection_array.push(array_nums1[i]);\n            i += 1;\n            j += 1;\n        }\n    }\n    intersection_array\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set: HashSet<isize> = HashSet::new();\n\n    for num in array_nums1 {\n        set.insert(num);\n    }\n\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpdmu1eyzc.rs:4:18\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpdmu1eyzc.rs:4:35\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1.iter() {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2.iter() {\n        if hash_map.contains_key(num) {\n            result.push(*num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp30pbxn0r.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n\n    for num in array_nums1 {\n        set.insert(num);\n    }\n\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpiuh6doyr.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection_array: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1.iter() {\n        if hash_map.contains_key(num) {\n            let count = hash_map.get(num).unwrap();\n            hash_map.insert(*num, count + 1);\n        } else {\n            hash_map.insert(*num, 1);\n        }\n    }\n\n    for num in array_nums2.iter() {\n        if hash_map.contains_key(num) {\n            let count = hash_map.get(num).unwrap();\n            hash_map.insert(*num, count - 1);\n            intersection_array.push(*num);\n        }\n    }\n\n    intersection_array\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpvw5g4lrs.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpvw5g4lrs.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set_nums1: HashSet<isize> = HashSet::new();\n    let mut set_nums2: HashSet<isize> = HashSet::new();\n\n    for num in array_nums1 {\n        set_nums1.insert(num);\n    }\n\n    for num in array_nums2 {\n        set_nums2.insert(num);\n    }\n\n    for num in set_nums1 {\n        if set_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:4:24\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:4:41\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:5:24\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:5:41\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    for i in 0..array_nums1.len() {\n        for j in 0..array_nums2.len() {\n            if array_nums1[i] == array_nums2[j] {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            *count -= 1;\n            if *count == 0 {\n                map.remove(&num);\n            }\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpyw7_ocmn.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpyw7_ocmn.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpduqc00so.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get(&num).unwrap();\n            map.insert(num, count + 1);\n        } else {\n            map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            let count = map.get(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                map.insert(num, count - 1);\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp9ptr55u5.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp9ptr55u5.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpduqc00so.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    let mut map = HashMap::new();\n    for num in array_nums1 {\n        map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpk1ouvbru.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in array_nums1 {\n        if map.contains_key(&i) {\n            let count = map.get(&i).unwrap();\n            map.insert(i, count + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for i in array_nums2 {\n        if map.contains_key(&i) {\n            result.push(i);\n            let count = map.get(&i).unwrap();\n            if count == &1 {\n                map.remove(&i);\n            } else {\n                map.insert(i, count - 1);\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpfc9sq04s.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpfc9sq04s.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set_nums1: HashSet<isize> = HashSet::new();\n    let mut set_nums2: HashSet<isize> = HashSet::new();\n\n    for num in array_nums1 {\n        set_nums1.insert(num);\n    }\n\n    for num in array_nums2 {\n        set_nums2.insert(num);\n    }\n\n    for num in set_nums1 {\n        if set_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:4:24\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:4:41\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:5:24\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:5:41\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpb9dbddva.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n\n    for num in array_nums1 {\n        set.insert(num);\n    }\n\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpiuh6doyr.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpduqc00so.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set_nums1: HashSet<isize> = HashSet::new();\n    let mut set_nums2: HashSet<isize> = HashSet::new();\n    for num in array_nums1 {\n        set_nums1.insert(num);\n    }\n    for num in array_nums2 {\n        set_nums2.insert(num);\n    }\n    for num in set_nums1 {\n        if set_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpshm5bl5h.rs:4:24\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpshm5bl5h.rs:4:41\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpshm5bl5h.rs:5:24\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpshm5bl5h.rs:5:41\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get(&num).unwrap();\n            map.insert(num, count + 1);\n        } else {\n            map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            let count = map.get(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                map.insert(num, count - 1);\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpgj7yls_d.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpgj7yls_d.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            hash_map.insert(num, count + 1);\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            if *count > 0 {\n                hash_map.insert(num, count - 1);\n                result.push(num);\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpct1lfcct.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpct1lfcct.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp2llxsptn.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection_array: Vec<isize> = Vec::new();\n    for num in array_nums1 {\n        if array_nums2.contains(&num) {\n            intersection_array.push(num);\n        }\n    }\n    intersection_array\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n\n    for num in array_nums1 {\n        let count = hash_map.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    for num in array_nums2 {\n        let count = hash_map.entry(num).or_insert(0);\n        if *count > 0 {\n            result.push(num);\n            *count -= 1;\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0wifi8vl.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpduqc00so.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpb9dbddva.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpb9dbddva.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp2llxsptn.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set_nums1: HashSet<isize> = HashSet::new();\n    let mut set_nums2: HashSet<isize> = HashSet::new();\n\n    for num in array_nums1 {\n        set_nums1.insert(num);\n    }\n\n    for num in array_nums2 {\n        set_nums2.insert(num);\n    }\n\n    for num in set_nums1 {\n        if set_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:4:24\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:4:41\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:5:24\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:5:41\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection_array: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1.iter() {\n        let count = hash_map.entry(*num).or_insert(0);\n        *count += 1;\n    }\n\n    for num in array_nums2.iter() {\n        if hash_map.contains_key(num) {\n            intersection_array.push(*num);\n        }\n    }\n\n    intersection_array\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpc6sq6o5w.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpc6sq6o5w.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut nums1 = array_nums1.clone();\n    let mut nums2 = array_nums2.clone();\n    nums1.sort();\n    nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    while i < nums1.len() && j < nums2.len() {\n        if nums1[i] == nums2[j] {\n            result.push(nums1[i]);\n            i += 1;\n            j += 1;\n        } else if nums1[i] < nums2[j] {\n            i += 1;\n        } else {\n            j += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection_array: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1.iter() {\n        let count = hash_map.entry(*num).or_insert(0);\n        *count += 1;\n    }\n    for num in array_nums2.iter() {\n        if hash_map.contains_key(num) {\n            intersection_array.push(*num);\n        }\n    }\n    intersection_array\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpsgezd4bv.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpsgezd4bv.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpb9dbddva.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpcnn475en.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpcnn475en.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpb9dbddva.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        let count = hash_map.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    for num in array_nums2 {\n        let count = hash_map.entry(num).or_insert(0);\n        if *count > 0 {\n            result.push(num);\n            *count -= 1;\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpeta4668p.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpeta4668p.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    for num in array_nums2 {\n        let count = map.entry(num).or_insert(0);\n        if *count > 0 {\n            result.push(num);\n            *count -= 1;\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp08daxtdf.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp08daxtdf.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    let mut result: Vec<isize> = Vec::new();\n\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp0wq4m4h1.rs:3:23\n  |\n3 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0wq4m4h1.rs:3:47\n  |\n3 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp2llxsptn.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpggdo9dgd.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpggdo9dgd.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut array_nums1 = array_nums1;\n    let mut array_nums2 = array_nums2;\n    array_nums1.sort();\n    array_nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    let mut result = Vec::new();\n    while i < array_nums1.len() && j < array_nums2.len() {\n        if array_nums1[i] < array_nums2[j] {\n            i += 1;\n        } else if array_nums1[i] > array_nums2[j] {\n            j += 1;\n        } else {\n            result.push(array_nums1[i]);\n            i += 1;\n            j += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpggdo9dgd.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpggdo9dgd.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpggdo9dgd.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpggdo9dgd.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    for num in array_nums1 {\n        if array_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        let count = hash_map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    for num in array_nums2 {\n        let count = hash_map.entry(num).or_insert(0);\n        if *count > 0 {\n            result.push(num);\n            *count -= 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpqyxxg0mc.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpqyxxg0mc.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp52w7ypr3.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp52w7ypr3.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set_nums1: HashSet<isize> = HashSet::new();\n    let mut set_nums2: HashSet<isize> = HashSet::new();\n\n    for num in array_nums1 {\n        set_nums1.insert(num);\n    }\n\n    for num in array_nums2 {\n        set_nums2.insert(num);\n    }\n\n    for num in set_nums1 {\n        if set_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:4:24\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:4:41\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:5:24\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:5:41\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        let count = hash_map.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    for num in array_nums2 {\n        let count = hash_map.entry(num).or_insert(0);\n        if *count > 0 {\n            result.push(num);\n            *count -= 1;\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpeta4668p.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpeta4668p.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut nums1 = array_nums1.clone();\n    let mut nums2 = array_nums2.clone();\n    nums1.sort();\n    nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    while i < nums1.len() && j < nums2.len() {\n        if nums1[i] == nums2[j] {\n            result.push(nums1[i]);\n            i += 1;\n            j += 1;\n        } else if nums1[i] < nums2[j] {\n            i += 1;\n        } else {\n            j += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp7clefncd.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp7clefncd.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n            let count = hash_map.get_mut(&num).unwrap();\n            *count -= 1;\n            if *count == 0 {\n                hash_map.remove(&num);\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp_t281kxd.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp_t281kxd.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp2llxsptn.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            hash_map.insert(num, count + 1);\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n            let count = hash_map.get(&num).unwrap();\n            if *count == 1 {\n                hash_map.remove(&num);\n            } else {\n                hash_map.insert(num, count - 1);\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpuqdetynw.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpuqdetynw.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut array_nums1 = array_nums1.clone();\n    let mut array_nums2 = array_nums2.clone();\n    array_nums1.sort();\n    array_nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    while i < array_nums1.len() && j < array_nums2.len() {\n        if array_nums1[i] == array_nums2[j] {\n            result.push(array_nums1[i]);\n            i += 1;\n            j += 1;\n        } else if array_nums1[i] < array_nums2[j] {\n            i += 1;\n        } else {\n            j += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut i = 0;\n    let mut j = 0;\n\n    while i < array_nums1.len() && j < array_nums2.len() {\n        if array_nums1[i] == array_nums2[j] {\n            result.push(array_nums1[i]);\n            i += 1;\n            j += 1;\n        } else if array_nums1[i] < array_nums2[j] {\n            i += 1;\n        } else {\n            j += 1;\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get(&num).unwrap();\n            map.insert(num, count + 1);\n        } else {\n            map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            result.push(num);\n            let count = map.get(&num).unwrap();\n            if count > &1 {\n                map.insert(num, count - 1);\n            } else {\n                map.remove(&num);\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp0fy82wfx.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0fy82wfx.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set1: HashSet<isize> = HashSet::new();\n    let mut set2: HashSet<isize> = HashSet::new();\n\n    for num in array_nums1 {\n        set1.insert(num);\n    }\n\n    for num in array_nums2 {\n        set2.insert(num);\n    }\n\n    for num in set1 {\n        if set2.contains(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpqtpfz_uq.rs:4:19\n  |\n4 |     let mut set1: HashSet<isize> = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpqtpfz_uq.rs:4:36\n  |\n4 |     let mut set1: HashSet<isize> = HashSet::new();\n  |                                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpqtpfz_uq.rs:5:19\n  |\n5 |     let mut set2: HashSet<isize> = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpqtpfz_uq.rs:5:36\n  |\n5 |     let mut set2: HashSet<isize> = HashSet::new();\n  |                                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            hash_map.insert(num, count + 1);\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n            let count = hash_map.get(&num).unwrap();\n            if *count == 1 {\n                hash_map.remove(&num);\n            } else {\n                hash_map.insert(num, count - 1);\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpelfuot_0.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpelfuot_0.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection_array: Vec<isize> = Vec::new();\n    let mut array_nums1_iter = array_nums1.iter();\n    let mut array_nums2_iter = array_nums2.iter();\n    let mut array_nums1_iter_next = array_nums1_iter.next();\n    let mut array_nums2_iter_next = array_nums2_iter.next();\n    while array_nums1_iter_next != None && array_nums2_iter_next != None {\n        if array_nums1_iter_next == array_nums2_iter_next {\n            intersection_array.push(*array_nums1_iter_next.unwrap());\n            array_nums1_iter_next = array_nums1_iter.next();\n            array_nums2_iter_next = array_nums2_iter.next();\n        } else if array_nums1_iter_next < array_nums2_iter_next {\n            array_nums1_iter_next = array_nums1_iter.next();\n        } else {\n            array_nums2_iter_next = array_nums2_iter.next();\n        }\n    }\n    return intersection_array;\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpduqc00so.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set_nums1: HashSet<isize> = HashSet::new();\n    let mut set_nums2: HashSet<isize> = HashSet::new();\n\n    for num in array_nums1 {\n        set_nums1.insert(num);\n    }\n\n    for num in array_nums2 {\n        set_nums2.insert(num);\n    }\n\n    for num in set_nums1 {\n        if set_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:4:24\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:4:41\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:5:24\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:5:41\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set_nums1: HashSet<isize> = HashSet::new();\n    let mut set_nums2: HashSet<isize> = HashSet::new();\n    for num in array_nums1 {\n        set_nums1.insert(num);\n    }\n    for num in array_nums2 {\n        set_nums2.insert(num);\n    }\n    for num in set_nums1 {\n        if set_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpshm5bl5h.rs:4:24\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpshm5bl5h.rs:4:41\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpshm5bl5h.rs:5:24\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpshm5bl5h.rs:5:41\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            hash_map.insert(num, count + 1);\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n            let count = hash_map.get(&num).unwrap();\n            if *count == 1 {\n                hash_map.remove(&num);\n            } else {\n                hash_map.insert(num, count - 1);\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpelfuot_0.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpelfuot_0.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection_array = Vec::new();\n    let mut hash_map = HashMap::new();\n\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            *count -= 1;\n            if *count == 0 {\n                hash_map.remove(&num);\n            }\n            intersection_array.push(num);\n        }\n    }\n\n    intersection_array\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprcpcimf1.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpb9dbddva.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut nums1 = array_nums1.clone();\n    let mut nums2 = array_nums2.clone();\n    nums1.sort();\n    nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    while i < nums1.len() && j < nums2.len() {\n        if nums1[i] == nums2[j] {\n            result.push(nums1[i]);\n            i += 1;\n            j += 1;\n        } else if nums1[i] < nums2[j] {\n            i += 1;\n        } else {\n            j += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, true);\n    }\n    for num in array_nums2 {\n        if hash_map.get(&num).is_some() {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpkeu5ztaq.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpcnn475en.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpcnn475en.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        let count = hash_map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    for num in array_nums2 {\n        let count = hash_map.entry(num).or_insert(0);\n        if *count > 0 {\n            result.push(num);\n            *count -= 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpqyxxg0mc.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpqyxxg0mc.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpb9dbddva.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpb9dbddva.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpp4wr4sr_.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpp4wr4sr_.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut hash_map = HashMap::new();\n    let mut intersection_array = Vec::new();\n\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            intersection_array.push(num);\n        }\n    }\n\n    intersection_array\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpigfjt03s.rs:3:24\n  |\n3 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpukmcv55a.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut nums1 = array_nums1.clone();\n    let mut nums2 = array_nums2.clone();\n    nums1.sort();\n    nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    while i < nums1.len() && j < nums2.len() {\n        if nums1[i] == nums2[j] {\n            result.push(nums1[i]);\n            i += 1;\n            j += 1;\n        } else if nums1[i] < nums2[j] {\n            i += 1;\n        } else {\n            j += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut array_nums1 = array_nums1.clone();\n    let mut array_nums2 = array_nums2.clone();\n    array_nums1.sort();\n    array_nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    while i < array_nums1.len() && j < array_nums2.len() {\n        if array_nums1[i] == array_nums2[j] {\n            result.push(array_nums1[i]);\n            i += 1;\n            j += 1;\n        } else if array_nums1[i] < array_nums2[j] {\n            i += 1;\n        } else {\n            j += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpcnn475en.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpcnn475en.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get(&num).unwrap();\n            map.insert(num, count + 1);\n        } else {\n            map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            let count = map.get(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                map.insert(num, count - 1);\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp8usdjws6.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp8usdjws6.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut map = HashMap::new();\n    for num in array_nums1 {\n        map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpe9s0cixb.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp2llxsptn.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    for i in 0..array_nums1.len() {\n        for j in 0..array_nums2.len() {\n            if array_nums1[i] == array_nums2[j] {\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpb9dbddva.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            hash_map.insert(num, count + 1);\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                hash_map.insert(num, count - 1);\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmplhjoqagw.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmplhjoqagw.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut nums1: Vec<isize> = array_nums1.clone();\n    let mut nums2: Vec<isize> = array_nums2.clone();\n    nums1.sort();\n    nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    while i < nums1.len() && j < nums2.len() {\n        if nums1[i] == nums2[j] {\n            result.push(nums1[i]);\n            i += 1;\n            j += 1;\n        } else if nums1[i] < nums2[j] {\n            i += 1;\n        } else {\n            j += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut map = HashMap::new();\n    for num in array_nums1 {\n        map.insert(num, true);\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwycf5_ly.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            intersection.push(num);\n        }\n    }\n    intersection\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpto8991m8.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    for num in array_nums1 {\n        if array_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    for num in array_nums1 {\n        if array_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp2llxsptn.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = vec![];\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        let count = hash_map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    for num in array_nums2 {\n        let count = hash_map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    for (key, value) in hash_map {\n        if value == 2 {\n            result.push(key);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp8u8u2yd_.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp8u8u2yd_.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut map = HashMap::new();\n    for num in array_nums1 {\n        map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpe9s0cixb.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut array_nums1 = array_nums1;\n    let mut array_nums2 = array_nums2;\n    array_nums1.sort();\n    array_nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    while i < array_nums1.len() && j < array_nums2.len() {\n        if array_nums1[i] == array_nums2[j] {\n            result.push(array_nums1[i]);\n            i += 1;\n            j += 1;\n        } else if array_nums1[i] < array_nums2[j] {\n            i += 1;\n        } else {\n            j += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpb9dbddva.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp64lbzn68.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp64lbzn68.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpb9dbddva.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpduqc00so.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        let count = hash_map.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    for num in array_nums2 {\n        let count = hash_map.entry(num).or_insert(0);\n        if *count > 0 {\n            result.push(num);\n            *count -= 1;\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpeta4668p.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpeta4668p.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set1: HashSet<isize> = HashSet::new();\n    let mut set2: HashSet<isize> = HashSet::new();\n    for num in array_nums1 {\n        set1.insert(num);\n    }\n    for num in array_nums2 {\n        set2.insert(num);\n    }\n    for num in set1 {\n        if set2.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpavrkcb4e.rs:4:19\n  |\n4 |     let mut set1: HashSet<isize> = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpavrkcb4e.rs:4:36\n  |\n4 |     let mut set1: HashSet<isize> = HashSet::new();\n  |                                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpavrkcb4e.rs:5:19\n  |\n5 |     let mut set2: HashSet<isize> = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpavrkcb4e.rs:5:36\n  |\n5 |     let mut set2: HashSet<isize> = HashSet::new();\n  |                                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            *count -= 1;\n            if *count == 0 {\n                hash_map.remove(&num);\n            }\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp3wtcb1po.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp3wtcb1po.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp2llxsptn.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp2llxsptn.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpb9dbddva.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp2llxsptn.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            hash_map.insert(num, count + 1);\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                hash_map.insert(num, count - 1);\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp05y6858f.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp05y6858f.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    for num in array_nums1 {\n        if array_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpduqc00so.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get(&num).unwrap();\n            map.insert(num, count + 1);\n        } else {\n            map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            let count = map.get(&num).unwrap();\n            if count > &0 {\n                result.push(num);\n                map.insert(num, count - 1);\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpooe687r5.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpooe687r5.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut map = HashMap::new();\n\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp53xwvg4q.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    for num1 in array_nums1 {\n        for num2 in array_nums2.iter() {\n            if num1 == *num2 {\n                result.push(num1);\n                break;\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpb9dbddva.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set_nums1: HashSet<isize> = HashSet::new();\n    let mut set_nums2: HashSet<isize> = HashSet::new();\n\n    for num in array_nums1 {\n        set_nums1.insert(num);\n    }\n\n    for num in array_nums2 {\n        set_nums2.insert(num);\n    }\n\n    for num in set_nums1 {\n        if set_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:4:24\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:4:41\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:5:24\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:5:41\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash = HashMap::new();\n    for num in array_nums1 {\n        hash.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpgmwtqghy.rs:4:20\n  |\n4 |     let mut hash = HashMap::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    for num in array_nums1 {\n        if array_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection_array: Vec<isize> = Vec::new();\n    let mut array_nums1 = array_nums1;\n    let mut array_nums2 = array_nums2;\n\n    array_nums1.sort();\n    array_nums2.sort();\n\n    let mut i = 0;\n    let mut j = 0;\n\n    while i < array_nums1.len() && j < array_nums2.len() {\n        if array_nums1[i] == array_nums2[j] {\n            intersection_array.push(array_nums1[i]);\n            i += 1;\n            j += 1;\n        } else if array_nums1[i] < array_nums2[j] {\n            i += 1;\n        } else {\n            j += 1;\n        }\n    }\n\n    intersection_array\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut array_nums1 = array_nums1.clone();\n    let mut array_nums2 = array_nums2.clone();\n    array_nums1.sort();\n    array_nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    while i < array_nums1.len() && j < array_nums2.len() {\n        if array_nums1[i] == array_nums2[j] {\n            result.push(array_nums1[i]);\n            i += 1;\n            j += 1;\n        } else if array_nums1[i] < array_nums2[j] {\n            i += 1;\n        } else {\n            j += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        let count = hash_map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    for num in array_nums2 {\n        let count = hash_map.entry(num).or_insert(0);\n        if *count > 0 {\n            result.push(num);\n            *count -= 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpqyxxg0mc.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpqyxxg0mc.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        let count = hash_map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    for num in array_nums2 {\n        let count = hash_map.entry(num).or_insert(0);\n        if *count > 0 {\n            result.push(num);\n            *count -= 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpqyxxg0mc.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpqyxxg0mc.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            hash_map.insert(num, count + 1);\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n            let count = hash_map.get(&num).unwrap();\n            if count > &1 {\n                hash_map.insert(num, count - 1);\n            } else {\n                hash_map.remove(&num);\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpg6scvoef.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpg6scvoef.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp8qo60jzf.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set_nums1: HashSet<isize> = HashSet::new();\n    let mut set_nums2: HashSet<isize> = HashSet::new();\n\n    for num in array_nums1 {\n        set_nums1.insert(num);\n    }\n\n    for num in array_nums2 {\n        set_nums2.insert(num);\n    }\n\n    for num in set_nums1 {\n        if set_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:4:24\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:4:41\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:5:24\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:5:41\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp8qo60jzf.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp8qo60jzf.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut array_nums1 = array_nums1.clone();\n    let mut array_nums2 = array_nums2.clone();\n\n    array_nums1.sort();\n    array_nums2.sort();\n\n    let mut i = 0;\n    let mut j = 0;\n\n    while i < array_nums1.len() && j < array_nums2.len() {\n        if array_nums1[i] < array_nums2[j] {\n            i += 1;\n        } else if array_nums1[i] > array_nums2[j] {\n            j += 1;\n        } else {\n            result.push(array_nums1[i]);\n            i += 1;\n            j += 1;\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpggdo9dgd.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpggdo9dgd.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpb9dbddva.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set1: HashSet<isize> = HashSet::new();\n    let mut set2: HashSet<isize> = HashSet::new();\n    for num in array_nums1 {\n        set1.insert(num);\n    }\n    for num in array_nums2 {\n        set2.insert(num);\n    }\n    for num in set1 {\n        if set2.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpavrkcb4e.rs:4:19\n  |\n4 |     let mut set1: HashSet<isize> = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpavrkcb4e.rs:4:36\n  |\n4 |     let mut set1: HashSet<isize> = HashSet::new();\n  |                                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpavrkcb4e.rs:5:19\n  |\n5 |     let mut set2: HashSet<isize> = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpavrkcb4e.rs:5:36\n  |\n5 |     let mut set2: HashSet<isize> = HashSet::new();\n  |                                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection_array = Vec::new();\n    for num in array_nums1 {\n        if array_nums2.contains(&num) {\n            intersection_array.push(num);\n        }\n    }\n    return intersection_array;\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut map = HashMap::new();\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            let count = map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprtqa6t_z.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            intersection.push(num);\n        }\n    }\n    intersection\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpto8991m8.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            hash_map.insert(num, count + 1);\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                hash_map.insert(num, count - 1);\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp05y6858f.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp05y6858f.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n\n    for num in array_nums1 {\n        hash_map.insert(num, true);\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp6oy2jsdt.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set_nums1: HashSet<isize> = HashSet::new();\n    let mut set_nums2: HashSet<isize> = HashSet::new();\n\n    for num in array_nums1 {\n        set_nums1.insert(num);\n    }\n\n    for num in array_nums2 {\n        set_nums2.insert(num);\n    }\n\n    for num in set_nums1 {\n        if set_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:4:24\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:4:41\n  |\n4 |     let mut set_nums1: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpnz4lvgbs.rs:5:24\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpnz4lvgbs.rs:5:41\n  |\n5 |     let mut set_nums2: HashSet<isize> = HashSet::new();\n  |                                         ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for num in array_nums1 {\n        if map.contains_key(&num) {\n            let count = map.get(&num).unwrap();\n            map.insert(num, count + 1);\n        } else {\n            map.insert(num, 1);\n        }\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            let count = map.get(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                map.insert(num, count - 1);\n            }\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp9ptr55u5.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp9ptr55u5.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection_array = Vec::new();\n    let mut hash_map = HashMap::new();\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            intersection_array.push(num);\n        }\n    }\n    intersection_array\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp_e9cjwr8.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection_array = Vec::new();\n    let mut array_nums1 = array_nums1;\n    let mut array_nums2 = array_nums2;\n    array_nums1.sort();\n    array_nums2.sort();\n    let mut i = 0;\n    let mut j = 0;\n    while i < array_nums1.len() && j < array_nums2.len() {\n        if array_nums1[i] < array_nums2[j] {\n            i += 1;\n        } else if array_nums1[i] > array_nums2[j] {\n            j += 1;\n        } else {\n            intersection_array.push(array_nums1[i]);\n            i += 1;\n            j += 1;\n        }\n    }\n    intersection_array\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpggdo9dgd.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpggdo9dgd.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n    for num in array_nums1 {\n        set.insert(num);\n    }\n    for num in array_nums2 {\n        if set.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpb9dbddva.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut set1: HashSet<isize> = HashSet::new();\n    let mut set2: HashSet<isize> = HashSet::new();\n\n    for num in array_nums1 {\n        set1.insert(num);\n    }\n    for num in array_nums2 {\n        set2.insert(num);\n    }\n\n    for num in set1 {\n        if set2.contains(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpuo99ir2r.rs:4:19\n  |\n4 |     let mut set1: HashSet<isize> = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpuo99ir2r.rs:4:36\n  |\n4 |     let mut set1: HashSet<isize> = HashSet::new();\n  |                                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpuo99ir2r.rs:5:19\n  |\n5 |     let mut set2: HashSet<isize> = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpuo99ir2r.rs:5:36\n  |\n5 |     let mut set2: HashSet<isize> = HashSet::new();\n  |                                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    for num in array_nums1 {\n        if array_nums2.contains(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection_array = Vec::new();\n    let mut hash_map = HashMap::new();\n\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let value = hash_map.get_mut(&num).unwrap();\n            *value += 1;\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let value = hash_map.get_mut(&num).unwrap();\n            *value += 1;\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for (key, value) in hash_map {\n        if value > 1 {\n            intersection_array.push(key);\n        }\n    }\n\n    intersection_array\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp1t38xsgy.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut hash_map = HashMap::new();\n\n    for num in array_nums1 {\n        hash_map.insert(num, 1);\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpduqc00so.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    let mut map = HashMap::new();\n    for num in array_nums1 {\n        map.insert(num, 1);\n    }\n    for num in array_nums2 {\n        if map.contains_key(&num) {\n            result.push(num);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpk1ouvbru.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut result: Vec<isize> = Vec::new();\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n\n    for num in array_nums1 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            *count += 1;\n        } else {\n            hash_map.insert(num, 1);\n        }\n    }\n\n    for num in array_nums2 {\n        if hash_map.contains_key(&num) {\n            let count = hash_map.get_mut(&num).unwrap();\n            if *count > 0 {\n                result.push(num);\n                *count -= 1;\n            }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpggdo9dgd.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpggdo9dgd.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the intersection of two arrays.\nfn intersection_array(array_nums1: Vec<isize>, array_nums2: Vec<isize>) -> Vec<isize> {\n    let mut intersection_array = Vec::new();\n    for num in array_nums1 {\n        if array_nums2.contains(&num) {\n            intersection_array.push(num);\n        }\n    }\n    intersection_array\n}\n\nfn main() {\n    let candidate = intersection_array;\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![1, 2, 4, 8, 9]), vec![1, 2, 8, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![3, 5, 7, 9]), vec![3, 5, 7, 9]);\n    assert_eq!(candidate(vec![1, 2, 3, 5, 7, 8, 9, 10], vec![10, 20, 30, 40]), vec![10]);\n}\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_733_find_first_occurrence",
  "language": "rs",
  "prompt": "/// Write a function to find the index of the first occurrence of a given number in a sorted array.\nfn find_first_occurrence(A: Vec<isize>, x: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_733_find_first_occurrence.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = find_first_occurrence;\n    assert_eq!(candidate(vec![2, 5, 5, 5, 6, 6, 8, 9, 9, 9], 5), 1);\n    assert_eq!(candidate(vec![2, 3, 5, 5, 6, 6, 8, 9, 9, 9], 5), 2);\n    assert_eq!(candidate(vec![2, 4, 1, 5, 6, 6, 8, 9, 9, 9], 6), 4);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n\n    while left <= right {\n        let mid = (left + right) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] > x {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() as isize - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if x == A[mid] {\n            result = mid as isize;\n            high = mid - 1;\n        } else if x < A[mid] {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = (low + high) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n\n    result",
    "    let mut low: isize = 0;\n    let mut high: isize = A.len() as isize - 1;\n    let mut result: isize = -1;\n\n    while low <= high {\n        let mid: isize = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    result",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] < x {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() as isize - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut l = 0;\n    let mut r = A.len() - 1;\n    let mut result = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        if A[m] == x {\n            result = m as isize;\n            r = m - 1;\n        } else if A[m] > x {\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() as isize - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = (low + high) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] > x {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n    while left <= right {\n        let mid = (left + right) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] < x {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n\n    while low <= high {\n        let mid = (low + high) / 2;\n        if A[mid] == x {\n            if mid == 0 || A[mid - 1] != x {\n                return mid as isize;\n            } else {\n                high = mid - 1;\n            }\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n\n    -1",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() as isize - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] < x {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = (low + high) / 2;\n\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut l = 0;\n    let mut r = A.len() - 1;\n    let mut result = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        if A[m] >= x {\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n        if A[m] == x {\n            result = m as isize;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut l = 0;\n    let mut r = A.len() as isize - 1;\n    let mut result = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        if A[m as usize] == x {\n            result = m;\n            r = m - 1;\n        } else if A[m as usize] < x {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() as isize - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut l = 0;\n    let mut r = A.len() - 1;\n    let mut result = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        if A[m] == x {\n            result = m as isize;\n            r = m - 1;\n        } else if A[m] < x {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = (low + high) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() as isize - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut l = 0;\n    let mut r = A.len() - 1;\n    let mut result = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        if A[m] == x {\n            result = m as isize;\n            r = m - 1;\n        } else if A[m] > x {\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if x < A[mid] {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] < x {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] > x {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    result",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] < x {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() as isize - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] < x {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut l = 0;\n    let mut r = A.len() - 1;\n    let mut m = 0;\n    let mut result = -1;\n    while l <= r {\n        m = l + (r - l) / 2;\n        if A[m] == x {\n            result = m as isize;\n            r = m - 1;\n        } else if A[m] > x {\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut l = 0;\n    let mut r = A.len() - 1;\n    let mut result = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        if A[m] == x {\n            result = m as isize;\n            r = m - 1;\n        } else if A[m] < x {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    result",
    "    let mut l = 0;\n    let mut r = A.len() - 1;\n    let mut m = 0;\n    let mut result = -1;\n    while l <= r {\n        m = l + (r - l) / 2;\n        if A[m] == x {\n            result = m as isize;\n            r = m - 1;\n        } else if A[m] > x {\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n    result",
    "    let mut l = 0;\n    let mut r = A.len() - 1;\n    let mut m = 0;\n    let mut result = -1;\n\n    while l <= r {\n        m = (l + r) / 2;\n        if A[m] == x {\n            result = m as isize;\n            r = m - 1;\n        } else if A[m] > x {\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low: isize = 0;\n    let mut high: isize = A.len() as isize - 1;\n    let mut result: isize = -1;\n\n    while low <= high {\n        let mid: isize = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut l = 0;\n    let mut r = A.len() - 1;\n    let mut result = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        if A[m] == x {\n            result = m as isize;\n            r = m - 1;\n        } else if A[m] < x {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut l = 0;\n    let mut r = A.len() - 1;\n    let mut m = 0;\n    let mut result = -1;\n    while l <= r {\n        m = l + (r - l) / 2;\n        if A[m] == x {\n            result = m as isize;\n            r = m - 1;\n        } else if A[m] > x {\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() as isize - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = (low + high) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut left = 0;\n    let mut right = A.len() as isize - 1;\n    let mut result = -1;\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            right = mid - 1;\n        } else if A[mid as usize] < x {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] < x {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    result",
    "    let mut left = 0;\n    let mut right = A.len() as isize - 1;\n    let mut result = -1;\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            right = mid - 1;\n        } else if A[mid as usize] < x {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    result",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] > x {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n\n    result",
    "    let mut l = 0;\n    let mut r = A.len() - 1;\n    let mut result = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        if A[m] == x {\n            result = m as isize;\n            r = m - 1;\n        } else if A[m] > x {\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() as isize - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n\n        if A[mid] == x {\n            if mid == 0 || A[mid - 1] != x {\n                return mid as isize;\n            } else {\n                high = mid - 1;\n            }\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n\n    -1",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] < x {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() as isize - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() as isize - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut l = 0;\n    let mut r = A.len() - 1;\n    let mut result = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        if A[m] == x {\n            result = m as isize;\n            r = m - 1;\n        } else if A[m] > x {\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] > x {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut start = 0;\n    let mut end = A.len() - 1;\n    let mut result = -1;\n\n    while start <= end {\n        let mid = (start + end) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            end = mid - 1;\n        } else if A[mid] > x {\n            end = mid - 1;\n        } else {\n            start = mid + 1;\n        }\n    }\n\n    result",
    "    let mut lo = 0;\n    let mut hi = A.len() as isize - 1;\n\n    while lo <= hi {\n        let mid = lo + (hi - lo) / 2;\n        if A[mid as usize] == x {\n            if mid == 0 || A[(mid - 1) as usize] != x {\n                return mid;\n            } else {\n                hi = mid - 1;\n            }\n        } else if A[mid as usize] > x {\n            hi = mid - 1;\n        } else {\n            lo = mid + 1;\n        }\n    }\n\n    -1",
    "    let mut l = 0;\n    let mut r = A.len() - 1;\n    let mut result = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        if A[m] == x {\n            result = m as isize;\n            r = m - 1;\n        } else if A[m] > x {\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            if mid == 0 || A[mid - 1] != x {\n                return mid as isize;\n            } else {\n                high = mid - 1;\n            }\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    -1",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = (low + high) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() as isize - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut l = 0;\n    let mut r = A.len() - 1;\n    let mut m = 0;\n    let mut result = -1;\n\n    while l <= r {\n        m = l + (r - l) / 2;\n        if A[m] == x {\n            result = m as isize;\n            r = m - 1;\n        } else if A[m] > x {\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() as isize - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = (low + high) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if x < A[mid] {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() as isize - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = (low + high) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] > x {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    result",
    "    let mut low: isize = 0;\n    let mut high: isize = A.len() as isize - 1;\n    let mut result: isize = -1;\n\n    while low <= high {\n        let mid: isize = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if x == A[mid] {\n            result = mid as isize;\n            high = mid - 1;\n        } else if x < A[mid] {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] > x {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() as isize - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] < x {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    result",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] < x {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    result",
    "    let mut left = 0;\n    let mut right = A.len() - 1;\n    let mut result = -1;\n    while left <= right {\n        let mid = left + (right - left) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            right = mid - 1;\n        } else if A[mid] > x {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() as isize - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut l = 0;\n    let mut r = A.len() - 1;\n    let mut m;\n    let mut result = -1;\n\n    while l <= r {\n        m = (l + r) / 2;\n        if A[m] == x {\n            result = m as isize;\n            r = m - 1;\n        } else if A[m] > x {\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    result",
    "    let mut l = 0;\n    let mut r = A.len() as isize - 1;\n    let mut result = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        if A[m as usize] == x {\n            result = m;\n            r = m - 1;\n        } else if A[m as usize] > x {\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() as isize - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid as usize] == x {\n            result = mid;\n            high = mid - 1;\n        } else if A[mid as usize] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] < x {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if x == A[mid] {\n            result = mid as isize;\n            high = mid - 1;\n        } else if x < A[mid] {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut l = 0;\n    let mut r = A.len() - 1;\n    let mut m = (l + r) / 2;\n    let mut result = -1;\n\n    while l <= r {\n        if A[m] == x {\n            result = m as isize;\n            r = m - 1;\n        } else if A[m] > x {\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n        m = (l + r) / 2;\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result",
    "    let mut low = 0;\n    let mut high = A.len() - 1;\n    let mut result = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        if A[mid] == x {\n            result = mid as isize;\n            high = mid - 1;\n        } else if A[mid] > x {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    result"
  ]
}
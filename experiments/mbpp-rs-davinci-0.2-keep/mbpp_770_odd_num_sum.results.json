{
  "name": "mbpp_770_odd_num_sum",
  "language": "rs",
  "prompt": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_770_odd_num_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpv_4zdjjd.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        let num = 2 * i - 1;\n        sum += num * num * num * num;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpv_4zdjjd.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpv_4zdjjd.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpv_4zdjjd.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i.pow(4);\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpq0joetlk.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpv_4zdjjd.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpv_4zdjjd.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum: isize = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjz8gk86s.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpuatn4vdb.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpv_4zdjjd.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpuatn4vdb.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpv_4zdjjd.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpv_4zdjjd.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i * i * i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpo_2leox3.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpwrmzu02n.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        let odd_num = 2 * i - 1;\n        sum += odd_num.pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..=n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmphg_qvdkv.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpv_4zdjjd.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpv_4zdjjd.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += i.pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpbhj7_s97.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i.pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpbtaf4_ob.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpv_4zdjjd.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpv_4zdjjd.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeqg3u0on.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpv_4zdjjd.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp7vs_5p_v.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum: isize = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjz8gk86s.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a python function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpjaegjzxs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    }
  ]
}
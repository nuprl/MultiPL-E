{
  "name": "mbpp_135_hexagonal_num",
  "language": "rs",
  "prompt": "/// Write a function to find the nth hexagonal number.\nfn hexagonal_num(n: isize) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_135_hexagonal_num.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = hexagonal_num;\n    assert_eq!(candidate(10), 190);\n    assert_eq!(candidate(5), 45);\n    assert_eq!(candidate(7), 91);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)",
    "    n * (2 * n - 1)"
  ]
}
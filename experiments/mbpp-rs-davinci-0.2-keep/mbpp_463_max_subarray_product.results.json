{
  "name": "mbpp_463_max_subarray_product",
  "language": "rs",
  "prompt": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_463_max_subarray_product.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            let temp = max_product;\n            max_product = min_product;\n            min_product = temp;\n        }\n\n        max_product = max(arr[i], max_product * arr[i]);\n        min_product = min(arr[i], min_product * arr[i]);\n\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2ep59f6v.rs:14:23\n   |\n14 |         max_product = max(arr[i], max_product * arr[i]);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp2ep59f6v.rs:15:23\n   |\n15 |         min_product = min(arr[i], min_product * arr[i]);\n   |                       ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n15 |         min_product = main(arr[i], min_product * arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2ep59f6v.rs:17:22\n   |\n17 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n\n        let mut temp_max = max_product;\n        max_product = max(curr, max(curr * max_product, curr * min_product));\n        min_product = min(curr, min(curr * temp_max, curr * min_product));\n\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2v5x0n2k.rs:11:23\n   |\n11 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2v5x0n2k.rs:11:33\n   |\n11 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp2v5x0n2k.rs:12:23\n   |\n12 |         min_product = min(curr, min(curr * temp_max, curr * min_product));\n   |                       ^^^\n...\n20 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |         min_product = main(curr, min(curr * temp_max, curr * min_product));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp2v5x0n2k.rs:12:33\n   |\n12 |         min_product = min(curr, min(curr * temp_max, curr * min_product));\n   |                                 ^^^\n...\n20 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |         min_product = min(curr, main(curr * temp_max, curr * min_product));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2v5x0n2k.rs:14:22\n   |\n14 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_candidates = vec![\n            curr,\n            curr * max_product,\n            curr * min_product,\n        ];\n        let min_product_candidates = vec![\n            curr,\n            curr * max_product,\n            curr * min_product,\n        ];\n        max_product = *max_product_candidates.iter().max().unwrap();\n        min_product = *min_product_candidates.iter().min().unwrap();\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp52xtrakz.rs:21:22\n   |\n21 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut result = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_prev = max_product;\n        let min_product_prev = min_product;\n\n        max_product = max(\n            max(max_product_prev * curr, min_product_prev * curr),\n            curr,\n        );\n        min_product = min(\n            min(max_product_prev * curr, min_product_prev * curr),\n            curr,\n        );\n\n        result = max(result, max_product);\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpumgd4bc4.rs:12:23\n   |\n12 |         max_product = max(\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpumgd4bc4.rs:13:13\n   |\n13 |             max(max_product_prev * curr, min_product_prev * curr),\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpumgd4bc4.rs:16:23\n   |\n16 |         min_product = min(\n   |                       ^^^\n...\n27 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n16 |         min_product = main(\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpumgd4bc4.rs:17:13\n   |\n17 |             min(max_product_prev * curr, min_product_prev * curr),\n   |             ^^^\n...\n27 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n17 |             main(max_product_prev * curr, min_product_prev * curr),\n   |             ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpumgd4bc4.rs:21:18\n   |\n21 |         result = max(result, max_product);\n   |                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        0\n    } else {\n        max_so_far\n    }\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp_mjml_uy.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n31 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp_mjml_uy.rs:17:31\n   |\n17 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut temp_max = max_product;\n        max_product = max(\n            max(max_product * arr[i], min_product * arr[i]),\n            arr[i]\n        );\n        min_product = min(\n            min(temp_max * arr[i], min_product * arr[i]),\n            arr[i]\n        );\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp26y36ja7.rs:9:23\n  |\n9 |         max_product = max(\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp26y36ja7.rs:10:13\n   |\n10 |             max(max_product * arr[i], min_product * arr[i]),\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp26y36ja7.rs:13:23\n   |\n13 |         min_product = min(\n   |                       ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = main(\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp26y36ja7.rs:14:13\n   |\n14 |             min(temp_max * arr[i], min_product * arr[i]),\n   |             ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n14 |             main(temp_max * arr[i], min_product * arr[i]),\n   |             ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp26y36ja7.rs:17:22\n   |\n17 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(max(max_product * curr, min_product * curr), curr);\n        min_product = min(min(temp_max * curr, min_product * curr), curr);\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmphnrxmf5s.rs:9:23\n  |\n9 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmphnrxmf5s.rs:9:27\n  |\n9 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmphnrxmf5s.rs:10:23\n   |\n10 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                       ^^^\n...\n16 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(min(temp_max * curr, min_product * curr), curr);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmphnrxmf5s.rs:10:27\n   |\n10 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                           ^^^\n...\n16 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(main(temp_max * curr, min_product * curr), curr);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmphnrxmf5s.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E04",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut temp = max_product;\n        max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n        min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpc9lpv2in.rs:9:23\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpc9lpv2in.rs:9:27\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpc9lpv2in.rs:10:23\n   |\n10 |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpc9lpv2in.rs:10:27\n   |\n10 |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(main(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpc9lpv2in.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n\n        let tmp_max = max_product;\n        max_product = max(max(max_product * curr, min_product * curr), curr);\n        min_product = min(min(tmp_max * curr, min_product * curr), curr);\n\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpqb46vegy.rs:11:23\n   |\n11 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpqb46vegy.rs:11:27\n   |\n11 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpqb46vegy.rs:12:23\n   |\n12 |         min_product = min(min(tmp_max * curr, min_product * curr), curr);\n   |                       ^^^\n...\n20 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |         min_product = main(min(tmp_max * curr, min_product * curr), curr);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpqb46vegy.rs:12:27\n   |\n12 |         min_product = min(min(tmp_max * curr, min_product * curr), curr);\n   |                           ^^^\n...\n20 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |         min_product = min(main(tmp_max * curr, min_product * curr), curr);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpqb46vegy.rs:14:22\n   |\n14 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        let (max_product_prev, min_product_prev) = (max_product, min_product);\n        max_product = max(max(max_product_prev * arr[i], min_product_prev * arr[i]), arr[i]);\n        min_product = min(min(max_product_prev * arr[i], min_product_prev * arr[i]), arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpmg912z0v.rs:8:23\n  |\n8 |         max_product = max(max(max_product_prev * arr[i], min_product_prev * arr[i]), arr[i]);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpmg912z0v.rs:8:27\n  |\n8 |         max_product = max(max(max_product_prev * arr[i], min_product_prev * arr[i]), arr[i]);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpmg912z0v.rs:9:23\n   |\n9  |         min_product = min(min(max_product_prev * arr[i], min_product_prev * arr[i]), arr[i]);\n   |                       ^^^\n...\n15 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         min_product = main(min(max_product_prev * arr[i], min_product_prev * arr[i]), arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpmg912z0v.rs:9:27\n   |\n9  |         min_product = min(min(max_product_prev * arr[i], min_product_prev * arr[i]), arr[i]);\n   |                           ^^^\n...\n15 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         min_product = min(main(max_product_prev * arr[i], min_product_prev * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpmg912z0v.rs:10:22\n   |\n10 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        let mut temp = max_product;\n        max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n        min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp132671_7.rs:8:23\n  |\n8 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp132671_7.rs:8:27\n  |\n8 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp132671_7.rs:9:23\n   |\n9  |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ^^^\n...\n15 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         min_product = main(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp132671_7.rs:9:27\n   |\n9  |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ^^^\n...\n15 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         min_product = min(main(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp132671_7.rs:10:22\n   |\n10 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `r",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    let mut max_ending_here = 1;\n    let mut max_product = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_ending_here > max_product {\n            max_product = max_ending_here;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpyfd_aev8.rs:11:26\n   |\n11 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n29 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpyfd_aev8.rs:17:31\n   |\n17 |             max_ending_here = max(min_so_far * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(curr, max(max_product * curr, min_product * curr));\n        min_product = min(curr, min(temp_max * curr, min_product * curr));\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp46tu5myj.rs:10:23\n   |\n10 |         max_product = max(curr, max(max_product * curr, min_product * curr));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp46tu5myj.rs:10:33\n   |\n10 |         max_product = max(curr, max(max_product * curr, min_product * curr));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp46tu5myj.rs:11:23\n   |\n11 |         min_product = min(curr, min(temp_max * curr, min_product * curr));\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(curr, min(temp_max * curr, min_product * curr));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp46tu5myj.rs:11:33\n   |\n11 |         min_product = min(curr, min(temp_max * curr, min_product * curr));\n   |                                 ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(curr, main(temp_max * curr, min_product * curr));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp46tu5myj.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut temp_max = max_product;\n        let mut temp_min = min_product;\n        max_product = max(arr[i], max(temp_max * arr[i], temp_min * arr[i]));\n        min_product = min(arr[i], min(temp_max * arr[i], temp_min * arr[i]));\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpi78fk3ps.rs:10:23\n   |\n10 |         max_product = max(arr[i], max(temp_max * arr[i], temp_min * arr[i]));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpi78fk3ps.rs:10:35\n   |\n10 |         max_product = max(arr[i], max(temp_max * arr[i], temp_min * arr[i]));\n   |                                   ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpi78fk3ps.rs:11:23\n   |\n11 |         min_product = min(arr[i], min(temp_max * arr[i], temp_min * arr[i]));\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(arr[i], min(temp_max * arr[i], temp_min * arr[i]));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpi78fk3ps.rs:11:35\n   |\n11 |         min_product = min(arr[i], min(temp_max * arr[i], temp_min * arr[i]));\n   |                                   ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(arr[i], main(temp_max * arr[i], temp_min * arr[i]));\n   |                                   ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpi78fk3ps.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    let mut max_ending_here = 1;\n\n    for i in arr {\n        if i > 0 {\n            max_ending_here = max_ending_here * i;\n            min_so_far = min(min_so_far * i, 1);\n        } else if i == 0 {\n            max_ending_here = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_so_far * i, 1);\n            min_so_far = temp * i;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpngraxe90.rs:10:26\n   |\n10 |             min_so_far = min(min_so_far * i, 1);\n   |                          ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_so_far = main(min_so_far * i, 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpngraxe90.rs:16:31\n   |\n16 |             max_ending_here = max(min_so_far * i, 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_product = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_ending_here > max_so_far {\n            max_so_far = max_ending_here;\n        }\n        if min_ending_here < min_so_far {\n            min_so_far = min_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp2e7s6kj5.rs:12:31\n   |\n12 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n33 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2e7s6kj5.rs:18:31\n   |\n18 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            std::mem::swap(&mut max_product, &mut min_product);\n        }\n\n        max_product = max(arr[i], max_product * arr[i]);\n        min_product = min(arr[i], min_product * arr[i]);\n\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpft4ba8n0.rs:12:23\n   |\n12 |         max_product = max(arr[i], max_product * arr[i]);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpft4ba8n0.rs:13:23\n   |\n13 |         min_product = min(arr[i], min_product * arr[i]);\n   |                       ^^^\n...\n21 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = main(arr[i], min_product * arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpft4ba8n0.rs:15:22\n   |\n15 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut temp = max_product;\n        max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n        min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpc9lpv2in.rs:9:23\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpc9lpv2in.rs:9:27\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpc9lpv2in.rs:10:23\n   |\n10 |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpc9lpv2in.rs:10:27\n   |\n10 |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(main(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpc9lpv2in.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(max(curr, max_product * curr), min_product * curr);\n        min_product = min(min(curr, temp_max * curr), min_product * curr);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpiwmuituw.rs:10:23\n   |\n10 |         max_product = max(max(curr, max_product * curr), min_product * curr);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpiwmuituw.rs:10:27\n   |\n10 |         max_product = max(max(curr, max_product * curr), min_product * curr);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpiwmuituw.rs:11:23\n   |\n11 |         min_product = min(min(curr, temp_max * curr), min_product * curr);\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(min(curr, temp_max * curr), min_product * curr);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpiwmuituw.rs:11:27\n   |\n11 |         min_product = min(min(curr, temp_max * curr), min_product * curr);\n   |                           ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(main(curr, temp_max * curr), min_product * curr);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpiwmuituw.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `r",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut curr_max = max_product;\n        let mut curr_min = min_product;\n\n        max_product = max(arr[i], max(curr_max * arr[i], curr_min * arr[i]));\n        min_product = min(arr[i], min(curr_max * arr[i], curr_min * arr[i]));\n\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpmcj8a2ub.rs:11:23\n   |\n11 |         max_product = max(arr[i], max(curr_max * arr[i], curr_min * arr[i]));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpmcj8a2ub.rs:11:35\n   |\n11 |         max_product = max(arr[i], max(curr_max * arr[i], curr_min * arr[i]));\n   |                                   ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpmcj8a2ub.rs:12:23\n   |\n12 |         min_product = min(arr[i], min(curr_max * arr[i], curr_min * arr[i]));\n   |                       ^^^\n...\n20 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |         min_product = main(arr[i], min(curr_max * arr[i], curr_min * arr[i]));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpmcj8a2ub.rs:12:35\n   |\n12 |         min_product = min(arr[i], min(curr_max * arr[i], curr_min * arr[i]));\n   |                                   ^^^\n...\n20 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |         min_product = min(arr[i], main(curr_max * arr[i], curr_min * arr[i]));\n   |                                   ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpmcj8a2ub.rs:14:22\n   |\n14 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut max_product_new = max_product * curr;\n        let mut min_product_new = min_product * curr;\n        max_product = max(curr, max(max_product_new, min_product_new));\n        min_product = min(curr, min(max_product_new, min_product_new));\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpvaf81pw3.rs:10:23\n   |\n10 |         max_product = max(curr, max(max_product_new, min_product_new));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpvaf81pw3.rs:10:33\n   |\n10 |         max_product = max(curr, max(max_product_new, min_product_new));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpvaf81pw3.rs:11:23\n   |\n11 |         min_product = min(curr, min(max_product_new, min_product_new));\n   |                       ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(curr, min(max_product_new, min_product_new));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpvaf81pw3.rs:11:33\n   |\n11 |         min_product = min(curr, min(max_product_new, min_product_new));\n   |                                 ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(curr, main(max_product_new, min_product_new));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpvaf81pw3.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc -",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut temp = max_product;\n        max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n        min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpc9lpv2in.rs:9:23\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpc9lpv2in.rs:9:27\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpc9lpv2in.rs:10:23\n   |\n10 |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpc9lpv2in.rs:10:27\n   |\n10 |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(main(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpc9lpv2in.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if flag == 0 && max_so_far == 1 {\n        return 0;\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp8m_6jfkx.rs:11:31\n   |\n11 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n34 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp8m_6jfkx.rs:18:31\n   |\n18 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in arr {\n        if i > 0 {\n            max_ending_here = max_ending_here * i;\n            min_ending_here = min(min_ending_here * i, 1);\n        } else if i == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * i, 1);\n            min_ending_here = temp * i;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6b77xxm0.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * i, 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * i, 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6b77xxm0.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * i, 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut curr_max = max_product;\n        let mut curr_min = min_product;\n        max_product = max(max(curr_max * arr[i], curr_min * arr[i]), arr[i]);\n        min_product = min(min(curr_max * arr[i], curr_min * arr[i]), arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp5w8px8bu.rs:10:23\n   |\n10 |         max_product = max(max(curr_max * arr[i], curr_min * arr[i]), arr[i]);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp5w8px8bu.rs:10:27\n   |\n10 |         max_product = max(max(curr_max * arr[i], curr_min * arr[i]), arr[i]);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp5w8px8bu.rs:11:23\n   |\n11 |         min_product = min(min(curr_max * arr[i], curr_min * arr[i]), arr[i]);\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(min(curr_max * arr[i], curr_min * arr[i]), arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp5w8px8bu.rs:11:27\n   |\n11 |         min_product = min(min(curr_max * arr[i], curr_min * arr[i]), arr[i]);\n   |                           ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(main(curr_max * arr[i], curr_min * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp5w8px8bu.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this e",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    let mut max_ending_here = 1;\n    let mut max_product = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_ending_here > max_product {\n            max_product = max_ending_here;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpyfd_aev8.rs:11:26\n   |\n11 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n29 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpyfd_aev8.rs:17:31\n   |\n17 |             max_ending_here = max(min_so_far * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for &x in arr.iter() {\n        if x > 0 {\n            max_ending_here = max_ending_here * x;\n            min_ending_here = min(min_ending_here * x, 1);\n        } else if x == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * x, 1);\n            min_ending_here = temp * x;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp7ymuooh8.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * x, 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * x, 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp7ymuooh8.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * x, 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut result = arr[0];\n\n    for i in 1..arr.len() {\n        let current = arr[i];\n        let max_product_tmp = max_product;\n        max_product = max(current, max(current * max_product, current * min_product));\n        min_product = min(current, min(current * max_product_tmp, current * min_product));\n        result = max(result, max_product);\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpo_a_pob3.rs:10:23\n   |\n10 |         max_product = max(current, max(current * max_product, current * min_product));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpo_a_pob3.rs:10:36\n   |\n10 |         max_product = max(current, max(current * max_product, current * min_product));\n   |                                    ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpo_a_pob3.rs:11:23\n   |\n11 |         min_product = min(current, min(current * max_product_tmp, current * min_product));\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(current, min(current * max_product_tmp, current * min_product));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpo_a_pob3.rs:11:36\n   |\n11 |         min_product = min(current, min(current * max_product_tmp, current * min_product));\n   |                                    ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(current, main(current * max_product_tmp, current * min_product));\n   |                                    ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpo_a_pob3.rs:12:18\n   |\n12 |         result = max(result, max_product);\n   |                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    let mut max_ending_here = 1;\n    let mut max_product = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_ending_here > max_product {\n            max_product = max_ending_here;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpyfd_aev8.rs:11:26\n   |\n11 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n29 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpyfd_aev8.rs:17:31\n   |\n17 |             max_ending_here = max(min_so_far * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut curr_max = max_product;\n        let mut curr_min = min_product;\n\n        max_product = max(max(curr_max * arr[i], curr_min * arr[i]), arr[i]);\n        min_product = min(min(curr_max * arr[i], curr_min * arr[i]), arr[i]);\n\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpzhr4seow.rs:11:23\n   |\n11 |         max_product = max(max(curr_max * arr[i], curr_min * arr[i]), arr[i]);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpzhr4seow.rs:11:27\n   |\n11 |         max_product = max(max(curr_max * arr[i], curr_min * arr[i]), arr[i]);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpzhr4seow.rs:12:23\n   |\n12 |         min_product = min(min(curr_max * arr[i], curr_min * arr[i]), arr[i]);\n   |                       ^^^\n...\n20 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |         min_product = main(min(curr_max * arr[i], curr_min * arr[i]), arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpzhr4seow.rs:12:27\n   |\n12 |         min_product = min(min(curr_max * arr[i], curr_min * arr[i]), arr[i]);\n   |                           ^^^\n...\n20 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |         min_product = min(main(curr_max * arr[i], curr_min * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpzhr4seow.rs:14:22\n   |\n14 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this e",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(max(curr, curr * max_product), curr * min_product);\n        min_product = min(min(curr, curr * temp_max), curr * min_product);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp9yomfpiw.rs:10:23\n   |\n10 |         max_product = max(max(curr, curr * max_product), curr * min_product);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp9yomfpiw.rs:10:27\n   |\n10 |         max_product = max(max(curr, curr * max_product), curr * min_product);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp9yomfpiw.rs:11:23\n   |\n11 |         min_product = min(min(curr, curr * temp_max), curr * min_product);\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(min(curr, curr * temp_max), curr * min_product);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp9yomfpiw.rs:11:27\n   |\n11 |         min_product = min(min(curr, curr * temp_max), curr * min_product);\n   |                           ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(main(curr, curr * temp_max), curr * min_product);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp9yomfpiw.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `r",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let prev_max = max_product;\n        let prev_min = min_product;\n\n        max_product = max(curr, max(curr * prev_max, curr * prev_min));\n        min_product = min(curr, min(curr * prev_max, curr * prev_min));\n\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpjn7c0can.rs:12:23\n   |\n12 |         max_product = max(curr, max(curr * prev_max, curr * prev_min));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpjn7c0can.rs:12:33\n   |\n12 |         max_product = max(curr, max(curr * prev_max, curr * prev_min));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpjn7c0can.rs:13:23\n   |\n13 |         min_product = min(curr, min(curr * prev_max, curr * prev_min));\n   |                       ^^^\n...\n21 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = main(curr, min(curr * prev_max, curr * prev_min));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpjn7c0can.rs:13:33\n   |\n13 |         min_product = min(curr, min(curr * prev_max, curr * prev_min));\n   |                                 ^^^\n...\n21 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = min(curr, main(curr * prev_max, curr * prev_min));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpjn7c0can.rs:15:22\n   |\n15 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc -",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in arr {\n        if i > 0 {\n            max_ending_here = max_ending_here * i;\n            min_ending_here = min(min_ending_here * i, 1);\n        } else if i == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * i, 1);\n            min_ending_here = temp * i;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6b77xxm0.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * i, 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * i, 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6b77xxm0.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * i, 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut min_product = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(min_product * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n\n    if flag == 0 && max_so_far == 1 {\n        0\n    } else {\n        max_so_far\n    }\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpa6jldb21.rs:11:27\n   |\n11 |             min_product = min(min_product * arr[i], 1);\n   |                           ^^^\n...\n34 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_product = main(min_product * arr[i], 1);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpa6jldb21.rs:18:27\n   |\n18 |             max_product = max(min_product * arr[i], 1);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(max(max_product * curr, min_product * curr), curr);\n        min_product = min(min(temp_max * curr, min_product * curr), curr);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpffj0ipjn.rs:10:23\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpffj0ipjn.rs:10:27\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpffj0ipjn.rs:11:23\n   |\n11 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(min(temp_max * curr, min_product * curr), curr);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpffj0ipjn.rs:11:27\n   |\n11 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                           ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(main(temp_max * curr, min_product * curr), curr);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpffj0ipjn.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `r",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut temp_max = max_product;\n        let mut temp_min = min_product;\n\n        max_product = max(arr[i], max(arr[i] * temp_max, arr[i] * temp_min));\n        min_product = min(arr[i], min(arr[i] * temp_max, arr[i] * temp_min));\n\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpm0iy9my7.rs:11:23\n   |\n11 |         max_product = max(arr[i], max(arr[i] * temp_max, arr[i] * temp_min));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpm0iy9my7.rs:11:35\n   |\n11 |         max_product = max(arr[i], max(arr[i] * temp_max, arr[i] * temp_min));\n   |                                   ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpm0iy9my7.rs:12:23\n   |\n12 |         min_product = min(arr[i], min(arr[i] * temp_max, arr[i] * temp_min));\n   |                       ^^^\n...\n20 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |         min_product = main(arr[i], min(arr[i] * temp_max, arr[i] * temp_min));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpm0iy9my7.rs:12:35\n   |\n12 |         min_product = min(arr[i], min(arr[i] * temp_max, arr[i] * temp_min));\n   |                                   ^^^\n...\n20 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |         min_product = min(arr[i], main(arr[i] * temp_max, arr[i] * temp_min));\n   |                                   ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpm0iy9my7.rs:14:22\n   |\n14 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = isize::min_value();\n    let mut current_product = 1;\n    for i in 0..arr.len() {\n        current_product *= arr[i];\n        max_product = max(max_product, current_product);\n        if current_product == 0 {\n            current_product = 1;\n        }\n    }\n    current_product = 1;\n    for i in (0..arr.len()).rev() {\n        current_product *= arr[i];\n        max_product = max(max_product, current_product);\n        if current_product == 0 {\n            current_product = 1;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp41o5aw1h.rs:7:23\n  |\n7 |         max_product = max(max_product, current_product);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp41o5aw1h.rs:15:23\n   |\n15 |         max_product = max(max_product, current_product);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in arr {\n        if i > 0 {\n            max_ending_here = max_ending_here * i;\n            min_ending_here = min(min_ending_here * i, 1);\n        } else if i == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * i, 1);\n            min_ending_here = temp * i;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6b77xxm0.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * i, 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * i, 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6b77xxm0.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * i, 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for &x in arr.iter() {\n        if x > 0 {\n            max_ending_here = max_ending_here * x;\n            min_ending_here = min(min_ending_here * x, 1);\n        } else if x == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * x, 1);\n            min_ending_here = temp * x;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp7ymuooh8.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * x, 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * x, 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp7ymuooh8.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * x, 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if flag == 0 && max_so_far == 1 {\n        0\n    } else {\n        max_so_far\n    }\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6ojkcncn.rs:11:31\n   |\n11 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n34 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6ojkcncn.rs:18:31\n   |\n18 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut min_product = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(min_product * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n\n    if flag == 0 && max_so_far == 1 {\n        0\n    } else {\n        max_so_far\n    }\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpa6jldb21.rs:11:27\n   |\n11 |             min_product = min(min_product * arr[i], 1);\n   |                           ^^^\n...\n34 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_product = main(min_product * arr[i], 1);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpa6jldb21.rs:18:27\n   |\n18 |             max_product = max(min_product * arr[i], 1);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut min_product = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(min_product * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n\n    if flag == 0 && max_so_far == 1 {\n        return 0;\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp13a7ueby.rs:11:27\n   |\n11 |             min_product = min(min_product * arr[i], 1);\n   |                           ^^^\n...\n34 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_product = main(min_product * arr[i], 1);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp13a7ueby.rs:18:27\n   |\n18 |             max_product = max(min_product * arr[i], 1);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(curr, max(max_product * curr, min_product * curr));\n        min_product = min(curr, min(temp_max * curr, min_product * curr));\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpw4jev26x.rs:9:23\n  |\n9 |         max_product = max(curr, max(max_product * curr, min_product * curr));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpw4jev26x.rs:9:33\n  |\n9 |         max_product = max(curr, max(max_product * curr, min_product * curr));\n  |                                 ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpw4jev26x.rs:10:23\n   |\n10 |         min_product = min(curr, min(temp_max * curr, min_product * curr));\n   |                       ^^^\n...\n16 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(curr, min(temp_max * curr, min_product * curr));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpw4jev26x.rs:10:33\n   |\n10 |         min_product = min(curr, min(temp_max * curr, min_product * curr));\n   |                                 ^^^\n...\n16 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(curr, main(temp_max * curr, min_product * curr));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpw4jev26x.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `r",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let temp_max = max_product;\n        max_product = max(max(max_product * curr, min_product * curr), curr);\n        min_product = min(min(temp_max * curr, min_product * curr), curr);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpul7cm2qx.rs:10:23\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpul7cm2qx.rs:10:27\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpul7cm2qx.rs:11:23\n   |\n11 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(min(temp_max * curr, min_product * curr), curr);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpul7cm2qx.rs:11:27\n   |\n11 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                           ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(main(temp_max * curr, min_product * curr), curr);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpul7cm2qx.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `r",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut current_max = max_product;\n        max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n        min_product = min(min(current_max * arr[i], min_product * arr[i]), arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmps9hxiwn7.rs:9:23\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmps9hxiwn7.rs:9:27\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmps9hxiwn7.rs:10:23\n   |\n10 |         min_product = min(min(current_max * arr[i], min_product * arr[i]), arr[i]);\n   |                       ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(min(current_max * arr[i], min_product * arr[i]), arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmps9hxiwn7.rs:10:27\n   |\n10 |         min_product = min(min(current_max * arr[i], min_product * arr[i]), arr[i]);\n   |                           ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(main(current_max * arr[i], min_product * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmps9hxiwn7.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more inform",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(max(max_product * curr, min_product * curr), curr);\n        min_product = min(min(temp_max * curr, min_product * curr), curr);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpffj0ipjn.rs:10:23\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpffj0ipjn.rs:10:27\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpffj0ipjn.rs:11:23\n   |\n11 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(min(temp_max * curr, min_product * curr), curr);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpffj0ipjn.rs:11:27\n   |\n11 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                           ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(main(temp_max * curr, min_product * curr), curr);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpffj0ipjn.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `r",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            std::mem::swap(&mut max_product, &mut min_product);\n        }\n\n        max_product = std::cmp::max(arr[i], max_product * arr[i]);\n        min_product = std::cmp::min(arr[i], min_product * arr[i]);\n\n        max_so_far = std::cmp::max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_new = max(\n            max(max_product * curr, min_product * curr),\n            curr,\n        );\n        let min_product_new = min(\n            min(max_product * curr, min_product * curr),\n            curr,\n        );\n        max_so_far = max(max_so_far, max_product_new);\n        max_product = max_product_new;\n        min_product = min_product_new;\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpcimzwqu1.rs:9:31\n  |\n9 |         let max_product_new = max(\n  |                               ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpcimzwqu1.rs:10:13\n   |\n10 |             max(max_product * curr, min_product * curr),\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpcimzwqu1.rs:13:31\n   |\n13 |         let min_product_new = min(\n   |                               ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         let min_product_new = main(\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpcimzwqu1.rs:14:13\n   |\n14 |             min(max_product * curr, min_product * curr),\n   |             ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n14 |             main(max_product * curr, min_product * curr),\n   |             ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpcimzwqu1.rs:17:22\n   |\n17 |         max_so_far = max(max_so_far, max_product_new);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut curr = arr[i];\n        let mut prev_max = max_product;\n        let mut prev_min = min_product;\n\n        max_product = max(curr, max(curr * prev_max, curr * prev_min));\n        min_product = min(curr, min(curr * prev_max, curr * prev_min));\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmplbzltmkl.rs:12:23\n   |\n12 |         max_product = max(curr, max(curr * prev_max, curr * prev_min));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmplbzltmkl.rs:12:33\n   |\n12 |         max_product = max(curr, max(curr * prev_max, curr * prev_min));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmplbzltmkl.rs:13:23\n   |\n13 |         min_product = min(curr, min(curr * prev_max, curr * prev_min));\n   |                       ^^^\n...\n20 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = main(curr, min(curr * prev_max, curr * prev_min));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmplbzltmkl.rs:13:33\n   |\n13 |         min_product = min(curr, min(curr * prev_max, curr * prev_min));\n   |                                 ^^^\n...\n20 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = min(curr, main(curr * prev_max, curr * prev_min));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmplbzltmkl.rs:14:22\n   |\n14 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc -",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut temp = max_product;\n        max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n        min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpc9lpv2in.rs:9:23\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpc9lpv2in.rs:9:27\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpc9lpv2in.rs:10:23\n   |\n10 |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpc9lpv2in.rs:10:27\n   |\n10 |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(main(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpc9lpv2in.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_candidates = vec![curr, max_product * curr, min_product * curr];\n        max_product = max_product_candidates.iter().cloned().max().unwrap();\n        min_product = max_product_candidates.iter().cloned().min().unwrap();\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp1gec4z5e.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(max(max_product * curr, min_product * curr), curr);\n        min_product = min(min(temp_max * curr, min_product * curr), curr);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpffj0ipjn.rs:10:23\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpffj0ipjn.rs:10:27\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpffj0ipjn.rs:11:23\n   |\n11 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(min(temp_max * curr, min_product * curr), curr);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpffj0ipjn.rs:11:27\n   |\n11 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                           ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(main(temp_max * curr, min_product * curr), curr);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpffj0ipjn.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `r",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut result = arr[0];\n\n    for i in 1..arr.len() {\n        let (max_product_prev, min_product_prev) = (max_product, min_product);\n        max_product = max(\n            max(max_product_prev * arr[i], min_product_prev * arr[i]),\n            arr[i],\n        );\n        min_product = min(\n            min(max_product_prev * arr[i], min_product_prev * arr[i]),\n            arr[i],\n        );\n        result = max(result, max_product);\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpteqg37z7.rs:9:23\n  |\n9 |         max_product = max(\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpteqg37z7.rs:10:13\n   |\n10 |             max(max_product_prev * arr[i], min_product_prev * arr[i]),\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpteqg37z7.rs:13:23\n   |\n13 |         min_product = min(\n   |                       ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = main(\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpteqg37z7.rs:14:13\n   |\n14 |             min(max_product_prev * arr[i], min_product_prev * arr[i]),\n   |             ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n14 |             main(max_product_prev * arr[i], min_product_prev * arr[i]),\n   |             ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpteqg37z7.rs:17:18\n   |\n17 |         result = max(result, max_product);\n   |                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut max_product_new = max_product;\n        let mut min_product_new = min_product;\n\n        max_product_new = max(curr, max(max_product * curr, min_product * curr));\n        min_product_new = min(curr, min(max_product * curr, min_product * curr));\n\n        max_so_far = max(max_so_far, max_product_new);\n\n        max_product = max_product_new;\n        min_product = min_product_new;\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpaczfvg4d.rs:12:27\n   |\n12 |         max_product_new = max(curr, max(max_product * curr, min_product * curr));\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpaczfvg4d.rs:12:37\n   |\n12 |         max_product_new = max(curr, max(max_product * curr, min_product * curr));\n   |                                     ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpaczfvg4d.rs:13:27\n   |\n13 |         min_product_new = min(curr, min(max_product * curr, min_product * curr));\n   |                           ^^^\n...\n24 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product_new = main(curr, min(max_product * curr, min_product * curr));\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpaczfvg4d.rs:13:37\n   |\n13 |         min_product_new = min(curr, min(max_product * curr, min_product * curr));\n   |                                     ^^^\n...\n24 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product_new = min(curr, main(max_product * curr, min_product * curr));\n   |                                     ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpaczfvg4d.rs:15:22\n   |\n15 |         max_so_far = max(max_so_far, max_product_new);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut result = arr[0];\n\n    for i in 1..arr.len() {\n        let current = arr[i];\n        let max_product_candidates = vec![current, max_product * current, min_product * current];\n        let min_product_candidates = vec![current, max_product * current, min_product * current];\n        max_product = *max_product_candidates.iter().max().unwrap();\n        min_product = *min_product_candidates.iter().min().unwrap();\n        result = std::cmp::max(result, max_product);\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let temp_max = max_product;\n        max_product = max(curr, max(max_product * curr, min_product * curr));\n        min_product = min(curr, min(temp_max * curr, min_product * curr));\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp8no1jcfa.rs:10:23\n   |\n10 |         max_product = max(curr, max(max_product * curr, min_product * curr));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp8no1jcfa.rs:10:33\n   |\n10 |         max_product = max(curr, max(max_product * curr, min_product * curr));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp8no1jcfa.rs:11:23\n   |\n11 |         min_product = min(curr, min(temp_max * curr, min_product * curr));\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(curr, min(temp_max * curr, min_product * curr));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp8no1jcfa.rs:11:33\n   |\n11 |         min_product = min(curr, min(temp_max * curr, min_product * curr));\n   |                                 ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(curr, main(temp_max * curr, min_product * curr));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp8no1jcfa.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_candidates = vec![\n            curr,\n            curr * max_product,\n            curr * min_product,\n        ];\n        let min_product_candidates = vec![\n            curr,\n            curr * max_product,\n            curr * min_product,\n        ];\n\n        max_product = *max_product_candidates.iter().max().unwrap();\n        min_product = *min_product_candidates.iter().min().unwrap();\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp1_5f2oc8.rs:22:22\n   |\n22 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut min_product = 0;\n    let mut max_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(1, min_product * arr[i]);\n        } else if arr[i] == 0 {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = max(1, min_product * arr[i]);\n            min_product = temp * arr[i];\n        }\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp1orrrmn9.rs:9:27\n   |\n9  |             min_product = min(1, min_product * arr[i]);\n   |                           ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product = main(1, min_product * arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp1orrrmn9.rs:15:27\n   |\n15 |             max_product = max(1, min_product * arr[i]);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let (max_product_prev, min_product_prev) = (max_product, min_product);\n        max_product = max(max(max_product_prev * arr[i], min_product_prev * arr[i]), arr[i]);\n        min_product = min(min(max_product_prev * arr[i], min_product_prev * arr[i]), arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmps06tzn4t.rs:9:23\n  |\n9 |         max_product = max(max(max_product_prev * arr[i], min_product_prev * arr[i]), arr[i]);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmps06tzn4t.rs:9:27\n  |\n9 |         max_product = max(max(max_product_prev * arr[i], min_product_prev * arr[i]), arr[i]);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmps06tzn4t.rs:10:23\n   |\n10 |         min_product = min(min(max_product_prev * arr[i], min_product_prev * arr[i]), arr[i]);\n   |                       ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(min(max_product_prev * arr[i], min_product_prev * arr[i]), arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmps06tzn4t.rs:10:27\n   |\n10 |         min_product = min(min(max_product_prev * arr[i], min_product_prev * arr[i]), arr[i]);\n   |                           ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(main(max_product_prev * arr[i], min_product_prev * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmps06tzn4t.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut min_product = 1;\n    let mut max_so_far = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(min_product * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpb8p8sex7.rs:9:27\n   |\n9  |             min_product = min(min_product * arr[i], 1);\n   |                           ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product = main(min_product * arr[i], 1);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpb8p8sex7.rs:15:27\n   |\n15 |             max_product = max(min_product * arr[i], 1);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(max(max_product * curr, min_product * curr), curr);\n        min_product = min(min(temp_max * curr, min_product * curr), curr);\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmphnrxmf5s.rs:9:23\n  |\n9 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmphnrxmf5s.rs:9:27\n  |\n9 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmphnrxmf5s.rs:10:23\n   |\n10 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                       ^^^\n...\n16 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(min(temp_max * curr, min_product * curr), curr);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmphnrxmf5s.rs:10:27\n   |\n10 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                           ^^^\n...\n16 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(main(temp_max * curr, min_product * curr), curr);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmphnrxmf5s.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E04",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let prev_max = max_product;\n        max_product = max(curr, max(curr * prev_max, curr * min_product));\n        min_product = min(curr, min(curr * prev_max, curr * min_product));\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpy2d1hx82.rs:9:23\n  |\n9 |         max_product = max(curr, max(curr * prev_max, curr * min_product));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpy2d1hx82.rs:9:33\n  |\n9 |         max_product = max(curr, max(curr * prev_max, curr * min_product));\n  |                                 ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpy2d1hx82.rs:10:23\n   |\n10 |         min_product = min(curr, min(curr * prev_max, curr * min_product));\n   |                       ^^^\n...\n16 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(curr, min(curr * prev_max, curr * min_product));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpy2d1hx82.rs:10:33\n   |\n10 |         min_product = min(curr, min(curr * prev_max, curr * min_product));\n   |                                 ^^^\n...\n16 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(curr, main(curr * prev_max, curr * min_product));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpy2d1hx82.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc -",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    let mut max_ending_here = 1;\n    let mut max_product = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_product < max_ending_here {\n            max_product = max_ending_here;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmphatlqj0s.rs:11:26\n   |\n11 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n29 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmphatlqj0s.rs:17:31\n   |\n17 |             max_ending_here = max(min_so_far * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_new = max(curr, max(curr * max_product, curr * min_product));\n        let min_product_new = min(curr, min(curr * max_product, curr * min_product));\n        max_product = max_product_new;\n        min_product = min_product_new;\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpyfo2dbig.rs:9:31\n  |\n9 |         let max_product_new = max(curr, max(curr * max_product, curr * min_product));\n  |                               ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpyfo2dbig.rs:9:41\n  |\n9 |         let max_product_new = max(curr, max(curr * max_product, curr * min_product));\n  |                                         ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpyfo2dbig.rs:10:31\n   |\n10 |         let min_product_new = min(curr, min(curr * max_product, curr * min_product));\n   |                               ^^^\n...\n19 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         let min_product_new = main(curr, min(curr * max_product, curr * min_product));\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpyfo2dbig.rs:10:41\n   |\n10 |         let min_product_new = min(curr, min(curr * max_product, curr * min_product));\n   |                                         ^^^\n...\n19 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         let min_product_new = min(curr, main(curr * max_product, curr * min_product));\n   |                                         ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpyfo2dbig.rs:13:22\n   |\n13 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if flag == 0 && max_so_far == 1 {\n        0\n    } else {\n        max_so_far\n    }\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6ojkcncn.rs:11:31\n   |\n11 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n34 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6ojkcncn.rs:18:31\n   |\n18 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_prev = max_product;\n        let min_product_prev = min_product;\n\n        max_product = max(\n            max(max_product_prev * curr, min_product_prev * curr),\n            curr,\n        );\n        min_product = min(\n            min(max_product_prev * curr, min_product_prev * curr),\n            curr,\n        );\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpg2rm0btq.rs:12:23\n   |\n12 |         max_product = max(\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpg2rm0btq.rs:13:13\n   |\n13 |             max(max_product_prev * curr, min_product_prev * curr),\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpg2rm0btq.rs:16:23\n   |\n16 |         min_product = min(\n   |                       ^^^\n...\n26 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n16 |         min_product = main(\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpg2rm0btq.rs:17:13\n   |\n17 |             min(max_product_prev * curr, min_product_prev * curr),\n   |             ^^^\n...\n26 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n17 |             main(max_product_prev * curr, min_product_prev * curr),\n   |             ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpg2rm0btq.rs:20:22\n   |\n20 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_new = max(curr, max(curr * max_product, curr * min_product));\n        let min_product_new = min(curr, min(curr * max_product, curr * min_product));\n        max_product = max_product_new;\n        min_product = min_product_new;\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpje2z27gk.rs:8:31\n  |\n8 |         let max_product_new = max(curr, max(curr * max_product, curr * min_product));\n  |                               ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpje2z27gk.rs:8:41\n  |\n8 |         let max_product_new = max(curr, max(curr * max_product, curr * min_product));\n  |                                         ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpje2z27gk.rs:9:31\n   |\n9  |         let min_product_new = min(curr, min(curr * max_product, curr * min_product));\n   |                               ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         let min_product_new = main(curr, min(curr * max_product, curr * min_product));\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpje2z27gk.rs:9:41\n   |\n9  |         let min_product_new = min(curr, min(curr * max_product, curr * min_product));\n   |                                         ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         let min_product_new = min(curr, main(curr * max_product, curr * min_product));\n   |                                         ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpje2z27gk.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use st",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut min_product = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(min_product * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmppwupusn_.rs:10:27\n   |\n10 |             min_product = min(min_product * arr[i], 1);\n   |                           ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product = main(min_product * arr[i], 1);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmppwupusn_.rs:16:27\n   |\n16 |             max_product = max(min_product * arr[i], 1);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_candidates = vec![curr, max_product * curr, min_product * curr];\n        let min_product_candidates = vec![curr, max_product * curr, min_product * curr];\n\n        max_product = *max_product_candidates.iter().max().unwrap();\n        min_product = *min_product_candidates.iter().min().unwrap();\n\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpz2mdwbs4.rs:15:22\n   |\n15 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut max_product_new = max_product;\n        let mut min_product_new = min_product;\n\n        max_product_new = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n        min_product_new = min(min(max_product * arr[i], min_product * arr[i]), arr[i]);\n\n        max_so_far = max(max_so_far, max_product_new);\n\n        max_product = max_product_new;\n        min_product = min_product_new;\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpryiyufh5.rs:11:27\n   |\n11 |         max_product_new = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpryiyufh5.rs:11:31\n   |\n11 |         max_product_new = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpryiyufh5.rs:12:27\n   |\n12 |         min_product_new = min(min(max_product * arr[i], min_product * arr[i]), arr[i]);\n   |                           ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |         min_product_new = main(min(max_product * arr[i], min_product * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpryiyufh5.rs:12:31\n   |\n12 |         min_product_new = min(min(max_product * arr[i], min_product * arr[i]), arr[i]);\n   |                               ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |         min_product_new = min(main(max_product * arr[i], min_product * arr[i]), arr[i]);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpryiyufh5.rs:14:22\n   |\n14 |         max_so_far = max(max_so_far, max_product_new);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let (max_product_prev, min_product_prev) = (max_product, min_product);\n        max_product = max(\n            max(max_product_prev * arr[i], min_product_prev * arr[i]),\n            arr[i],\n        );\n        min_product = min(\n            min(max_product_prev * arr[i], min_product_prev * arr[i]),\n            arr[i],\n        );\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmprdurx59r.rs:9:23\n  |\n9 |         max_product = max(\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmprdurx59r.rs:10:13\n   |\n10 |             max(max_product_prev * arr[i], min_product_prev * arr[i]),\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmprdurx59r.rs:13:23\n   |\n13 |         min_product = min(\n   |                       ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = main(\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmprdurx59r.rs:14:13\n   |\n14 |             min(max_product_prev * arr[i], min_product_prev * arr[i]),\n   |             ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n14 |             main(max_product_prev * arr[i], min_product_prev * arr[i]),\n   |             ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmprdurx59r.rs:17:22\n   |\n17 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_candidates = vec![curr, max_product * curr, min_product * curr];\n        let min_product_candidates = vec![curr, max_product * curr, min_product * curr];\n        max_product = *max_product_candidates.iter().max().unwrap();\n        min_product = *min_product_candidates.iter().min().unwrap();\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpt2abtp1s.rs:13:22\n   |\n13 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(curr, max(max_product * curr, min_product * curr));\n        min_product = min(curr, min(temp_max * curr, min_product * curr));\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp65sv2x4a.rs:10:23\n   |\n10 |         max_product = max(curr, max(max_product * curr, min_product * curr));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp65sv2x4a.rs:10:33\n   |\n10 |         max_product = max(curr, max(max_product * curr, min_product * curr));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp65sv2x4a.rs:11:23\n   |\n11 |         min_product = min(curr, min(temp_max * curr, min_product * curr));\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(curr, min(temp_max * curr, min_product * curr));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp65sv2x4a.rs:11:33\n   |\n11 |         min_product = min(curr, min(temp_max * curr, min_product * curr));\n   |                                 ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(curr, main(temp_max * curr, min_product * curr));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp65sv2x4a.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut temp = max_product;\n        max_product = max(\n            max(max_product * arr[i], min_product * arr[i]),\n            arr[i]\n        );\n        min_product = min(\n            min(temp * arr[i], min_product * arr[i]),\n            arr[i]\n        );\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpi89ukwxf.rs:9:23\n  |\n9 |         max_product = max(\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpi89ukwxf.rs:10:13\n   |\n10 |             max(max_product * arr[i], min_product * arr[i]),\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpi89ukwxf.rs:13:23\n   |\n13 |         min_product = min(\n   |                       ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = main(\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpi89ukwxf.rs:14:13\n   |\n14 |             min(temp * arr[i], min_product * arr[i]),\n   |             ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n14 |             main(temp * arr[i], min_product * arr[i]),\n   |             ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpi89ukwxf.rs:17:22\n   |\n17 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for &x in arr.iter() {\n        if x > 0 {\n            max_ending_here = max_ending_here * x;\n            min_ending_here = min(min_ending_here * x, 1);\n        } else if x == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * x, 1);\n            min_ending_here = temp * x;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp7ymuooh8.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * x, 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * x, 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp7ymuooh8.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * x, 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        return 0;\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpcqd6gbqe.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n30 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpcqd6gbqe.rs:17:31\n   |\n17 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            std::mem::swap(&mut max_product, &mut min_product);\n        }\n        max_product = std::cmp::max(arr[i], max_product * arr[i]);\n        min_product = std::cmp::min(arr[i], min_product * arr[i]);\n        max_so_far = std::cmp::max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_new = max(curr, max(max_product * curr, min_product * curr));\n        let min_product_new = min(curr, min(max_product * curr, min_product * curr));\n        max_product = max_product_new;\n        min_product = min_product_new;\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpv0_ifsvz.rs:8:31\n  |\n8 |         let max_product_new = max(curr, max(max_product * curr, min_product * curr));\n  |                               ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpv0_ifsvz.rs:8:41\n  |\n8 |         let max_product_new = max(curr, max(max_product * curr, min_product * curr));\n  |                                         ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpv0_ifsvz.rs:9:31\n   |\n9  |         let min_product_new = min(curr, min(max_product * curr, min_product * curr));\n   |                               ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         let min_product_new = main(curr, min(max_product * curr, min_product * curr));\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpv0_ifsvz.rs:9:41\n   |\n9  |         let min_product_new = min(curr, min(max_product * curr, min_product * curr));\n   |                                         ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         let min_product_new = min(curr, main(max_product * curr, min_product * curr));\n   |                                         ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpv0_ifsvz.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use st",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut result = arr[0];\n\n    for i in 1..arr.len() {\n        let current = arr[i];\n        let max_product_candidate = max_product * current;\n        let min_product_candidate = min_product * current;\n\n        max_product = max(current, max(max_product_candidate, min_product_candidate));\n        min_product = min(current, min(max_product_candidate, min_product_candidate));\n\n        result = max(result, max_product);\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpp2q9idky.rs:12:23\n   |\n12 |         max_product = max(current, max(max_product_candidate, min_product_candidate));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpp2q9idky.rs:12:36\n   |\n12 |         max_product = max(current, max(max_product_candidate, min_product_candidate));\n   |                                    ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpp2q9idky.rs:13:23\n   |\n13 |         min_product = min(current, min(max_product_candidate, min_product_candidate));\n   |                       ^^^\n...\n21 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = main(current, min(max_product_candidate, min_product_candidate));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpp2q9idky.rs:13:36\n   |\n13 |         min_product = min(current, min(max_product_candidate, min_product_candidate));\n   |                                    ^^^\n...\n21 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = min(current, main(max_product_candidate, min_product_candidate));\n   |                                    ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpp2q9idky.rs:15:18\n   |\n15 |         result = max(result, max_product);\n   |                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            let temp = max_product;\n            max_product = min_product;\n            min_product = temp;\n        }\n\n        max_product = max(arr[i], max_product * arr[i]);\n        min_product = min(arr[i], min_product * arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3l9kww7h.rs:14:23\n   |\n14 |         max_product = max(arr[i], max_product * arr[i]);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp3l9kww7h.rs:15:23\n   |\n15 |         min_product = min(arr[i], min_product * arr[i]);\n   |                       ^^^\n...\n22 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n15 |         min_product = main(arr[i], min_product * arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3l9kww7h.rs:16:22\n   |\n16 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_new = max(max(max_product * curr, min_product * curr), curr);\n        let min_product_new = min(min(max_product * curr, min_product * curr), curr);\n        max_product = max_product_new;\n        min_product = min_product_new;\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp4gs4ehj0.rs:8:31\n  |\n8 |         let max_product_new = max(max(max_product * curr, min_product * curr), curr);\n  |                               ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp4gs4ehj0.rs:8:35\n  |\n8 |         let max_product_new = max(max(max_product * curr, min_product * curr), curr);\n  |                                   ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp4gs4ehj0.rs:9:31\n   |\n9  |         let min_product_new = min(min(max_product * curr, min_product * curr), curr);\n   |                               ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         let min_product_new = main(min(max_product * curr, min_product * curr), curr);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp4gs4ehj0.rs:9:35\n   |\n9  |         let min_product_new = min(min(max_product * curr, min_product * curr), curr);\n   |                                   ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         let min_product_new = min(main(max_product * curr, min_product * curr), curr);\n   |                                   ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp4gs4ehj0.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut temp = max_product;\n        max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n        min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpc9lpv2in.rs:9:23\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpc9lpv2in.rs:9:27\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpc9lpv2in.rs:10:23\n   |\n10 |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpc9lpv2in.rs:10:27\n   |\n10 |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(main(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpc9lpv2in.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_candidates = vec![curr, curr * max_product, curr * min_product];\n        let min_product_candidates = vec![curr, curr * max_product, curr * min_product];\n        max_product = *max_product_candidates.iter().max().unwrap();\n        min_product = *min_product_candidates.iter().min().unwrap();\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp74ez20rc.rs:13:22\n   |\n13 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let prev_max = max_product;\n        max_product = max(curr, max(curr * max_product, curr * min_product));\n        min_product = min(curr, min(curr * prev_max, curr * min_product));\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpvdjtew8a.rs:9:23\n  |\n9 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpvdjtew8a.rs:9:33\n  |\n9 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n  |                                 ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpvdjtew8a.rs:10:23\n   |\n10 |         min_product = min(curr, min(curr * prev_max, curr * min_product));\n   |                       ^^^\n...\n16 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(curr, min(curr * prev_max, curr * min_product));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpvdjtew8a.rs:10:33\n   |\n10 |         min_product = min(curr, min(curr * prev_max, curr * min_product));\n   |                                 ^^^\n...\n16 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(curr, main(curr * prev_max, curr * min_product));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpvdjtew8a.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `r",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_candidates = vec![\n            curr,\n            curr * max_product,\n            curr * min_product,\n        ];\n        let min_product_candidates = vec![\n            curr,\n            curr * max_product,\n            curr * min_product,\n        ];\n        max_product = *max_product_candidates.iter().max().unwrap();\n        min_product = *min_product_candidates.iter().min().unwrap();\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp52xtrakz.rs:21:22\n   |\n21 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut min_product = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(min_product * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmppwupusn_.rs:10:27\n   |\n10 |             min_product = min(min_product * arr[i], 1);\n   |                           ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product = main(min_product * arr[i], 1);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmppwupusn_.rs:16:27\n   |\n16 |             max_product = max(min_product * arr[i], 1);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_candidates = vec![curr, max_product * curr, min_product * curr];\n        let min_product_candidates = vec![curr, max_product * curr, min_product * curr];\n        max_product = max_product_candidates.iter().max().unwrap().clone();\n        min_product = min_product_candidates.iter().min().unwrap().clone();\n        max_so_far = max_so_far.max(max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let (max_product_prev, min_product_prev) = (max_product, min_product);\n        max_product = max(max_product_prev * arr[i], max(min_product_prev * arr[i], arr[i]));\n        min_product = min(max_product_prev * arr[i], min(min_product_prev * arr[i], arr[i]));\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmprlvkgb12.rs:9:23\n  |\n9 |         max_product = max(max_product_prev * arr[i], max(min_product_prev * arr[i], arr[i]));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmprlvkgb12.rs:9:54\n  |\n9 |         max_product = max(max_product_prev * arr[i], max(min_product_prev * arr[i], arr[i]));\n  |                                                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmprlvkgb12.rs:10:23\n   |\n10 |         min_product = min(max_product_prev * arr[i], min(min_product_prev * arr[i], arr[i]));\n   |                       ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(max_product_prev * arr[i], min(min_product_prev * arr[i], arr[i]));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmprlvkgb12.rs:10:54\n   |\n10 |         min_product = min(max_product_prev * arr[i], min(min_product_prev * arr[i], arr[i]));\n   |                                                      ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(max_product_prev * arr[i], main(min_product_prev * arr[i], arr[i]));\n   |                                                      ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmprlvkgb12.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this s",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            std::mem::swap(&mut max_product, &mut min_product);\n        }\n\n        max_product = std::cmp::max(arr[i], max_product * arr[i]);\n        min_product = std::cmp::min(arr[i], min_product * arr[i]);\n\n        max_so_far = std::cmp::max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut min_product = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(min_product * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmppwupusn_.rs:10:27\n   |\n10 |             min_product = min(min_product * arr[i], 1);\n   |                           ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product = main(min_product * arr[i], 1);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmppwupusn_.rs:16:27\n   |\n16 |             max_product = max(min_product * arr[i], 1);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut current_max = max_product;\n        max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n        min_product = min(min(current_max * arr[i], min_product * arr[i]), arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmps9hxiwn7.rs:9:23\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmps9hxiwn7.rs:9:27\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmps9hxiwn7.rs:10:23\n   |\n10 |         min_product = min(min(current_max * arr[i], min_product * arr[i]), arr[i]);\n   |                       ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(min(current_max * arr[i], min_product * arr[i]), arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmps9hxiwn7.rs:10:27\n   |\n10 |         min_product = min(min(current_max * arr[i], min_product * arr[i]), arr[i]);\n   |                           ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(main(current_max * arr[i], min_product * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmps9hxiwn7.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more inform",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut result = arr[0];\n\n    for i in 1..arr.len() {\n        let current = arr[i];\n        let max_product_candidates = vec![\n            max_product * current,\n            min_product * current,\n            current,\n        ];\n        let min_product_candidates = vec![\n            max_product * current,\n            min_product * current,\n            current,\n        ];\n        max_product = max_product_candidates.iter().max().unwrap().clone();\n        min_product = min_product_candidates.iter().min().unwrap().clone();\n        result = max(result, max_product);\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp11u4rez4.rs:21:18\n   |\n21 |         result = max(result, max_product);\n   |                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut max_product_new = max_product;\n        let mut min_product_new = min_product;\n\n        max_product_new = max(curr, max(curr * max_product, curr * min_product));\n        min_product_new = min(curr, min(curr * max_product, curr * min_product));\n\n        max_so_far = max(max_so_far, max_product_new);\n\n        max_product = max_product_new;\n        min_product = min_product_new;\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpp9x4a0x3.rs:12:27\n   |\n12 |         max_product_new = max(curr, max(curr * max_product, curr * min_product));\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpp9x4a0x3.rs:12:37\n   |\n12 |         max_product_new = max(curr, max(curr * max_product, curr * min_product));\n   |                                     ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpp9x4a0x3.rs:13:27\n   |\n13 |         min_product_new = min(curr, min(curr * max_product, curr * min_product));\n   |                           ^^^\n...\n24 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product_new = main(curr, min(curr * max_product, curr * min_product));\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpp9x4a0x3.rs:13:37\n   |\n13 |         min_product_new = min(curr, min(curr * max_product, curr * min_product));\n   |                                     ^^^\n...\n24 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product_new = min(curr, main(curr * max_product, curr * min_product));\n   |                                     ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpp9x4a0x3.rs:15:22\n   |\n15 |         max_so_far = max(max_so_far, max_product_new);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_new = max(curr, max(max_product * curr, min_product * curr));\n        let min_product_new = min(curr, min(max_product * curr, min_product * curr));\n        max_product = max_product_new;\n        min_product = min_product_new;\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpbf2i9sr_.rs:9:31\n  |\n9 |         let max_product_new = max(curr, max(max_product * curr, min_product * curr));\n  |                               ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpbf2i9sr_.rs:9:41\n  |\n9 |         let max_product_new = max(curr, max(max_product * curr, min_product * curr));\n  |                                         ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbf2i9sr_.rs:10:31\n   |\n10 |         let min_product_new = min(curr, min(max_product * curr, min_product * curr));\n   |                               ^^^\n...\n19 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         let min_product_new = main(curr, min(max_product * curr, min_product * curr));\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbf2i9sr_.rs:10:41\n   |\n10 |         let min_product_new = min(curr, min(max_product * curr, min_product * curr));\n   |                                         ^^^\n...\n19 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         let min_product_new = min(curr, main(max_product * curr, min_product * curr));\n   |                                         ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbf2i9sr_.rs:13:22\n   |\n13 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut current_max = max_product;\n        let mut current_min = min_product;\n        max_product = max(arr[i], max(current_max * arr[i], current_min * arr[i]));\n        min_product = min(arr[i], min(current_max * arr[i], current_min * arr[i]));\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpyf1mm2jt.rs:10:23\n   |\n10 |         max_product = max(arr[i], max(current_max * arr[i], current_min * arr[i]));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpyf1mm2jt.rs:10:35\n   |\n10 |         max_product = max(arr[i], max(current_max * arr[i], current_min * arr[i]));\n   |                                   ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpyf1mm2jt.rs:11:23\n   |\n11 |         min_product = min(arr[i], min(current_max * arr[i], current_min * arr[i]));\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(arr[i], min(current_max * arr[i], current_min * arr[i]));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpyf1mm2jt.rs:11:35\n   |\n11 |         min_product = min(arr[i], min(current_max * arr[i], current_min * arr[i]));\n   |                                   ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(arr[i], main(current_max * arr[i], current_min * arr[i]));\n   |                                   ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpyf1mm2jt.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(curr, max(max_product * curr, min_product * curr));\n        min_product = min(curr, min(temp_max * curr, min_product * curr));\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp65sv2x4a.rs:10:23\n   |\n10 |         max_product = max(curr, max(max_product * curr, min_product * curr));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp65sv2x4a.rs:10:33\n   |\n10 |         max_product = max(curr, max(max_product * curr, min_product * curr));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp65sv2x4a.rs:11:23\n   |\n11 |         min_product = min(curr, min(temp_max * curr, min_product * curr));\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(curr, min(temp_max * curr, min_product * curr));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp65sv2x4a.rs:11:33\n   |\n11 |         min_product = min(curr, min(temp_max * curr, min_product * curr));\n   |                                 ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(curr, main(temp_max * curr, min_product * curr));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp65sv2x4a.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    let mut max_ending_here = 1;\n    let mut max_product = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_ending_here > max_product {\n            max_product = max_ending_here;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpyfd_aev8.rs:11:26\n   |\n11 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n29 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpyfd_aev8.rs:17:31\n   |\n17 |             max_ending_here = max(min_so_far * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_product = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_ending_here > max_product {\n            max_product = max_ending_here;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpg207n3wa.rs:12:31\n   |\n12 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n30 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpg207n3wa.rs:18:31\n   |\n18 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut result = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_candidates = vec![\n            curr,\n            curr * max_product,\n            curr * min_product,\n        ];\n        let min_product_candidates = vec![\n            curr,\n            curr * max_product,\n            curr * min_product,\n        ];\n        max_product = *max_product_candidates.iter().max().unwrap();\n        min_product = *min_product_candidates.iter().min().unwrap();\n        result = max(result, max_product);\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpacav2eyy.rs:21:18\n   |\n21 |         result = max(result, max_product);\n   |                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_product = 1;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if max_ending_here > max_product {\n            max_product = max_ending_here;\n        }\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpq7yuaukf.rs:11:31\n   |\n11 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n27 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpq7yuaukf.rs:17:31\n   |\n17 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(max(max_product * curr, min_product * curr), curr);\n        min_product = min(min(temp_max * curr, min_product * curr), curr);\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpwue0t4zq.rs:10:23\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpwue0t4zq.rs:10:27\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpwue0t4zq.rs:11:23\n   |\n11 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                       ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(min(temp_max * curr, min_product * curr), curr);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpwue0t4zq.rs:11:27\n   |\n11 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                           ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(main(temp_max * curr, min_product * curr), curr);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpwue0t4zq.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `r",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        return 0;\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpcqd6gbqe.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n30 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpcqd6gbqe.rs:17:31\n   |\n17 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut result = arr[0];\n\n    for i in 1..arr.len() {\n        let current = arr[i];\n        let max_product_candidate = max_product * current;\n        let min_product_candidate = min_product * current;\n\n        max_product = max(current, max(max_product_candidate, min_product_candidate));\n        min_product = min(current, min(max_product_candidate, min_product_candidate));\n\n        result = max(result, max_product);\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpp2q9idky.rs:12:23\n   |\n12 |         max_product = max(current, max(max_product_candidate, min_product_candidate));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpp2q9idky.rs:12:36\n   |\n12 |         max_product = max(current, max(max_product_candidate, min_product_candidate));\n   |                                    ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpp2q9idky.rs:13:23\n   |\n13 |         min_product = min(current, min(max_product_candidate, min_product_candidate));\n   |                       ^^^\n...\n21 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = main(current, min(max_product_candidate, min_product_candidate));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpp2q9idky.rs:13:36\n   |\n13 |         min_product = min(current, min(max_product_candidate, min_product_candidate));\n   |                                    ^^^\n...\n21 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = min(current, main(max_product_candidate, min_product_candidate));\n   |                                    ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpp2q9idky.rs:15:18\n   |\n15 |         result = max(result, max_product);\n   |                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            let temp = max_product;\n            max_product = min_product;\n            min_product = temp;\n        }\n\n        max_product = max(arr[i], max_product * arr[i]);\n        min_product = min(arr[i], min_product * arr[i]);\n\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2ep59f6v.rs:14:23\n   |\n14 |         max_product = max(arr[i], max_product * arr[i]);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp2ep59f6v.rs:15:23\n   |\n15 |         min_product = min(arr[i], min_product * arr[i]);\n   |                       ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n15 |         min_product = main(arr[i], min_product * arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2ep59f6v.rs:17:22\n   |\n17 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            let temp = max_product;\n            max_product = min_product;\n            min_product = temp;\n        }\n\n        max_product = max(arr[i], max_product * arr[i]);\n        min_product = min(arr[i], min_product * arr[i]);\n\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2ep59f6v.rs:14:23\n   |\n14 |         max_product = max(arr[i], max_product * arr[i]);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp2ep59f6v.rs:15:23\n   |\n15 |         min_product = min(arr[i], min_product * arr[i]);\n   |                       ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n15 |         min_product = main(arr[i], min_product * arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2ep59f6v.rs:17:22\n   |\n17 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        0\n    } else {\n        max_so_far\n    }\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp_mjml_uy.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n31 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp_mjml_uy.rs:17:31\n   |\n17 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let temp_max = max_product;\n        max_product = max(curr, max(curr * max_product, curr * min_product));\n        min_product = min(curr, min(curr * temp_max, curr * min_product));\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3mncnnyo.rs:10:23\n   |\n10 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3mncnnyo.rs:10:33\n   |\n10 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp3mncnnyo.rs:11:23\n   |\n11 |         min_product = min(curr, min(curr * temp_max, curr * min_product));\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(curr, min(curr * temp_max, curr * min_product));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp3mncnnyo.rs:11:33\n   |\n11 |         min_product = min(curr, min(curr * temp_max, curr * min_product));\n   |                                 ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(curr, main(curr * temp_max, curr * min_product));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3mncnnyo.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut result = arr[0];\n    for i in 1..arr.len() {\n        let current = arr[i];\n        let max_product_candidate = max_product * current;\n        let min_product_candidate = min_product * current;\n        max_product = max(current, max(max_product_candidate, min_product_candidate));\n        min_product = min(current, min(max_product_candidate, min_product_candidate));\n        result = max(result, max_product);\n    }\n    result\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpjlaaoyse.rs:10:23\n   |\n10 |         max_product = max(current, max(max_product_candidate, min_product_candidate));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpjlaaoyse.rs:10:36\n   |\n10 |         max_product = max(current, max(max_product_candidate, min_product_candidate));\n   |                                    ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpjlaaoyse.rs:11:23\n   |\n11 |         min_product = min(current, min(max_product_candidate, min_product_candidate));\n   |                       ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(current, min(max_product_candidate, min_product_candidate));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpjlaaoyse.rs:11:36\n   |\n11 |         min_product = min(current, min(max_product_candidate, min_product_candidate));\n   |                                    ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(current, main(max_product_candidate, min_product_candidate));\n   |                                    ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpjlaaoyse.rs:12:18\n   |\n12 |         result = max(result, max_product);\n   |                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_prod = arr[0];\n    let mut min_prod = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let prod1 = curr * max_prod;\n        let prod2 = curr * min_prod;\n        max_prod = max(curr, max(prod1, prod2));\n        min_prod = min(curr, min(prod1, prod2));\n        max_so_far = max(max_so_far, max_prod);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp31vmoin1.rs:11:20\n   |\n11 |         max_prod = max(curr, max(prod1, prod2));\n   |                    ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp31vmoin1.rs:11:30\n   |\n11 |         max_prod = max(curr, max(prod1, prod2));\n   |                              ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp31vmoin1.rs:12:20\n   |\n12 |         min_prod = min(curr, min(prod1, prod2));\n   |                    ^^^\n...\n19 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |         min_prod = main(curr, min(prod1, prod2));\n   |                    ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp31vmoin1.rs:12:30\n   |\n12 |         min_prod = min(curr, min(prod1, prod2));\n   |                              ^^^\n...\n19 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |         min_prod = min(curr, main(prod1, prod2));\n   |                              ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp31vmoin1.rs:13:22\n   |\n13 |         max_so_far = max(max_so_far, max_prod);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    let mut max_ending_here = 1;\n    let mut max_product = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_ending_here > max_product {\n            max_product = max_ending_here;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpyfd_aev8.rs:11:26\n   |\n11 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n29 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpyfd_aev8.rs:17:31\n   |\n17 |             max_ending_here = max(min_so_far * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = isize::min_value();\n    let mut current_product = 1;\n\n    for i in 0..arr.len() {\n        current_product *= arr[i];\n        max_product = max(max_product, current_product);\n        if current_product == 0 {\n            current_product = 1;\n        }\n    }\n\n    current_product = 1;\n    for i in (0..arr.len()).rev() {\n        current_product *= arr[i];\n        max_product = max(max_product, current_product);\n        if current_product == 0 {\n            current_product = 1;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpzg9c18bc.rs:8:23\n  |\n8 |         max_product = max(max_product, current_product);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpzg9c18bc.rs:17:23\n   |\n17 |         max_product = max(max_product, current_product);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for &x in arr.iter() {\n        if x > 0 {\n            max_ending_here = max_ending_here * x;\n            min_ending_here = min(min_ending_here * x, 1);\n        } else if x == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * x, 1);\n            min_ending_here = temp * x;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp7ymuooh8.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * x, 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * x, 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp7ymuooh8.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * x, 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let (max_product_tmp, min_product_tmp) = (\n            max_product * arr[i],\n            min_product * arr[i],\n        );\n        max_product = max(arr[i], max(max_product_tmp, min_product_tmp));\n        min_product = min(arr[i], min(max_product_tmp, min_product_tmp));\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp4jsy_wyy.rs:12:23\n   |\n12 |         max_product = max(arr[i], max(max_product_tmp, min_product_tmp));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp4jsy_wyy.rs:12:35\n   |\n12 |         max_product = max(arr[i], max(max_product_tmp, min_product_tmp));\n   |                                   ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp4jsy_wyy.rs:13:23\n   |\n13 |         min_product = min(arr[i], min(max_product_tmp, min_product_tmp));\n   |                       ^^^\n...\n19 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = main(arr[i], min(max_product_tmp, min_product_tmp));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp4jsy_wyy.rs:13:35\n   |\n13 |         min_product = min(arr[i], min(max_product_tmp, min_product_tmp));\n   |                                   ^^^\n...\n19 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = min(arr[i], main(max_product_tmp, min_product_tmp));\n   |                                   ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp4jsy_wyy.rs:14:22\n   |\n14 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this e",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_candidates = vec![\n            curr,\n            curr * max_product,\n            curr * min_product,\n        ];\n        let min_product_candidates = vec![\n            curr,\n            curr * max_product,\n            curr * min_product,\n        ];\n        max_product = max_product_candidates.iter().max().unwrap().clone();\n        min_product = min_product_candidates.iter().min().unwrap().clone();\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp7qy6_f2_.rs:21:22\n   |\n21 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if flag == 0 && max_so_far == 1 {\n        return 0;\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp8m_6jfkx.rs:11:31\n   |\n11 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n34 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp8m_6jfkx.rs:18:31\n   |\n18 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        return 0;\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpcqd6gbqe.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n30 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpcqd6gbqe.rs:17:31\n   |\n17 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n        if min_so_far > min_ending_here {\n            min_so_far = min_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpln34ho99.rs:12:31\n   |\n12 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n33 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n12 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0618]: expected function, found `{integer}`\n  --> /tmp/tmpln34ho99.rs:18:31\n   |\n7  |     let mut max = 1;\n   |         ------- `max` has type `{integer}`\n...\n18 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^-----------------------------\n   |                               |\n   |                               call expression requires function\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0425, E0618.\nFor more information about an error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let prev_max = max_product;\n        max_product = max(curr, max(curr * max_product, curr * min_product));\n        min_product = min(curr, min(curr * prev_max, curr * min_product));\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpvdjtew8a.rs:9:23\n  |\n9 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpvdjtew8a.rs:9:33\n  |\n9 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n  |                                 ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpvdjtew8a.rs:10:23\n   |\n10 |         min_product = min(curr, min(curr * prev_max, curr * min_product));\n   |                       ^^^\n...\n16 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(curr, min(curr * prev_max, curr * min_product));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpvdjtew8a.rs:10:33\n   |\n10 |         min_product = min(curr, min(curr * prev_max, curr * min_product));\n   |                                 ^^^\n...\n16 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(curr, main(curr * prev_max, curr * min_product));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpvdjtew8a.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `r",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let temp_max = max_product;\n        max_product = max(max(max_product * curr, min_product * curr), curr);\n        min_product = min(min(temp_max * curr, min_product * curr), curr);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpul7cm2qx.rs:10:23\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpul7cm2qx.rs:10:27\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpul7cm2qx.rs:11:23\n   |\n11 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(min(temp_max * curr, min_product * curr), curr);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpul7cm2qx.rs:11:27\n   |\n11 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                           ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(main(temp_max * curr, min_product * curr), curr);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpul7cm2qx.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `r",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_prod = arr[0];\n    let mut min_prod = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_prod_prev = max_prod;\n        max_prod = max(max(max_prod * curr, min_prod * curr), curr);\n        min_prod = min(min(max_prod_prev * curr, min_prod * curr), curr);\n        max_so_far = max(max_so_far, max_prod);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpa7i1hs8k.rs:10:20\n   |\n10 |         max_prod = max(max(max_prod * curr, min_prod * curr), curr);\n   |                    ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpa7i1hs8k.rs:10:24\n   |\n10 |         max_prod = max(max(max_prod * curr, min_prod * curr), curr);\n   |                        ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpa7i1hs8k.rs:11:20\n   |\n11 |         min_prod = min(min(max_prod_prev * curr, min_prod * curr), curr);\n   |                    ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_prod = main(min(max_prod_prev * curr, min_prod * curr), curr);\n   |                    ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpa7i1hs8k.rs:11:24\n   |\n11 |         min_prod = min(min(max_prod_prev * curr, min_prod * curr), curr);\n   |                        ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_prod = min(main(max_prod_prev * curr, min_prod * curr), curr);\n   |                        ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpa7i1hs8k.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_prod);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            std::mem::swap(&mut max_product, &mut min_product);\n        }\n\n        max_product = std::cmp::max(arr[i], max_product * arr[i]);\n        min_product = std::cmp::min(arr[i], min_product * arr[i]);\n\n        max_so_far = std::cmp::max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let temp_max = max_product;\n        max_product = max(curr, max(curr * max_product, curr * min_product));\n        min_product = min(curr, min(curr * temp_max, curr * min_product));\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3mncnnyo.rs:10:23\n   |\n10 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3mncnnyo.rs:10:33\n   |\n10 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp3mncnnyo.rs:11:23\n   |\n11 |         min_product = min(curr, min(curr * temp_max, curr * min_product));\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(curr, min(curr * temp_max, curr * min_product));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp3mncnnyo.rs:11:33\n   |\n11 |         min_product = min(curr, min(curr * temp_max, curr * min_product));\n   |                                 ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(curr, main(curr * temp_max, curr * min_product));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3mncnnyo.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if flag == 0 && max_so_far == 1 {\n        return 0;\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpsr7rtf74.rs:11:31\n   |\n11 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n33 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpsr7rtf74.rs:18:31\n   |\n18 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut result = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let prev_max = max_product;\n        let prev_min = min_product;\n\n        max_product = max(curr, max(curr * prev_max, curr * prev_min));\n        min_product = min(curr, min(curr * prev_max, curr * prev_min));\n\n        result = max(result, max_product);\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmps816egfl.rs:12:23\n   |\n12 |         max_product = max(curr, max(curr * prev_max, curr * prev_min));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmps816egfl.rs:12:33\n   |\n12 |         max_product = max(curr, max(curr * prev_max, curr * prev_min));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmps816egfl.rs:13:23\n   |\n13 |         min_product = min(curr, min(curr * prev_max, curr * prev_min));\n   |                       ^^^\n...\n21 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = main(curr, min(curr * prev_max, curr * prev_min));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmps816egfl.rs:13:33\n   |\n13 |         min_product = min(curr, min(curr * prev_max, curr * prev_min));\n   |                                 ^^^\n...\n21 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = min(curr, main(curr * prev_max, curr * prev_min));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmps816egfl.rs:15:18\n   |\n15 |         result = max(result, max_product);\n   |                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E04",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    let mut max_ending_here = 1;\n    let mut max_product = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_ending_here > max_product {\n            max_product = max_ending_here;\n        }\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpyfd_aev8.rs:11:26\n   |\n11 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n29 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpyfd_aev8.rs:17:31\n   |\n17 |             max_ending_here = max(min_so_far * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut temp = max_product;\n        max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n        min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpc9lpv2in.rs:9:23\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpc9lpv2in.rs:9:27\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpc9lpv2in.rs:10:23\n   |\n10 |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpc9lpv2in.rs:10:27\n   |\n10 |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(main(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpc9lpv2in.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut min_product = 0;\n    let mut max_so_far = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(1, min_product * arr[i]);\n        } else if arr[i] == 0 {\n            max_product = 0;\n            min_product = 0;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpspgpgtrq.rs:10:27\n   |\n10 |             min_product = min(1, min_product * arr[i]);\n   |                           ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product = main(1, min_product * arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpspgpgtrq.rs:16:27\n   |\n16 |             max_product = max(min_product * arr[i], 1);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if flag == 0 && max_so_far == 1 {\n        return 0;\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp8m_6jfkx.rs:11:31\n   |\n11 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n34 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp8m_6jfkx.rs:18:31\n   |\n18 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut min_product = 1;\n    let mut max_so_far = 1;\n\n    for i in arr {\n        if i > 0 {\n            max_product = max_product * i;\n            min_product = min(min_product * i, 1);\n        } else if i == 0 {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * i, 1);\n            min_product = temp * i;\n        }\n\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpew60y5oo.rs:10:27\n   |\n10 |             min_product = min(min_product * i, 1);\n   |                           ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product = main(min_product * i, 1);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpew60y5oo.rs:16:27\n   |\n16 |             max_product = max(min_product * i, 1);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(max(max_product * curr, min_product * curr), curr);\n        min_product = min(min(temp_max * curr, min_product * curr), curr);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpffj0ipjn.rs:10:23\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpffj0ipjn.rs:10:27\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpffj0ipjn.rs:11:23\n   |\n11 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(min(temp_max * curr, min_product * curr), curr);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpffj0ipjn.rs:11:27\n   |\n11 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                           ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(main(temp_max * curr, min_product * curr), curr);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpffj0ipjn.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `r",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        return 0;\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpcqd6gbqe.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n30 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpcqd6gbqe.rs:17:31\n   |\n17 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if flag == 0 && max_so_far == 1 {\n        0\n    } else {\n        max_so_far\n    }\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6ojkcncn.rs:11:31\n   |\n11 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n34 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6ojkcncn.rs:18:31\n   |\n18 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut result = arr[0];\n\n    for i in 1..arr.len() {\n        let current = arr[i];\n        let temp_max = max_product;\n        max_product = max(max(max_product * current, min_product * current), current);\n        min_product = min(min(temp_max * current, min_product * current), current);\n        result = max(result, max_product);\n    }\n    result\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp0w4hcfnu.rs:10:23\n   |\n10 |         max_product = max(max(max_product * current, min_product * current), current);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp0w4hcfnu.rs:10:27\n   |\n10 |         max_product = max(max(max_product * current, min_product * current), current);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp0w4hcfnu.rs:11:23\n   |\n11 |         min_product = min(min(temp_max * current, min_product * current), current);\n   |                       ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(min(temp_max * current, min_product * current), current);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp0w4hcfnu.rs:11:27\n   |\n11 |         min_product = min(min(temp_max * current, min_product * current), current);\n   |                           ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(main(temp_max * current, min_product * current), current);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp0w4hcfnu.rs:12:18\n   |\n12 |         result = max(result, max_product);\n   |                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut result = arr[0];\n    for i in 1..arr.len() {\n        let mut temp = max_product;\n        max_product = max(arr[i], max(max_product * arr[i], min_product * arr[i]));\n        min_product = min(arr[i], min(temp * arr[i], min_product * arr[i]));\n        result = max(result, max_product);\n    }\n    result\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpxi8b4ew4.rs:8:23\n  |\n8 |         max_product = max(arr[i], max(max_product * arr[i], min_product * arr[i]));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpxi8b4ew4.rs:8:35\n  |\n8 |         max_product = max(arr[i], max(max_product * arr[i], min_product * arr[i]));\n  |                                   ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpxi8b4ew4.rs:9:23\n   |\n9  |         min_product = min(arr[i], min(temp * arr[i], min_product * arr[i]));\n   |                       ^^^\n...\n15 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         min_product = main(arr[i], min(temp * arr[i], min_product * arr[i]));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpxi8b4ew4.rs:9:35\n   |\n9  |         min_product = min(arr[i], min(temp * arr[i], min_product * arr[i]));\n   |                                   ^^^\n...\n15 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         min_product = min(arr[i], main(temp * arr[i], min_product * arr[i]));\n   |                                   ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpxi8b4ew4.rs:10:18\n   |\n10 |         result = max(result, max_product);\n   |                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this e",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for &x in arr.iter() {\n        if x > 0 {\n            max_ending_here = max_ending_here * x;\n            min_ending_here = min(min_ending_here * x, 1);\n        } else if x == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * x, 1);\n            min_ending_here = temp * x;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp7ymuooh8.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * x, 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * x, 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp7ymuooh8.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * x, 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(curr, max(max_product * curr, min_product * curr));\n        min_product = min(curr, min(temp_max * curr, min_product * curr));\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmprdjrytbd.rs:10:23\n   |\n10 |         max_product = max(curr, max(max_product * curr, min_product * curr));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmprdjrytbd.rs:10:33\n   |\n10 |         max_product = max(curr, max(max_product * curr, min_product * curr));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmprdjrytbd.rs:11:23\n   |\n11 |         min_product = min(curr, min(temp_max * curr, min_product * curr));\n   |                       ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(curr, min(temp_max * curr, min_product * curr));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmprdjrytbd.rs:11:33\n   |\n11 |         min_product = min(curr, min(temp_max * curr, min_product * curr));\n   |                                 ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(curr, main(temp_max * curr, min_product * curr));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmprdjrytbd.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if flag == 0 && max_so_far == 1 {\n        0\n    } else {\n        max_so_far\n    }\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6ojkcncn.rs:11:31\n   |\n11 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n34 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6ojkcncn.rs:18:31\n   |\n18 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let (max_product_, min_product_) = if arr[i] < 0 {\n            (min_product * arr[i], max_product * arr[i])\n        } else {\n            (max_product * arr[i], min_product * arr[i])\n        };\n\n        max_product = max(max_product_, arr[i]);\n        min_product = min(min_product_, arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpc41vr2l8.rs:14:23\n   |\n14 |         max_product = max(max_product_, arr[i]);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpc41vr2l8.rs:15:23\n   |\n15 |         min_product = min(min_product_, arr[i]);\n   |                       ^^^\n...\n22 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n15 |         min_product = main(min_product_, arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpc41vr2l8.rs:16:22\n   |\n16 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let temp = max_product;\n        max_product = max(max(max_product * curr, min_product * curr), curr);\n        min_product = min(min(temp * curr, min_product * curr), curr);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp4d_qi5fb.rs:10:23\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp4d_qi5fb.rs:10:27\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp4d_qi5fb.rs:11:23\n   |\n11 |         min_product = min(min(temp * curr, min_product * curr), curr);\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(min(temp * curr, min_product * curr), curr);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp4d_qi5fb.rs:11:27\n   |\n11 |         min_product = min(min(temp * curr, min_product * curr), curr);\n   |                           ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(main(temp * curr, min_product * curr), curr);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp4d_qi5fb.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut result = arr[0];\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_candidates = vec![curr, max_product * curr, min_product * curr];\n        let min_product_candidates = vec![curr, max_product * curr, min_product * curr];\n        max_product = max_product_candidates.iter().max().unwrap().clone();\n        min_product = min_product_candidates.iter().min().unwrap().clone();\n        result = max(result, max_product);\n    }\n    result\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpwv1lrdj1.rs:12:18\n   |\n12 |         result = max(result, max_product);\n   |                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut min_product = 1;\n    let mut max_so_far = 1;\n\n    for i in arr {\n        if i > 0 {\n            max_product = max_product * i;\n            min_product = min(min_product * i, 1);\n        } else if i == 0 {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * i, 1);\n            min_product = temp * i;\n        }\n\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpew60y5oo.rs:10:27\n   |\n10 |             min_product = min(min_product * i, 1);\n   |                           ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product = main(min_product * i, 1);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpew60y5oo.rs:16:27\n   |\n16 |             max_product = max(min_product * i, 1);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_candidates = vec![\n            curr,\n            curr * max_product,\n            curr * min_product,\n        ];\n        let min_product_candidates = vec![\n            curr,\n            curr * max_product,\n            curr * min_product,\n        ];\n        max_product = *max_product_candidates.iter().max().unwrap();\n        min_product = *min_product_candidates.iter().min().unwrap();\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp52xtrakz.rs:21:22\n   |\n21 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut temp = max_product;\n        max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n        min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp3oazz3zy.rs:9:23\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp3oazz3zy.rs:9:27\n  |\n9 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp3oazz3zy.rs:10:23\n   |\n10 |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ^^^\n...\n16 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp3oazz3zy.rs:10:27\n   |\n10 |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ^^^\n...\n16 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(main(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3oazz3zy.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(\n            max(max_product * curr, min_product * curr),\n            curr,\n        );\n        min_product = min(\n            min(temp_max * curr, min_product * curr),\n            curr,\n        );\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpp5_vte3s.rs:10:23\n   |\n10 |         max_product = max(\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpp5_vte3s.rs:11:13\n   |\n11 |             max(max_product * curr, min_product * curr),\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpp5_vte3s.rs:14:23\n   |\n14 |         min_product = min(\n   |                       ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n14 |         min_product = main(\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpp5_vte3s.rs:15:13\n   |\n15 |             min(temp_max * curr, min_product * curr),\n   |             ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n15 |             main(temp_max * curr, min_product * curr),\n   |             ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpp5_vte3s.rs:18:22\n   |\n18 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut result = arr[0];\n\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            let temp = max_product;\n            max_product = min_product;\n            min_product = temp;\n        }\n\n        max_product = max(arr[i], max_product * arr[i]);\n        min_product = min(arr[i], min_product * arr[i]);\n\n        result = max(result, max_product);\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpt_35zobv.rs:14:23\n   |\n14 |         max_product = max(arr[i], max_product * arr[i]);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpt_35zobv.rs:15:23\n   |\n15 |         min_product = min(arr[i], min_product * arr[i]);\n   |                       ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n15 |         min_product = main(arr[i], min_product * arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpt_35zobv.rs:17:18\n   |\n17 |         result = max(result, max_product);\n   |                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_so_far = arr[0];\n    let mut min_so_far = arr[0];\n    let mut max_ending_here = arr[0];\n    let mut min_ending_here = arr[0];\n    let mut max_product = arr[0];\n\n    for i in 1..arr.len() {\n        max_ending_here = max(\n            max(max_ending_here * arr[i], min_ending_here * arr[i]),\n            arr[i],\n        );\n        min_ending_here = min(\n            min(max_so_far * arr[i], min_so_far * arr[i]),\n            arr[i],\n        );\n        max_product = max(max_product, max_ending_here);\n    }\n    max_product\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpja63ufy6.rs:10:27\n   |\n10 |         max_ending_here = max(\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpja63ufy6.rs:11:13\n   |\n11 |             max(max_ending_here * arr[i], min_ending_here * arr[i]),\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpja63ufy6.rs:14:27\n   |\n14 |         min_ending_here = min(\n   |                           ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n14 |         min_ending_here = main(\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpja63ufy6.rs:15:13\n   |\n15 |             min(max_so_far * arr[i], min_so_far * arr[i]),\n   |             ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n15 |             main(max_so_far * arr[i], min_so_far * arr[i]),\n   |             ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpja63ufy6.rs:18:23\n   |\n18 |         max_product = max(max_product, max_ending_here);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut result = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_prev = max_product;\n        max_product = max(curr, max(curr * max_product_prev, curr * min_product));\n        min_product = min(curr, min(curr * max_product_prev, curr * min_product));\n        result = max(result, max_product);\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp10zaupbh.rs:10:23\n   |\n10 |         max_product = max(curr, max(curr * max_product_prev, curr * min_product));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp10zaupbh.rs:10:33\n   |\n10 |         max_product = max(curr, max(curr * max_product_prev, curr * min_product));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp10zaupbh.rs:11:23\n   |\n11 |         min_product = min(curr, min(curr * max_product_prev, curr * min_product));\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(curr, min(curr * max_product_prev, curr * min_product));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp10zaupbh.rs:11:33\n   |\n11 |         min_product = min(curr, min(curr * max_product_prev, curr * min_product));\n   |                                 ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(curr, main(curr * max_product_prev, curr * min_product));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp10zaupbh.rs:12:18\n   |\n12 |         result = max(result, max_product);\n   |                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous error",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    let mut max_ending_here = 1;\n    let mut result = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_ending_here > result {\n            result = max_ending_here;\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpf6uekmjo.rs:11:26\n   |\n11 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n29 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpf6uekmjo.rs:17:31\n   |\n17 |             max_ending_here = max(min_so_far * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_new = max(curr, max(curr * max_product, curr * min_product));\n        let min_product_new = min(curr, min(curr * max_product, curr * min_product));\n        max_product = max_product_new;\n        min_product = min_product_new;\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpyfo2dbig.rs:9:31\n  |\n9 |         let max_product_new = max(curr, max(curr * max_product, curr * min_product));\n  |                               ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpyfo2dbig.rs:9:41\n  |\n9 |         let max_product_new = max(curr, max(curr * max_product, curr * min_product));\n  |                                         ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpyfo2dbig.rs:10:31\n   |\n10 |         let min_product_new = min(curr, min(curr * max_product, curr * min_product));\n   |                               ^^^\n...\n19 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         let min_product_new = main(curr, min(curr * max_product, curr * min_product));\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpyfo2dbig.rs:10:41\n   |\n10 |         let min_product_new = min(curr, min(curr * max_product, curr * min_product));\n   |                                         ^^^\n...\n19 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         let min_product_new = min(curr, main(curr * max_product, curr * min_product));\n   |                                         ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpyfo2dbig.rs:13:22\n   |\n13 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if flag == 0 && max_so_far == 1 {\n        0\n    } else {\n        max_so_far\n    }\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6ojkcncn.rs:11:31\n   |\n11 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n34 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6ojkcncn.rs:18:31\n   |\n18 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_prod = arr[0];\n    let mut min_prod = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_prod_candidate = max(curr, max(curr * max_prod, curr * min_prod));\n        let min_prod_candidate = min(curr, min(curr * max_prod, curr * min_prod));\n        max_prod = max_prod_candidate;\n        min_prod = min_prod_candidate;\n        max_so_far = max(max_so_far, max_prod);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpskzc6839.rs:9:34\n  |\n9 |         let max_prod_candidate = max(curr, max(curr * max_prod, curr * min_prod));\n  |                                  ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpskzc6839.rs:9:44\n  |\n9 |         let max_prod_candidate = max(curr, max(curr * max_prod, curr * min_prod));\n  |                                            ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpskzc6839.rs:10:34\n   |\n10 |         let min_prod_candidate = min(curr, min(curr * max_prod, curr * min_prod));\n   |                                  ^^^\n...\n19 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         let min_prod_candidate = main(curr, min(curr * max_prod, curr * min_prod));\n   |                                  ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpskzc6839.rs:10:44\n   |\n10 |         let min_prod_candidate = min(curr, min(curr * max_prod, curr * min_prod));\n   |                                            ^^^\n...\n19 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         let min_prod_candidate = min(curr, main(curr * max_prod, curr * min_prod));\n   |                                            ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpskzc6839.rs:13:22\n   |\n13 |         max_so_far = max(max_so_far, max_prod);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for &x in arr.iter() {\n        if x > 0 {\n            max_ending_here = max_ending_here * x;\n            min_ending_here = min(min_ending_here * x, 1);\n        } else if x == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * x, 1);\n            min_ending_here = temp * x;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp7ymuooh8.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * x, 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * x, 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp7ymuooh8.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * x, 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        let mut temp = max_product;\n        max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n        min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp132671_7.rs:8:23\n  |\n8 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp132671_7.rs:8:27\n  |\n8 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp132671_7.rs:9:23\n   |\n9  |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ^^^\n...\n15 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         min_product = main(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp132671_7.rs:9:27\n   |\n9  |         min_product = min(min(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ^^^\n...\n15 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         min_product = min(main(temp * arr[i], min_product * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp132671_7.rs:10:22\n   |\n10 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `r",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            std::mem::swap(&mut max_product, &mut min_product);\n        }\n\n        max_product = std::cmp::max(arr[i], max_product * arr[i]);\n        min_product = std::cmp::min(arr[i], min_product * arr[i]);\n\n        max_so_far = std::cmp::max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut min_product = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(min_product * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmppwupusn_.rs:10:27\n   |\n10 |             min_product = min(min_product * arr[i], 1);\n   |                           ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product = main(min_product * arr[i], 1);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmppwupusn_.rs:16:27\n   |\n16 |             max_product = max(min_product * arr[i], 1);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(curr, max(curr * max_product, curr * min_product));\n        min_product = min(curr, min(curr * temp_max, curr * min_product));\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6m6hu_0e.rs:10:23\n   |\n10 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6m6hu_0e.rs:10:33\n   |\n10 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6m6hu_0e.rs:11:23\n   |\n11 |         min_product = min(curr, min(curr * temp_max, curr * min_product));\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(curr, min(curr * temp_max, curr * min_product));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6m6hu_0e.rs:11:33\n   |\n11 |         min_product = min(curr, min(curr * temp_max, curr * min_product));\n   |                                 ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(curr, main(curr * temp_max, curr * min_product));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6m6hu_0e.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut result = arr[0];\n\n    for i in 1..arr.len() {\n        let current = arr[i];\n        let max_product_copy = max_product;\n        let min_product_copy = min_product;\n\n        max_product = max(\n            max(max_product_copy * current, min_product_copy * current),\n            current,\n        );\n        min_product = min(\n            min(max_product_copy * current, min_product_copy * current),\n            current,\n        );\n\n        result = max(result, max_product);\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpjeu972ox.rs:12:23\n   |\n12 |         max_product = max(\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpjeu972ox.rs:13:13\n   |\n13 |             max(max_product_copy * current, min_product_copy * current),\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpjeu972ox.rs:16:23\n   |\n16 |         min_product = min(\n   |                       ^^^\n...\n27 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n16 |         min_product = main(\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpjeu972ox.rs:17:13\n   |\n17 |             min(max_product_copy * current, min_product_copy * current),\n   |             ^^^\n...\n27 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n17 |             main(max_product_copy * current, min_product_copy * current),\n   |             ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpjeu972ox.rs:21:18\n   |\n21 |         result = max(result, max_product);\n   |                  ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in arr {\n        if i > 0 {\n            max_ending_here = max_ending_here * i;\n            min_ending_here = min(min_ending_here * i, 1);\n        } else if i == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * i, 1);\n            min_ending_here = temp * i;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpo9zk22qy.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * i, 1);\n   |                               ^^^\n...\n27 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * i, 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpo9zk22qy.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * i, 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut temp = max_product;\n        max_product = max(arr[i], max(arr[i] * max_product, arr[i] * min_product));\n        min_product = min(arr[i], min(arr[i] * temp, arr[i] * min_product));\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpks_bypfx.rs:9:23\n  |\n9 |         max_product = max(arr[i], max(arr[i] * max_product, arr[i] * min_product));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpks_bypfx.rs:9:35\n  |\n9 |         max_product = max(arr[i], max(arr[i] * max_product, arr[i] * min_product));\n  |                                   ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpks_bypfx.rs:10:23\n   |\n10 |         min_product = min(arr[i], min(arr[i] * temp, arr[i] * min_product));\n   |                       ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(arr[i], min(arr[i] * temp, arr[i] * min_product));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpks_bypfx.rs:10:35\n   |\n10 |         min_product = min(arr[i], min(arr[i] * temp, arr[i] * min_product));\n   |                                   ^^^\n...\n17 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(arr[i], main(arr[i] * temp, arr[i] * min_product));\n   |                                   ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpks_bypfx.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more informatio",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut min_product = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(min_product * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        return 0;\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpe4bcg8ev.rs:11:27\n   |\n11 |             min_product = min(min_product * arr[i], 1);\n   |                           ^^^\n...\n31 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_product = main(min_product * arr[i], 1);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpe4bcg8ev.rs:18:27\n   |\n18 |             max_product = max(min_product * arr[i], 1);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let mut curr_max = max_product;\n        let mut curr_min = min_product;\n\n        max_product = max(\n            max(curr_max * arr[i], curr_min * arr[i]),\n            arr[i] as isize,\n        );\n        min_product = min(\n            min(curr_max * arr[i], curr_min * arr[i]),\n            arr[i] as isize,\n        );\n\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpuvsilvnq.rs:11:23\n   |\n11 |         max_product = max(\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpuvsilvnq.rs:12:13\n   |\n12 |             max(curr_max * arr[i], curr_min * arr[i]),\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpuvsilvnq.rs:15:23\n   |\n15 |         min_product = min(\n   |                       ^^^\n...\n26 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n15 |         min_product = main(\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpuvsilvnq.rs:16:13\n   |\n16 |             min(curr_max * arr[i], curr_min * arr[i]),\n   |             ^^^\n...\n26 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n16 |             main(curr_max * arr[i], curr_min * arr[i]),\n   |             ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpuvsilvnq.rs:20:22\n   |\n20 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut min_product = 1;\n    let mut max_product = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(min_product * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp16zwxxl5.rs:10:27\n   |\n10 |             min_product = min(min_product * arr[i], 1);\n   |                           ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product = main(min_product * arr[i], 1);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp16zwxxl5.rs:16:27\n   |\n16 |             max_product = max(min_product * arr[i], 1);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if flag == 0 && max_so_far == 1 {\n        return 0;\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp8m_6jfkx.rs:11:31\n   |\n11 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n34 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp8m_6jfkx.rs:18:31\n   |\n18 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(curr, max(curr * max_product, curr * min_product));\n        min_product = min(curr, min(curr * temp_max, curr * min_product));\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6m6hu_0e.rs:10:23\n   |\n10 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6m6hu_0e.rs:10:33\n   |\n10 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6m6hu_0e.rs:11:23\n   |\n11 |         min_product = min(curr, min(curr * temp_max, curr * min_product));\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(curr, min(curr * temp_max, curr * min_product));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6m6hu_0e.rs:11:33\n   |\n11 |         min_product = min(curr, min(curr * temp_max, curr * min_product));\n   |                                 ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(curr, main(curr * temp_max, curr * min_product));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6m6hu_0e.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(curr, max(curr * max_product, curr * min_product));\n        min_product = min(curr, min(curr * temp_max, curr * min_product));\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6m6hu_0e.rs:10:23\n   |\n10 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6m6hu_0e.rs:10:33\n   |\n10 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6m6hu_0e.rs:11:23\n   |\n11 |         min_product = min(curr, min(curr * temp_max, curr * min_product));\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(curr, min(curr * temp_max, curr * min_product));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp6m6hu_0e.rs:11:33\n   |\n11 |         min_product = min(curr, min(curr * temp_max, curr * min_product));\n   |                                 ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(curr, main(curr * temp_max, curr * min_product));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp6m6hu_0e.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let temp_max = max_product;\n        max_product = max(curr, max(curr * max_product, curr * min_product));\n        min_product = min(curr, min(curr * temp_max, curr * min_product));\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3mncnnyo.rs:10:23\n   |\n10 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3mncnnyo.rs:10:33\n   |\n10 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp3mncnnyo.rs:11:23\n   |\n11 |         min_product = min(curr, min(curr * temp_max, curr * min_product));\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(curr, min(curr * temp_max, curr * min_product));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp3mncnnyo.rs:11:33\n   |\n11 |         min_product = min(curr, min(curr * temp_max, curr * min_product));\n   |                                 ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(curr, main(curr * temp_max, curr * min_product));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3mncnnyo.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let mut temp_max = max_product;\n        max_product = max(max(max_product * curr, min_product * curr), curr);\n        min_product = min(min(temp_max * curr, min_product * curr), curr);\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpffj0ipjn.rs:10:23\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpffj0ipjn.rs:10:27\n   |\n10 |         max_product = max(max(max_product * curr, min_product * curr), curr);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpffj0ipjn.rs:11:23\n   |\n11 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(min(temp_max * curr, min_product * curr), curr);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpffj0ipjn.rs:11:27\n   |\n11 |         min_product = min(min(temp_max * curr, min_product * curr), curr);\n   |                           ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(main(temp_max * curr, min_product * curr), curr);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpffj0ipjn.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `r",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 0;\n    let mut min_product = 0;\n    let mut max_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(1, min_product * arr[i]);\n        } else if arr[i] == 0 {\n            max_product = 0;\n            min_product = 0;\n        } else {\n            let temp = max_product;\n            max_product = max(1, min_product * arr[i]);\n            min_product = temp * arr[i];\n        }\n        if max_product > max_so_far {\n            max_so_far = max_product;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp0x694hwx.rs:9:27\n   |\n9  |             min_product = min(1, min_product * arr[i]);\n   |                           ^^^\n...\n25 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |             min_product = main(1, min_product * arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp0x694hwx.rs:15:27\n   |\n15 |             max_product = max(1, min_product * arr[i]);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            std::mem::swap(&mut max_product, &mut min_product);\n        }\n        max_product = std::cmp::max(arr[i], max_product * arr[i]);\n        min_product = std::cmp::min(arr[i], min_product * arr[i]);\n        max_so_far = std::cmp::max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut min_product = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(min_product * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmppwupusn_.rs:10:27\n   |\n10 |             min_product = min(min_product * arr[i], 1);\n   |                           ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product = main(min_product * arr[i], 1);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmppwupusn_.rs:16:27\n   |\n16 |             max_product = max(min_product * arr[i], 1);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let temp_max = max_product;\n        max_product = max(curr, max(curr * max_product, curr * min_product));\n        min_product = min(curr, min(curr * temp_max, curr * min_product));\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3mncnnyo.rs:10:23\n   |\n10 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3mncnnyo.rs:10:33\n   |\n10 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp3mncnnyo.rs:11:23\n   |\n11 |         min_product = min(curr, min(curr * temp_max, curr * min_product));\n   |                       ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = main(curr, min(curr * temp_max, curr * min_product));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp3mncnnyo.rs:11:33\n   |\n11 |         min_product = min(curr, min(curr * temp_max, curr * min_product));\n   |                                 ^^^\n...\n18 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |         min_product = min(curr, main(curr * temp_max, curr * min_product));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp3mncnnyo.rs:12:22\n   |\n12 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut min_product = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(min_product * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n\n    if flag == 0 && max_so_far == 1 {\n        return 0;\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp13a7ueby.rs:11:27\n   |\n11 |             min_product = min(min_product * arr[i], 1);\n   |                           ^^^\n...\n34 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_product = main(min_product * arr[i], 1);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp13a7ueby.rs:18:27\n   |\n18 |             max_product = max(min_product * arr[i], 1);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let prev_max = max_product;\n        max_product = max(curr, max(curr * max_product, curr * min_product));\n        min_product = min(curr, min(curr * prev_max, curr * min_product));\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpvdjtew8a.rs:9:23\n  |\n9 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpvdjtew8a.rs:9:33\n  |\n9 |         max_product = max(curr, max(curr * max_product, curr * min_product));\n  |                                 ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpvdjtew8a.rs:10:23\n   |\n10 |         min_product = min(curr, min(curr * prev_max, curr * min_product));\n   |                       ^^^\n...\n16 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = main(curr, min(curr * prev_max, curr * min_product));\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpvdjtew8a.rs:10:33\n   |\n10 |         min_product = min(curr, min(curr * prev_max, curr * min_product));\n   |                                 ^^^\n...\n16 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |         min_product = min(curr, main(curr * prev_max, curr * min_product));\n   |                                 ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpvdjtew8a.rs:11:22\n   |\n11 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `r",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut min_product = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(min_product * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n\n    if flag == 0 && max_so_far == 1 {\n        0\n    } else {\n        max_so_far\n    }\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpa6jldb21.rs:11:27\n   |\n11 |             min_product = min(min_product * arr[i], 1);\n   |                           ^^^\n...\n34 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_product = main(min_product * arr[i], 1);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpa6jldb21.rs:18:27\n   |\n18 |             max_product = max(min_product * arr[i], 1);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let curr = arr[i];\n        let max_product_candidates = vec![\n            curr,\n            curr * max_product,\n            curr * min_product,\n        ];\n        let min_product_candidates = vec![\n            curr,\n            curr * max_product,\n            curr * min_product,\n        ];\n\n        max_product = *max_product_candidates.iter().max().unwrap();\n        min_product = *min_product_candidates.iter().min().unwrap();\n\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp37_1i6qh.rs:23:22\n   |\n23 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        let mut temp = max_product;\n        max_product = max(max(arr[i], max_product * arr[i]), min_product * arr[i]);\n        min_product = min(min(arr[i], temp * arr[i]), min_product * arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpblf0j6rp.rs:8:23\n  |\n8 |         max_product = max(max(arr[i], max_product * arr[i]), min_product * arr[i]);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpblf0j6rp.rs:8:27\n  |\n8 |         max_product = max(max(arr[i], max_product * arr[i]), min_product * arr[i]);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpblf0j6rp.rs:9:23\n   |\n9  |         min_product = min(min(arr[i], temp * arr[i]), min_product * arr[i]);\n   |                       ^^^\n...\n15 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         min_product = main(min(arr[i], temp * arr[i]), min_product * arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpblf0j6rp.rs:9:27\n   |\n9  |         min_product = min(min(arr[i], temp * arr[i]), min_product * arr[i]);\n   |                           ^^^\n...\n15 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         min_product = min(main(arr[i], temp * arr[i]), min_product * arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpblf0j6rp.rs:10:22\n   |\n10 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `r",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:10:31\n   |\n10 |             min_ending_here = min(min_ending_here * arr[i], 1);\n   |                               ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_ending_here = main(min_ending_here * arr[i], 1);\n   |                               ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpbwdi7sg1.rs:16:31\n   |\n16 |             max_ending_here = max(min_ending_here * arr[i], 1);\n   |                               ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n    for i in 1..arr.len() {\n        let max_product_copy = max_product;\n        max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n        min_product = min(min(max_product_copy * arr[i], min_product * arr[i]), arr[i]);\n        max_so_far = max(max_so_far, max_product);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpg0nuf_2r.rs:8:23\n  |\n8 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpg0nuf_2r.rs:8:27\n  |\n8 |         max_product = max(max(max_product * arr[i], min_product * arr[i]), arr[i]);\n  |                           ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpg0nuf_2r.rs:9:23\n   |\n9  |         min_product = min(min(max_product_copy * arr[i], min_product * arr[i]), arr[i]);\n   |                       ^^^\n...\n15 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         min_product = main(min(max_product_copy * arr[i], min_product * arr[i]), arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpg0nuf_2r.rs:9:27\n   |\n9  |         min_product = min(min(max_product_copy * arr[i], min_product * arr[i]), arr[i]);\n   |                           ^^^\n...\n15 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n9  |         min_product = min(main(max_product_copy * arr[i], min_product * arr[i]), arr[i]);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpg0nuf_2r.rs:10:22\n   |\n10 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous error",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            std::mem::swap(&mut max_product, &mut min_product);\n        }\n\n        max_product = std::cmp::max(arr[i], max_product * arr[i]);\n        min_product = std::cmp::min(arr[i], min_product * arr[i]);\n\n        max_so_far = std::cmp::max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = 1;\n    let mut min_product = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(min_product * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n\n        if max_so_far < max_product {\n            max_so_far = max_product;\n        }\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmppwupusn_.rs:10:27\n   |\n10 |             min_product = min(min_product * arr[i], 1);\n   |                           ^^^\n...\n28 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n10 |             min_product = main(min_product * arr[i], 1);\n   |                           ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmppwupusn_.rs:16:27\n   |\n16 |             max_product = max(min_product * arr[i], 1);\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    let mut max_product = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_product < max_so_far {\n            max_product = max_so_far;\n        }\n    }\n\n    if flag == 0 && max_product == 1 {\n        return 0;\n    }\n\n    max_product\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp_hr0zuhv.rs:11:26\n   |\n11 |             min_so_far = min(min_so_far * arr[i], 1);\n   |                          ^^^\n...\n34 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n11 |             min_so_far = main(min_so_far * arr[i], 1);\n   |                          ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp_hr0zuhv.rs:18:26\n   |\n18 |             max_so_far = max(min_so_far * arr[i], 1);\n   |                          ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        let (max_product_prev, min_product_prev) = (max_product, min_product);\n        max_product = max(\n            max(max_product_prev * arr[i], min_product_prev * arr[i]),\n            arr[i] as isize,\n        );\n        min_product = min(\n            min(max_product_prev * arr[i], min_product_prev * arr[i]),\n            arr[i] as isize,\n        );\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpnh35tm36.rs:9:23\n  |\n9 |         max_product = max(\n  |                       ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpnh35tm36.rs:10:13\n   |\n10 |             max(max_product_prev * arr[i], min_product_prev * arr[i]),\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpnh35tm36.rs:13:23\n   |\n13 |         min_product = min(\n   |                       ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n13 |         min_product = main(\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmpnh35tm36.rs:14:13\n   |\n14 |             min(max_product_prev * arr[i], min_product_prev * arr[i]),\n   |             ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n14 |             main(max_product_prev * arr[i], min_product_prev * arr[i]),\n   |             ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmpnh35tm36.rs:17:22\n   |\n17 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 5 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the maximum product subarray of the given array.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n    let mut max_product = arr[0];\n    let mut min_product = arr[0];\n    let mut max_so_far = arr[0];\n\n    for i in 1..arr.len() {\n        if arr[i] < 0 {\n            let temp = max_product;\n            max_product = min_product;\n            min_product = temp;\n        }\n\n        max_product = max(arr[i], max_product * arr[i]);\n        min_product = min(arr[i], min_product * arr[i]);\n\n        max_so_far = max(max_so_far, max_product);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2ep59f6v.rs:14:23\n   |\n14 |         max_product = max(arr[i], max_product * arr[i]);\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror[E0425]: cannot find function `min` in this scope\n  --> /tmp/tmp2ep59f6v.rs:15:23\n   |\n15 |         min_product = min(arr[i], min_product * arr[i]);\n   |                       ^^^\n...\n23 | fn main() {\n   | --------- similarly named function `main` defined here\n   |\nhelp: a function with a similar name exists\n   |\n15 |         min_product = main(arr[i], min_product * arr[i]);\n   |                       ~~~~\nhelp: consider importing this function\n   |\n1  | use std::cmp::min;\n   |\n\nerror[E0425]: cannot find function `max` in this scope\n  --> /tmp/tmp2ep59f6v.rs:17:22\n   |\n17 |         max_so_far = max(max_so_far, max_product);\n   |                      ^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  | use std::cmp::max;\n   |\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_594_diff_even_odd",
  "language": "rs",
  "prompt": "/// Write a function to find the difference of the first even and first odd number of a given list.\nfn diff_even_odd(list1: Vec<isize>) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_594_diff_even_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = diff_even_odd;\n    assert_eq!(candidate(vec![1, 3, 5, 7, 4, 1, 6, 8]), 3);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10]), 1);\n    assert_eq!(candidate(vec![1, 5, 7, 9, 10]), 9);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut even = None;\n    let mut odd = None;\n    for i in list1 {\n        if i % 2 == 0 {\n            if even.is_none() {\n                even = Some(i);\n            }\n        } else {\n            if odd.is_none() {\n                odd = Some(i);\n            }\n        }\n    }\n    even.unwrap_or(0) - odd.unwrap_or(0)",
    "    let mut even = None;\n    let mut odd = None;\n    for i in list1 {\n        if i % 2 == 0 {\n            even = Some(i);\n            break;\n        }\n    }\n    for i in list1 {\n        if i % 2 != 0 {\n            odd = Some(i);\n            break;\n        }\n    }\n    match (even, odd) {\n        (Some(even), Some(odd)) => even - odd,\n        _ => 0,\n    }",
    "    let mut even = None;\n    let mut odd = None;\n    for i in list1 {\n        if i % 2 == 0 {\n            even = Some(i);\n            break;\n        }\n    }\n    for i in list1 {\n        if i % 2 != 0 {\n            odd = Some(i);\n            break;\n        }\n    }\n    match (even, odd) {\n        (Some(e), Some(o)) => e - o,\n        _ => 0,\n    }",
    "    let mut even = None;\n    let mut odd = None;\n    for i in list1 {\n        if i % 2 == 0 {\n            if even.is_none() {\n                even = Some(i);\n            }\n        } else {\n            if odd.is_none() {\n                odd = Some(i);\n            }\n        }\n    }\n    even.unwrap() - odd.unwrap()",
    "    let mut even = None;\n    let mut odd = None;\n    for i in list1 {\n        if i % 2 == 0 {\n            if even.is_none() {\n                even = Some(i);\n            }\n        } else {\n            if odd.is_none() {\n                odd = Some(i);\n            }\n        }\n    }\n    even.unwrap() - odd.unwrap()",
    "    let mut even_num = 0;\n    let mut odd_num = 0;\n    let mut even_found = false;\n    let mut odd_found = false;\n    for i in list1 {\n        if i % 2 == 0 {\n            if !even_found {\n                even_num = i;\n                even_found = true;\n            }\n        } else {\n            if !odd_found {\n                odd_num = i;\n                odd_found = true;\n            }\n        }\n        if even_found && odd_found {\n            break;\n        }\n    }\n    even_num - odd_num",
    "    let mut even_num = 0;\n    let mut odd_num = 0;\n    let mut even_flag = false;\n    let mut odd_flag = false;\n    for i in list1 {\n        if i % 2 == 0 {\n            if !even_flag {\n                even_num = i;\n                even_flag = true;\n            }\n        } else {\n            if !odd_flag {\n                odd_num = i;\n                odd_flag = true;\n            }\n        }\n    }\n    even_num - odd_num",
    "    let mut even = None;\n    let mut odd = None;\n    for i in list1 {\n        if i % 2 == 0 {\n            if even.is_none() {\n                even = Some(i);\n            }\n        } else {\n            if odd.is_none() {\n                odd = Some(i);\n            }\n        }\n        if even.is_some() && odd.is_some() {\n            break;\n        }\n    }\n    match (even, odd) {\n        (Some(e), Some(o)) => e - o,\n        _ => 0,\n    }",
    "    let mut even = None;\n    let mut odd = None;\n    for i in list1 {\n        if i % 2 == 0 {\n            if even.is_none() {\n                even = Some(i);\n            }\n        } else {\n            if odd.is_none() {\n                odd = Some(i);\n            }\n        }\n    }\n    let even = even.unwrap();\n    let odd = odd.unwrap();\n    even - odd",
    "    let mut even = None;\n    let mut odd = None;\n    for i in list1 {\n        if i % 2 == 0 {\n            if even.is_none() {\n                even = Some(i);\n            }\n        } else {\n            if odd.is_none() {\n                odd = Some(i);\n            }\n        }\n    }\n    even.unwrap() - odd.unwrap()",
    "    let mut even = None;\n    let mut odd = None;\n    for i in list1 {\n        if i % 2 == 0 {\n            even = Some(i);\n            break;\n        }\n    }\n    for i in list1 {\n        if i % 2 != 0 {\n            odd = Some(i);\n            break;\n        }\n    }\n    if even.is_some() && odd.is_some() {\n        even.unwrap() - odd.unwrap()\n    } else {\n        0\n    }",
    "    let mut even: Option<isize> = None;\n    let mut odd: Option<isize> = None;\n    for i in list1 {\n        if i % 2 == 0 {\n            even = Some(i);\n            break;\n        }\n    }\n    for i in list1 {\n        if i % 2 != 0 {\n            odd = Some(i);\n            break;\n        }\n    }\n    match (even, odd) {\n        (Some(e), Some(o)) => e - o,\n        _ => 0,\n    }",
    "    let mut even_num = 0;\n    let mut odd_num = 0;\n    for i in list1 {\n        if i % 2 == 0 {\n            even_num = i;\n            break;\n        }\n    }\n    for i in list1 {\n        if i % 2 != 0 {\n            odd_num = i;\n            break;\n        }\n    }\n    even_num - odd_num",
    "    let mut even_num = 0;\n    let mut odd_num = 0;\n    for num in list1 {\n        if num % 2 == 0 {\n            even_num = num;\n            break;\n        }\n    }\n    for num in list1 {\n        if num % 2 != 0 {\n            odd_num = num;\n            break;\n        }\n    }\n    even_num - odd_num",
    "    let mut even = None;\n    let mut odd = None;\n    for i in list1 {\n        if i % 2 == 0 {\n            even = Some(i);\n            break;\n        }\n    }\n    for i in list1 {\n        if i % 2 != 0 {\n            odd = Some(i);\n            break;\n        }\n    }\n    match (even, odd) {\n        (Some(e), Some(o)) => e - o,\n        _ => 0,\n    }",
    "    let mut even = None;\n    let mut odd = None;\n    for i in list1 {\n        if i % 2 == 0 {\n            even = Some(i);\n            break;\n        }\n    }\n    for i in list1 {\n        if i % 2 == 1 {\n            odd = Some(i);\n            break;\n        }\n    }\n    match (even, odd) {\n        (Some(e), Some(o)) => e - o,\n        _ => 0,\n    }",
    "    let mut even = None;\n    let mut odd = None;\n    for x in list1 {\n        if x % 2 == 0 {\n            if even.is_none() {\n                even = Some(x);\n            }\n        } else {\n            if odd.is_none() {\n                odd = Some(x);\n            }\n        }\n    }\n    even.unwrap_or(0) - odd.unwrap_or(0)",
    "    let mut even: Option<isize> = None;\n    let mut odd: Option<isize> = None;\n    for i in list1 {\n        if i % 2 == 0 {\n            if even.is_none() {\n                even = Some(i);\n            }\n        } else {\n            if odd.is_none() {\n                odd = Some(i);\n            }\n        }\n    }\n    even.unwrap() - odd.unwrap()",
    "    let mut even_num = None;\n    let mut odd_num = None;\n    for num in list1 {\n        if num % 2 == 0 {\n            if even_num.is_none() {\n                even_num = Some(num);\n            }\n        } else {\n            if odd_num.is_none() {\n                odd_num = Some(num);\n            }\n        }\n    }\n    even_num.unwrap() - odd_num.unwrap()",
    "    let mut even = None;\n    let mut odd = None;\n    for i in list1 {\n        if i % 2 == 0 {\n            if even.is_none() {\n                even = Some(i);\n            }\n        } else {\n            if odd.is_none() {\n                odd = Some(i);\n            }\n        }\n    }\n    even.unwrap() - odd.unwrap()"
  ]
}
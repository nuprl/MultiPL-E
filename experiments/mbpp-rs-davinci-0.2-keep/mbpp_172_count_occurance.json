{
  "name": "mbpp_172_count_occurance",
  "language": "rs",
  "prompt": "/// Write a function to count the number of occurence of the string 'std' in a given string.\nfn count_occurance(s: String) -> isize {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_172_count_occurance.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\nfn main() {\n    let candidate = count_occurance;\n    assert_eq!(candidate(String::from(\"letstdlenstdporstd\")), 3);\n    assert_eq!(candidate(String::from(\"truststdsolensporsd\")), 1);\n    assert_eq!(candidate(String::from(\"makestdsostdworthit\")), 2);\n    assert_eq!(candidate(String::from(\"stds\")), 1);\n    assert_eq!(candidate(String::from(\"\")), 0);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut count = 0;\n    let mut i = 0;\n    while i < s.len() {\n        if &s[i..i+3] == \"std\" {\n            count += 1;\n            i += 3;\n        } else {\n            i += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    let mut i = 0;\n    while i < s.len() - 2 {\n        if &s[i..i + 3] == \"std\" {\n            count += 1;\n        }\n        i += 1;\n    }\n    count",
    "    let mut count = 0;\n    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n    let mut z = 0;\n    for c in s.chars() {\n        match c {\n            'a' => i += 1,\n            'b' => j += 1,\n            'c' => k += 1,\n            'd' => l += 1,\n            'e' => m += 1,\n            'f' => n += 1,\n            'g' => o += 1,\n            'h' => p += 1,\n            'i' => q += 1,\n            'j' => r += 1,\n            'k' => s += 1,\n            'l' => t += 1,\n            'm' => u += 1,\n            'n' => v += 1,\n            'o' => w += 1,\n            'p' => x += 1,\n            'q' => y += 1,\n            'r' => z += 1,\n            _ => {}\n        }\n    }\n    count = i + j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y + z;\n    count",
    "    let mut count = 0;\n    let mut i = 0;\n    while i < s.len() {\n        if s[i..i+3] == \"std\" {\n            count += 1;\n        }\n        i += 1;\n    }\n    count",
    "    let mut count = 0;\n    let mut i = 0;\n    while i < s.len() {\n        if &s[i..i+3] == \"std\" {\n            count += 1;\n            i += 3;\n        } else {\n            i += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for _ in s.match_indices(\"std\") {\n        count += 1;\n    }\n    count",
    "    let mut count = 0;\n    let mut i = 0;\n    while i < s.len() {\n        if s.as_bytes()[i] == 's' as u8 {\n            if s.as_bytes()[i + 1] == 't' as u8 {\n                if s.as_bytes()[i + 2] == 'd' as u8 {\n                    count += 1;\n                }\n            }\n        }\n        i += 1;\n    }\n    count",
    "    let mut count = 0;\n    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n    let mut z = 0;\n    let mut a = 0;\n    let mut b = 0;\n    let mut c = 0;\n    let mut d = 0;\n    let mut e = 0;\n    let mut f = 0;\n    let mut g = 0;\n    let mut h = 0;\n    let mut ii = 0;\n    let mut jj = 0;\n    let mut kk = 0;\n    let mut ll = 0;\n    let mut mm = 0;\n    let mut nn = 0;\n    let mut oo = 0;\n    let mut pp = 0;\n    let mut qq = 0;\n    let mut rr = 0;\n    let mut ss = 0;\n    let mut tt = 0;\n    let mut uu = 0;\n    let mut vv = 0;\n    let mut ww = 0;\n    let mut xx = 0;\n    let mut yy = 0;\n    let mut zz = 0;\n    let mut aa = 0;\n    let mut bb = 0;\n    let mut cc = 0;\n    let mut dd = 0;\n    let mut ee = 0;\n    let mut ff = 0;\n    let mut gg = 0;\n    let mut hh = 0;\n    let mut iii = 0;\n    let mut jjj = 0;\n    let mut kkk = 0;\n    let mut lll = 0;\n    let mut mmm = 0;\n    let mut nnn = 0;\n    let mut ooo = 0;\n    let mut ppp = 0;",
    "    let mut count = 0;\n    let mut i = 0;\n    while i < s.len() {\n        if s[i..i+3] == \"std\" {\n            count += 1;\n            i += 3;\n        } else {\n            i += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    let mut i = 0;\n    while i < s.len() {\n        if s[i..].starts_with(\"std\") {\n            count += 1;\n            i += 3;\n        } else {\n            i += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n    let mut z = 0;\n    let mut a = 0;\n    let mut b = 0;\n    let mut c = 0;\n    let mut d = 0;\n    let mut e = 0;\n    let mut f = 0;\n    let mut g = 0;\n    let mut h = 0;\n    let mut ii = 0;\n    let mut jj = 0;\n    let mut kk = 0;\n    let mut ll = 0;\n    let mut mm = 0;\n    let mut nn = 0;\n    let mut oo = 0;\n    let mut pp = 0;\n    let mut qq = 0;\n    let mut rr = 0;\n    let mut ss = 0;\n    let mut tt = 0;\n    let mut uu = 0;\n    let mut vv = 0;\n    let mut ww = 0;\n    let mut xx = 0;\n    let mut yy = 0;\n    let mut zz = 0;\n    let mut aa = 0;\n    let mut bb = 0;\n    let mut cc = 0;\n    let mut dd = 0;\n    let mut ee = 0;\n    let mut ff = 0;\n    let mut gg = 0;\n    let mut hh = 0;\n    let mut iii = 0;\n    let mut jjj = 0;\n    let mut kkk = 0;\n    let mut lll = 0;\n    let mut mmm = 0;\n    let mut nnn = 0;\n    let mut ooo = 0;\n    let mut ppp = 0;",
    "    let mut count = 0;\n    let mut i = 0;\n    while i < s.len() {\n        if &s[i..i+3] == \"std\" {\n            count += 1;\n            i += 3;\n        } else {\n            i += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    let mut i = 0;\n    while i < s.len() {\n        if &s[i..i+3] == \"std\" {\n            count += 1;\n        }\n        i += 1;\n    }\n    count",
    "    let mut count = 0;\n    let mut i = 0;\n    while i < s.len() {\n        if &s[i..i + 3] == \"std\" {\n            count += 1;\n            i += 3;\n        } else {\n            i += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    let mut i = 0;\n    while i < s.len() {\n        if s.as_bytes()[i] == 's' as u8 {\n            if s.as_bytes()[i + 1] == 't' as u8 {\n                if s.as_bytes()[i + 2] == 'd' as u8 {\n                    count += 1;\n                }\n            }\n        }\n        i += 1;\n    }\n    count",
    "    let mut count = 0;\n    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n    let mut z = 0;\n    let mut a = 0;\n    let mut b = 0;\n    let mut c = 0;\n    let mut d = 0;\n    let mut e = 0;\n    let mut f = 0;\n    let mut g = 0;\n    let mut h = 0;\n    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n    let mut z = 0;\n    let mut a = 0;\n    let mut b = 0;\n    let mut c = 0;\n    let mut d = 0;\n    let mut e = 0;\n    let mut f = 0;\n    let mut g = 0;\n    let mut h = 0;\n    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;",
    "    let mut count = 0;\n    let mut i = 0;\n    while i < s.len() {\n        if &s[i..i + 3] == \"std\" {\n            count += 1;\n            i += 3;\n        } else {\n            i += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    let mut i = 0;\n    while i < s.len() {\n        if &s[i..i+3] == \"std\" {\n            count += 1;\n            i += 3;\n        } else {\n            i += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    let mut i = 0;\n    while i < s.len() {\n        if &s[i..i + 3] == \"std\" {\n            count += 1;\n            i += 3;\n        } else {\n            i += 1;\n        }\n    }\n    count",
    "    let mut count = 0;\n    for i in 0..s.len() {\n        if s[i..i+3] == \"std\" {\n            count += 1;\n        }\n    }\n    count"
  ]
}
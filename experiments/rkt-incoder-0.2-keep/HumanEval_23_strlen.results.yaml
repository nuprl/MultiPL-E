name: HumanEval_23_strlen
language: racket
results:
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (length (string->list\
    \ string)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ strlen))\n    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate\
    \ \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgzv4w130.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgzv4w130.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgzv4w130.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpuod0tfjy.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpuod0tfjy.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpuod0tfjy.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpbsm2tcu6.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpbsm2tcu6.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpbsm2tcu6.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpi4x4vlj3.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpi4x4vlj3.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpi4x4vlj3.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp2krf974b.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp2krf974b.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp2krf974b.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length (string->list string))\n      0))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (null? string)\n\
    \      0\n      (+ 1 (strlen (substring string 0 (string-length string))))))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate strlen))\n\
    \    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n\
    \    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length (string->list string))\n      0))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdmf0rz28.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdmf0rz28.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdmf0rz28.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length (string->list string))\n      0))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (empty? string)\n\
    \      0\n      (+ 1 (strlen (rest string)))))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgf6lt1ap.rkt:18:4\n\
    \nrest: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpgf6lt1ap.rkt:19:4\n\nrest: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"x\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpgf6lt1ap.rkt:20:4\n\nrest:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"asdasnakj\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpv99sfbti.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpv99sfbti.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpv99sfbti.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpu76fbe8v.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpu76fbe8v.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpu76fbe8v.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphblat0qk.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphblat0qk.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphblat0qk.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppeglyoqk.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppeglyoqk.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppeglyoqk.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpolnrtsao.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpolnrtsao.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpolnrtsao.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (null? string)\n\
    \      0\n      (+ 1 (strlen (substring string 0 (string-length string))))))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate strlen))\n\
    \    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n\
    \    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpauibuzyk.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpauibuzyk.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpauibuzyk.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphjzra0w1.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphjzra0w1.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphjzra0w1.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (length (string->list\
    \ string)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ strlen))\n    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate\
    \ \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphrly47z4.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphrly47z4.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphrly47z4.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg14lek67.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg14lek67.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg14lek67.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (null? string)\n\
    \      0\n      (+ 1 (strlen (substring string 0 (string-length string))))))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate strlen))\n\
    \    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n\
    \    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length (string->list string))\n      0))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (empty? string)\n\
    \      0\n      (+ 1 (strlen (rest string)))))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpu7fx2xnx.rkt:18:4\n\
    \nrest: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpu7fx2xnx.rkt:19:4\n\nrest: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"x\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpu7fx2xnx.rkt:20:4\n\nrest:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"asdasnakj\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpel6xh8f6.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpel6xh8f6.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpel6xh8f6.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpzj931ce4.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpzj931ce4.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpzj931ce4.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp4_bawk2n.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp4_bawk2n.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp4_bawk2n.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length (string->list string))\n      0))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp60u5dr54.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp60u5dr54.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp60u5dr54.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe_5lg1is.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe_5lg1is.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe_5lg1is.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppf8wz0e_.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppf8wz0e_.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppf8wz0e_.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfusos4u4.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfusos4u4.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfusos4u4.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7s79_uty.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7s79_uty.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7s79_uty.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length (string->list string))\n      0))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg4sbpndr.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg4sbpndr.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg4sbpndr.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpui8z6jzu.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpui8z6jzu.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpui8z6jzu.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpybrggsap.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpybrggsap.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpybrggsap.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length (string->list string))\n      0))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpx7k5ay92.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpx7k5ay92.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpx7k5ay92.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp6ifsnocg.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp6ifsnocg.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp6ifsnocg.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp630mrvo0.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp630mrvo0.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp630mrvo0.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp8vteo4nw.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp8vteo4nw.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp8vteo4nw.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp4506rfq1.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp4506rfq1.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp4506rfq1.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp0das_m16.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp0das_m16.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp0das_m16.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpevbz8in3.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpevbz8in3.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpevbz8in3.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpt7nt4oh9.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpt7nt4oh9.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpt7nt4oh9.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpivnm741i.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpivnm741i.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpivnm741i.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length (string->list string))\n      0))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpagkr13x4.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpagkr13x4.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpagkr13x4.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpxhx57een.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpxhx57een.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpxhx57een.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_7wcuml7.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_7wcuml7.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_7wcuml7.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpq3oqi55x.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpq3oqi55x.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpq3oqi55x.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpr_3ayye3.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpr_3ayye3.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpr_3ayye3.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length (string->list string))\n      0))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpa3fje1uj.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpa3fje1uj.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpa3fje1uj.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (null? string)\n\
    \      0\n      (+ 1 (strlen (substring string 0 (string-length string))))))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate strlen))\n\
    \    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n\
    \    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqr2anpob.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqr2anpob.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqr2anpob.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp70cm88kl.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp70cm88kl.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp70cm88kl.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkkxmdept.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkkxmdept.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkkxmdept.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpiloca_nw.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpiloca_nw.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpiloca_nw.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplj9kfgcf.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplj9kfgcf.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplj9kfgcf.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length (string->list string))\n      0))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpzs4jxlxt.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpzs4jxlxt.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpzs4jxlxt.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpnw4eqczs.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpnw4eqczs.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpnw4eqczs.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkrsd6m8k.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkrsd6m8k.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkrsd6m8k.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length (string->list string))\n      0))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpll45lit3.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpll45lit3.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpll45lit3.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (length (string->list\
    \ string)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ strlen))\n    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate\
    \ \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (empty? string)\n\
    \      0\n      (+ 1 (strlen (rest string)))))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7tf7p3ew.rkt:18:4\n\
    \nrest: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmp7tf7p3ew.rkt:19:4\n\nrest: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"x\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmp7tf7p3ew.rkt:20:4\n\nrest:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"asdasnakj\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpet2pxg7p.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpet2pxg7p.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpet2pxg7p.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_i67r1kj.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_i67r1kj.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_i67r1kj.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfvjlnp0h.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfvjlnp0h.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfvjlnp0h.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmps3sbevnx.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmps3sbevnx.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmps3sbevnx.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpjyvovfu3.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpjyvovfu3.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpjyvovfu3.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdut_vq75.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdut_vq75.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdut_vq75.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpmjh8ef_v.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpmjh8ef_v.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpmjh8ef_v.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdax5mitv.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdax5mitv.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdax5mitv.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7rwsjath.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7rwsjath.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7rwsjath.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (empty? string)\n\
    \      0\n      (+ 1 (strlen (rest string)))))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvpxwaxos.rkt:18:4\n\
    \nrest: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpvpxwaxos.rkt:19:4\n\nrest: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"x\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpvpxwaxos.rkt:20:4\n\nrest:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"asdasnakj\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpnom_n4hz.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpnom_n4hz.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpnom_n4hz.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (null? string)\n\
    \      0\n      (+ 1 (strlen (rest string)))))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptqa2lmm8.rkt:18:4\n\
    \nrest: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmptqa2lmm8.rkt:19:4\n\nrest: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"x\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmptqa2lmm8.rkt:20:4\n\nrest:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"asdasnakj\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe60x2inm.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe60x2inm.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe60x2inm.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (null? string)\n\
    \      0\n      (+ 1 (strlen (substring string 0 (string-length string))))))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate strlen))\n\
    \    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n\
    \    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (null? string)\n\
    \      0\n      (+ 1 (strlen (rest string)))))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpez027xpn.rkt:18:4\n\
    \nrest: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpez027xpn.rkt:19:4\n\nrest: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"x\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpez027xpn.rkt:20:4\n\nrest:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"asdasnakj\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp4r1bgpja.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp4r1bgpja.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp4r1bgpja.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppo9qoh9p.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppo9qoh9p.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppo9qoh9p.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (length (string->list\
    \ string)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ strlen))\n    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate\
    \ \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp47ocsobw.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp47ocsobw.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp47ocsobw.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpigcom04r.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpigcom04r.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpigcom04r.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpt909_dn2.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpt909_dn2.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpt909_dn2.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (empty? string)\n\
    \      0\n      (+ 1 (strlen (rest string))))) ;; #lang racket\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal?\
    \ (candidate \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal?\
    \ (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp01bxr481.rkt:18:4\n\
    \nrest: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmp01bxr481.rkt:19:4\n\nrest: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"x\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmp01bxr481.rkt:20:4\n\nrest:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"asdasnakj\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (length (string-length\
    \ string)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ strlen))\n    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate\
    \ \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpjjx0be_2.rkt:16:4\n\
    \nlength: contract violation\n  expected: list?\n  given: 0\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpjjx0be_2.rkt:17:4\n\
    \nlength: contract violation\n  expected: list?\n  given: 1\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpjjx0be_2.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: 9\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfl6812x1.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfl6812x1.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfl6812x1.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpq51_01jc.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpq51_01jc.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpq51_01jc.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp52i98el0.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp52i98el0.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp52i98el0.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpf90vflj1.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpf90vflj1.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpf90vflj1.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpbkzojbhw.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpbkzojbhw.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpbkzojbhw.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp133yit92.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp133yit92.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp133yit92.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpv0g2cewi.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpv0g2cewi.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpv0g2cewi.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmph7b62qto.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmph7b62qto.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmph7b62qto.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpuqocfao5.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpuqocfao5.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpuqocfao5.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (length (string->list\
    \ string)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ strlen))\n    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate\
    \ \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length (string->list string))\n      0))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpuzzp72ik.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpuzzp72ik.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpuzzp72ik.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpsw58mucx.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpsw58mucx.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpsw58mucx.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphrc78252.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphrc78252.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphrc78252.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqysna569.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqysna569.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqysna569.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpk2j4r71b.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpk2j4r71b.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpk2j4r71b.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (null? string)\n\
    \      0\n      (+ 1 (strlen (substring string 0 (string-length string))))))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate strlen))\n\
    \    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n\
    \    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplr2mfj5n.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplr2mfj5n.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplr2mfj5n.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp57l8ejg9.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp57l8ejg9.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp57l8ejg9.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp6z5ywe6c.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp6z5ywe6c.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp6z5ywe6c.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp3e4uapc.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp3e4uapc.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp3e4uapc.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpem_7mhbb.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpem_7mhbb.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpem_7mhbb.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptpx6ijch.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptpx6ijch.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptpx6ijch.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (null? string)\n\
    \      0\n      (+ 1 (strlen (substring string 0 (string-length string))))))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate strlen))\n\
    \    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n\
    \    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplmvlpx_q.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplmvlpx_q.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplmvlpx_q.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp63xr930.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp63xr930.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp63xr930.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (empty? string)\n\
    \      0\n      (+ 1 (strlen (rest string)))))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppw49kn8j.rkt:18:4\n\
    \nrest: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmppw49kn8j.rkt:19:4\n\nrest: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"x\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmppw49kn8j.rkt:20:4\n\nrest:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"asdasnakj\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_z6m7uj7.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_z6m7uj7.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_z6m7uj7.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (length (string->list\
    \ string)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ strlen))\n    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate\
    \ \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpwlxbnzdm.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpwlxbnzdm.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpwlxbnzdm.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (empty? string)\n\
    \      0\n      (+ 1 (strlen (rest string)))))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp21941wfs.rkt:18:4\n\
    \nrest: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmp21941wfs.rkt:19:4\n\nrest: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"x\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmp21941wfs.rkt:20:4\n\nrest:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"asdasnakj\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (length (string->list\
    \ string)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ strlen))\n    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate\
    \ \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpc_cnx2mi.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpc_cnx2mi.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpc_cnx2mi.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg0spm1hx.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg0spm1hx.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg0spm1hx.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpigti5esy.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpigti5esy.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpigti5esy.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpj6drvzfn.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpj6drvzfn.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpj6drvzfn.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (empty? string)\n\
    \      0\n      (+ 1 (strlen (rest string)))))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp81o0df6g.rkt:18:4\n\
    \nrest: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmp81o0df6g.rkt:19:4\n\nrest: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"x\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmp81o0df6g.rkt:20:4\n\nrest:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"asdasnakj\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp2njd3szr.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp2njd3szr.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp2njd3szr.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpnml5v6qj.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpnml5v6qj.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpnml5v6qj.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpywsosmfc.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpywsosmfc.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpywsosmfc.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqd9nx3c2.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqd9nx3c2.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqd9nx3c2.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpz0gia3zl.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpz0gia3zl.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpz0gia3zl.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptjumt1_2.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptjumt1_2.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptjumt1_2.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpemdlxha_.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpemdlxha_.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpemdlxha_.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpf1ppqfkk.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpf1ppqfkk.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpf1ppqfkk.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmput_ca4et.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmput_ca4et.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmput_ca4et.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7y56h9ut.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7y56h9ut.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7y56h9ut.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpn291rxbu.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpn291rxbu.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpn291rxbu.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpf4i1ca3j.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpf4i1ca3j.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpf4i1ca3j.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp790nwu0d.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp790nwu0d.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp790nwu0d.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp1h4qazki.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp1h4qazki.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp1h4qazki.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpr6h4htbb.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpr6h4htbb.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpr6h4htbb.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvjggun31.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvjggun31.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvjggun31.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (empty? string)\n\
    \      0\n      (+ 1 (strlen (rest string)))))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpwcbbee22.rkt:18:4\n\
    \nrest: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpwcbbee22.rkt:19:4\n\nrest: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"x\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpwcbbee22.rkt:20:4\n\nrest:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"asdasnakj\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (length (string->list\
    \ string)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ strlen))\n    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate\
    \ \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (length (string-length\
    \ string)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ strlen))\n    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate\
    \ \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppkkqq8el.rkt:16:4\n\
    \nlength: contract violation\n  expected: list?\n  given: 0\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppkkqq8el.rkt:17:4\n\
    \nlength: contract violation\n  expected: list?\n  given: 1\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppkkqq8el.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: 9\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (empty? string)\n\
    \      0\n      (+ 1 (strlen (rest string)))))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp29zu2dds.rkt:18:4\n\
    \nrest: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmp29zu2dds.rkt:19:4\n\nrest: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"x\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmp29zu2dds.rkt:20:4\n\nrest:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"asdasnakj\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpq7cb7xeo.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpq7cb7xeo.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpq7cb7xeo.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (empty? string)\n\
    \      0\n      (+ 1 (strlen (rest string)))))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmph0j0q5ju.rkt:18:4\n\
    \nrest: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmph0j0q5ju.rkt:19:4\n\nrest: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"x\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmph0j0q5ju.rkt:20:4\n\nrest:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"asdasnakj\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (length (string->list\
    \ string)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ strlen))\n    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate\
    \ \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp5o672rmx.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp5o672rmx.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp5o672rmx.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpo2bz_1ib.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpo2bz_1ib.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpo2bz_1ib.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprevktw9o.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprevktw9o.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprevktw9o.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp5feb3r0r.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp5feb3r0r.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp5feb3r0r.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpk__0w54v.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpk__0w54v.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpk__0w54v.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpo4qfkq59.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpo4qfkq59.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpo4qfkq59.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (length (string->list\
    \ string)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ strlen))\n    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate\
    \ \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpo3z7t_yr.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpo3z7t_yr.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpo3z7t_yr.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpf7ew8xb8.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpf7ew8xb8.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpf7ew8xb8.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (string-length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (length (string->list\
    \ string)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ strlen))\n    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate\
    \ \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptm4i1jny.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptm4i1jny.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptm4i1jny.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdlq80jpv.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdlq80jpv.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdlq80jpv.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpbx5evvxl.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpbx5evvxl.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpbx5evvxl.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (null? string)\n\
    \      0\n      (+ 1 (strlen (substring string 0 (string-length string))))))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate strlen))\n\
    \    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n\
    \    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpxv_3yrz_.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpxv_3yrz_.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpxv_3yrz_.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp63wh0bgj.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp63wh0bgj.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp63wh0bgj.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (empty? string)\n\
    \      0\n      (+ 1 (strlen (rest string)))))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate strlen))\n    (check-equal? (candidate\
    \ \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate\
    \ \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_vf8t0qm.rkt:18:4\n\
    \nrest: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmp_vf8t0qm.rkt:19:4\n\nrest: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"x\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmp_vf8t0qm.rkt:20:4\n\nrest:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"asdasnakj\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp3_yweqjl.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp3_yweqjl.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp3_yweqjl.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpihtikjk_.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpihtikjk_.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpihtikjk_.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqtk9ucfl.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqtk9ucfl.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqtk9ucfl.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp29kshnq8.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp29kshnq8.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp29kshnq8.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp22fp9q3e.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp22fp9q3e.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp22fp9q3e.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpluvv9fcc.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpluvv9fcc.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpluvv9fcc.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (null? string)\n\
    \      0\n      (+ 1 (strlen (substring string 0 (string-length string))))))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate strlen))\n\
    \    (check-equal? (candidate \"\") 0)\n    (check-equal? (candidate \"x\") 1)\n\
    \    (check-equal? (candidate \"asdasnakj\") 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "#lang racket\n\n;; Return length of given string\n;; >>> strlen('')\n\
    ;; 0\n;; >>> strlen('abc')\n;; 3\n(define (strlen string)\n  (if (string? string)\n\
    \      (length string)\n      0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate strlen))\n    (check-equal? (candidate \"\") 0)\n  \
    \  (check-equal? (candidate \"x\") 1)\n    (check-equal? (candidate \"asdasnakj\"\
    ) 9)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprq2hx3dn.rkt:18:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprq2hx3dn.rkt:19:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"x\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprq2hx3dn.rkt:20:4\n\
    \nlength: contract violation\n  expected: list?\n  given: \"asdasnakj\"\n--------------------\n"
  exit_code: 0
  status: Exception

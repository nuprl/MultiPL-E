language: racket
name: HumanEval_60_sum_to_n
results:
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp06_vfzvp.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp06_vfzvp.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp06_vfzvp.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmp06_vfzvp.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx5o_0ftz.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx5o_0ftz.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx5o_0ftz.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx5o_0ftz.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqxmb23jj.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqxmb23jj.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqxmb23jj.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq2utna_9.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq2utna_9.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq2utna_9.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq2utna_9.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjuix4y7v.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjuix4y7v.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjuix4y7v.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 1)\n      n\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpyw9514pf.rkt:25:4\n\
    actual:     720\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpyw9514pf.rkt:26:4\nactual:\
    \     39916800\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpyw9514pf.rkt:27:4\nactual:     265252859812191058636308480000000\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpyw9514pf.rkt:28:4\nactual:\n  93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (define (sum-to-n n acc)\n    (if (= n 0)\n        acc\n        (sum-to-n\
    \ (- n 1) (+ acc n))))\n  (sum-to-n n 0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate sum_to_n))\n    (check-equal? (candidate 1) 1)\n   \
    \ (check-equal? (candidate 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal?\
    \ (candidate 30) 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeagatevk.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeagatevk.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeagatevk.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpulogsenq.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpulogsenq.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpulogsenq.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpulogsenq.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3p8weohw.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3p8weohw.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3p8weohw.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpm6qhme4e.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpm6qhme4e.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpm6qhme4e.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpm6qhme4e.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpm6qhme4e.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgk_zkyeu.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgk_zkyeu.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgk_zkyeu.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgk_zkyeu.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_3i7sxm8.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_3i7sxm8.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_3i7sxm8.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_3i7sxm8.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp44umvmxl.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp44umvmxl.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp44umvmxl.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaxd9suul.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaxd9suul.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaxd9suul.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe263u5yt.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe263u5yt.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe263u5yt.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe263u5yt.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe263u5yt.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsqfchlo3.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsqfchlo3.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsqfchlo3.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmxugo_xe.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmxugo_xe.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmxugo_xe.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmxugo_xe.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmxugo_xe.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (define (sum-to-n n acc)\n    (if (= n 0)\n        acc\n        (sum-to-n\
    \ (- n 1) (+ acc n))))\n  (sum-to-n n 0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate sum_to_n))\n    (check-equal? (candidate 1) 1)\n   \
    \ (check-equal? (candidate 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal?\
    \ (candidate 30) 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4pmw32kh.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4pmw32kh.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4pmw32kh.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp86hw5b44.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp86hw5b44.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp86hw5b44.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbjc4td9x.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbjc4td9x.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbjc4td9x.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbjc4td9x.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbjc4td9x.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2amb1xlh.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2amb1xlh.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2amb1xlh.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (* n n))))\n\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n\
    \    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n   \
    \ (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n  \
    \  (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpa5b3pcnc.rkt:25:4\n\
    actual:     3906\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpa5b3pcnc.rkt:26:4\nactual:\
    \     217010211\nexpected:   66\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpa5b3pcnc.rkt:27:4\nactual:\
    \     1442064057548547018035272769387370\nexpected:   465\n--------------------\n\
    --------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpa5b3pcnc.rkt:28:4\n\
    actual:\n  507373911120254594830541496424560440890295157132596284465550371974898507816772893037880970850304099586534815464656006987219026999699388353419528980646327983900\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfmp7j4h8.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfmp7j4h8.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfmp7j4h8.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfmp7j4h8.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfmp7j4h8.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpm3mebip7.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpm3mebip7.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpm3mebip7.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzfkg7f2v.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzfkg7f2v.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzfkg7f2v.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptd5exp4d.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptd5exp4d.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptd5exp4d.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptd5exp4d.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptd5exp4d.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfa7yyiu_.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfa7yyiu_.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfa7yyiu_.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2l4aytzv.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2l4aytzv.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp2l4aytzv.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmp2l4aytzv.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (* n 1))))\n\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n\
    \    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n   \
    \ (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n  \
    \  (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpbieirwdl.rkt:25:4\n\
    actual:     1956\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpbieirwdl.rkt:26:4\nactual:\
    \     108505111\nexpected:   66\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpbieirwdl.rkt:27:4\nactual:\
    \     721032028774273509017636384693700\nexpected:   465\n--------------------\n\
    --------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpbieirwdl.rkt:28:4\n\
    actual:\n  253686955560127297415270748212280220445147578566298142232775185987449253908386446518940485425152049793267407732328003493609513499849694176709764490323163992000\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2o34nf_u.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2o34nf_u.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2o34nf_u.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2o34nf_u.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2o34nf_u.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 1)\n      n\n      (+ (* (- n 1) (+ n 1))\n         (sum_to_n\
    \ (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal?\
    \ (candidate 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate\
    \ 30) 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe9n6rvbb.rkt:26:4

    actual:     86

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe9n6rvbb.rkt:27:4

    actual:     496

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe9n6rvbb.rkt:28:4

    actual:     9426

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe9n6rvbb.rkt:29:4

    actual:     338251

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpthd0ndxq.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpthd0ndxq.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpthd0ndxq.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpthd0ndxq.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp64mn9cwi.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp64mn9cwi.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp64mn9cwi.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9nqft9nv.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9nqft9nv.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9nqft9nv.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpa60nun5z.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpa60nun5z.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpa60nun5z.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpa60nun5z.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7d02a7io.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7d02a7io.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7d02a7io.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpopkz_1f7.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpopkz_1f7.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpopkz_1f7.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpopkz_1f7.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4n2i43ez.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4n2i43ez.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4n2i43ez.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpcq9yismi.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpcq9yismi.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpcq9yismi.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpcq9yismi.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6hi9tkyi.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6hi9tkyi.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6hi9tkyi.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6hi9tkyi.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6hi9tkyi.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg6lu5zbo.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg6lu5zbo.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg6lu5zbo.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg6lu5zbo.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg6lu5zbo.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper\
    \ (sub1 n) (+ acc (sub1 n)))))\n  (helper n 0))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate sum_to_n))\n    (check-equal? (candidate\
    \ 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal? (candidate 11)\
    \ 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal? (candidate 100)\
    \ 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp37p5_tsj.rkt:26:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp37p5_tsj.rkt:27:4

    actual:     15

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp37p5_tsj.rkt:28:4

    actual:     55

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp37p5_tsj.rkt:29:4

    actual:     435

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp37p5_tsj.rkt:30:4

    actual:     4950

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3gvry7lz.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3gvry7lz.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3gvry7lz.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3gvry7lz.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3gvry7lz.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpwcly62ao.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpwcly62ao.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpwcly62ao.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpwcly62ao.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjm_gyy66.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjm_gyy66.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjm_gyy66.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjm_gyy66.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (* n 1))))\n\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n\
    \    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n   \
    \ (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n  \
    \  (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4jybjoni.rkt:25:4\n\
    actual:     1956\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4jybjoni.rkt:26:4\nactual:\
    \     108505111\nexpected:   66\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4jybjoni.rkt:27:4\nactual:\
    \     721032028774273509017636384693700\nexpected:   465\n--------------------\n\
    --------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4jybjoni.rkt:28:4\n\
    actual:\n  253686955560127297415270748212280220445147578566298142232775185987449253908386446518940485425152049793267407732328003493609513499849694176709764490323163992000\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxbsl54_0.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxbsl54_0.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxbsl54_0.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2re3rcpf.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2re3rcpf.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp2re3rcpf.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmp2re3rcpf.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpu2qupfcs.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpu2qupfcs.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpu2qupfcs.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7kimd_zn.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7kimd_zn.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7kimd_zn.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7kimd_zn.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxggxn6b1.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxggxn6b1.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxggxn6b1.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxggxn6b1.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw5tdm8tq.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw5tdm8tq.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw5tdm8tq.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1pgf6tkz.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1pgf6tkz.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1pgf6tkz.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1pgf6tkz.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1pgf6tkz.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 1)\n      n\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp286_y5kx.rkt:25:4\n\
    actual:     720\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp286_y5kx.rkt:26:4\nactual:\
    \     39916800\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp286_y5kx.rkt:27:4\nactual:     265252859812191058636308480000000\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmp286_y5kx.rkt:28:4\nactual:\n  93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (* n n))))\n\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n\
    \    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n   \
    \ (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n  \
    \  (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppo9nb1pl.rkt:25:4\n\
    actual:     3906\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmppo9nb1pl.rkt:26:4\nactual:\
    \     217010211\nexpected:   66\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmppo9nb1pl.rkt:27:4\nactual:\
    \     1442064057548547018035272769387370\nexpected:   465\n--------------------\n\
    --------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppo9nb1pl.rkt:28:4\n\
    actual:\n  507373911120254594830541496424560440890295157132596284465550371974898507816772893037880970850304099586534815464656006987219026999699388353419528980646327983900\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv4yizyno.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv4yizyno.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv4yizyno.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4en8bql1.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4en8bql1.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4en8bql1.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7r_fzs8r.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7r_fzs8r.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp7r_fzs8r.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmp7r_fzs8r.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (* n 1))))\n\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n\
    \    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n   \
    \ (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n  \
    \  (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ole88ks.rkt:25:4\n\
    actual:     1956\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ole88ks.rkt:26:4\nactual:\
    \     108505111\nexpected:   66\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ole88ks.rkt:27:4\nactual:\
    \     721032028774273509017636384693700\nexpected:   465\n--------------------\n\
    --------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ole88ks.rkt:28:4\n\
    actual:\n  253686955560127297415270748212280220445147578566298142232775185987449253908386446518940485425152049793267407732328003493609513499849694176709764490323163992000\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (define (sum-to-n n sum)\n    (if (= n 0)\n        sum\n        (sum-to-n\
    \ (- n 1) (+ sum n))))\n  (sum-to-n n 0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate sum_to_n))\n    (check-equal? (candidate 1) 1)\n   \
    \ (check-equal? (candidate 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal?\
    \ (candidate 30) 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppwbm54mh.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppwbm54mh.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppwbm54mh.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvhl5pe1.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvhl5pe1.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvhl5pe1.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvhl5pe1.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvhl5pe1.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc1o5ssre.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc1o5ssre.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc1o5ssre.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc1o5ssre.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc1o5ssre.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp285rmnma.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp285rmnma.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp285rmnma.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmp285rmnma.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgvqz390h.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgvqz390h.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgvqz390h.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgvqz390h.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgvqz390h.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_1v8i8lb.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_1v8i8lb.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_1v8i8lb.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpo4v_faq_.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpo4v_faq_.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpo4v_faq_.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpo4v_faq_.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsw604pfx.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsw604pfx.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsw604pfx.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper\
    \ (sub1 n) (+ acc (sub1 n)))))\n  (helper n 0))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate sum_to_n))\n    (check-equal? (candidate\
    \ 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal? (candidate 11)\
    \ 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal? (candidate 100)\
    \ 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbqnozkah.rkt:26:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbqnozkah.rkt:27:4

    actual:     15

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbqnozkah.rkt:28:4

    actual:     55

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbqnozkah.rkt:29:4

    actual:     435

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbqnozkah.rkt:30:4

    actual:     4950

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpebxs_dfq.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpebxs_dfq.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpebxs_dfq.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpebxs_dfq.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnqy5_4tl.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnqy5_4tl.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnqy5_4tl.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnqy5_4tl.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnqy5_4tl.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (define (sum-to-n n acc)\n    (if (= n 0)\n        acc\n        (sum-to-n\
    \ (- n 1) (+ acc n))))\n  (sum-to-n n 0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate sum_to_n))\n    (check-equal? (candidate 1) 1)\n   \
    \ (check-equal? (candidate 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal?\
    \ (candidate 30) 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmptxgnp5m9.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmptxgnp5m9.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmptxgnp5m9.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmptxgnp5m9.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp04h7w59e.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp04h7w59e.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp04h7w59e.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp04h7w59e.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp04h7w59e.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmplkzc5zue.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmplkzc5zue.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmplkzc5zue.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmplkzc5zue.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (* n n))))\n\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n\
    \    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n   \
    \ (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n  \
    \  (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpjf6gt9b2.rkt:25:4\n\
    actual:     3906\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpjf6gt9b2.rkt:26:4\nactual:\
    \     217010211\nexpected:   66\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpjf6gt9b2.rkt:27:4\nactual:\
    \     1442064057548547018035272769387370\nexpected:   465\n--------------------\n\
    --------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpjf6gt9b2.rkt:28:4\n\
    actual:\n  507373911120254594830541496424560440890295157132596284465550371974898507816772893037880970850304099586534815464656006987219026999699388353419528980646327983900\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv3gzmidc.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv3gzmidc.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv3gzmidc.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpooqzx7a_.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpooqzx7a_.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpooqzx7a_.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpnhcw7zjf.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpnhcw7zjf.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpnhcw7zjf.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpnhcw7zjf.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpf2bs5_d9.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpf2bs5_d9.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpf2bs5_d9.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpf2bs5_d9.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp24_f5vj1.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp24_f5vj1.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp24_f5vj1.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmp24_f5vj1.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppjm72av_.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppjm72av_.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppjm72av_.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppjm72av_.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 1)\n      n\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp56_sf8m6.rkt:25:4\n\
    actual:     720\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp56_sf8m6.rkt:26:4\nactual:\
    \     39916800\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp56_sf8m6.rkt:27:4\nactual:     265252859812191058636308480000000\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmp56_sf8m6.rkt:28:4\nactual:\n  93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (* n n))))\n\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n\
    \    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n   \
    \ (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n  \
    \  (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmphjbx097m.rkt:25:4\n\
    actual:     3906\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmphjbx097m.rkt:26:4\nactual:\
    \     217010211\nexpected:   66\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmphjbx097m.rkt:27:4\nactual:\
    \     1442064057548547018035272769387370\nexpected:   465\n--------------------\n\
    --------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmphjbx097m.rkt:28:4\n\
    actual:\n  507373911120254594830541496424560440890295157132596284465550371974898507816772893037880970850304099586534815464656006987219026999699388353419528980646327983900\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmb02507t.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmb02507t.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpmb02507t.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpmb02507t.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppjp5wgg0.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmppjp5wgg0.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmppjp5wgg0.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmppjp5wgg0.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpvw4tv40y.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpvw4tv40y.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpvw4tv40y.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpvw4tv40y.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpa68vu2um.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpa68vu2um.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpa68vu2um.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpa68vu2um.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpa68vu2um.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 1)\n      n\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuh7t14t3.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuh7t14t3.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuh7t14t3.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuh7t14t3.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2bx7gdtr.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2bx7gdtr.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2bx7gdtr.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2bx7gdtr.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2bx7gdtr.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper\
    \ (- n 1) (+ acc n))))\n  (helper n 0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate sum_to_n))\n    (check-equal? (candidate 1) 1)\n   \
    \ (check-equal? (candidate 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal?\
    \ (candidate 30) 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_zdfpxif.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_zdfpxif.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_zdfpxif.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpw26ydezd.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpw26ydezd.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpw26ydezd.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpw26ydezd.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1ey1fi8x.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1ey1fi8x.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1ey1fi8x.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphcwyz2ge.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphcwyz2ge.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphcwyz2ge.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphcwyz2ge.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphcwyz2ge.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp0xww1g5h.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp0xww1g5h.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp0xww1g5h.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmp0xww1g5h.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (define (sum-to-n n acc)\n    (if (= n 0)\n        acc\n        (sum-to-n\
    \ (- n 1) (+ acc n))))\n  (sum-to-n n 0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate sum_to_n))\n    (check-equal? (candidate 1) 1)\n   \
    \ (check-equal? (candidate 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal?\
    \ (candidate 30) 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (* n n))))\n\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n\
    \    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n   \
    \ (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n  \
    \  (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmptens050g.rkt:25:4\n\
    actual:     3906\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmptens050g.rkt:26:4\nactual:\
    \     217010211\nexpected:   66\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmptens050g.rkt:27:4\nactual:\
    \     1442064057548547018035272769387370\nexpected:   465\n--------------------\n\
    --------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmptens050g.rkt:28:4\n\
    actual:\n  507373911120254594830541496424560440890295157132596284465550371974898507816772893037880970850304099586534815464656006987219026999699388353419528980646327983900\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyhhcp96w.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyhhcp96w.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyhhcp96w.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyhhcp96w.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyhhcp96w.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkpdcjasb.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkpdcjasb.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkpdcjasb.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkpdcjasb.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkpdcjasb.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpod3vu7zp.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpod3vu7zp.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpod3vu7zp.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpix2rswbi.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpix2rswbi.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpix2rswbi.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpix2rswbi.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyrvad_18.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyrvad_18.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyrvad_18.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (* n n))))\n\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n\
    \    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n   \
    \ (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n  \
    \  (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp0iujaqis.rkt:25:4\n\
    actual:     3906\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp0iujaqis.rkt:26:4\nactual:\
    \     217010211\nexpected:   66\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp0iujaqis.rkt:27:4\nactual:\
    \     1442064057548547018035272769387370\nexpected:   465\n--------------------\n\
    --------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp0iujaqis.rkt:28:4\n\
    actual:\n  507373911120254594830541496424560440890295157132596284465550371974898507816772893037880970850304099586534815464656006987219026999699388353419528980646327983900\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqq6jjxmg.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqq6jjxmg.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqq6jjxmg.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp86di1v_d.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp86di1v_d.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp86di1v_d.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp86di1v_d.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdcf9yr1i.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdcf9yr1i.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdcf9yr1i.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0jqode9o.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0jqode9o.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0jqode9o.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper\
    \ (sub1 n) (+ acc n))))\n  (helper n 0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate sum_to_n))\n    (check-equal? (candidate 1) 1)\n   \
    \ (check-equal? (candidate 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal?\
    \ (candidate 30) 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp44rnilc5.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp44rnilc5.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp44rnilc5.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpu_gvp3kh.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpu_gvp3kh.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpu_gvp3kh.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpu_gvp3kh.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_1gldeyl.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_1gldeyl.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_1gldeyl.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_1gldeyl.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp7g91a00.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp7g91a00.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp7g91a00.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6m49dvng.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6m49dvng.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp6m49dvng.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmp6m49dvng.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc6cg1lt2.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc6cg1lt2.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc6cg1lt2.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbd2s9720.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbd2s9720.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbd2s9720.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwabz2f7.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwabz2f7.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpuwabz2f7.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpuwabz2f7.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpctxg3wp3.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpctxg3wp3.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpctxg3wp3.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpctxg3wp3.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpctxg3wp3.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpm7vk138s.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpm7vk138s.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpm7vk138s.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (* n n))))\n\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n\
    \    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n   \
    \ (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n  \
    \  (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpm_3fdrxr.rkt:25:4\n\
    actual:     3906\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpm_3fdrxr.rkt:26:4\nactual:\
    \     217010211\nexpected:   66\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpm_3fdrxr.rkt:27:4\nactual:\
    \     1442064057548547018035272769387370\nexpected:   465\n--------------------\n\
    --------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpm_3fdrxr.rkt:28:4\n\
    actual:\n  507373911120254594830541496424560440890295157132596284465550371974898507816772893037880970850304099586534815464656006987219026999699388353419528980646327983900\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfojnxeob.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfojnxeob.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfojnxeob.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf68iun5u.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf68iun5u.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf68iun5u.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo3b8atxm.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo3b8atxm.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo3b8atxm.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo3b8atxm.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo3b8atxm.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpwas51amv.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpwas51amv.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpwas51amv.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpwas51amv.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpj0cm038_.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpj0cm038_.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpj0cm038_.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpj0cm038_.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmd3_0r05.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmd3_0r05.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmd3_0r05.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmd3_0r05.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmd3_0r05.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf7u3plvj.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf7u3plvj.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf7u3plvj.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf7u3plvj.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf7u3plvj.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmply_qy25z.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmply_qy25z.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmply_qy25z.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmply_qy25z.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmply_qy25z.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdirrbibg.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdirrbibg.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpdirrbibg.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpdirrbibg.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpefe6ta_r.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpefe6ta_r.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpefe6ta_r.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpefe6ta_r.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpefe6ta_r.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3qd5s16k.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3qd5s16k.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3qd5s16k.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3qd5s16k.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3qd5s16k.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2u4rxk2z.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2u4rxk2z.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2u4rxk2z.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1uph9f3s.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1uph9f3s.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1uph9f3s.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpklke_032.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpklke_032.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpklke_032.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsdihrzcg.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsdihrzcg.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsdihrzcg.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsdihrzcg.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4687nm1c.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4687nm1c.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4687nm1c.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4687nm1c.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4687nm1c.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_ly907jp.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_ly907jp.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_ly907jp.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppdp7rc12.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmppdp7rc12.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmppdp7rc12.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmppdp7rc12.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptjutu2ip.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptjutu2ip.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptjutu2ip.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpnj0vi1ns.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpnj0vi1ns.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpnj0vi1ns.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpnj0vi1ns.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplfdjvad9.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplfdjvad9.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplfdjvad9.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpy29lbi89.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpy29lbi89.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpy29lbi89.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpy29lbi89.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpy29lbi89.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzqrz8nfi.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzqrz8nfi.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzqrz8nfi.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp691xs71n.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp691xs71n.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp691xs71n.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaldfsiax.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaldfsiax.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaldfsiax.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper\
    \ (sub1 n) (+ acc (sub1 n))))\n  )\n  (helper n 0))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n    (check-equal?\
    \ (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal? (candidate\
    \ 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal? (candidate\
    \ 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwxn4gprh.rkt:27:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwxn4gprh.rkt:28:4

    actual:     15

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwxn4gprh.rkt:29:4

    actual:     55

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwxn4gprh.rkt:30:4

    actual:     435

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwxn4gprh.rkt:31:4

    actual:     4950

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9q0ou1z2.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9q0ou1z2.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9q0ou1z2.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpphoaind7.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpphoaind7.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpphoaind7.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpphoaind7.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpphoaind7.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdq1zc8p_.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdq1zc8p_.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdq1zc8p_.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdq1zc8p_.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdq1zc8p_.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7o7x_gd2.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7o7x_gd2.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7o7x_gd2.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 1)\n      n\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmptp1_dqrj.rkt:25:4\n\
    actual:     720\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmptp1_dqrj.rkt:26:4\nactual:\
    \     39916800\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmptp1_dqrj.rkt:27:4\nactual:     265252859812191058636308480000000\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmptp1_dqrj.rkt:28:4\nactual:\n  93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 1)\n      n\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpn6ea9eg6.rkt:25:4\n\
    actual:     720\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpn6ea9eg6.rkt:26:4\nactual:\
    \     39916800\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpn6ea9eg6.rkt:27:4\nactual:     265252859812191058636308480000000\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpn6ea9eg6.rkt:28:4\nactual:\n  93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp7yf0rol.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp7yf0rol.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp7yf0rol.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper\
    \ (- n 1) (+ acc n))))\n  (helper n 0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate sum_to_n))\n    (check-equal? (candidate 1) 1)\n   \
    \ (check-equal? (candidate 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal?\
    \ (candidate 30) 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (define (sum-to-n n acc)\n    (if (= n 0)\n        acc\n        (sum-to-n\
    \ (- n 1) (+ acc n))))\n  (sum-to-n n 0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate sum_to_n))\n    (check-equal? (candidate 1) 1)\n   \
    \ (check-equal? (candidate 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal?\
    \ (candidate 30) 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqbmx6hp4.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqbmx6hp4.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqbmx6hp4.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqbmx6hp4.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqbmx6hp4.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp74m0empi.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp74m0empi.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp74m0empi.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmp74m0empi.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxnk3lxf9.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxnk3lxf9.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxnk3lxf9.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5aq93wqy.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5aq93wqy.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5aq93wqy.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5aq93wqy.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbczsc1un.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbczsc1un.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbczsc1un.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjfe3wy7c.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjfe3wy7c.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjfe3wy7c.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjfe3wy7c.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjfe3wy7c.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxhx_ihi.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxhx_ihi.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpaxhx_ihi.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpaxhx_ihi.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpigxg41e2.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpigxg41e2.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpigxg41e2.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpigxg41e2.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnll_xtly.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnll_xtly.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnll_xtly.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpexwg_4ff.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpexwg_4ff.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpexwg_4ff.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpexwg_4ff.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpexwg_4ff.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd6zie5x3.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd6zie5x3.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd6zie5x3.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd6zie5x3.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd6zie5x3.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8uxnxv82.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8uxnxv82.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8uxnxv82.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr6dg3hmv.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr6dg3hmv.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr6dg3hmv.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppg9g9m9g.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmppg9g9m9g.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmppg9g9m9g.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmppg9g9m9g.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc1p_lsje.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc1p_lsje.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc1p_lsje.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphbu4pst9.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphbu4pst9.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphbu4pst9.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi130o79r.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi130o79r.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi130o79r.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi130o79r.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi130o79r.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqhqhubfe.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqhqhubfe.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqhqhubfe.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph7o33gsj.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph7o33gsj.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph7o33gsj.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpslqjuv80.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpslqjuv80.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpslqjuv80.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5hj8fmat.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5hj8fmat.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5hj8fmat.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1iulknag.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1iulknag.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1iulknag.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (define (sum-to-n n acc)\n    (if (= n 0)\n        acc\n        (sum-to-n\
    \ (- n 1) (+ acc n))))\n  (sum-to-n n 0))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate sum_to_n))\n    (check-equal? (candidate 1) 1)\n   \
    \ (check-equal? (candidate 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal?\
    \ (candidate 30) 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (* n n))))\n\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n\
    \    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n   \
    \ (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n  \
    \  (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4hrpp30w.rkt:25:4\n\
    actual:     3906\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4hrpp30w.rkt:26:4\nactual:\
    \     217010211\nexpected:   66\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4hrpp30w.rkt:27:4\nactual:\
    \     1442064057548547018035272769387370\nexpected:   465\n--------------------\n\
    --------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4hrpp30w.rkt:28:4\n\
    actual:\n  507373911120254594830541496424560440890295157132596284465550371974898507816772893037880970850304099586534815464656006987219026999699388353419528980646327983900\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpm6dzda0w.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpm6dzda0w.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpm6dzda0w.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpm6dzda0w.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpm6dzda0w.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpokurxc8j.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpokurxc8j.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpokurxc8j.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpokurxc8j.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpokurxc8j.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt8ixkhjk.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt8ixkhjk.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpt8ixkhjk.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpt8ixkhjk.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp07w5zmr7.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp07w5zmr7.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp07w5zmr7.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp07w5zmr7.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp07w5zmr7.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxgh60pjz.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxgh60pjz.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxgh60pjz.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpl9mkx6m9.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpl9mkx6m9.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpl9mkx6m9.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpl9mkx6m9.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 1)\n      n\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_01cglnx.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_01cglnx.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_01cglnx.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_01cglnx.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp105d7342.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp105d7342.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp105d7342.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp62m_3ze7.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp62m_3ze7.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp62m_3ze7.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp62m_3ze7.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpo3zliz4u.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpo3zliz4u.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpo3zliz4u.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpo3zliz4u.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0dujvejg.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0dujvejg.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0dujvejg.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0dujvejg.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0dujvejg.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n n) (sum_to_n (- n 1)))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq1f_q9im.rkt:25:4

    actual:     91

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq1f_q9im.rkt:26:4

    actual:     506

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq1f_q9im.rkt:27:4

    actual:     9455

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq1f_q9im.rkt:28:4

    actual:     338350

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbriq1ske.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbriq1ske.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbriq1ske.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbriq1ske.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbriq1ske.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpudtszsoe.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpudtszsoe.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpudtszsoe.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq18vxpxe.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq18vxpxe.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq18vxpxe.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq18vxpxe.rkt:27:4

    actual:     0

    expected:   465

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq18vxpxe.rkt:28:4

    actual:     0

    expected:   5050

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 1)\n      n\n      (+ (* n (sum_to_n (- n 1))))))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdz849o0d.rkt:25:4\n\
    actual:     720\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdz849o0d.rkt:26:4\nactual:\
    \     39916800\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpdz849o0d.rkt:27:4\nactual:     265252859812191058636308480000000\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmpdz849o0d.rkt:28:4\nactual:\n  93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw63j21w5.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw63j21w5.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw63j21w5.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n \
    \   (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
    \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal?\
    \ (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp0l59la8c.rkt:25:4\n\
    actual:     1237\nexpected:   21\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp0l59la8c.rkt:26:4\nactual:\
    \     68588312\nexpected:   66\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp0l59la8c.rkt:27:4\nactual:     455779168962082450381327904693701\n\
    expected:   465\n--------------------\n--------------------\nFAILURE\nname:  \
    \     check-equal?\nlocation:   /tmp/tmp0l59la8c.rkt:28:4\nactual:\n  160360740116183144733571509356013519954431610301916520764182222092231653915156530909999021448995531507013709811500779735358328288932830176709764490323163992001\n\
    expected:   5050\n--------------------\n"
  stdout: ''
- exit_code: -1
  program: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to\
    \ n.\n;; >>> sum_to_n(30)\n;; 465\n;; >>> sum_to_n(100)\n;; 5050\n;; >>> sum_to_n(5)\n\
    ;; 15\n;; >>> sum_to_n(10)\n;; 55\n;; >>> sum_to_n(1)\n;; 1\n(define (sum_to_n\
    \ n)\n  (if (= n 0)\n      0\n      (+ (* n (sum_to_n (- n 1))) (sum_to_n (- n\
    \ 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ sum_to_n))\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate\
    \ 6) 21)\n    (check-equal? (candidate 11) 66)\n    (check-equal? (candidate 30)\
    \ 465)\n    (check-equal? (candidate 100) 5050)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbry7oa6p.rkt:24:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbry7oa6p.rkt:25:4

    actual:     0

    expected:   21

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbry7oa6p.rkt:26:4

    actual:     0

    expected:   66

    --------------------

    '
  stdout: ''

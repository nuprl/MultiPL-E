language: rkt
name: HumanEval_81_numerical_letter_grade
results:
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (num)\n         (cond\n           [(>= num 4.0) \"A+\"]\n    \
    \       [(>= num 3.7) \"A\"]\n           [(>= num 3.3) \"A-\"]\n           [(>=\
    \ num 3.0) \"B+\"]\n           [(>= num 2.7) \"B\"]\n           [(>= num 2.3)\
    \ \"B-\"]\n           [(>= num 2.0) \"C+\"]\n           [(>= num 1.7) \"C\"]\n\
    \           [(>= num 1.3) \"C-\"]\n           [(>= num 1.0) \"D+\"]\n        \
    \   [(>= num 0.7) \"D\"]\n           [(>= num 0.0) \"D-\"]\n           [(= num\
    \ 0.0) \"E\"]\n           [else \"X\"]\n           ))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj5oy8rhu.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj5oy8rhu.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj5oy8rhu.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj5oy8rhu.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond [(>= (car grades) 4.0) \"A+\"]\n        [(>= (car grades) 3.7) \"A\"\
    ]\n        [(>= (car grades) 3.3) \"A-\"]\n        [(>= (car grades) 3.0) \"B+\"\
    ]\n        [(>= (car grades) 2.7) \"B\"]\n        [(>= (car grades) 2.3) \"B-\"\
    ]\n        [(>= (car grades) 2.0) \"C+\"]\n        [(>= (car grades) 1.7) \"C\"\
    ]\n        [(>= (car grades) 1.3) \"C-\"]\n        [(>= (car grades) 1.0) \"D+\"\
    ]\n        [(>= (car grades) 0.7) \"D\"]\n        [(>= (car grades) 0.0) \"D-\"\
    ]\n        [else \"E\"]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\
    \n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgral_duu.rkt:44:4

    actual:     "A+"

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgral_duu.rkt:45:4

    actual:     "D+"

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgral_duu.rkt:46:4

    actual:     "D-"

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgral_duu.rkt:47:4

    actual:     "D-"

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgral_duu.rkt:48:4

    actual:     "D+"

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgral_duu.rkt:49:4

    actual:     "D-"

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \    (map (lambda (grade)\n            (cond ((<= grade 4.0)\n               \
    \     'A+)\n                  ((<= grade 3.7)\n                    'A)\n     \
    \             ((<= grade 3.3)\n                    'A-)\n                  ((<=\
    \ grade 3.0)\n                    'B+)\n                  ((<= grade 2.7)\n  \
    \                  'B)\n                  ((<= grade 2.3)\n                  \
    \  'B-)\n                  ((<= grade 2.0)\n                    'C+)\n       \
    \           ((<= grade 1.7)\n                    'C)\n                  ((<= grade\
    \ 1.3)\n                    'C-)\n                  ((<= grade 1.0)\n        \
    \            'D+)\n                  ((<= grade 0.7)\n                    'D)\n\
    \                  ((<= grade 0.0)\n                    'D-)\n               \
    \   (else\n                    'E)))\n        grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp24nb3bpu.rkt:59:4

    actual:     ''(A+ A+ A+ A+ A+)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp24nb3bpu.rkt:60:4

    actual:     ''(A+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp24nb3bpu.rkt:61:4

    actual:     ''(A+)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp24nb3bpu.rkt:62:4

    actual:     ''(A+)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp24nb3bpu.rkt:63:4

    actual:     ''(A+ A+ A+ A+ A+)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp24nb3bpu.rkt:64:4

    actual:     ''(A+ A+)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond\n    [(empty? grades) '()]\n    [(member (first grades) '(4.0 3.7 3.3\
    \ 3.0 2.7 2.3 2.0 1.7 1.3 1.0 0.7 0.0)) (cons (first grades) (numerical_letter_grade\
    \ (rest grades)))]\n    [else (cons 'E (numerical_letter_grade (rest grades)))]))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpirbledah.rkt:35:4

    actual:     ''(4.0 E 1.7 E E)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpirbledah.rkt:36:4

    actual:     ''(E)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpirbledah.rkt:37:4

    actual:     ''(E)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpirbledah.rkt:38:4

    actual:     ''(0.0)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpirbledah.rkt:39:4

    actual:     ''(1.0 E E E 3.3)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpirbledah.rkt:40:4

    actual:     ''(0.0 0.7)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7)\
    \ 'A]\n               [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n    \
    \           [(>= x 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>=\
    \ x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n\
    \               [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n           \
    \    [(>= x 0.0) 'D-]\n               [else 'E]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk4vus0y0.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk4vus0y0.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk4vus0y0.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk4vus0y0.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk4vus0y0.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk4vus0y0.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond\n    [(= (car grades) 4.0)\n     (cons 'A+ (numerical_letter_grade (cdr\
    \ grades)))]\n    [(> (car grades) 3.7)\n     (cons 'A (numerical_letter_grade\
    \ (cdr grades)))]\n    [(> (car grades) 3.3)\n     (cons 'A- (numerical_letter_grade\
    \ (cdr grades)))]\n    [(> (car grades) 3.0)\n     (cons 'B+ (numerical_letter_grade\
    \ (cdr grades)))]\n    [(> (car grades) 2.7)\n     (cons 'B (numerical_letter_grade\
    \ (cdr grades)))]\n    [(> (car grades) 2.3)\n     (cons 'B- (numerical_letter_grade\
    \ (cdr grades)))]\n    [(> (car grades) 2.0)\n     (cons 'C+ (numerical_letter_grade\
    \ (cdr grades)))]\n    [(> (car grades) 1.7)\n     (cons 'C (numerical_letter_grade\
    \ (cdr grades)))]\n    [(> (car grades) 1.3)\n     (cons 'C- (numerical_letter_grade\
    \ (cdr grades)))]\n    [(> (car grades) 1.0)\n     (cons 'D+ (numerical_letter_grade\
    \ (cdr grades)))]\n    [(> (car grades) 0.7)\n     (cons 'D (numerical_letter_grade\
    \ (cdr grades)))]\n    [(> (car grades) 0.0)\n     (cons 'D- (numerical_letter_grade\
    \ (cdr grades)))]\n    [(> (car grades) (- 0.0))\n     (cons 'E (numerical_letter_grade\
    \ (cdr grades)))]\n    [else\n     '()]))\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpck8rrfp3.rkt:59:4\n\
    \ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpck8rrfp3.rkt:60:4\n\
    \ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpck8rrfp3.rkt:61:4\n\
    \ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n\
    --------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpck8rrfp3.rkt:62:4\n\
    actual:     '()\nexpected:   '(\"E\")\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpck8rrfp3.rkt:63:4\n\ncar:\
    \ contract violation\n  expected: pair?\n  given: '()\n--------------------\n\
    --------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpck8rrfp3.rkt:64:4\n\
    actual:     '()\nexpected:   '(\"E\" \"D-\")\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) \"A+\"]\n               [(>=\
    \ gpa 3.7) \"A\"]\n               [(>= gpa 3.3) \"A-\"]\n               [(>= gpa\
    \ 3.0) \"B+\"]\n               [(>= gpa 2.7) \"B\"]\n               [(>= gpa 2.3)\
    \ \"B-\"]\n               [(>= gpa 2.0) \"C+\"]\n               [(>= gpa 1.7)\
    \ \"C\"]\n               [(>= gpa 1.3) \"C-\"]\n               [(>= gpa 1.0) \"\
    D+\"]\n               [(>= gpa 0.7) \"D\"]\n               [(>= gpa 0.0) \"D-\"\
    ]\n               [else \"E\"]))\n       grades))\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_cbi079a.rkt:45:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_cbi079a.rkt:48:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_cbi079a.rkt:49:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_cbi079a.rkt:50:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>=\
    \ gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0)\
    \ 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n\
    \               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n       \
    \        [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n             \
    \  [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else\
    \ 'E]))\n       grades))\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiakx317p.rkt:45:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiakx317p.rkt:46:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiakx317p.rkt:47:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiakx317p.rkt:48:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiakx317p.rkt:49:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiakx317p.rkt:50:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (for/list ([n grades])\n            (cond [(= n 4.0) 'A+]\n               \
    \   [(> n 3.7) 'A]\n                  [(> n 3.3) 'A-]\n                  [(> n\
    \ 3.0) 'B+]\n                  [(> n 2.7) 'B]\n                  [(> n 2.3) 'B-]\n\
    \                  [(> n 2.0) 'C+]\n                  [(> n 1.7) 'C]\n       \
    \           [(> n 1.3) 'C-]\n                  [(> n 1.0) 'D+]\n             \
    \     [(> n 0.7) 'D]\n                  [(> n 0.0) 'D-]\n                  [else\
    \ 'E])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx0laqo5l.rkt:45:4

    actual:     ''(A+ B C- C A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx0laqo5l.rkt:46:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx0laqo5l.rkt:47:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx0laqo5l.rkt:48:4

    actual:     ''(E)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx0laqo5l.rkt:49:4

    actual:     ''(D D- C- B B+)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx0laqo5l.rkt:50:4

    actual:     ''(E D-)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (grade)\n     (cond\n       [(>= grade 4.0) 'A+]\n       [(>=\
    \ grade 3.7) 'A]\n       [(>= grade 3.3) 'A-]\n       [(>= grade 3.0) 'B+]\n \
    \      [(>= grade 2.7) 'B]\n       [(>= grade 2.3) 'B-]\n       [(>= grade 2.0)\
    \ 'C+]\n       [(>= grade 1.7) 'C]\n       [(>= grade 1.3) 'C-]\n       [(>= grade\
    \ 1.0) 'D+]\n       [(>= grade 0.7) 'D]\n       [(>= grade 0.0) 'D-]\n       [else\
    \ 'E]))\n   grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc1de_upa.rkt:48:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc1de_upa.rkt:49:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc1de_upa.rkt:50:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc1de_upa.rkt:51:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc1de_upa.rkt:52:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc1de_upa.rkt:53:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n```\n\n```racket\n#lang racket\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpb4hu2hbd.rkt:43:0: read-syntax: `#lang` not enabled\n  possible\
    \ reason: not allowed again inside a module that already starts `#lang`, or not\
    \ enabled for interactive evaluation\n  context...:\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (local [(define (numerical_letter_grade_h grades grade)\n            (cond\
    \ [(empty? grades) grade]\n                  [(and (>= (first grades) 4.0) (string=?\
    \ grade \"A+\")) (numerical_letter_grade_h (rest grades) grade)]\n           \
    \       [(>= (first grades) 4.0) (numerical_letter_grade_h (rest grades) \"A+\"\
    )]\n                  [(and (>= (first grades) 3.7) (string=? grade \"A\")) (numerical_letter_grade_h\
    \ (rest grades) grade)]\n                  [(>= (first grades) 3.7) (numerical_letter_grade_h\
    \ (rest grades) \"A\")]\n                  [(and (>= (first grades) 3.3) (string=?\
    \ grade \"A-\")) (numerical_letter_grade_h (rest grades) grade)]\n           \
    \       [(>= (first grades) 3.3) (numerical_letter_grade_h (rest grades) \"A-\"\
    )]\n                  [(and (>= (first grades) 3.0) (string=? grade \"B+\")) (numerical_letter_grade_h\
    \ (rest grades) grade)]\n                  [(>= (first grades) 3.0) (numerical_letter_grade_h\
    \ (rest grades) \"B+\")]\n                  [(and (>= (first grades) 2.7) (string=?\
    \ grade \"B\")) (numerical_letter_grade_h (rest grades) grade)]\n            \
    \      [(>= (first grades) 2.7) (numerical_letter_grade_h (rest grades) \"B\"\
    )]\n                  [(and (>= (first grades) 2.3) (string=? grade \"B-\")) (numerical_letter_grade_h\
    \ (rest grades) grade)]\n                  [(>= (first grades) 2.3) (numerical_letter_grade_h\
    \ (rest grades) \"B-\")]\n                  [(and (>= (first grades) 2.0) (string=?\
    \ grade \"C+\")) (numerical_letter_grade_h (rest grades) grade)]\n           \
    \       [(>= (first grades) 2.0) (numerical_letter_grade\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpra4d662q.rkt:40:43: read-syntax: expected a `)` to close `(`\n\
    \  possible cause: indentation suggests a missing `)` before line 41\n  context...:\n\
    \   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (for/list ([g (in-list grades)])\n    (cond\n      [(>= g 4.0) \"A+\"]\n  \
    \    [(>= g 3.7) \"A\"]\n      [(>= g 3.3) \"A-\"]\n      [(>= g 3.0) \"B+\"]\n\
    \      [(>= g 2.7) \"B\"]\n      [(>= g 2.3) \"B-\"]\n      [(>= g 2.0) \"C+\"\
    ]\n      [(>= g 1.7) \"C\"]\n      [(>= g 1.3) \"C-\"]\n      [(>= g 1.0) \"D+\"\
    ]\n      [(>= g 0.7) \"D\"]\n      [(>= g 0.0) \"D-\"]\n      [else \"E\"])))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9ffgqz0g.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9ffgqz0g.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9ffgqz0g.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9ffgqz0g.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \    (map (\u03BB (grade)\n        (cond [(>= grade 4.0) \"A+\"]\n           \
    \   [(>= grade 3.7) \"A\"]\n              [(>= grade 3.3) \"A-\"]\n          \
    \    [(>= grade 3.0) \"B+\"]\n              [(>= grade 2.7) \"B\"]\n         \
    \     [(>= grade 2.3) \"B-\"]\n              [(>= grade 2.0) \"C+\"]\n       \
    \       [(>= grade 1.7) \"C\"]\n              [(>= grade 1.3) \"C-\"]\n      \
    \        [(>= grade 1.0) \"D+\"]\n              [(>= grade 0.7) \"D\"]\n     \
    \         [(>= grade 0.0) \"D-\"]\n              [else \"E\"]))\n        grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbfzwvwgc.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbfzwvwgc.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbfzwvwgc.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbfzwvwgc.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (x)\n     (cond\n       [(>= x 4.0) 'A+]\n       [(>= x 3.7)\
    \ 'A]\n       [(>= x 3.3) 'A-]\n       [(>= x 3.0) 'B+]\n       [(>= x 2.7) 'B]\n\
    \       [(>= x 2.3) 'B-]\n       [(>= x 2.0) 'C+]\n       [(>= x 1.7) 'C]\n  \
    \     [(>= x 1.3) 'C-]\n       [(>= x 1.0) 'D+]\n       [(>= x 0.7) 'D]\n    \
    \   [(>= x 0.0) 'D-]\n       [else 'E]))\n   grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp24_3_5fs.rkt:48:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp24_3_5fs.rkt:49:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp24_3_5fs.rkt:50:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp24_3_5fs.rkt:51:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp24_3_5fs.rkt:52:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp24_3_5fs.rkt:53:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (n)\n     (cond\n       [(>= n 4.0) 'A+]\n       [(>= n 3.7)\
    \ 'A]\n       [(>= n 3.3) 'A-]\n       [(>= n 3.0) 'B+]\n       [(>= n 2.7) 'B]\n\
    \       [(>= n 2.3) 'B-]\n       [(>= n 2.0) 'C+]\n       [(>= n 1.7) 'C]\n  \
    \     [(>= n 1.3) 'C-]\n       [(>= n 1.0) 'D+]\n       [(>= n 0.7) 'D]\n    \
    \   [(>= n 0.0) 'D-]\n       [else 'E]))\n   grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnzodebuj.rkt:48:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnzodebuj.rkt:49:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnzodebuj.rkt:50:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnzodebuj.rkt:51:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnzodebuj.rkt:52:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnzodebuj.rkt:53:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x) (cond ((>= x 4.0) \"A+\")\n                         ((>= x\
    \ 3.7) \"A\")\n                         ((>= x 3.3) \"A-\")\n                \
    \         ((>= x 3.0) \"B+\")\n                         ((>= x 2.7) \"B\")\n \
    \                        ((>= x 2.3) \"B-\")\n                         ((>= x\
    \ 2.0) \"C+\")\n                         ((>= x 1.7) \"C\")\n                \
    \         ((>= x 1.3) \"C-\")\n                         ((>= x 1.0) \"D+\")\n\
    \                         ((>= x 0.7) \"D\")\n                         ((>= x\
    \ 0.0) \"D-\")\n                         (else \"E\")))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporv29run.rkt:45:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporv29run.rkt:48:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporv29run.rkt:49:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmporv29run.rkt:50:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (n)\n         (cond\n           ((>= n 4.0) 'A+)\n           ((>=\
    \ n 3.7) 'A)\n           ((>= n 3.3) 'A-)\n           ((>= n 3.0) 'B+)\n     \
    \      ((>= n 2.7) 'B)\n           ((>= n 2.3) 'B-)\n           ((>= n 2.0) 'C+)\n\
    \           ((>= n 1.7) 'C)\n           ((>= n 1.3) 'C-)\n           ((>= n 1.0)\
    \ 'D+)\n           ((>= n 0.7) 'D)\n           ((>= n 0.0) 'D-)\n           (else\
    \ 'E)))\n       grades))\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg235qfwv.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg235qfwv.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg235qfwv.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg235qfwv.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg235qfwv.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg235qfwv.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (gpa)\n     (cond ((= gpa 4.0) 'A+)\n           ((> gpa 3.7)\
    \ 'A)\n           ((> gpa 3.3) 'A-)\n           ((> gpa 3.0) 'B+)\n          \
    \ ((> gpa 2.7) 'B)\n           ((> gpa 2.3) 'B-)\n           ((> gpa 2.0) 'C+)\n\
    \           ((> gpa 1.7) 'C)\n           ((> gpa 1.3) 'C-)\n           ((> gpa\
    \ 1.0) 'D+)\n           ((> gpa 0.7) 'D)\n           ((> gpa 0.0) 'D-)\n     \
    \      (else 'E)))\n   grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvfzju26b.rkt:47:4

    actual:     ''(A+ B C- C A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvfzju26b.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvfzju26b.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvfzju26b.rkt:50:4

    actual:     ''(E)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvfzju26b.rkt:51:4

    actual:     ''(D D- C- B B+)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvfzju26b.rkt:52:4

    actual:     ''(E D-)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (\u03BB (grade)\n         (cond ((>= grade 4.0) 'A+)\n               ((>=\
    \ grade 3.7) 'A)\n               ((>= grade 3.3) 'A-)\n               ((>= grade\
    \ 3.0) 'B+)\n               ((>= grade 2.7) 'B)\n               ((>= grade 2.3)\
    \ 'B-)\n               ((>= grade 2.0) 'C+)\n               ((>= grade 1.7) 'C)\n\
    \               ((>= grade 1.3) 'C-)\n               ((>= grade 1.0) 'D+)\n  \
    \             ((>= grade 0.7) 'D)\n               ((>= grade 0.0) 'D-)\n     \
    \          (else 'E)))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9uhea5b1.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9uhea5b1.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9uhea5b1.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9uhea5b1.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9uhea5b1.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9uhea5b1.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (grade)\n     (cond [(>= grade 4.0)\n            'A+]\n  \
    \         [(>= grade 3.7)\n            'A]\n           [(>= grade 3.3)\n     \
    \       'A-]\n           [(>= grade 3.0)\n            'B+]\n           [(>= grade\
    \ 2.7)\n            'B]\n           [(>= grade 2.3)\n            'B-]\n      \
    \     [(>= grade 2.0)\n            'C+]\n           [(>= grade 1.7)\n        \
    \    'C]\n           [(>= grade 1.3)\n            'C-]\n           [(>= grade\
    \ 1.0)\n            'D+]\n           [(>= grade 0.7)\n            'D]\n      \
    \     [(>= grade 0.0)\n            'D-]\n           [(= grade 0.0)\n         \
    \   'E]))\n   grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv0hgjqbv.rkt:60:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv0hgjqbv.rkt:61:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv0hgjqbv.rkt:62:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv0hgjqbv.rkt:63:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv0hgjqbv.rkt:64:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv0hgjqbv.rkt:65:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (grade)\n     (cond\n       [(>= grade 4.0) \"A+\"]\n    \
    \   [(>= grade 3.7) \"A\"]\n       [(>= grade 3.3) \"A-\"]\n       [(>= grade\
    \ 3.0) \"B+\"]\n       [(>= grade 2.7) \"B\"]\n       [(>= grade 2.3) \"B-\"]\n\
    \       [(>= grade 2.0) \"C+\"]\n       [(>= grade 1.7) \"C\"]\n       [(>= grade\
    \ 1.3) \"C-\"]\n       [(>= grade 1.0) \"D+\"]\n       [(>= grade 0.7) \"D\"]\n\
    \       [(>= grade 0.0) \"D-\"]\n       [else \"E\"]))\n   grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9kp_przz.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9kp_przz.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9kp_przz.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9kp_przz.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \    (map (lambda (grade)\n            (cond \n                [(>= grade 4.0)\n\
    \                    \"A+\"]\n                [(>= grade 3.7)\n              \
    \      \"A\"]\n                [(>= grade 3.3)\n                    \"A-\"]\n\
    \                [(>= grade 3.0)\n                    \"B+\"]\n              \
    \  [(>= grade 2.7)\n                    \"B\"]\n                [(>= grade 2.3)\n\
    \                    \"B-\"]\n                [(>= grade 2.0)\n              \
    \      \"C+\"]\n                [(>= grade 1.7)\n                    \"C\"]\n\
    \                [(>= grade 1.3)\n                    \"C-\"]\n              \
    \  [(>= grade 1.0)\n                    \"D+\"]\n                [(>= grade 0.7)\n\
    \                    \"D\"]\n                [(>= grade 0.0)\n               \
    \     \"D-\"]\n                [else\n                    \"E\"]))\n        grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwjxfvh4n.rkt:60:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwjxfvh4n.rkt:63:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwjxfvh4n.rkt:64:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwjxfvh4n.rkt:65:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjmawgcm3.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjmawgcm3.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjmawgcm3.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjmawgcm3.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjmawgcm3.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjmawgcm3.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7)\
    \ 'A]\n               [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n    \
    \           [(>= x 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>=\
    \ x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n\
    \               [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n           \
    \    [(>= x 0.0) 'D-]\n               [else 'E]))\n       grades))\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcq1o4k21.rkt:45:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcq1o4k21.rkt:46:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcq1o4k21.rkt:47:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcq1o4k21.rkt:48:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcq1o4k21.rkt:49:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcq1o4k21.rkt:50:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n               [(>= x\
    \ 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>= x 3.0)\
    \ \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3) \"B-\"\
    ]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"]\n   \
    \            [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n       \
    \        [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n            \
    \   [(= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_aga68af.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_aga68af.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_aga68af.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_aga68af.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n    \
    \       [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [else \"\
    E\"]))\n       grades))\n(require rackunit)\n\n(define (test-humaneval) \n\n \
    \ (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw8mfbkcz.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw8mfbkcz.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw8mfbkcz.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw8mfbkcz.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \    (map\n     (lambda (gpa)\n       (cond\n        ((>= gpa 4.0) \"A+\")\n \
    \       ((>= gpa 3.7) \"A\")\n        ((>= gpa 3.3) \"A-\")\n        ((>= gpa\
    \ 3.0) \"B+\")\n        ((>= gpa 2.7) \"B\")\n        ((>= gpa 2.3) \"B-\")\n\
    \        ((>= gpa 2.0) \"C+\")\n        ((>= gpa 1.7) \"C\")\n        ((>= gpa\
    \ 1.3) \"C-\")\n        ((>= gpa 1.0) \"D+\")\n        ((>= gpa 0.7) \"D\")\n\
    \        ((>= gpa 0.0) \"D-\")\n        (else \"E\")))\n     grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4a7b45b_.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4a7b45b_.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4a7b45b_.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4a7b45b_.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) 'A+]\n       \
    \    [(>= gpa 3.7) 'A]\n           [(>= gpa 3.3) 'A-]\n           [(>= gpa 3.0)\
    \ 'B+]\n           [(>= gpa 2.7) 'B]\n           [(>= gpa 2.3) 'B-]\n        \
    \   [(>= gpa 2.0) 'C+]\n           [(>= gpa 1.7) 'C]\n           [(>= gpa 1.3)\
    \ 'C-]\n           [(>= gpa 1.0) 'D+]\n           [(>= gpa 0.7) 'D]\n        \
    \   [(>= gpa 0.0) 'D-]\n           [else 'E]))\n       grades))\n   \n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpu600mpjv.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpu600mpjv.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpu600mpjv.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpu600mpjv.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpu600mpjv.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpu600mpjv.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond\n    [(or (<= grades 4.0) (= grades 4.0)) (cons 'A+ null)]\n    [(> grades\
    \ 3.7) (cons 'A null)]\n    [(> grades 3.3) (cons 'A- null)]\n    [(> grades 3.0)\
    \ (cons 'B+ null)]\n    [(> grades 2.7) (cons 'B null)]\n    [(> grades 2.3) (cons\
    \ 'B- null)]\n    [(> grades 2.0) (cons 'C+ null)]\n    [(> grades 1.7) (cons\
    \ 'C null)]\n    [(> grades 1.3) (cons 'C- null)]\n    [(> grades 1.0) (cons 'D+\
    \ null)]\n    [(> grades 0.7) (cons 'D null)]\n    [(> grades 0.0) (cons 'D- null)]\n\
    \    [(= grades 0.0) (cons 'E null)]))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdh74pd3i.rkt:45:4\n\
    \n<=: contract violation\n  expected: real?\n  given: '(4.0 3 1.7 2 3.5)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdh74pd3i.rkt:46:4\n\
    \n<=: contract violation\n  expected: real?\n  given: '(1.2)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdh74pd3i.rkt:47:4\n\
    \n<=: contract violation\n  expected: real?\n  given: '(0.5)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdh74pd3i.rkt:48:4\n\
    \n<=: contract violation\n  expected: real?\n  given: '(0.0)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdh74pd3i.rkt:49:4\n\
    \n<=: contract violation\n  expected: real?\n  given: '(1.0 0.3 1.5 2.8 3.3)\n\
    --------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpdh74pd3i.rkt:50:4\n\n<=: contract violation\n  expected: real?\n\
    \  given: '(0.0 0.7)\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map \n   (lambda (gpa)\n     (cond \n       [(>= gpa 4.0) \"A+\"]\n      \
    \ [(>= gpa 3.7) \"A\"]\n       [(>= gpa 3.3) \"A-\"]\n       [(>= gpa 3.0) \"\
    B+\"]\n       [(>= gpa 2.7) \"B\"]\n       [(>= gpa 2.3) \"B-\"]\n       [(>=\
    \ gpa 2.0) \"C+\"]\n       [(>= gpa 1.7) \"C\"]\n       [(>= gpa 1.3) \"C-\"]\n\
    \       [(>= gpa 1.0) \"D+\"]\n       [(>= gpa 0.7) \"D\"]\n       [(>= gpa 0.0)\
    \ \"D-\"]\n       [else \"E\"]\n       ))\n   grades))\n\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0uy9sksc.rkt:50:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0uy9sksc.rkt:53:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0uy9sksc.rkt:54:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0uy9sksc.rkt:55:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons 'A+ (numerical_letter_grade\
    \ (rest grades)))]\n    [(> (first grades) 3.3) (cons 'A (numerical_letter_grade\
    \ (rest grades)))]\n    [(> (first grades) 3.0) (cons 'A- (numerical_letter_grade\
    \ (rest grades)))]\n    [(> (first grades) 2.7) (cons 'B+ (numerical_letter_grade\
    \ (rest grades)))]\n    [(> (first grades) 2.3) (cons 'B (numerical_letter_grade\
    \ (rest grades)))]\n    [(> (first grades) 2.0) (cons 'B- (numerical_letter_grade\
    \ (rest grades)))]\n    [(> (first grades) 1.7) (cons 'C+ (numerical_letter_grade\
    \ (rest grades)))]\n    [(> (first grades) 1.3) (cons 'C (numerical_letter_grade\
    \ (rest grades)))]\n    [(> (first grades) 1.0) (cons 'C- (numerical_letter_grade\
    \ (rest grades)))]\n    [(> (first grades) 0.7) (cons 'D+ (numerical_letter_grade\
    \ (rest grades)))]\n    [(> (first grades) 0.0) (cons 'D (numerical_letter_grade\
    \ (rest grades)))]\n    [(= (first grades) 0.0) (cons 'E (numerical_letter_grade\
    \ (rest grades)))]\n    [else (cons 'D- (numerical_letter_grade (rest grades)))]))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp70bupk8t.rkt:46:4

    actual:     ''(A+ B+ C C+ A)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp70bupk8t.rkt:47:4

    actual:     ''(C-)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp70bupk8t.rkt:48:4

    actual:     ''(D)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp70bupk8t.rkt:49:4

    actual:     ''(E)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp70bupk8t.rkt:50:4

    actual:     ''(D+ D C B+ A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp70bupk8t.rkt:51:4

    actual:     ''(E D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (define (eq g)\n    (cond [(>= g 4.0) 'A+]\n          [(>= g 3.7) 'A]\n   \
    \       [(>= g 3.3) 'A-]\n          [(>= g 3.0) 'B+]\n          [(>= g 2.7) 'B]\n\
    \          [(>= g 2.3) 'B-]\n          [(>= g 2.0) 'C+]\n          [(>= g 1.7)\
    \ 'C]\n          [(>= g 1.3) 'C-]\n          [(>= g 1.0) 'D+]\n          [(>=\
    \ g 0.7) 'D]\n          [(>= g 0.0) 'D-]\n          [else 'E]))\n  (map eq grades))\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc8rfodqy.rkt:45:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc8rfodqy.rkt:46:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc8rfodqy.rkt:47:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc8rfodqy.rkt:48:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc8rfodqy.rkt:49:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc8rfodqy.rkt:50:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (\u03BB (gpa)\n         (if (>= gpa 4.0) 'A+\n             (if (>= gpa\
    \ 3.7) 'A\n                 (if (>= gpa 3.3) 'A-\n                     (if (>=\
    \ gpa 3.0) 'B+\n                         (if (>= gpa 2.7) 'B\n               \
    \              (if (>= gpa 2.3) 'B-\n                                 (if (>=\
    \ gpa 2.0) 'C+\n                                     (if (>= gpa 1.7) 'C\n   \
    \                                      (if (>= gpa 1.3) 'C-\n                \
    \                             (if (>= gpa 1.0) 'D+\n                         \
    \                        (if (>= gpa 0.7) 'D\n                               \
    \                      (if (>= gpa 0.0) 'D-\n                                \
    \                         'E))))))))))))))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmprvrovl4t.rkt:39:14: read-syntax: unexpected `)`\n  context...:\n\
    \   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) 'A+]\n       \
    \    [(>= gpa 3.7) 'A]\n           [(>= gpa 3.3) 'A-]\n           [(>= gpa 3.0)\
    \ 'B+]\n           [(>= gpa 2.7) 'B]\n           [(>= gpa 2.3) 'B-]\n        \
    \   [(>= gpa 2.0) 'C+]\n           [(>= gpa 1.7) 'C]\n           [(>= gpa 1.3)\
    \ 'C-]\n           [(>= gpa 1.0) 'D+]\n           [(>= gpa 0.7) 'D]\n        \
    \   [(>= gpa 0.0) 'D-]\n           [else 'E]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4ykd5o9z.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4ykd5o9z.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4ykd5o9z.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4ykd5o9z.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4ykd5o9z.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4ykd5o9z.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) (display \"A+\")]\n\
    \           [(>= x 3.7) (display \"A\")]\n           [(>= x 3.3) (display \"A-\"\
    )]\n           [(>= x 3.0) (display \"B+\")]\n           [(>= x 2.7) (display\
    \ \"B\")]\n           [(>= x 2.3) (display \"B-\")]\n           [(>= x 2.0) (display\
    \ \"C+\")]\n           [(>= x 1.7) (display \"C\")]\n           [(>= x 1.3) (display\
    \ \"C-\")]\n           [(>= x 1.0) (display \"D+\")]\n           [(>= x 0.7) (display\
    \ \"D\")]\n           [(>= x 0.0) (display \"D-\")]\n           [(= x 0.0) (display\
    \ \"E\")]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7b3yncsq.rkt:47:4

    actual:     ''(#<void> #<void> #<void> #<void> #<void>)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7b3yncsq.rkt:48:4

    actual:     ''(#<void>)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7b3yncsq.rkt:49:4

    actual:     ''(#<void>)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7b3yncsq.rkt:50:4

    actual:     ''(#<void>)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7b3yncsq.rkt:51:4

    actual:     ''(#<void> #<void> #<void> #<void> #<void>)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7b3yncsq.rkt:52:4

    actual:     ''(#<void> #<void>)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: A+B+CC+A-D+D-D-D+D-C-BA-D-D
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \   (letrec \n      ([numerical_to_gpa (lambda (gpa)\n          (cond [(>= gpa\
    \ 4.0) 'A+]\n                [(>= gpa 3.7) 'A]\n                [(>= gpa 3.3)\
    \ 'A-]\n                [(>= gpa 3.0) 'B+]\n                [(>= gpa 2.7) 'B]\n\
    \                [(>= gpa 2.3) 'B-]\n                [(>= gpa 2.0) 'C+]\n    \
    \            [(>= gpa 1.7) 'C]\n                [(>= gpa 1.3) 'C-]\n         \
    \       [(>= gpa 1.0) 'D+]\n                [(>= gpa 0.7) 'D]\n              \
    \  [(>= gpa 0.0) 'D-]\n                [(< 0.0) 'E]))])\n      (map numerical_to_gpa\
    \ grades)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpt6fx5af6.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpt6fx5af6.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpt6fx5af6.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpt6fx5af6.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpt6fx5af6.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpt6fx5af6.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (grade)\n     (cond [(= grade 4.0) 'A+]\n           [(> grade\
    \ 3.7) 'A]\n           [(> grade 3.3) 'A-]\n           [(> grade 3.0) 'B+]\n \
    \          [(> grade 2.7) 'B]\n           [(> grade 2.3) 'B-]\n           [(>\
    \ grade 2.0) 'C+]\n           [(> grade 1.7) 'C]\n           [(> grade 1.3) 'C-]\n\
    \           [(> grade 1.0) 'D+]\n           [(> grade 0.7) 'D]\n           [(>\
    \ grade 0.0) 'D-]\n           [else 'E]))\n   grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe8kko4kf.rkt:47:4

    actual:     ''(A+ B C- C A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe8kko4kf.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe8kko4kf.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe8kko4kf.rkt:50:4

    actual:     ''(E)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe8kko4kf.rkt:51:4

    actual:     ''(D D- C- B B+)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe8kko4kf.rkt:52:4

    actual:     ''(E D-)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n    \
    \       [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [else \"\
    E\"])))\n  grades)\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp946__js1.rkt:47:4\n\
    \nmap: arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmp946__js1.rkt:48:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmp946__js1.rkt:49:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmp946__js1.rkt:50:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmp946__js1.rkt:51:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmp946__js1.rkt:52:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (for/list ([grade grades])\n    (cond\n      [(>= grade 4.0) 'A+]\n      [(>=\
    \ grade 3.7) 'A]\n      [(>= grade 3.3) 'A-]\n      [(>= grade 3.0) 'B+]\n   \
    \   [(>= grade 2.7) 'B]\n      [(>= grade 2.3) 'B-]\n      [(>= grade 2.0) 'C+]\n\
    \      [(>= grade 1.7) 'C]\n      [(>= grade 1.3) 'C-]\n      [(>= grade 1.0)\
    \ 'D+]\n      [(>= grade 0.7) 'D]\n      [(>= grade 0.0) 'D-]\n      [else 'E])))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpah73h9ow.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpah73h9ow.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpah73h9ow.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpah73h9ow.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpah73h9ow.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpah73h9ow.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E])))\n \
    \ grades)\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpuhf8ntym.rkt:47:4\n\
    \nmap: arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpuhf8ntym.rkt:48:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpuhf8ntym.rkt:49:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpuhf8ntym.rkt:50:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpuhf8ntym.rkt:51:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpuhf8ntym.rkt:52:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (\u03BB (gpa) (cond [(>= gpa 4.0) \"A+\"]\n                      [(>=\
    \ gpa 3.7) \"A\"]\n                      [(>= gpa 3.3) \"A-\"]\n             \
    \         [(>= gpa 3.0) \"B+\"]\n                      [(>= gpa 2.7) \"B\"]\n\
    \                      [(>= gpa 2.3) \"B-\"]\n                      [(>= gpa 2.0)\
    \ \"C+\"]\n                      [(>= gpa 1.7) \"C\"]\n                      [(>=\
    \ gpa 1.3) \"C-\"]\n                      [(>= gpa 1.0) \"D+\"]\n            \
    \          [(>= gpa 0.7) \"D\"]\n                      [(>= gpa 0.0) \"D-\"]\n\
    \                      [(>= gpa 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq3uhx_g6.rkt:45:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq3uhx_g6.rkt:48:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq3uhx_g6.rkt:49:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq3uhx_g6.rkt:50:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9rm2pz2h.rkt:45:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9rm2pz2h.rkt:46:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9rm2pz2h.rkt:47:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9rm2pz2h.rkt:48:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9rm2pz2h.rkt:49:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9rm2pz2h.rkt:50:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) 'A+]\n       \
    \    [(>= gpa 3.7) 'A]\n           [(>= gpa 3.3) 'A-]\n           [(>= gpa 3.0)\
    \ 'B+]\n           [(>= gpa 2.7) 'B]\n           [(>= gpa 2.3) 'B-]\n        \
    \   [(>= gpa 2.0) 'C+]\n           [(>= gpa 1.7) 'C]\n           [(>= gpa 1.3)\
    \ 'C-]\n           [(>= gpa 1.0) 'D+]\n           [(>= gpa 0.7) 'D]\n        \
    \   [(>= gpa 0.0) 'D-]\n           [else 'E])))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpfkvzhio2.rkt:40:14: read-syntax: unexpected `)`\n  context...:\n\
    \   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpym8ggv9v.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpym8ggv9v.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpym8ggv9v.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpym8ggv9v.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \    (map\n        (lambda (gpa)\n            (cond\n                [(>= gpa\
    \ 4.0) 'A+]\n                [(>= gpa 3.7) 'A]\n                [(>= gpa 3.3)\
    \ 'A-]\n                [(>= gpa 3.0) 'B+]\n                [(>= gpa 2.7) 'B]\n\
    \                [(>= gpa 2.3) 'B-]\n                [(>= gpa 2.0) 'C+]\n    \
    \            [(>= gpa 1.7) 'C]\n                [(>= gpa 1.3) 'C-]\n         \
    \       [(>= gpa 1.0) 'D+]\n                [(>= gpa 0.7) 'D]\n              \
    \  [(>= gpa 0.0) 'D-]\n                [else 'E]\n            )\n        )\n \
    \       grades\n    )\n)\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvf4915mg.rkt:52:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvf4915mg.rkt:53:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvf4915mg.rkt:54:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvf4915mg.rkt:55:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvf4915mg.rkt:56:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvf4915mg.rkt:57:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa) (cond [(= gpa 4.0) \"A+\"]\n                           [(>\
    \ gpa 3.7) \"A\"]\n                           [(> gpa 3.3) \"A-\"]\n         \
    \                  [(> gpa 3.0) \"B+\"]\n                           [(> gpa 2.7)\
    \ \"B\"]\n                           [(> gpa 2.3) \"B-\"]\n                  \
    \         [(> gpa 2.0) \"C+\"]\n                           [(> gpa 1.7) \"C\"\
    ]\n                           [(> gpa 1.3) \"C-\"]\n                         \
    \  [(> gpa 1.0) \"D+\"]\n                           [(> gpa 0.7) \"D\"]\n    \
    \                       [(> gpa 0.0) \"D-\"]\n                           [(= gpa\
    \ 0.0) \"E\"]))\n        grades))\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (for/list ([grade grades])\n    (cond\n      [(>= grade 4.0) 'A+]\n      [(>=\
    \ grade 3.7) 'A]\n      [(>= grade 3.3) 'A-]\n      [(>= grade 3.0) 'B+]\n   \
    \   [(>= grade 2.7) 'B]\n      [(>= grade 2.3) 'B-]\n      [(>= grade 2.0) 'C+]\n\
    \      [(>= grade 1.7) 'C]\n      [(>= grade 1.3) 'C-]\n      [(>= grade 1.0)\
    \ 'D+]\n      [(>= grade 0.7) 'D]\n      [(>= grade 0.0) 'D-]\n      [else 'E])))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf6cdng8q.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf6cdng8q.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf6cdng8q.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf6cdng8q.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf6cdng8q.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf6cdng8q.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (grade)\n     (cond [(<= 4.0 grade) \"A+\"]\n           [(<=\
    \ 3.7 grade) \"A\"]\n           [(<= 3.3 grade) \"A-\"]\n           [(<= 3.0 grade)\
    \ \"B+\"]\n           [(<= 2.7 grade) \"B\"]\n           [(<= 2.3 grade) \"B-\"\
    ]\n           [(<= 2.0 grade) \"C+\"]\n           [(<= 1.7 grade) \"C\"]\n   \
    \        [(<= 1.3 grade) \"C-\"]\n           [(<= 1.0 grade) \"D+\"]\n       \
    \    [(<= 0.7 grade) \"D\"]\n           [(<= 0.0 grade) \"D-\"]\n           [else\
    \           \"E\"]))\n   grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptkoc7_5b.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptkoc7_5b.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptkoc7_5b.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptkoc7_5b.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (grade)\n     (cond [(>= grade 4.0) 'A+]\n           [(>=\
    \ grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>= grade 3.0)\
    \ 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3) 'B-]\n    \
    \       [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n           [(>=\
    \ grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>= grade 0.7)\
    \ 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n   grades))\n\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeixh8786.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeixh8786.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeixh8786.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeixh8786.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeixh8786.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeixh8786.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (grade)\n     (cond\n       [(>= grade 4.0) \"A+\"]\n    \
    \   [(>= grade 3.7) \"A\"]\n       [(>= grade 3.3) \"A-\"]\n       [(>= grade\
    \ 3.0) \"B+\"]\n       [(>= grade 2.7) \"B\"]\n       [(>= grade 2.3) \"B-\"]\n\
    \       [(>= grade 2.0) \"C+\"]\n       [(>= grade 1.7) \"C\"]\n       [(>= grade\
    \ 1.3) \"C-\"]\n       [(>= grade 1.0) \"D+\"]\n       [(>= grade 0.7) \"D\"]\n\
    \       [(>= grade 0.0) \"D-\"]\n       [else \"E\"]))\n   grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4s14reya.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4s14reya.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4s14reya.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4s14reya.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond\n    [(and (>= 4.0 grades) (< grades 4.0)) 'A+]\n    [(and (>= 3.7 grades)\
    \ (< grades 3.7)) 'A]\n    [(and (>= 3.3 grades) (< grades 3.3)) 'A-]\n    [(and\
    \ (>= 3.0 grades) (< grades 3.0)) 'B+]\n    [(and (>= 2.7 grades) (< grades 2.7))\
    \ 'B]\n    [(and (>= 2.3 grades) (< grades 2.3)) 'B-]\n    [(and (>= 2.0 grades)\
    \ (< grades 2.0)) 'C+]\n    [(and (>= 1.7 grades) (< grades 1.7)) 'C]\n    [(and\
    \ (>= 1.3 grades) (< grades 1.3)) 'C-]\n    [(and (>= 1.0 grades) (< grades 1.0))\
    \ 'D+]\n    [(and (>= 0.7 grades) (< grades 0.7)) 'D]\n    [(and (>= 0.0 grades)\
    \ (< grades 0.0)) 'D-]\n    [(= grades 0.0) 'E]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp9ww7uef.rkt:45:4\n\
    \n>=: contract violation\n  expected: real?\n  given: '(4.0 3 1.7 2 3.5)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp9ww7uef.rkt:46:4\n\
    \n>=: contract violation\n  expected: real?\n  given: '(1.2)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp9ww7uef.rkt:47:4\n\
    \n>=: contract violation\n  expected: real?\n  given: '(0.5)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp9ww7uef.rkt:48:4\n\
    \n>=: contract violation\n  expected: real?\n  given: '(0.0)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp9ww7uef.rkt:49:4\n\
    \n>=: contract violation\n  expected: real?\n  given: '(1.0 0.3 1.5 2.8 3.3)\n\
    --------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpp9ww7uef.rkt:50:4\n\n>=: contract violation\n  expected: real?\n\
    \  given: '(0.0 0.7)\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (x)\n     (cond [(>= x 4.0) 'A+]\n           [(>= x 3.7) 'A]\n\
    \           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n           [(>= x 2.7)\
    \ 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n           [(>=\
    \ x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0) 'D+]\n     \
    \      [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else 'E]))\n\
    \   grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp08pt4ke8.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp08pt4ke8.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp08pt4ke8.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp08pt4ke8.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp08pt4ke8.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp08pt4ke8.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map grade_to_letter grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpy2jjw224.rkt:25:7: grade_to_letter: unbound identifier\n  in: grade_to_letter\n\
    \  location...:\n   /tmp/tmpy2jjw224.rkt:25:7\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (for/list ([g grades])\n    (cond\n      [(>= g 4.0) \"A+\"]\n      [(>= g\
    \ 3.7) \"A\"]\n      [(>= g 3.3) \"A-\"]\n      [(>= g 3.0) \"B+\"]\n      [(>=\
    \ g 2.7) \"B\"]\n      [(>= g 2.3) \"B-\"]\n      [(>= g 2.0) \"C+\"]\n      [(>=\
    \ g 1.7) \"C\"]\n      [(>= g 1.3) \"C-\"]\n      [(>= g 1.0) \"D+\"]\n      [(>=\
    \ g 0.7) \"D\"]\n      [(>= g 0.0) \"D-\"]\n      [else \"E\"])))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5q_hybnq.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5q_hybnq.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5q_hybnq.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5q_hybnq.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \    (map (lambda (grade)\n    (cond\n    [(>= grade 4.0) 'A+]\n    [(>= grade\
    \ 3.7) 'A]\n    [(>= grade 3.3) 'A-]\n    [(>= grade 3.0) 'B+]\n    [(>= grade\
    \ 2.7) 'B]\n    [(>= grade 2.3) 'B-]\n    [(>= grade 2.0) 'C+]\n    [(>= grade\
    \ 1.7) 'C]\n    [(>= grade 1.3) 'C-]\n    [(>= grade 1.0) 'D+]\n    [(>= grade\
    \ 0.7) 'D]\n    [(>= grade 0.0) 'D-]\n    [else 'E])) grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4xwqfj07.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4xwqfj07.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4xwqfj07.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4xwqfj07.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4xwqfj07.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4xwqfj07.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n        \
    \   [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0)\
    \ \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n   \
    \        [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x\
    \ 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n\
    \           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]\n           [else\
    \ \"X\"])) grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps38f14pf.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps38f14pf.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps38f14pf.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps38f14pf.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond ((>= (car grades) 4.0) 'A+)\n        ((>= (car grades) 3.7) 'A)\n   \
    \     ((>= (car grades) 3.3) 'A-)\n        ((>= (car grades) 3.0) 'B+)\n     \
    \   ((>= (car grades) 2.7) 'B)\n        ((>= (car grades) 2.3) 'B-)\n        ((>=\
    \ (car grades) 2.0) 'C+)\n        ((>= (car grades) 1.7) 'C)\n        ((>= (car\
    \ grades) 1.3) 'C-)\n        ((>= (car grades) 1.0) 'D+)\n        ((>= (car grades)\
    \ 0.7) 'D)\n        ((>= (car grades) 0.0) 'D-)\n        (else 'E)))\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3i_tfbnr.rkt:43:4

    actual:     ''A+

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3i_tfbnr.rkt:44:4

    actual:     ''D+

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3i_tfbnr.rkt:45:4

    actual:     ''D-

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3i_tfbnr.rkt:46:4

    actual:     ''D-

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3i_tfbnr.rkt:47:4

    actual:     ''D+

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3i_tfbnr.rkt:48:4

    actual:     ''D-

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (letrec ([gpa_letter-grade (lambda (gpa)\n                               (cond\
    \ [(>= gpa 4.0) 'A+]\n                                     [(>= gpa 3.7) 'A]\n\
    \                                     [(>= gpa 3.3) 'A-]\n                   \
    \                  [(>= gpa 3.0) 'B+]\n                                     [(>=\
    \ gpa 2.7) 'B]\n                                     [(>= gpa 2.3) 'B-]\n    \
    \                                 [(>= gpa 2.0) 'C+]\n                       \
    \              [(>= gpa 1.7) 'C]\n                                     [(>= gpa\
    \ 1.3) 'C-]\n                                     [(>= gpa 1.0) 'D+]\n       \
    \                              [(>= gpa 0.7) 'D]\n                           \
    \          [(>= gpa 0.0) 'D-]\n                                     [else 'E]))])\n\
    \    (map gpa_letter-grade grades)))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppq7uw7ja.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppq7uw7ja.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppq7uw7ja.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppq7uw7ja.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppq7uw7ja.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppq7uw7ja.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond\n    [(= (remainder grades 4) 0) 'A+]\n    [(>= grades 3.7) 'A]\n   \
    \ [(>= grades 3.3) 'A-]\n    [(>= grades 3.0) 'B+]\n    [(>= grades 2.7) 'B]\n\
    \    [(>= grades 2.3) 'B-]\n    [(>= grades 2.0) 'C+]\n    [(>= grades 1.7) 'C]\n\
    \    [(>= grades 1.3) 'C-]\n    [(>= grades 1.0) 'D+]\n    [(>= grades 0.7) 'D]\n\
    \    [(>= grades 0.0) 'D-]\n    [else 'E]))\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp64do3487.rkt:44:4\n\
    \nremainder: contract violation\n  expected: integer?\n  given: '(4.0 3 1.7 2\
    \ 3.5)\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmp64do3487.rkt:45:4\n\nremainder: contract violation\n  expected:\
    \ integer?\n  given: '(1.2)\n--------------------\n--------------------\nERROR\n\
    name:       check-equal?\nlocation:   /tmp/tmp64do3487.rkt:46:4\n\nremainder:\
    \ contract violation\n  expected: integer?\n  given: '(0.5)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp64do3487.rkt:47:4\n\
    \nremainder: contract violation\n  expected: integer?\n  given: '(0.0)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp64do3487.rkt:48:4\n\
    \nremainder: contract violation\n  expected: integer?\n  given: '(1.0 0.3 1.5\
    \ 2.8 3.3)\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmp64do3487.rkt:49:4\n\nremainder: contract violation\n  expected:\
    \ integer?\n  given: '(0.0 0.7)\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (define (helper grade)\n    (cond\n      [(>= grade 4.0) \"A+\"]\n      [(>=\
    \ grade 3.7) \"A\"]\n      [(>= grade 3.3) \"A-\"]\n      [(>= grade 3.0) \"B+\"\
    ]\n      [(>= grade 2.7) \"B\"]\n      [(>= grade 2.3) \"B-\"]\n      [(>= grade\
    \ 2.0) \"C+\"]\n      [(>= grade 1.7) \"C\"]\n      [(>= grade 1.3) \"C-\"]\n\
    \      [(>= grade 1.0) \"D+\"]\n      [(>= grade 0.7) \"D\"]\n      [(>= grade\
    \ 0.0) \"D-\"]\n      [else \"E\"]))\n  (map helper grades))\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwqa3z0t6.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwqa3z0t6.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwqa3z0t6.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwqa3z0t6.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n    \
    \       [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [else \"\
    E\"]))\n       grades))\n(require rackunit)\n\n(define (test-humaneval) \n\n \
    \ (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk9ix_gur.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk9ix_gur.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk9ix_gur.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk9ix_gur.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (gpa)\n     (cond ((>= gpa 4.0) \"A+\")\n           ((>= gpa\
    \ 3.7) \"A\")\n           ((>= gpa 3.3) \"A-\")\n           ((>= gpa 3.0) \"B+\"\
    )\n           ((>= gpa 2.7) \"B\")\n           ((>= gpa 2.3) \"B-\")\n       \
    \    ((>= gpa 2.0) \"C+\")\n           ((>= gpa 1.7) \"C\")\n           ((>= gpa\
    \ 1.3) \"C-\")\n           ((>= gpa 1.0) \"D+\")\n           ((>= gpa 0.7) \"\
    D\")\n           ((>= gpa 0.0) \"D-\")\n           (else \"E\")))\n   grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpng_jl9v7.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpng_jl9v7.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpng_jl9v7.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpng_jl9v7.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \    (cond [(>= (first grades) 4.0) 'A+]\n          [(>= (first grades) 3.7) 'A]\n\
    \          [(>= (first grades) 3.3) 'A-]\n          [(>= (first grades) 3.0) 'B+]\n\
    \          [(>= (first grades) 2.7) 'B]\n          [(>= (first grades) 2.3) 'B-]\n\
    \          [(>= (first grades) 2.0) 'C+]\n          [(>= (first grades) 1.7) 'C]\n\
    \          [(>= (first grades) 1.3) 'C-]\n          [(>= (first grades) 1.0) 'D+]\n\
    \          [(>= (first grades) 0.7) 'D]\n          [(>= (first grades) 0.0) 'D-]\n\
    \          [else 'E]))\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6re7iyeu.rkt:43:4

    actual:     ''A+

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6re7iyeu.rkt:44:4

    actual:     ''D+

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6re7iyeu.rkt:45:4

    actual:     ''D-

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6re7iyeu.rkt:46:4

    actual:     ''D-

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6re7iyeu.rkt:47:4

    actual:     ''D+

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6re7iyeu.rkt:48:4

    actual:     ''D-

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (define (helper)\n    (cond\n      [(empty? grades) '()]\n      [(> (first\
    \ grades) 3.7) (cons 'A+ (helper))]\n      [(> (first grades) 3.3) (cons 'A (helper))]\n\
    \      [(> (first grades) 3.0) (cons 'A- (helper))]\n      [(> (first grades)\
    \ 2.7) (cons 'B+ (helper))]\n      [(> (first grades) 2.3) (cons 'B (helper))]\n\
    \      [(> (first grades) 2.0) (cons 'B- (helper))]\n      [(> (first grades)\
    \ 1.7) (cons 'C+ (helper))]\n      [(> (first grades) 1.3) (cons 'C (helper))]\n\
    \      [(> (first grades) 1.0) (cons 'C- (helper))]\n      [(> (first grades)\
    \ 0.7) (cons 'D+ (helper))]\n      [(> (first grades) 0.0) (cons 'D (helper))]\n\
    \      [(> (first grades) -1.0) (cons 'D- (helper))]\n      [else (cons 'E (helper))])))\n\
    \  (helper))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpvmjw1o7x.rkt:41:10: read-syntax: unexpected `)`\n  context...:\n\
    \   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (gpa)\n     (cond ((>= gpa 4.0) \"A+\")\n           ((>= gpa\
    \ 3.7) \"A\")\n           ((>= gpa 3.3) \"A-\")\n           ((>= gpa 3.0) \"B+\"\
    )\n           ((>= gpa 2.7) \"B\")\n           ((>= gpa 2.3) \"B-\")\n       \
    \    ((>= gpa 2.0) \"C+\")\n           ((>= gpa 1.7) \"C\")\n           ((>= gpa\
    \ 1.3) \"C-\")\n           ((>= gpa 1.0) \"D+\")\n           ((>= gpa 0.7) \"\
    D\")\n           ((>= gpa 0.0) \"D-\")\n           (else \"E\")))\n   grades))\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp59t2ounx.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp59t2ounx.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp59t2ounx.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp59t2ounx.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (grade)\n     (cond [(>= grade 4.0) 'A+]\n           [(>=\
    \ grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>= grade 3.0)\
    \ 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3) 'B-]\n    \
    \       [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n           [(>=\
    \ grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>= grade 0.7)\
    \ 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n   grades))\n\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppig18v7d.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppig18v7d.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppig18v7d.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppig18v7d.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppig18v7d.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppig18v7d.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n    \
    \       [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [else \"\
    E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps9blut6a.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps9blut6a.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps9blut6a.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps9blut6a.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (gpa)\n     (cond\n       [(>= gpa 4.0) (cons gpa 'A+)]\n\
    \       [(>= gpa 3.7) (cons gpa 'A)]\n       [(>= gpa 3.3) (cons gpa 'A-)]\n \
    \      [(>= gpa 3.0) (cons gpa 'B+)]\n       [(>= gpa 2.7) (cons gpa 'B)]\n  \
    \     [(>= gpa 2.3) (cons gpa 'B-)]\n       [(>= gpa 2.0) (cons gpa 'C+)]\n  \
    \     [(>= gpa 1.7) (cons gpa 'C)]\n       [(>= gpa 1.3) (cons gpa 'C-)]\n   \
    \    [(>= gpa 1.0) (cons gpa 'D+)]\n       [(>= gpa 0.7) (cons gpa 'D)]\n    \
    \   [(>= gpa 0.0) (cons gpa 'D-)]\n       [(>= gpa 0.0) (cons gpa 'E)]\n     \
    \  )\n     )\n   grades\n   )\n  )\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprs28dk5s.rkt:52:4

    actual:     ''((4.0 . A+) (3 . B+) (1.7 . C) (2 . C+) (3.5 . A-))

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprs28dk5s.rkt:53:4

    actual:     ''((1.2 . D+))

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprs28dk5s.rkt:54:4

    actual:     ''((0.5 . D-))

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprs28dk5s.rkt:55:4

    actual:     ''((0.0 . D-))

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprs28dk5s.rkt:56:4

    actual:     ''((1.0 . D+) (0.3 . D-) (1.5 . C-) (2.8 . B) (3.3 . A-))

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprs28dk5s.rkt:57:4

    actual:     ''((0.0 . D-) (0.7 . D))

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (for/list ([g grades])\n    (cond [(>= g 4.0) \"A+\"]\n          [(>= g 3.7)\
    \ \"A\"]\n          [(>= g 3.3) \"A-\"]\n          [(>= g 3.0) \"B+\"]\n     \
    \     [(>= g 2.7) \"B\"]\n          [(>= g 2.3) \"B-\"]\n          [(>= g 2.0)\
    \ \"C+\"]\n          [(>= g 1.7) \"C\"]\n          [(>= g 1.3) \"C-\"]\n     \
    \     [(>= g 1.0) \"D+\"]\n          [(>= g 0.7) \"D\"]\n          [(>= g 0.0)\
    \ \"D-\"]\n          [else \"E\"])))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgvr01_bg.rkt:45:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgvr01_bg.rkt:48:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgvr01_bg.rkt:49:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgvr01_bg.rkt:50:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond [(empty? grades) empty]\n        [(empty? (rest grades)) (list (numerical_to_letter\
    \ (first grades)))]\n        [else (cons (numerical_to_letter (first grades))\
    \ (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpkfy9miqp.rkt:26:39: numerical_to_letter: unbound identifier\n \
    \ in: numerical_to_letter\n  location...:\n   /tmp/tmpkfy9miqp.rkt:26:39\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) 'A+]\n       \
    \    [(>= gpa 3.7) 'A]\n           [(>= gpa 3.3) 'A-]\n           [(>= gpa 3.0)\
    \ 'B+]\n           [(>= gpa 2.7) 'B]\n           [(>= gpa 2.3) 'B-]\n        \
    \   [(>= gpa 2.0) 'C+]\n           [(>= gpa 1.7) 'C]\n           [(>= gpa 1.3)\
    \ 'C-]\n           [(>= gpa 1.0) 'D+]\n           [(>= gpa 0.7) 'D]\n        \
    \   [(>= gpa 0.0) 'D-]\n           [else 'E])))\n  grades)\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptwulecul.rkt:47:4\n\
    \nmap: arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmptwulecul.rkt:48:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmptwulecul.rkt:49:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmptwulecul.rkt:50:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmptwulecul.rkt:51:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmptwulecul.rkt:52:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7)\
    \ 'A]\n               [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n    \
    \           [(>= x 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>=\
    \ x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n\
    \               [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n           \
    \    [(>= x 0.0) 'D-]\n               [else 'E]))\n       grades))\n\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjnqboz5x.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjnqboz5x.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjnqboz5x.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjnqboz5x.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjnqboz5x.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjnqboz5x.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \    (cond [(empty? grades) empty]\n          [(empty? (rest grades))\n      \
    \     (if (<= (first grades) 4.0)\n               (if (>= (first grades) 3.7)\n\
    \                   (list 'A+)\n                   (if (>= (first grades) 3.3)\n\
    \                       (list 'A)\n                       (if (>= (first grades)\
    \ 3.0)\n                           (list 'A-)\n                           (if\
    \ (>= (first grades) 2.7)\n                               (list 'B+)\n       \
    \                        (if (>= (first grades) 2.3)\n                       \
    \            (list 'B)\n                                   (if (>= (first grades)\
    \ 2.0)\n                                       (list 'B-)\n                  \
    \                     (if (>= (first grades) 1.7)\n                          \
    \                 (list 'C+)\n                                           (if (>=\
    \ (first grades) 1.3)\n                                               (list 'C)\n\
    \                                               (if (>= (first grades) 1.0)\n\
    \                                                   (list 'C-)\n             \
    \                                      (if (>= (first grades) 0.7)\n         \
    \                                              (list 'D+)\n                  \
    \                                     (if (>= (first grades) 0.0)\n          \
    \                                                 (list 'D)\n                \
    \                                           (list 'E))))))))))))))))]\n      \
    \    [else (append (numerical_letter_grade (list (first grades)))\n          \
    \              (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpyjzc7kql.rkt:50:80: read-syntax: missing `]` to close `[` on line\
    \ 26, found instead `)`\n  possible cause: indentation suggests a missing `]`\
    \ before line 27\n  context...:\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) \"A+\"]\n               [(>=\
    \ gpa 3.7) \"A\"]\n               [(>= gpa 3.3) \"A-\"]\n               [(>= gpa\
    \ 3.0) \"B+\"]\n               [(>= gpa 2.7) \"B\"]\n               [(>= gpa 2.3)\
    \ \"B-\"]\n               [(>= gpa 2.0) \"C+\"]\n               [(>= gpa 1.7)\
    \ \"C\"]\n               [(>= gpa 1.3) \"C-\"]\n               [(>= gpa 1.0) \"\
    D+\"]\n               [(>= gpa 0.7) \"D\"]\n               [(>= gpa 0.0) \"D-\"\
    ]\n               [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz1o3_32b.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz1o3_32b.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz1o3_32b.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz1o3_32b.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond\n    [(<= 4.0 (car grades)) 'A+]\n    [(<= 3.7 (car grades)) 'A]\n  \
    \  [(<= 3.3 (car grades)) 'A-]\n    [(<= 3.0 (car grades)) 'B+]\n    [(<= 2.7\
    \ (car grades)) 'B]\n    [(<= 2.3 (car grades)) 'B-]\n    [(<= 2.0 (car grades))\
    \ 'C+]\n    [(<= 1.7 (car grades)) 'C]\n    [(<= 1.3 (car grades)) 'C-]\n    [(<=\
    \ 1.0 (car grades)) 'D+]\n    [(<= 0.7 (car grades)) 'D]\n    [(<= 0.0 (car grades))\
    \ 'D-]\n    [else 'E]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpboe98xx7.rkt:45:4

    actual:     ''A+

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpboe98xx7.rkt:46:4

    actual:     ''D+

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpboe98xx7.rkt:47:4

    actual:     ''D-

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpboe98xx7.rkt:48:4

    actual:     ''D-

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpboe98xx7.rkt:49:4

    actual:     ''D+

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpboe98xx7.rkt:50:4

    actual:     ''D-

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (gpa)\n     (if (>= gpa 4.0) 'A+\n         (if (>= gpa 3.7)\
    \ 'A\n             (if (>= gpa 3.3) 'A-\n                 (if (>= gpa 3.0) 'B+\n\
    \                     (if (>= gpa 2.7) 'B\n                         (if (>= gpa\
    \ 2.3) 'B-\n                             (if (>= gpa 2.0) 'C+\n              \
    \                   (if (>= gpa 1.7) 'C\n                                    \
    \ (if (>= gpa 1.3) 'C-\n                                         (if (>= gpa 1.0)\
    \ 'D+\n                                             (if (>= gpa 0.7) 'D\n    \
    \                                             (if (>= gpa 0.0) 'D-\n         \
    \                                            'E\n                            \
    \                         ))))))))))))))\n   grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpt43ofx5d.rkt:41:10: read-syntax: unexpected `)`\n  context...:\n\
    \   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph8a5f4fm.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph8a5f4fm.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph8a5f4fm.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph8a5f4fm.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph8a5f4fm.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph8a5f4fm.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (gpa)\n     (cond\n       ((>= gpa 4.0) 'A+)\n       ((>=\
    \ gpa 3.7) 'A)\n       ((>= gpa 3.3) 'A-)\n       ((>= gpa 3.0) 'B+)\n       ((>=\
    \ gpa 2.7) 'B)\n       ((>= gpa 2.3) 'B-)\n       ((>= gpa 2.0) 'C+)\n       ((>=\
    \ gpa 1.7) 'C)\n       ((>= gpa 1.3) 'C-)\n       ((>= gpa 1.0) 'D+)\n       ((>=\
    \ gpa 0.7) 'D)\n       ((>= gpa 0.0) 'D-)\n       (else 'E)))\n   grades))\n\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkeubf8wz.rkt:48:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkeubf8wz.rkt:49:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkeubf8wz.rkt:50:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkeubf8wz.rkt:51:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkeubf8wz.rkt:52:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkeubf8wz.rkt:53:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond ((>= grade 4.0)\n                'A+)\n\
    \               ((>= grade 3.7)\n                'A)\n               ((>= grade\
    \ 3.3)\n                'A-)\n               ((>= grade 3.0)\n               \
    \ 'B+)\n               ((>= grade 2.7)\n                'B)\n               ((>=\
    \ grade 2.3)\n                'B-)\n               ((>= grade 2.0)\n         \
    \       'C+)\n               ((>= grade 1.7)\n                'C)\n          \
    \     ((>= grade 1.3)\n                'C-)\n               ((>= grade 1.0)\n\
    \                'D+)\n               ((>= grade 0.7)\n                'D)\n \
    \              ((>= grade 0.0)\n                'D-)\n               (else\n \
    \               'E)))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfgt66cgg.rkt:59:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfgt66cgg.rkt:60:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfgt66cgg.rkt:61:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfgt66cgg.rkt:62:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfgt66cgg.rkt:63:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfgt66cgg.rkt:64:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (\u03BB (g)\n         (cond ((>= g 4.0) \"A+\")\n               ((>= g\
    \ 3.7) \"A\")\n               ((>= g 3.3) \"A-\")\n               ((>= g 3.0)\
    \ \"B+\")\n               ((>= g 2.7) \"B\")\n               ((>= g 2.3) \"B-\"\
    )\n               ((>= g 2.0) \"C+\")\n               ((>= g 1.7) \"C\")\n   \
    \            ((>= g 1.3) \"C-\")\n               ((>= g 1.0) \"D+\")\n       \
    \        ((>= g 0.7) \"D\")\n               ((>= g 0.0) \"D-\")\n            \
    \   (else \"E\")))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkaekxmkn.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkaekxmkn.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkaekxmkn.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkaekxmkn.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n            \
    \   [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n         \
    \      [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"]\n      \
    \         [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"]\n  \
    \             [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"]\n\
    \               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxjwhk6eu.rkt:45:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxjwhk6eu.rkt:48:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxjwhk6eu.rkt:49:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxjwhk6eu.rkt:50:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \   (map numerical_to_letter grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpclvdq1m4.rkt:25:8: numerical_to_letter: unbound identifier\n  in:\
    \ numerical_to_letter\n  location...:\n   /tmp/tmpclvdq1m4.rkt:25:8\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (for/list ([g grades])\n    (cond\n      [(>= g 4.0) \"A+\"]\n      [(>= g\
    \ 3.7) \"A\"]\n      [(>= g 3.3) \"A-\"]\n      [(>= g 3.0) \"B+\"]\n      [(>=\
    \ g 2.7) \"B\"]\n      [(>= g 2.3) \"B-\"]\n      [(>= g 2.0) \"C+\"]\n      [(>=\
    \ g 1.7) \"C\"]\n      [(>= g 1.3) \"C-\"]\n      [(>= g 1.0) \"D+\"]\n      [(>=\
    \ g 0.7) \"D\"]\n      [(>= g 0.0) \"D-\"]\n      [else \"E\"])))\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeuwurxfh.rkt:45:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeuwurxfh.rkt:48:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeuwurxfh.rkt:49:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeuwurxfh.rkt:50:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (x)\n     (cond\n       [(>= x 4.0)\n        \"A+\"]\n   \
    \    [(>= x 3.7)\n        \"A\"]\n       [(>= x 3.3)\n        \"A-\"]\n      \
    \ [(>= x 3.0)\n        \"B+\"]\n       [(>= x 2.7)\n        \"B\"]\n       [(>=\
    \ x 2.3)\n        \"B-\"]\n       [(>= x 2.0)\n        \"C+\"]\n       [(>= x\
    \ 1.7)\n        \"C\"]\n       [(>= x 1.3)\n        \"C-\"]\n       [(>= x 1.0)\n\
    \        \"D+\"]\n       [(>= x 0.7)\n        \"D\"]\n       [(>= x 0.0)\n   \
    \     \"D-\"]\n       [(= x 0.0)\n        \"E\"]))\n   grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplre2n94d.rkt:61:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplre2n94d.rkt:64:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplre2n94d.rkt:65:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplre2n94d.rkt:66:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n               [(>= x\
    \ 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>= x 3.0)\
    \ \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3) \"B-\"\
    ]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"]\n   \
    \            [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n       \
    \        [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n            \
    \   [(>= x 0.0) \"E\"]\n               ))\n        grades))\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1ferk866.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1ferk866.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1ferk866.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1ferk866.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (gpa)\n     (cond\n       [(< gpa 4.0)\n        (cond\n  \
    \        [(< gpa 3.7)\n           (cond\n             [(< gpa 3.3)\n         \
    \     (cond\n                [(< gpa 3.0)\n                 (cond\n          \
    \         [(< gpa 2.7)\n                    (cond\n                      [(< gpa\
    \ 2.3)\n                       (cond\n                         [(< gpa 2.0)\n\
    \                          (cond\n                            [(< gpa 1.7)\n \
    \                            (cond\n                               [(< gpa 1.3)\n\
    \                                (cond\n                                  [(<\
    \ gpa 1.0)\n                                   (cond\n                       \
    \              [(< gpa 0.7)\n                                      (cond\n   \
    \                                     [(< gpa 0.0)\n                         \
    \                (cond\n                                           [(< gpa 0.0)\n\
    \                                            \"E\"]\n                        \
    \                   [\"D-\"])\n                                        [\"D\"\
    ]])\n                                     [\"D+\"]])\n                       \
    \           [\"C-\"]])\n                               [\"C\"]])\n           \
    \                 [\"C+\"]])\n                         [\"B-\"]])\n          \
    \            [\"B\"]])\n                   [\"B+\"]])\n                [\"A-\"\
    ]])\n             [\"A\"]])\n          [\"A+\"]])\n       [\"F\"]])\n     gpa))\n\
    \  grades)\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpm19m_gzi.rkt:75:4\n\
    \nmap: arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpm19m_gzi.rkt:76:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpm19m_gzi.rkt:77:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpm19m_gzi.rkt:78:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpm19m_gzi.rkt:79:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpm19m_gzi.rkt:80:4\n\nmap:\
    \ arity mismatch;\n the expected number of arguments does not match the given\
    \ number\n  expected: at least 2\n  given: 1\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map \n   (lambda (grade)\n     (cond [(>= grade 4.0) \"A+\"]\n           [(>=\
    \ grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n           [(>= grade\
    \ 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n           [(>= grade 2.3)\
    \ \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>= grade 1.7) \"C\"\
    ]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade 1.0) \"D+\"]\n  \
    \         [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0) \"D-\"]\n       \
    \    [else \"E\"]))\n   grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5mthjbqn.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5mthjbqn.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5mthjbqn.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5mthjbqn.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           ((>= grade 4.0) 'A+)\n   \
    \        ((>= grade 3.7) 'A)\n           ((>= grade 3.3) 'A-)\n           ((>=\
    \ grade 3.0) 'B+)\n           ((>= grade 2.7) 'B)\n           ((>= grade 2.3)\
    \ 'B-)\n           ((>= grade 2.0) 'C+)\n           ((>= grade 1.7) 'C)\n    \
    \       ((>= grade 1.3) 'C-)\n           ((>= grade 1.0) 'D+)\n           ((>=\
    \ grade 0.7) 'D)\n           ((>= grade 0.0) 'D-)\n           (else 'E)))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvjvgva7n.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvjvgva7n.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvjvgva7n.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvjvgva7n.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvjvgva7n.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvjvgva7n.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond [(empty? grades) empty]\n        [(< (first grades) 0) (cons \"E\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 4) (cons \"E\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(>= (first grades) 4) (cons \"A+\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(>= (first grades) 3.7) (cons \"A\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(>= (first grades) 3.3) (cons \"A-\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(>= (first grades) 3) (cons \"B+\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(>= (first grades) 2.7) (cons \"B\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(>= (first grades) 2.3) (cons \"B-\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(>= (first grades) 2) (cons \"C+\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(>= (first grades) 1.7) (cons \"C\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(>= (first grades) 1.3) (cons \"C-\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(>= (first grades) 1) (cons \"D+\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(>= (first grades) 0.7) (cons \"D\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(>= (first grades) 0) (cons \"D-\" (numerical_letter_grade\
    \ (rest grades)))]\n        [else (cons \"E\" (numerical_letter_grade (rest grades)))]))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprjm5gfge.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprjm5gfge.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprjm5gfge.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprjm5gfge.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (for/list ((n (in-list grades)))\n    (cond [(>= n 4.0) 'A+]\n          [(>=\
    \ n 3.7) 'A]\n          [(>= n 3.3) 'A-]\n          [(>= n 3.0) 'B+]\n       \
    \   [(>= n 2.7) 'B]\n          [(>= n 2.3) 'B-]\n          [(>= n 2.0) 'C+]\n\
    \          [(>= n 1.7) 'C]\n          [(>= n 1.3) 'C-]\n          [(>= n 1.0)\
    \ 'D+]\n          [(>= n 0.7) 'D]\n          [(>= n 0.0) 'D-]\n          [else\
    \      'E])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplviybn3p.rkt:45:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplviybn3p.rkt:46:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplviybn3p.rkt:47:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplviybn3p.rkt:48:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplviybn3p.rkt:49:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplviybn3p.rkt:50:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n          (cond\n            [(>= gpa 4.0) \"A+\"]\n  \
    \          [(>= gpa 3.7) \"A\"]\n            [(>= gpa 3.3) \"A-\"]\n         \
    \   [(>= gpa 3.0) \"B+\"]\n            [(>= gpa 2.7) \"B\"]\n            [(>=\
    \ gpa 2.3) \"B-\"]\n            [(>= gpa 2.0) \"C+\"]\n            [(>= gpa 1.7)\
    \ \"C\"]\n            [(>= gpa 1.3) \"C-\"]\n            [(>= gpa 1.0) \"D+\"\
    ]\n            [(>= gpa 0.7) \"D\"]\n            [(>= gpa 0.0) \"D-\"]\n     \
    \       [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph149oy_v.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph149oy_v.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph149oy_v.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph149oy_v.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) 'A+]\n       \
    \    [(>= gpa 3.7) 'A]\n           [(>= gpa 3.3) 'A-]\n           [(>= gpa 3.0)\
    \ 'B+]\n           [(>= gpa 2.7) 'B]\n           [(>= gpa 2.3) 'B-]\n        \
    \   [(>= gpa 2.0) 'C+]\n           [(>= gpa 1.7) 'C]\n           [(>= gpa 1.3)\
    \ 'C-]\n           [(>= gpa 1.0) 'D+]\n           [(>= gpa 0.7) 'D]\n        \
    \   [(>= gpa 0.0) 'D-]\n           [else        'E]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp4erhe6q.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp4erhe6q.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp4erhe6q.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp4erhe6q.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp4erhe6q.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp4erhe6q.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond ((>= gpa 4.0) 'A+)\n               ((>=\
    \ gpa 3.7) 'A)\n               ((>= gpa 3.3) 'A-)\n               ((>= gpa 3.0)\
    \ 'B+)\n               ((>= gpa 2.7) 'B)\n               ((>= gpa 2.3) 'B-)\n\
    \               ((>= gpa 2.0) 'C+)\n               ((>= gpa 1.7) 'C)\n       \
    \        ((>= gpa 1.3) 'C-)\n               ((>= gpa 1.0) 'D+)\n             \
    \  ((>= gpa 0.7) 'D)\n               ((>= gpa 0.0) 'D-)\n               (else\
    \         'E)))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw3iqpcm2.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw3iqpcm2.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw3iqpcm2.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw3iqpcm2.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw3iqpcm2.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw3iqpcm2.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond [(member grade grades) 'A+]\n        [(member grade grades) 'A]\n   \
    \     [(member grade grades) 'A-]\n        [(member grade grades) 'B+]\n     \
    \   [(member grade grades) 'B]\n        [(member grade grades) 'B-]\n        [(member\
    \ grade grades) 'C+]\n        [(member grade grades) 'C]\n        [(member grade\
    \ grades) 'C-]\n        [(member grade grades) 'D+]\n        [(member grade grades)\
    \ 'D]\n        [(member grade grades) 'D-]\n        [(member grade grades) 'E]))\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmp6b09r4l3.rkt:25:17: grade: unbound identifier\n  in: grade\n  location...:\n\
    \   /tmp/tmp6b09r4l3.rkt:25:17\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           ((= gpa 4.0) 'A+)\n        \
    \   ((> gpa 3.7) 'A)\n           ((> gpa 3.3) 'A-)\n           ((> gpa 3.0) 'B+)\n\
    \           ((> gpa 2.7) 'B)\n           ((> gpa 2.3) 'B-)\n           ((> gpa\
    \ 2.0) 'C+)\n           ((> gpa 1.7) 'C)\n           ((> gpa 1.3) 'C-)\n     \
    \      ((> gpa 1.0) 'D+)\n           ((> gpa 0.7) 'D)\n           ((> gpa 0.0)\
    \ 'D-)\n           (else 'E)\n           )\n         )\n        grades\n     \
    \   )\n  )\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp44ux7v73.rkt:51:4

    actual:     ''(A+ B C- C A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp44ux7v73.rkt:52:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp44ux7v73.rkt:53:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp44ux7v73.rkt:54:4

    actual:     ''(E)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp44ux7v73.rkt:55:4

    actual:     ''(D D- C- B B+)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp44ux7v73.rkt:56:4

    actual:     ''(E D-)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (gpa)\n     (cond\n       [(>= gpa 4.0) \"A+\"]\n       [(>=\
    \ gpa 3.7) \"A\"]\n       [(>= gpa 3.3) \"A-\"]\n       [(>= gpa 3.0) \"B+\"]\n\
    \       [(>= gpa 2.7) \"B\"]\n       [(>= gpa 2.3) \"B-\"]\n       [(>= gpa 2.0)\
    \ \"C+\"]\n       [(>= gpa 1.7) \"C\"]\n       [(>= gpa 1.3) \"C-\"]\n       [(>=\
    \ gpa 1.0) \"D+\"]\n       [(>= gpa 0.7) \"D\"]\n       [(>= gpa 0.0) \"D-\"]\n\
    \       [else \"E\"]))\n   grades))\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1sx2lpul.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1sx2lpul.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1sx2lpul.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1sx2lpul.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x) (if (>= x 4.0) \"A+\"\n                      (if (>= x 3.7)\
    \ \"A\"\n                          (if (>= x 3.3) \"A-\"\n                   \
    \           (if (>= x 3.0) \"B+\"\n                                  (if (>= x\
    \ 2.7) \"B\"\n                                      (if (>= x 2.3) \"B-\"\n  \
    \                                        (if (>= x 2.0) \"C+\"\n             \
    \                                 (if (>= x 1.7) \"C\"\n                     \
    \                             (if (>= x 1.3) \"C-\"\n                        \
    \                              (if (>= x 1.0) \"D+\"\n                       \
    \                                   (if (>= x 0.7) \"D\"\n                   \
    \                                           (if (>= x 0.0) \"D-\"\n          \
    \                                                        \"E\"))))))))))))\n \
    \             grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpaa2bxg3v.rkt:24:0: read-syntax: expected a `)` to close `(`\n \
    \ possible cause: indentation suggests a missing `)` before line 40\n  context...:\n\
    \   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \   (for/list ((g grades))\n     (cond\n       [(>= g 4.0) \"A+\"]\n       [(>=\
    \ g 3.7) \"A\"]\n       [(>= g 3.3) \"A-\"]\n       [(>= g 3.0) \"B+\"]\n    \
    \   [(>= g 2.7) \"B\"]\n       [(>= g 2.3) \"B-\"]\n       [(>= g 2.0) \"C+\"\
    ]\n       [(>= g 1.7) \"C\"]\n       [(>= g 1.3) \"C-\"]\n       [(>= g 1.0) \"\
    D+\"]\n       [(>= g 0.7) \"D\"]\n       [(>= g 0.0) \"D-\"]\n       [else \"\
    E\"])))\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfcgizcbs.rkt:45:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfcgizcbs.rkt:48:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfcgizcbs.rkt:49:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfcgizcbs.rkt:50:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa) (cond\n                      [(>= gpa 4.0) 'A+]\n      \
    \                [(>= gpa 3.7) 'A]\n                      [(>= gpa 3.3) 'A-]\n\
    \                      [(>= gpa 3.0) 'B+]\n                      [(>= gpa 2.7)\
    \ 'B]\n                      [(>= gpa 2.3) 'B-]\n                      [(>= gpa\
    \ 2.0) 'C+]\n                      [(>= gpa 1.7) 'C]\n                      [(>=\
    \ gpa 1.3) 'C-]\n                      [(>= gpa 1.0) 'D+]\n                  \
    \    [(>= gpa 0.7) 'D]\n                      [(>= gpa 0.0) 'D-]\n           \
    \           [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5hvfaoeg.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5hvfaoeg.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5hvfaoeg.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5hvfaoeg.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5hvfaoeg.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5hvfaoeg.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (gpa)\n     (cond\n       [(<= 4.0 gpa) \"A+\"]\n       [(<=\
    \ 3.7 gpa) \"A\"]\n       [(<= 3.3 gpa) \"A-\"]\n       [(<= 3.0 gpa) \"B+\"]\n\
    \       [(<= 2.7 gpa) \"B\"]\n       [(<= 2.3 gpa) \"B-\"]\n       [(<= 2.0 gpa)\
    \ \"C+\"]\n       [(<= 1.7 gpa) \"C\"]\n       [(<= 1.3 gpa) \"C-\"]\n       [(<=\
    \ 1.0 gpa) \"D+\"]\n       [(<= 0.7 gpa) \"D\"]\n       [(<= 0.0 gpa) \"D-\"]\n\
    \       [else \"E\"]))\n   grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz1bs3t__.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz1bs3t__.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz1bs3t__.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz1bs3t__.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond ((>= grade 4.0) 'A+)\n               ((>=\
    \ grade 3.7) 'A)\n               ((>= grade 3.3) 'A-)\n               ((>= grade\
    \ 3.0) 'B+)\n               ((>= grade 2.7) 'B)\n               ((>= grade 2.3)\
    \ 'B-)\n               ((>= grade 2.0) 'C+)\n               ((>= grade 1.7) 'C)\n\
    \               ((>= grade 1.3) 'C-)\n               ((>= grade 1.0) 'D+)\n  \
    \             ((>= grade 0.7) 'D)\n               ((>= grade 0.0) 'D-)\n     \
    \          (else           'E)))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv177qr49.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv177qr49.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv177qr49.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv177qr49.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv177qr49.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv177qr49.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (define (numerical_grade_to_letter_grade grade)\n    (cond\n      [(>= grade\
    \ 4.0) 'A+]\n      [(>= grade 3.7) 'A]\n      [(>= grade 3.3) 'A-]\n      [(>=\
    \ grade 3.0) 'B+]\n      [(>= grade 2.7) 'B]\n      [(>= grade 2.3) 'B-]\n   \
    \   [(>= grade 2.0) 'C+]\n      [(>= grade 1.7) 'C]\n      [(>= grade 1.3) 'C-]\n\
    \      [(>= grade 1.0) 'D+]\n      [(>= grade 0.7) 'D]\n      [(>= grade 0.0)\
    \ 'D-]\n      [else 'E]))\n  (for/list ([g grades])\n    (numerical_grade_to_letter_grade\
    \ g)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk487fayj.rkt:48:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk487fayj.rkt:49:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk487fayj.rkt:50:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk487fayj.rkt:51:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk487fayj.rkt:52:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk487fayj.rkt:53:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (grade)\n     (if (>= grade 4.0)\n         'A+\n         (if\
    \ (>= grade 3.7)\n             'A\n             (if (>= grade 3.3)\n         \
    \        'A-\n                 (if (>= grade 3.0)\n                     'B+\n\
    \                     (if (>= grade 2.7)\n                         'B\n      \
    \                   (if (>= grade 2.3)\n                             'B-\n   \
    \                          (if (>= grade 2.0)\n                              \
    \   'C+\n                                 (if (>= grade 1.7)\n               \
    \                      'C\n                                     (if (>= grade\
    \ 1.3)\n                                         'C-\n                       \
    \                  (if (>= grade 1.0)\n                                      \
    \       'D+\n                                             (if (>= grade 0.7)\n\
    \                                                 'D\n                       \
    \                          (if (>= grade 0.0)\n                              \
    \                       'D-\n                                                \
    \     'E))))))))))))))\n   grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpltj75bnq.rkt:52:10: read-syntax: unexpected `)`\n  context...:\n\
    \   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond [(empty? grades) '()]\n        [(= (first grades) 4.0) (cons 'A+ (numerical_letter_grade\
    \ (rest grades)))]\n        [(< (first grades) 4.0) (cons 'A (numerical_letter_grade\
    \ (rest grades)))]\n        [(< (first grades) 3.7) (cons 'A- (numerical_letter_grade\
    \ (rest grades)))]\n        [(< (first grades) 3.3) (cons 'B+ (numerical_letter_grade\
    \ (rest grades)))]\n        [(< (first grades) 3.0) (cons 'B (numerical_letter_grade\
    \ (rest grades)))]\n        [(< (first grades) 2.7) (cons 'B- (numerical_letter_grade\
    \ (rest grades)))]\n        [(< (first grades) 2.3) (cons 'C+ (numerical_letter_grade\
    \ (rest grades)))]\n        [(< (first grades) 2.0) (cons 'C (numerical_letter_grade\
    \ (rest grades)))]\n        [(< (first grades) 1.7) (cons 'C- (numerical_letter_grade\
    \ (rest grades)))]\n        [(< (first grades) 1.3) (cons 'D+ (numerical_letter_grade\
    \ (rest grades)))]\n        [(< (first grades) 1.0) (cons 'D (numerical_letter_grade\
    \ (rest grades)))]\n        [(< (first grades) 0.7) (cons 'D- (numerical_letter_grade\
    \ (rest grades)))]\n        [(< (first grades) 0.0) (cons 'E (numerical_letter_grade\
    \ (rest grades)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5sektcd_.rkt:45:4

    actual:     ''(A+ A A A A)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5sektcd_.rkt:46:4

    actual:     ''(A)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5sektcd_.rkt:47:4

    actual:     ''(A)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5sektcd_.rkt:48:4

    actual:     ''(A)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5sektcd_.rkt:49:4

    actual:     ''(A A A A A)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5sektcd_.rkt:50:4

    actual:     ''(A A)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (i)\n         (cond [(>= i 4.0) \"A+\"]\n               [(>= i\
    \ 3.7) \"A\"]\n               [(>= i 3.3) \"A-\"]\n               [(>= i 3.0)\
    \ \"B+\"]\n               [(>= i 2.7) \"B\"]\n               [(>= i 2.3) \"B-\"\
    ]\n               [(>= i 2.0) \"C+\"]\n               [(>= i 1.7) \"C\"]\n   \
    \            [(>= i 1.3) \"C-\"]\n               [(>= i 1.0) \"D+\"]\n       \
    \        [(>= i 0.7) \"D\"]\n               [(>= i 0.0) \"D-\"]\n            \
    \   [(>= i 0.0) \"E\"]))\n       grades))\n\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcs3dkva9.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcs3dkva9.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcs3dkva9.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcs3dkva9.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map grade grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmprdeuo5e_.rkt:25:7: grade: unbound identifier\n  in: grade\n  location...:\n\
    \   /tmp/tmprdeuo5e_.rkt:25:7\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (for/list ([grade grades])\n    (cond [(>= grade 4.0) 'A+]\n          [(>=\
    \ grade 3.7) 'A]\n          [(>= grade 3.3) 'A-]\n          [(>= grade 3.0) 'B+]\n\
    \          [(>= grade 2.7) 'B]\n          [(>= grade 2.3) 'B-]\n          [(>=\
    \ grade 2.0) 'C+]\n          [(>= grade 1.7) 'C]\n          [(>= grade 1.3) 'C-]\n\
    \          [(>= grade 1.0) 'D+]\n          [(>= grade 0.7) 'D]\n          [(>=\
    \ grade 0.0) 'D-]\n          [else 'E])))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw2cmy68s.rkt:45:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw2cmy68s.rkt:46:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw2cmy68s.rkt:47:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw2cmy68s.rkt:48:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw2cmy68s.rkt:49:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw2cmy68s.rkt:50:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (x)\n     (cond\n       [(>= x 4.0) 'A+]\n       [(>= x 3.7)\
    \ 'A]\n       [(>= x 3.3) 'A-]\n       [(>= x 3.0) 'B+]\n       [(>= x 2.7) 'B]\n\
    \       [(>= x 2.3) 'B-]\n       [(>= x 2.0) 'C+]\n       [(>= x 1.7) 'C]\n  \
    \     [(>= x 1.3) 'C-]\n       [(>= x 1.0) 'D+]\n       [(>= x 0.7) 'D]\n    \
    \   [(>= x 0.0) 'D-]\n       [else 'E]))\n   grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc0ga_8qd.rkt:48:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc0ga_8qd.rkt:49:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc0ga_8qd.rkt:50:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc0ga_8qd.rkt:51:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc0ga_8qd.rkt:52:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc0ga_8qd.rkt:53:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (grade)\n     (cond\n       [(>= grade 4.0) \"A+\"]\n    \
    \   [(>= grade 3.7) \"A\"]\n       [(>= grade 3.3) \"A-\"]\n       [(>= grade\
    \ 3.0) \"B+\"]\n       [(>= grade 2.7) \"B\"]\n       [(>= grade 2.3) \"B-\"]\n\
    \       [(>= grade 2.0) \"C+\"]\n       [(>= grade 1.7) \"C\"]\n       [(>= grade\
    \ 1.3) \"C-\"]\n       [(>= grade 1.0) \"D+\"]\n       [(>= grade 0.7) \"D\"]\n\
    \       [(>= grade 0.0) \"D-\"]\n       [else \"E\"]))\n   grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps95wu3vr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps95wu3vr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps95wu3vr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps95wu3vr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map \n   (lambda (x)\n     (cond\n       ((>= x 4.0) 'A+)\n       ((>= x 3.7)\
    \ 'A)\n       ((>= x 3.3) 'A-)\n       ((>= x 3.0) 'B+)\n       ((>= x 2.7) 'B)\n\
    \       ((>= x 2.3) 'B-)\n       ((>= x 2.0) 'C+)\n       ((>= x 1.7) 'C)\n  \
    \     ((>= x 1.3) 'C-)\n       ((>= x 1.0) 'D+)\n       ((>= x 0.7) 'D)\n    \
    \   ((>= x 0.0) 'D-)\n       (else 'E)))\n   grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiomoyss5.rkt:48:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiomoyss5.rkt:49:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiomoyss5.rkt:50:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiomoyss5.rkt:51:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiomoyss5.rkt:52:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiomoyss5.rkt:53:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (x)\n     (cond\n       [(>= x 4.0) 'A+]\n       [(>= x 3.7)\
    \ 'A]\n       [(>= x 3.3) 'A-]\n       [(>= x 3.0) 'B+]\n       [(>= x 2.7) 'B]\n\
    \       [(>= x 2.3) 'B-]\n       [(>= x 2.0) 'C+]\n       [(>= x 1.7) 'C]\n  \
    \     [(>= x 1.3) 'C-]\n       [(>= x 1.0) 'D+]\n       [(>= x 0.7) 'D]\n    \
    \   [(>= x 0.0) 'D-]\n       [else 'E]\n     )\n   )\n   grades\n  )\n)\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdnbxdx9y.rkt:52:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdnbxdx9y.rkt:53:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdnbxdx9y.rkt:54:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdnbxdx9y.rkt:55:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdnbxdx9y.rkt:56:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdnbxdx9y.rkt:57:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (for/list ([g (in-list grades)])\n    (cond [(>= g 4.0) 'A+]\n          [(>=\
    \ g 3.7) 'A]\n          [(>= g 3.3) 'A-]\n          [(>= g 3.0) 'B+]\n       \
    \   [(>= g 2.7) 'B]\n          [(>= g 2.3) 'B-]\n          [(>= g 2.0) 'C+]\n\
    \          [(>= g 1.7) 'C]\n          [(>= g 1.3) 'C-]\n          [(>= g 1.0)\
    \ 'D+]\n          [(>= g 0.7) 'D]\n          [(>= g 0.0) 'D-]\n          [else\
    \ 'E])))\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz1gu52sh.rkt:44:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz1gu52sh.rkt:45:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz1gu52sh.rkt:46:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz1gu52sh.rkt:47:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz1gu52sh.rkt:48:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz1gu52sh.rkt:49:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) 'A+]\n       \
    \    [(>= gpa 3.7) 'A]\n           [(>= gpa 3.3) 'A-]\n           [(>= gpa 3.0)\
    \ 'B+]\n           [(>= gpa 2.7) 'B]\n           [(>= gpa 2.3) 'B-]\n        \
    \   [(>= gpa 2.0) 'C+]\n           [(>= gpa 1.7) 'C]\n           [(>= gpa 1.3)\
    \ 'C-]\n           [(>= gpa 1.0) 'D+]\n           [(>= gpa 0.7) 'D]\n        \
    \   [(>= gpa 0.0) 'D-]\n           [else 'E]))\n       grades))\n```\n\n```\n\
    #lang racket\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpcdmw06o6.rkt:44:0: read-syntax: `#lang` not enabled\n  possible\
    \ reason: not allowed again inside a module that already starts `#lang`, or not\
    \ enabled for interactive evaluation\n  context...:\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7)\
    \ 'A]\n               [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n    \
    \           [(>= x 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>=\
    \ x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n\
    \               [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n           \
    \    [(>= x 0.0) 'D-]\n               [else 'E]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4tr7ijfz.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4tr7ijfz.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4tr7ijfz.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4tr7ijfz.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4tr7ijfz.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4tr7ijfz.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map grade-students grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpl0v2smwe.rkt:25:7: grade-students: unbound identifier\n  in: grade-students\n\
    \  location...:\n   /tmp/tmpl0v2smwe.rkt:25:7\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (gpa)\n     (cond\n       ((= gpa 4.0) \"A+\")\n       ((<\
    \ gpa 4.0) \"A\")\n       ((< gpa 3.7) \"A-\")\n       ((< gpa 3.3) \"B+\")\n\
    \       ((< gpa 3.0) \"B\")\n       ((< gpa 2.7) \"B-\")\n       ((< gpa 2.3)\
    \ \"C+\")\n       ((< gpa 2.0) \"C\")\n       ((< gpa 1.7) \"C-\")\n       ((<\
    \ gpa 1.3) \"D+\")\n       ((< gpa 1.0) \"D\")\n       ((< gpa 0.7) \"D-\")\n\
    \       ((< gpa 0.0) \"E\")\n       (else \"Error\")))\n   grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7va95dt_.rkt:49:4

    actual:     ''("A+" "A" "A" "A" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7va95dt_.rkt:50:4

    actual:     ''("A")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7va95dt_.rkt:51:4

    actual:     ''("A")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7va95dt_.rkt:52:4

    actual:     ''("A")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7va95dt_.rkt:53:4

    actual:     ''("A" "A" "A" "A" "A")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7va95dt_.rkt:54:4

    actual:     ''("A" "A")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdxpozpst.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdxpozpst.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdxpozpst.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdxpozpst.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdxpozpst.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdxpozpst.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa) (cond\n                      [(>= gpa 4.0) 'A+]\n      \
    \                [(>= gpa 3.7) 'A]\n                      [(>= gpa 3.3) 'A-]\n\
    \                      [(>= gpa 3.0) 'B+]\n                      [(>= gpa 2.7)\
    \ 'B]\n                      [(>= gpa 2.3) 'B-]\n                      [(>= gpa\
    \ 2.0) 'C+]\n                      [(>= gpa 1.7) 'C]\n                      [(>=\
    \ gpa 1.3) 'C-]\n                      [(>= gpa 1.0) 'D+]\n                  \
    \    [(>= gpa 0.7) 'D]\n                      [(>= gpa 0.0) 'D-]\n           \
    \           [else 'E]))\n        grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9b0gxhlc.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9b0gxhlc.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9b0gxhlc.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9b0gxhlc.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9b0gxhlc.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9b0gxhlc.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n\t   (cond [(>= x 4.0) 'A+]\n\t\t [(>= x 3.7) 'A]\n\t\t [(>=\
    \ x 3.3) 'A-]\n\t\t [(>= x 3.0) 'B+]\n\t\t [(>= x 2.7) 'B]\n\t\t [(>= x 2.3) 'B-]\n\
    \t\t [(>= x 2.0) 'C+]\n\t\t [(>= x 1.7) 'C]\n\t\t [(>= x 1.3) 'C-]\n\t\t [(>=\
    \ x 1.0) 'D+]\n\t\t [(>= x 0.7) 'D]\n\t\t [(>= x 0.0) 'D-]\n\t\t [else 'E]))\n\
    \t  grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2m_btajn.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2m_btajn.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2m_btajn.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2m_btajn.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2m_btajn.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2m_btajn.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (for/list ([grade grades])\n    (match grade\n      [(> 4.0) \"A+\"]\n    \
    \  [(> 3.7) \"A\"]\n      [(> 3.3) \"A-\"]\n      [(> 3.0) \"B+\"]\n      [(>\
    \ 2.7) \"B\"]\n      [(> 2.3) \"B-\"]\n      [(> 2.0) \"C+\"]\n      [(> 1.7)\
    \ \"C\"]\n      [(> 1.3) \"C-\"]\n      [(> 1.0) \"D+\"]\n      [(> 0.7) \"D\"\
    ]\n      [(> 0.0) \"D-\"]\n      [else \"E\"])))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpelbtmudw.rkt:27:7: match: syntax error in pattern\n  in: (> 4.0)\n\
    \  location...:\n   /tmp/tmpelbtmudw.rkt:27:7\n  context...:\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/match/gen-match.rkt:53:11:\
    \ mk\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/match/gen-match.rkt:23:0:\
    \ go\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (num) (cond [(>= num 4.0) \"A+\"]\n                          \
    \ [(>= num 3.7) \"A\"]\n                           [(>= num 3.3) \"A-\"]\n   \
    \                        [(>= num 3.0) \"B+\"]\n                           [(>=\
    \ num 2.7) \"B\"]\n                           [(>= num 2.3) \"B-\"]\n        \
    \                   [(>= num 2.0) \"C+\"]\n                           [(>= num\
    \ 1.7) \"C\"]\n                           [(>= num 1.3) \"C-\"]\n            \
    \               [(>= num 1.0) \"D+\"]\n                           [(>= num 0.7)\
    \ \"D\"]\n                           [(>= num 0.0) \"D-\"]\n                 \
    \          [(= num 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwau5c06m.rkt:45:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwau5c06m.rkt:48:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwau5c06m.rkt:49:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwau5c06m.rkt:50:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond ((>= grade 4.0) \"A+\")\n            \
    \   ((>= grade 3.7) \"A\")\n               ((>= grade 3.3) \"A-\")\n         \
    \      ((>= grade 3.0) \"B+\")\n               ((>= grade 2.7) \"B\")\n      \
    \         ((>= grade 2.3) \"B-\")\n               ((>= grade 2.0) \"C+\")\n  \
    \             ((>= grade 1.7) \"C\")\n               ((>= grade 1.3) \"C-\")\n\
    \               ((>= grade 1.0) \"D+\")\n               ((>= grade 0.7) \"D\"\
    )\n               ((>= grade 0.0) \"D-\")\n               (else \"E\")))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpff6rs4lo.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpff6rs4lo.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpff6rs4lo.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpff6rs4lo.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond ((>= grade 4.0) \"A+\")\n            \
    \   ((>= grade 3.7) \"A\")\n               ((>= grade 3.3) \"A-\")\n         \
    \      ((>= grade 3.0) \"B+\")\n               ((>= grade 2.7) \"B\")\n      \
    \         ((>= grade 2.3) \"B-\")\n               ((>= grade 2.0) \"C+\")\n  \
    \             ((>= grade 1.7) \"C\")\n               ((>= grade 1.3) \"C-\")\n\
    \               ((>= grade 1.0) \"D+\")\n               ((>= grade 0.7) \"D\"\
    )\n               ((>= grade 0.0) \"D-\")\n               (else \"E\")))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwl2jdu8z.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwl2jdu8z.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwl2jdu8z.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwl2jdu8z.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n    \
    \       [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [else \"\
    E\"])))\n        grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\
    \n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpe3jxvk5s.rkt:40:15: read-syntax: unexpected `)`\n  context...:\n\
    \   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7)\
    \ 'A]\n               [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n    \
    \           [(>= x 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>=\
    \ x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n\
    \               [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n           \
    \    [(>= x 0.0) 'D-]\n               [else 'E]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpub1glq_1.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpub1glq_1.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpub1glq_1.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpub1glq_1.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpub1glq_1.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpub1glq_1.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map \n   (lambda (gpa)\n     (cond\n       [(>= gpa 4.0)\n         'A+]\n\
    \       [(>= gpa 3.7)\n         'A]\n       [(>= gpa 3.3)\n         'A-]\n   \
    \    [(>= gpa 3.0)\n         'B+]\n       [(>= gpa 2.7)\n         'B]\n      \
    \ [(>= gpa 2.3)\n         'B-]\n       [(>= gpa 2.0)\n         'C+]\n       [(>=\
    \ gpa 1.7)\n         'C]\n       [(>= gpa 1.3)\n         'C-]\n       [(>= gpa\
    \ 1.0)\n         'D+]\n       [(>= gpa 0.7)\n         'D]\n       [(>= gpa 0.0)\n\
    \         'D-]\n       [else\n         'E]))\n   grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvo0hsqox.rkt:61:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvo0hsqox.rkt:62:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvo0hsqox.rkt:63:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvo0hsqox.rkt:64:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvo0hsqox.rkt:65:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvo0hsqox.rkt:66:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (gpa)\n     (cond\n       [(>= gpa 4.0) 'A+]\n       [(>=\
    \ gpa 3.7) 'A]\n       [(>= gpa 3.3) 'A-]\n       [(>= gpa 3.0) 'B+]\n       [(>=\
    \ gpa 2.7) 'B]\n       [(>= gpa 2.3) 'B-]\n       [(>= gpa 2.0) 'C+]\n       [(>=\
    \ gpa 1.7) 'C]\n       [(>= gpa 1.3) 'C-]\n       [(>= gpa 1.0) 'D+]\n       [(>=\
    \ gpa 0.7) 'D]\n       [(>= gpa 0.0) 'D-]\n       [else 'E]))\n   grades))\n\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmul87nh3.rkt:48:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmul87nh3.rkt:49:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmul87nh3.rkt:50:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmul87nh3.rkt:51:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmul87nh3.rkt:52:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmul87nh3.rkt:53:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \    (map\n     (lambda (x)\n       (cond\n        [(>= x 4.0) 'A+]\n        [(>=\
    \ x 3.7) 'A]\n        [(>= x 3.3) 'A-]\n        [(>= x 3.0) 'B+]\n        [(>=\
    \ x 2.7) 'B]\n        [(>= x 2.3) 'B-]\n        [(>= x 2.0) 'C+]\n        [(>=\
    \ x 1.7) 'C]\n        [(>= x 1.3) 'C-]\n        [(>= x 1.0) 'D+]\n        [(>=\
    \ x 0.7) 'D]\n        [(>= x 0.0) 'D-]\n        [else 'E]\n        )\n       )\n\
    \     grades\n     )\n    )\n(require rackunit)\n\n(define (test-humaneval) \n\
    \n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnohe30wk.rkt:51:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnohe30wk.rkt:52:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnohe30wk.rkt:53:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnohe30wk.rkt:54:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnohe30wk.rkt:55:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnohe30wk.rkt:56:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map grade grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmp3x6hpdy2.rkt:25:7: grade: unbound identifier\n  in: grade\n  location...:\n\
    \   /tmp/tmp3x6hpdy2.rkt:25:7\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n        (cond ((>= x 4.0) \"A+\")\n              ((>= x 3.7)\
    \ \"A\")\n              ((>= x 3.3) \"A-\")\n              ((>= x 3.0) \"B+\"\
    )\n              ((>= x 2.7) \"B\")\n              ((>= x 2.3) \"B-\")\n     \
    \         ((>= x 2.0) \"C+\")\n              ((>= x 1.7) \"C\")\n            \
    \  ((>= x 1.3) \"C-\")\n              ((>= x 1.0) \"D+\")\n              ((>=\
    \ x 0.7) \"D\")\n              ((>= x 0.0) \"D-\")\n              (else \"E\"\
    )))\n        grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n \
    \ (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfxz5ywk5.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfxz5ywk5.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfxz5ywk5.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfxz5ywk5.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (\u03BB (gpa)\n         (cond [(< gpa 4.0) 'A+]\n               [(< gpa\
    \ 3.7) 'A]\n               [(< gpa 3.3) 'A-]\n               [(< gpa 3.0) 'B+]\n\
    \               [(< gpa 2.7) 'B]\n               [(< gpa 2.3) 'B-]\n         \
    \      [(< gpa 2.0) 'C+]\n               [(< gpa 1.7) 'C]\n               [(<\
    \ gpa 1.3) 'C-]\n               [(< gpa 1.0) 'D+]\n               [(< gpa 0.7)\
    \ 'D]\n               [(< gpa 0.0) 'D-]\n               [else 'E]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvcme80hk.rkt:46:4

    actual:     ''(E A+ A+ A+ A+)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvcme80hk.rkt:47:4

    actual:     ''(A+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvcme80hk.rkt:48:4

    actual:     ''(A+)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvcme80hk.rkt:49:4

    actual:     ''(A+)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvcme80hk.rkt:50:4

    actual:     ''(A+ A+ A+ A+ A+)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvcme80hk.rkt:51:4

    actual:     ''(A+ A+)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (\u03BB (n)\n         (cond [(>= n 4.0) 'A+]\n               [(>= n 3.7)\
    \ 'A]\n               [(>= n 3.3) 'A-]\n               [(>= n 3.0) 'B+]\n    \
    \           [(>= n 2.7) 'B]\n               [(>= n 2.3) 'B-]\n               [(>=\
    \ n 2.0) 'C+]\n               [(>= n 1.7) 'C]\n               [(>= n 1.3) 'C-]\n\
    \               [(>= n 1.0) 'D+]\n               [(>= n 0.7) 'D]\n           \
    \    [(>= n 0.0) 'D-]\n               [else 'E]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8hwlac8u.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8hwlac8u.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8hwlac8u.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8hwlac8u.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8hwlac8u.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8hwlac8u.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \    (for/list ([g grades])\n              (cond [(>= g 4.0) \"A+\"]\n       \
    \             [(>= g 3.7) \"A\"]\n                    [(>= g 3.3) \"A-\"]\n  \
    \                  [(>= g 3.0) \"B+\"]\n                    [(>= g 2.7) \"B\"\
    ]\n                    [(>= g 2.3) \"B-\"]\n                    [(>= g 2.0) \"\
    C+\"]\n                    [(>= g 1.7) \"C\"]\n                    [(>= g 1.3)\
    \ \"C-\"]\n                    [(>= g 1.0) \"D+\"]\n                    [(>= g\
    \ 0.7) \"D\"]\n                    [(>= g 0.0) \"D-\"]\n                    [else\
    \ \"E\"])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1b9xm6td.rkt:45:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1b9xm6td.rkt:48:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1b9xm6td.rkt:49:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1b9xm6td.rkt:50:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (\u03BB (n)\n         (cond [(>= n 4.0) \"A+\"]\n               [(>= n\
    \ 3.7) \"A\"]\n               [(>= n 3.3) \"A-\"]\n               [(>= n 3.0)\
    \ \"B+\"]\n               [(>= n 2.7) \"B\"]\n               [(>= n 2.3) \"B-\"\
    ]\n               [(>= n 2.0) \"C+\"]\n               [(>= n 1.7) \"C\"]\n   \
    \            [(>= n 1.3) \"C-\"]\n               [(>= n 1.0) \"D+\"]\n       \
    \        [(>= n 0.7) \"D\"]\n               [(>= n 0.0) \"D-\"]\n            \
    \   [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb_3d7yfg.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb_3d7yfg.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb_3d7yfg.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb_3d7yfg.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (define (grade_equation num-grade)\n    (cond\n      [(>= num-grade 4.0) \"\
    A+\"]\n      [(>= num-grade 3.7) \"A\"]\n      [(>= num-grade 3.3) \"A-\"]\n \
    \     [(>= num-grade 3.0) \"B+\"]\n      [(>= num-grade 2.7) \"B\"]\n      [(>=\
    \ num-grade 2.3) \"B-\"]\n      [(>= num-grade 2.0) \"C+\"]\n      [(>= num-grade\
    \ 1.7) \"C\"]\n      [(>= num-grade 1.3) \"C-\"]\n      [(>= num-grade 1.0) \"\
    D+\"]\n      [(>= num-grade 0.7) \"D\"]\n      [(>= num-grade 0.0) \"D-\"]\n \
    \     [else \"E\"]))\n  (map grade_equation grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz_1ntpag.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz_1ntpag.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz_1ntpag.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz_1ntpag.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \    (map (lambda (gpa)\n          (cond\n              [(>= gpa 4.0) 'A+]\n \
    \             [(>= gpa 3.7) 'A]\n              [(>= gpa 3.3) 'A-]\n          \
    \    [(>= gpa 3.0) 'B+]\n              [(>= gpa 2.7) 'B]\n              [(>= gpa\
    \ 2.3) 'B-]\n              [(>= gpa 2.0) 'C+]\n              [(>= gpa 1.7) 'C]\n\
    \              [(>= gpa 1.3) 'C-]\n              [(>= gpa 1.0) 'D+]\n        \
    \      [(>= gpa 0.7) 'D]\n              [(>= gpa 0.0) 'D-]\n              [else\
    \ 'E]))\n        grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\
    \n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmg21qs60.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmg21qs60.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmg21qs60.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmg21qs60.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmg21qs60.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmg21qs60.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (if (null? grades) '()\n      (cons (cond\n             [(>= (car grades) 4.0)\
    \ \"A+\"]\n             [(>= (car grades) 3.7) \"A\"]\n             [(>= (car\
    \ grades) 3.3) \"A-\"]\n             [(>= (car grades) 3.0) \"B+\"]\n        \
    \     [(>= (car grades) 2.7) \"B\"]\n             [(>= (car grades) 2.3) \"B-\"\
    ]\n             [(>= (car grades) 2.0) \"C+\"]\n             [(>= (car grades)\
    \ 1.7) \"C\"]\n             [(>= (car grades) 1.3) \"C-\"]\n             [(>=\
    \ (car grades) 1.0) \"D+\"]\n             [(>= (car grades) 0.7) \"D\"]\n    \
    \         [(>= (car grades) 0.0) \"D-\"]\n             [else \"E\"])\n       \
    \     (numerical_letter_grade (cdr grades)))))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzvxtbgr7.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzvxtbgr7.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzvxtbgr7.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzvxtbgr7.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \   (map (lambda (n)\n          (cond [(>= n 4.0) 'A+]\n                [(>= n\
    \ 3.7) 'A]\n                [(>= n 3.3) 'A-]\n                [(>= n 3.0) 'B+]\n\
    \                [(>= n 2.7) 'B]\n                [(>= n 2.3) 'B-]\n         \
    \       [(>= n 2.0) 'C+]\n                [(>= n 1.7) 'C]\n                [(>=\
    \ n 1.3) 'C-]\n                [(>= n 1.0) 'D+]\n                [(>= n 0.7) 'D]\n\
    \                [(>= n 0.0) 'D-]\n                [else 'E]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvjglpbva.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvjglpbva.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvjglpbva.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvjglpbva.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvjglpbva.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvjglpbva.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbnu5ato8.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbnu5ato8.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbnu5ato8.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbnu5ato8.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbnu5ato8.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbnu5ato8.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa) (if (>= gpa 4.0) 'A+\n                      (if (>= gpa\
    \ 3.7) 'A\n                          (if (>= gpa 3.3) 'A-\n                  \
    \            (if (>= gpa 3.0) 'B+\n                                  (if (>= gpa\
    \ 2.7) 'B\n                                      (if (>= gpa 2.3) 'B-\n      \
    \                                    (if (>= gpa 2.0) 'C+\n                  \
    \                            (if (>= gpa 1.7) 'C\n                           \
    \                       (if (>= gpa 1.3) 'C-\n                               \
    \                       (if (>= gpa 1.0) 'D+\n                               \
    \                           (if (>= gpa 0.7) 'D\n                            \
    \                                  (if (>= gpa 0.0) 'D-\n                    \
    \                                              'E))))))))))))))) grades))\n\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpr9he6pzt.rkt:37:90: read-syntax: unexpected `)`\n  context...:\n\
    \   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(<= grade 0) \"E\"]\n   \
    \        [(<= grade 0.7) \"D-\"]\n           [(<= grade 1.0) \"D+\"]\n       \
    \    [(<= grade 1.3) \"C-\"]\n           [(<= grade 1.7) \"C\"]\n           [(<=\
    \ grade 2.0) \"C+\"]\n           [(<= grade 2.3) \"B-\"]\n           [(<= grade\
    \ 2.7) \"B\"]\n           [(<= grade 3.0) \"B+\"]\n           [(<= grade 3.3)\
    \ \"A-\"]\n           [(<= grade 3.7) \"A\"]\n           [(<= grade 4.0) \"A+\"\
    ]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpekgm277w.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpekgm277w.rkt:47:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpekgm277w.rkt:50:4

    actual:     ''("D+" "D-" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (x)\n     (cond\n       [(>= x 4.0) 'A+]\n       [(>= x 3.7)\
    \ 'A]\n       [(>= x 3.3) 'A-]\n       [(>= x 3.0) 'B+]\n       [(>= x 2.7) 'B]\n\
    \       [(>= x 2.3) 'B-]\n       [(>= x 2.0) 'C+]\n       [(>= x 1.7) 'C]\n  \
    \     [(>= x 1.3) 'C-]\n       [(>= x 1.0) 'D+]\n       [(>= x 0.7) 'D]\n    \
    \   [(>= x 0.0) 'D-]\n       [else 'E]))\n   grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzllo9awn.rkt:48:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzllo9awn.rkt:49:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzllo9awn.rkt:50:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzllo9awn.rkt:51:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzllo9awn.rkt:52:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzllo9awn.rkt:53:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (gpa)\n     (cond\n       [(>= gpa 4.0) \"A+\"]\n       [(>=\
    \ gpa 3.7) \"A\"]\n       [(>= gpa 3.3) \"A-\"]\n       [(>= gpa 3.0) \"B+\"]\n\
    \       [(>= gpa 2.7) \"B\"]\n       [(>= gpa 2.3) \"B-\"]\n       [(>= gpa 2.0)\
    \ \"C+\"]\n       [(>= gpa 1.7) \"C\"]\n       [(>= gpa 1.3) \"C-\"]\n       [(>=\
    \ gpa 1.0) \"D+\"]\n       [(>= gpa 0.7) \"D\"]\n       [(>= gpa 0.0) \"D-\"]\n\
    \       [(>= gpa 0.0) \"E\"]\n       [else 'Invalid]))\n   grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbm5r87j1.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbm5r87j1.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbm5r87j1.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbm5r87j1.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map(lambda (gpa)\n        (if (>= gpa 4.0) \"A+\"\n            (if (>= gpa\
    \ 3.7) \"A\"\n                (if (>= gpa 3.3) \"A-\"\n                    (if\
    \ (>= gpa 3.0) \"B+\"\n                        (if (>= gpa 2.7) \"B\"\n      \
    \                      (if (>= gpa 2.3) \"B-\"\n                             \
    \   (if (>= gpa 2.0) \"C+\"\n                                    (if (>= gpa 1.7)\
    \ \"C\"\n                                        (if (>= gpa 1.3) \"C-\"\n   \
    \                                         (if (>= gpa 1.0) \"D+\"\n          \
    \                                      (if (>= gpa 0.7) \"D\"\n              \
    \                                      (if (>= gpa 0.0) \"D-\"\n             \
    \                                           \"E\"))))))))))))))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmptgoby4h5.rkt:39:14: read-syntax: unexpected `)`\n  context...:\n\
    \   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (for/list ([g grades])\n    (cond \n      [(>= g 4.0) 'A+]\n      [(>= g 3.7)\
    \ 'A]\n      [(>= g 3.3) 'A-]\n      [(>= g 3.0) 'B+]\n      [(>= g 2.7) 'B]\n\
    \      [(>= g 2.3) 'B-]\n      [(>= g 2.0) 'C+]\n      [(>= g 1.7) 'C]\n     \
    \ [(>= g 1.3) 'C-]\n      [(>= g 1.0) 'D+]\n      [(>= g 0.7) 'D]\n      [(>=\
    \ g 0.0) 'D-]\n      [else 'E])))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr31yi4b_.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr31yi4b_.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr31yi4b_.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr31yi4b_.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr31yi4b_.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr31yi4b_.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n\t (cond ((>= grade 4.0) 'A+)\n\t       ((>= grade 3.7)\
    \ 'A)\n\t       ((>= grade 3.3) 'A-)\n\t       ((>= grade 3.0) 'B+)\n\t      \
    \ ((>= grade 2.7) 'B)\n\t       ((>= grade 2.3) 'B-)\n\t       ((>= grade 2.0)\
    \ 'C+)\n\t       ((>= grade 1.7) 'C)\n\t       ((>= grade 1.3) 'C-)\n\t      \
    \ ((>= grade 1.0) 'D+)\n\t       ((>= grade 0.7) 'D)\n\t       ((>= grade 0.0)\
    \ 'D-)\n\t       (else 'E)))\n\tgrades))\n\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiknzrbu7.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiknzrbu7.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiknzrbu7.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiknzrbu7.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiknzrbu7.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiknzrbu7.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(< grade 0.0) \"E\"]\n  \
    \         [(< grade 0.7) \"D-\"]\n           [(< grade 1.0) \"D+\"]\n        \
    \   [(< grade 1.3) \"C-\"]\n           [(< grade 1.7) \"C\"]\n           [(< grade\
    \ 2.0) \"C+\"]\n           [(< grade 2.3) \"B-\"]\n           [(< grade 2.7) \"\
    B\"]\n           [(< grade 3.0) \"B+\"]\n           [(< grade 3.3) \"A-\"]\n \
    \          [(< grade 3.7) \"A\"]\n           [else \"A+\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6m7r7x62.rkt:46:4

    actual:     ''("A+" "A-" "C+" "B-" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6m7r7x62.rkt:47:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6m7r7x62.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6m7r7x62.rkt:50:4

    actual:     ''("C-" "D-" "C" "B+" "A")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6m7r7x62.rkt:51:4

    actual:     ''("D-" "D+")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n               [(>= x\
    \ 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>= x 3.0)\
    \ \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3) \"B-\"\
    ]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"]\n   \
    \            [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n       \
    \        [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n            \
    \   [(= x 0.0) \"E\"]))\n        grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4mq1kf2f.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4mq1kf2f.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4mq1kf2f.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4mq1kf2f.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond ((>= x 4.0) 'A+)\n               ((>= x 3.7)\
    \ 'A)\n               ((>= x 3.3) 'A-)\n               ((>= x 3.0) 'B+)\n    \
    \           ((>= x 2.7) 'B)\n               ((>= x 2.3) 'B-)\n               ((>=\
    \ x 2.0) 'C+)\n               ((>= x 1.7) 'C)\n               ((>= x 1.3) 'C-)\n\
    \               ((>= x 1.0) 'D+)\n               ((>= x 0.7) 'D)\n           \
    \    ((>= x 0.0) 'D-)\n               (else 'E)))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyt024utk.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyt024utk.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyt024utk.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyt024utk.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyt024utk.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyt024utk.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (x)\n     (cond\n       [(>= x 4.0) 'A+]\n       [(>= x 3.7)\
    \ 'A]\n       [(>= x 3.3) 'A-]\n       [(>= x 3.0) 'B+]\n       [(>= x 2.7) 'B]\n\
    \       [(>= x 2.3) 'B-]\n       [(>= x 2.0) 'C+]\n       [(>= x 1.7) 'C]\n  \
    \     [(>= x 1.3) 'C-]\n       [(>= x 1.0) 'D+]\n       [(>= x 0.7) 'D]\n    \
    \   [(>= x 0.0) 'D-]\n       [else 'E]\n       )\n     )\n   grades)\n  )\n\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp__boa_iw.rkt:51:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp__boa_iw.rkt:52:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp__boa_iw.rkt:53:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp__boa_iw.rkt:54:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp__boa_iw.rkt:55:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp__boa_iw.rkt:56:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n          (cond\n            [(< grade 1.0) 'E]\n   \
    \         [(< grade 1.3) 'D-]\n            [(< grade 1.7) 'D]\n            [(<\
    \ grade 2.0) 'D+]\n            [(< grade 2.3) 'C-]\n            [(< grade 2.7)\
    \ 'C]\n            [(< grade 3.0) 'C+]\n            [(< grade 3.3) 'B-]\n    \
    \        [(< grade 3.7) 'B]\n            [(< grade 4.0) 'B+]\n            [else\
    \ 'A+]))\n        grades))\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5rspvgo4.rkt:44:4

    actual:     ''(A+ B- D+ C- B)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5rspvgo4.rkt:45:4

    actual:     ''(D-)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5rspvgo4.rkt:46:4

    actual:     ''(E)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5rspvgo4.rkt:47:4

    actual:     ''(E)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5rspvgo4.rkt:48:4

    actual:     ''(D- E D C+ B)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5rspvgo4.rkt:49:4

    actual:     ''(E E)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (gpa)\n     (if (>= gpa 4.0)\n         'A+\n         (if (>=\
    \ gpa 3.7)\n             'A\n             (if (>= gpa 3.3)\n                 'A-\n\
    \                 (if (>= gpa 3.0)\n                     'B+\n               \
    \      (if (>= gpa 2.7)\n                         'B\n                       \
    \  (if (>= gpa 2.3)\n                             'B-\n                      \
    \       (if (>= gpa 2.0)\n                                 'C+\n             \
    \                    (if (>= gpa 1.7)\n                                     'C\n\
    \                                     (if (>= gpa 1.3)\n                     \
    \                    'C-\n                                         (if (>= gpa\
    \ 1.0)\n                                             'D+\n                   \
    \                          (if (>= gpa 0.7)\n                                \
    \                 'D\n                                                 (if (>=\
    \ gpa 0.0)\n                                                     'D-\n       \
    \                                              'E))))))))))))))\n   grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpkuke2eng.rkt:52:10: read-syntax: unexpected `)`\n  context...:\n\
    \   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (if (null? grades)\n      '()\n      (cons (grade (car grades)) (numerical_letter_grade\
    \ (cdr grades)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: "/tmp/tmps3x9ih10.rkt:27:13: grade: unbound identifier\n  in: grade\n  location...:\n\
    \   /tmp/tmps3x9ih10.rkt:27:13\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n    \
    \       [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [else \"\
    E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprbbyws2a.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprbbyws2a.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprbbyws2a.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprbbyws2a.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond \n    ((>= grades 4.0) 'A+)\n    ((>= grades 3.7) 'A)\n    ((>= grades\
    \ 3.3) 'A-)\n    ((>= grades 3.0) 'B+)\n    ((>= grades 2.7) 'B)\n    ((>= grades\
    \ 2.3) 'B-)\n    ((>= grades 2.0) 'C+)\n    ((>= grades 1.7) 'C)\n    ((>= grades\
    \ 1.3) 'C-)\n    ((>= grades 1.0) 'D+)\n    ((>= grades 0.7) 'D)\n    ((>= grades\
    \ 0.0) 'D-)\n    (else 'E)))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdohzb60_.rkt:45:4\n\
    \n>=: contract violation\n  expected: real?\n  given: '(4.0 3 1.7 2 3.5)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdohzb60_.rkt:46:4\n\
    \n>=: contract violation\n  expected: real?\n  given: '(1.2)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdohzb60_.rkt:47:4\n\
    \n>=: contract violation\n  expected: real?\n  given: '(0.5)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdohzb60_.rkt:48:4\n\
    \n>=: contract violation\n  expected: real?\n  given: '(0.0)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdohzb60_.rkt:49:4\n\
    \n>=: contract violation\n  expected: real?\n  given: '(1.0 0.3 1.5 2.8 3.3)\n\
    --------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpdohzb60_.rkt:50:4\n\n>=: contract violation\n  expected: real?\n\
    \  given: '(0.0 0.7)\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map \n    (lambda (x)\n      (cond \n        [(>= x 4.0) 'A+]\n        [(>=\
    \ x 3.7) 'A]\n        [(>= x 3.3) 'A-]\n        [(>= x 3.0) 'B+]\n        [(>=\
    \ x 2.7) 'B]\n        [(>= x 2.3) 'B-]\n        [(>= x 2.0) 'C+]\n        [(>=\
    \ x 1.7) 'C]\n        [(>= x 1.3) 'C-]\n        [(>= x 1.0) 'D+]\n        [(>=\
    \ x 0.7) 'D]\n        [(>= x 0.0) 'D-]\n        [else       'E]))\n    grades))\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9v1iaotb.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9v1iaotb.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9v1iaotb.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9v1iaotb.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9v1iaotb.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9v1iaotb.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (\u03BB (x)\n         (cond\n           [(<= 4.0 x) \"A+\"]\n        \
    \   [(<= 3.7 x) \"A\"]\n           [(<= 3.3 x) \"A-\"]\n           [(<= 3.0 x)\
    \ \"B+\"]\n           [(<= 2.7 x) \"B\"]\n           [(<= 2.3 x) \"B-\"]\n   \
    \        [(<= 2.0 x) \"C+\"]\n           [(<= 1.7 x) \"C\"]\n           [(<= 1.3\
    \ x) \"C-\"]\n           [(<= 1.0 x) \"D+\"]\n           [(<= 0.7 x) \"D\"]\n\
    \           [(<= 0.0 x) \"D-\"]\n           [(<= 0.0 x) \"E\"]\n           ))\n\
    \       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc8kufzjf.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc8kufzjf.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc8kufzjf.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc8kufzjf.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa) (cond [(>= gpa 4.0) 'A+] [(>= gpa 3.7) 'A] [(>= gpa 3.3)\
    \ 'A-] [(>= gpa 3.0) 'B+] [(>= gpa 2.7) 'B] [(>= gpa 2.3) 'B-] [(>= gpa 2.0) 'C+]\
    \ [(>= gpa 1.7) 'C] [(>= gpa 1.3) 'C-] [(>= gpa 1.0) 'D+] [(>= gpa 0.7) 'D] [(>=\
    \ gpa 0.0) 'D-] [else 'E])) grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghq5tbtm.rkt:32:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghq5tbtm.rkt:33:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghq5tbtm.rkt:34:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghq5tbtm.rkt:35:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghq5tbtm.rkt:36:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghq5tbtm.rkt:37:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (x)\n     (cond\n       ((>= x 4.0) 'A+)\n       ((>= x 3.7)\
    \ 'A)\n       ((>= x 3.3) 'A-)\n       ((>= x 3.0) 'B+)\n       ((>= x 2.7) 'B)\n\
    \       ((>= x 2.3) 'B-)\n       ((>= x 2.0) 'C+)\n       ((>= x 1.7) 'C)\n  \
    \     ((>= x 1.3) 'C-)\n       ((>= x 1.0) 'D+)\n       ((>= x 0.7) 'D)\n    \
    \   ((>= x 0.0) 'D-)\n       (else 'E)))\n   grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr5unlpuz.rkt:48:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr5unlpuz.rkt:49:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr5unlpuz.rkt:50:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr5unlpuz.rkt:51:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr5unlpuz.rkt:52:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr5unlpuz.rkt:53:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (n)\n         (cond\n           [(>= n 4.0) \"A+\"]\n        \
    \   [(>= n 3.7) \"A\"]\n           [(>= n 3.3) \"A-\"]\n           [(>= n 3.0)\
    \ \"B+\"]\n           [(>= n 2.7) \"B\"]\n           [(>= n 2.3) \"B-\"]\n   \
    \        [(>= n 2.0) \"C+\"]\n           [(>= n 1.7) \"C\"]\n           [(>= n\
    \ 1.3) \"C-\"]\n           [(>= n 1.0) \"D+\"]\n           [(>= n 0.7) \"D\"]\n\
    \           [(>= n 0.0) \"D-\"]\n           [(= n 0.0) \"E\"]\n           [else\
    \ (error \"Grade not found\")]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjjj36w_9.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjjj36w_9.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjjj36w_9.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjjj36w_9.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(<= grade 0) 'E]\n      \
    \     [(<= grade 0.7) 'D-]\n           [(<= grade 1.0) 'D+]\n           [(<= grade\
    \ 1.3) 'C-]\n           [(<= grade 1.7) 'C]\n           [(<= grade 2.0) 'C+]\n\
    \           [(<= grade 2.3) 'B-]\n           [(<= grade 2.7) 'B]\n           [(<=\
    \ grade 3.0) 'B+]\n           [(<= grade 3.3) 'A-]\n           [(<= grade 3.7)\
    \ 'A]\n           [(<= grade 4.0) 'A+]))\n       grades))\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7c9vptun.rkt:45:4

    actual:     ''(A+ B+ C C+ A)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7c9vptun.rkt:46:4

    actual:     ''(C-)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7c9vptun.rkt:47:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7c9vptun.rkt:48:4

    actual:     ''(E)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7c9vptun.rkt:49:4

    actual:     ''(D+ D- C B+ A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7c9vptun.rkt:50:4

    actual:     ''(E D-)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond [(= grades 4.0) \"A+\"]\n        [(> grades 3.7) \"A\"]\n        [(>\
    \ grades 3.3) \"A-\"]\n        [(> grades 3.0) \"B+\"]\n        [(> grades 2.7)\
    \ \"B\"]\n        [(> grades 2.3) \"B-\"]\n        [(> grades 2.0) \"C+\"]\n \
    \       [(> grades 1.7) \"C\"]\n        [(> grades 1.3) \"C-\"]\n        [(> grades\
    \ 1.0) \"D+\"]\n        [(> grades 0.7) \"D\"]\n        [(> grades 0.0) \"D-\"\
    ]\n        [(= grades 0.0) \"E\"]))\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp18jvye0x.rkt:43:4\n\
    \n=: contract violation\n  expected: number?\n  given: '(4.0 3 1.7 2 3.5)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp18jvye0x.rkt:44:4\n\
    \n=: contract violation\n  expected: number?\n  given: '(1.2)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp18jvye0x.rkt:45:4\n\
    \n=: contract violation\n  expected: number?\n  given: '(0.5)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp18jvye0x.rkt:46:4\n\
    \n=: contract violation\n  expected: number?\n  given: '(0.0)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp18jvye0x.rkt:47:4\n\
    \n=: contract violation\n  expected: number?\n  given: '(1.0 0.3 1.5 2.8 3.3)\n\
    --------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmp18jvye0x.rkt:48:4\n\n=: contract violation\n  expected: number?\n\
    \  given: '(0.0 0.7)\n--------------------\n"
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n        \
    \   [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0)\
    \ \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n   \
    \        [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x\
    \ 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n\
    \           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    ```\n\n### Problem 4:\n- Write a function `generate_original_grade` that takes\
    \ a numeric grade and outputs the \noriginal numeric grade that was input into\
    \ the equation to get the given numeric grade.\n```racket\n#lang racket\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpy72zvbo0.rkt:43:0: read-syntax: bad syntax `##`\n  context...:\n\
    \   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map \n   (lambda (x)\n     (cond \n       [(>= x 4.0) 'A+]\n       [(>= x\
    \ 3.7) 'A]\n       [(>= x 3.3) 'A-]\n       [(>= x 3.0) 'B+]\n       [(>= x 2.7)\
    \ 'B]\n       [(>= x 2.3) 'B-]\n       [(>= x 2.0) 'C+]\n       [(>= x 1.7) 'C]\n\
    \       [(>= x 1.3) 'C-]\n       [(>= x 1.0) 'D+]\n       [(>= x 0.7) 'D]\n  \
    \     [(>= x 0.0) 'D-]\n       [else 'E]))\n   grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpicukcg6v.rkt:48:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpicukcg6v.rkt:49:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpicukcg6v.rkt:50:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpicukcg6v.rkt:51:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpicukcg6v.rkt:52:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpicukcg6v.rkt:53:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond [(empty? grades) empty]\n        [(> (first grades) 4.0) \n         (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n        [(> (first grades)\
    \ 3.7) \n         (cons \"A\" (numerical_letter_grade (rest grades)))]\n     \
    \   [(> (first grades) 3.3) \n         (cons \"A-\" (numerical_letter_grade (rest\
    \ grades)))]\n        [(> (first grades) 3.0) \n         (cons \"B+\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 2.7) \n         (cons \"B\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 2.3) \n         (cons \"B-\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 2.0) \n         (cons \"C+\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 1.7) \n         (cons \"C\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 1.3) \n         (cons \"C-\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 1.0) \n         (cons \"D+\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 0.7) \n         (cons \"D\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 0.0) \n         (cons \"D-\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) -1.0) \n         (cons \"E\" (numerical_letter_grade\
    \ (rest grades)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp30luo3tv.rkt:58:4

    actual:     ''("A" "B" "C-" "C" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp85rhtf6m.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp85rhtf6m.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp85rhtf6m.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp85rhtf6m.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp85rhtf6m.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp85rhtf6m.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (let loop ([grades grades] [result '()])\n    (cond\n      [(empty? grades)\
    \ (reverse result)]\n      [(>= (first grades) 4.0) (loop (rest grades) (cons\
    \ 'A+ result))]\n      [(>= (first grades) 3.7) (loop (rest grades) (cons 'A result))]\n\
    \      [(>= (first grades) 3.3) (loop (rest grades) (cons 'A- result))]\n    \
    \  [(>= (first grades) 3.0) (loop (rest grades) (cons 'B+ result))]\n      [(>=\
    \ (first grades) 2.7) (loop (rest grades) (cons 'B result))]\n      [(>= (first\
    \ grades) 2.3) (loop (rest grades) (cons 'B- result))]\n      [(>= (first grades)\
    \ 2.0) (loop (rest grades) (cons 'C+ result))]\n      [(>= (first grades) 1.7)\
    \ (loop (rest grades) (cons 'C result))]\n      [(>= (first grades) 1.3) (loop\
    \ (rest grades) (cons 'C- result))]\n      [(>= (first grades) 1.0) (loop (rest\
    \ grades) (cons 'D+ result))]\n      [(>= (first grades) 0.7) (loop (rest grades)\
    \ (cons 'D result))]\n      [(>= (first grades) 0.0) (loop (rest grades) (cons\
    \ 'D- result))]\n      [else (loop (rest grades) (cons 'E result))])))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqd3sxdk8.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqd3sxdk8.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqd3sxdk8.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqd3sxdk8.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqd3sxdk8.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqd3sxdk8.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7)\
    \ 'A]\n               [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n    \
    \           [(>= x 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>=\
    \ x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n\
    \               [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n           \
    \    [(>= x 0.0) 'D-]\n               [else 'E]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbov6x118.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbov6x118.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbov6x118.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbov6x118.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbov6x118.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbov6x118.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\n        \
    \    \"A+\"]\n           [(>= grade 3.7)\n            \"A\"]\n           [(>=\
    \ grade 3.3)\n            \"A-\"]\n           [(>= grade 3.0)\n            \"\
    B+\"]\n           [(>= grade 2.7)\n            \"B\"]\n           [(>= grade 2.3)\n\
    \            \"B-\"]\n           [(>= grade 2.0)\n            \"C+\"]\n      \
    \     [(>= grade 1.7)\n            \"C\"]\n           [(>= grade 1.3)\n      \
    \      \"C-\"]\n           [(>= grade 1.0)\n            \"D+\"]\n           [(>=\
    \ grade 0.7)\n            \"D\"]\n           [(>= grade 0.0)\n            \"D-\"\
    ]\n           [(= grade 0.0)\n            \"E\"]\n           (else \"Invalid Grade\"\
    )))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsjxgze81.rkt:61:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsjxgze81.rkt:64:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsjxgze81.rkt:65:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsjxgze81.rkt:66:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (if (null? grades) '()\n      (cons (cond ((= (car grades) 4.0) 'A+)\n    \
    \              ((> (car grades) 3.7) 'A)\n                  ((> (car grades) 3.3)\
    \ 'A-)\n                  ((> (car grades) 3.0) 'B+)\n                  ((> (car\
    \ grades) 2.7) 'B)\n                  ((> (car grades) 2.3) 'B-)\n           \
    \       ((> (car grades) 2.0) 'C+)\n                  ((> (car grades) 1.7) 'C)\n\
    \                  ((> (car grades) 1.3) 'C-)\n                  ((> (car grades)\
    \ 1.0) 'D+)\n                  ((> (car grades) 0.7) 'D)\n                  ((>\
    \ (car grades) 0.0) 'D-)\n                  ((= (car grades) 0.0) 'E))\n     \
    \       (numerical_letter_grade (cdr grades)))))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3vkb9gzt.rkt:46:4

    actual:     ''(A+ B C- C A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3vkb9gzt.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3vkb9gzt.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3vkb9gzt.rkt:49:4

    actual:     ''(E)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3vkb9gzt.rkt:50:4

    actual:     ''(D D- C- B B+)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3vkb9gzt.rkt:51:4

    actual:     ''(E D-)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n    \
    \       [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(= gpa\
    \ 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo6_amxqw.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo6_amxqw.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo6_amxqw.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo6_amxqw.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n          (cond ((>= x 4.0) \"A+\")\n                ((>=\
    \ x 3.7) \"A\")\n                ((>= x 3.3) \"A-\")\n                ((>= x 3.0)\
    \ \"B+\")\n                ((>= x 2.7) \"B\")\n                ((>= x 2.3) \"\
    B-\")\n                ((>= x 2.0) \"C+\")\n                ((>= x 1.7) \"C\"\
    )\n                ((>= x 1.3) \"C-\")\n                ((>= x 1.0) \"D+\")\n\
    \                ((>= x 0.7) \"D\")\n                ((>= x 0.0) \"D-\")\n   \
    \             (else \"E\")))\n        grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxaqb5j6r.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxaqb5j6r.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxaqb5j6r.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxaqb5j6r.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else          \
    \ 'E]\n         )\n       )\n       grades\n  )\n)\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp12yp7sfe.rkt:51:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp12yp7sfe.rkt:52:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp12yp7sfe.rkt:53:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp12yp7sfe.rkt:54:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp12yp7sfe.rkt:55:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp12yp7sfe.rkt:56:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (define (letter-grade gpa)\n    (cond\n      [(>= gpa 4.0) \"A+\"]\n      [(>=\
    \ gpa 3.7) \"A\"]\n      [(>= gpa 3.3) \"A-\"]\n      [(>= gpa 3.0) \"B+\"]\n\
    \      [(>= gpa 2.7) \"B\"]\n      [(>= gpa 2.3) \"B-\"]\n      [(>= gpa 2.0)\
    \ \"C+\"]\n      [(>= gpa 1.7) \"C\"]\n      [(>= gpa 1.3) \"C-\"]\n      [(>=\
    \ gpa 1.0) \"D+\"]\n      [(>= gpa 0.7) \"D\"]\n      [(>= gpa 0.0) \"D-\"]\n\
    \      [else \"E\"]))\n  (map letter-grade grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp95zsvx9l.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp95zsvx9l.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp95zsvx9l.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp95zsvx9l.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (gpa)\n     (cond\n       [(= gpa 4.0) 'A+]\n       [(> gpa\
    \ 3.7) 'A]\n       [(> gpa 3.3) 'A-]\n       [(> gpa 3.0) 'B+]\n       [(> gpa\
    \ 2.7) 'B]\n       [(> gpa 2.3) 'B-]\n       [(> gpa 2.0) 'C+]\n       [(> gpa\
    \ 1.7) 'C]\n       [(> gpa 1.3) 'C-]\n       [(> gpa 1.0) 'D+]\n       [(> gpa\
    \ 0.7) 'D]\n       [(> gpa 0.0) 'D-]\n       [else 'E]))\n   grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiz_cpzi6.rkt:48:4

    actual:     ''(A+ B C- C A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiz_cpzi6.rkt:49:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiz_cpzi6.rkt:50:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiz_cpzi6.rkt:51:4

    actual:     ''(E)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiz_cpzi6.rkt:52:4

    actual:     ''(D D- C- B B+)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiz_cpzi6.rkt:53:4

    actual:     ''(E D-)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n    \
    \       [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(= gpa\
    \ 0.0) \"E\"]))\n       grades))\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpu_7h0qpp.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpu_7h0qpp.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpu_7h0qpp.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpu_7h0qpp.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (x)\n     (cond\n       [(>= x 4.0) 'A+]\n       [(>= x 3.7)\
    \ 'A]\n       [(>= x 3.3) 'A-]\n       [(>= x 3.0) 'B+]\n       [(>= x 2.7) 'B]\n\
    \       [(>= x 2.3) 'B-]\n       [(>= x 2.0) 'C+]\n       [(>= x 1.7) 'C]\n  \
    \     [(>= x 1.3) 'C-]\n       [(>= x 1.0) 'D+]\n       [(>= x 0.7) 'D]\n    \
    \   [(>= x 0.0) 'D-]\n       [else 'E]))\n   grades))\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcm1d28qq.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcm1d28qq.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcm1d28qq.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcm1d28qq.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcm1d28qq.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcm1d28qq.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map grade-to-letter grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmp0lebkutq.rkt:25:7: grade-to-letter: unbound identifier\n  in: grade-to-letter\n\
    \  location...:\n   /tmp/tmp0lebkutq.rkt:25:7\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond\n    [(= (list-ref grades 0) 4.0) 'A+]\n    [(> (list-ref grades 0) 3.7)\
    \ 'A]\n    [(> (list-ref grades 0) 3.3) 'A-]\n    [(> (list-ref grades 0) 3.0)\
    \ 'B+]\n    [(> (list-ref grades 0) 2.7) 'B]\n    [(> (list-ref grades 0) 2.3)\
    \ 'B-]\n    [(> (list-ref grades 0) 2.0) 'C+]\n    [(> (list-ref grades 0) 1.7)\
    \ 'C]\n    [(> (list-ref grades 0) 1.3) 'C-]\n    [(> (list-ref grades 0) 1.0)\
    \ 'D+]\n    [(> (list-ref grades 0) 0.7) 'D]\n    [(> (list-ref grades 0) 0.0)\
    \ 'D-]\n    [(= (list-ref grades 0) 0.0) 'E]))\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8y4c_5m3.rkt:44:4

    actual:     ''A+

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8y4c_5m3.rkt:45:4

    actual:     ''D+

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8y4c_5m3.rkt:46:4

    actual:     ''D-

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8y4c_5m3.rkt:47:4

    actual:     ''E

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8y4c_5m3.rkt:48:4

    actual:     ''D

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8y4c_5m3.rkt:49:4

    actual:     ''E

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (for/list ([grade grades])\n    (cond\n      [(>= grade 4.0) 'A+]\n      [(>=\
    \ grade 3.7) 'A]\n      [(>= grade 3.3) 'A-]\n      [(>= grade 3.0) 'B+]\n   \
    \   [(>= grade 2.7) 'B]\n      [(>= grade 2.3) 'B-]\n      [(>= grade 2.0) 'C+]\n\
    \      [(>= grade 1.7) 'C]\n      [(>= grade 1.3) 'C-]\n      [(>= grade 1.0)\
    \ 'D+]\n      [(>= grade 0.7) 'D]\n      [(>= grade 0.0) 'D-]\n      [else 'E])))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk80kufov.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk80kufov.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk80kufov.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk80kufov.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk80kufov.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk80kufov.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n            \
    \   [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n         \
    \      [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"]\n      \
    \         [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"]\n  \
    \             [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"]\n\
    \               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4sp7nq6v.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4sp7nq6v.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4sp7nq6v.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4sp7nq6v.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (grade)\n     (cond\n       [(>= grade 4.0) \"A+\"]\n    \
    \   [(>= grade 3.7) \"A\"]\n       [(>= grade 3.3) \"A-\"]\n       [(>= grade\
    \ 3.0) \"B+\"]\n       [(>= grade 2.7) \"B\"]\n       [(>= grade 2.3) \"B-\"]\n\
    \       [(>= grade 2.0) \"C+\"]\n       [(>= grade 1.7) \"C\"]\n       [(>= grade\
    \ 1.3) \"C-\"]\n       [(>= grade 1.0) \"D+\"]\n       [(>= grade 0.7) \"D\"]\n\
    \       [(>= grade 0.0) \"D-\"]\n       [else \"E\"]))\n   grades))\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplf3l6gr0.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplf3l6gr0.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplf3l6gr0.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplf3l6gr0.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade) (cond ((>= grade 4.0) 'A+)\n                         \
    \    ((>= grade 3.7) 'A)\n                             ((>= grade 3.3) 'A-)\n\
    \                             ((>= grade 3.0) 'B+)\n                         \
    \    ((>= grade 2.7) 'B)\n                             ((>= grade 2.3) 'B-)\n\
    \                             ((>= grade 2.0) 'C+)\n                         \
    \    ((>= grade 1.7) 'C)\n                             ((>= grade 1.3) 'C-)\n\
    \                             ((>= grade 1.0) 'D+)\n                         \
    \    ((>= grade 0.7) 'D)\n                             ((>= grade 0.0) 'D-)\n\
    \                             (else 'E)))\n      grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpenjrd96s.rkt:45:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpenjrd96s.rkt:46:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpenjrd96s.rkt:47:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpenjrd96s.rkt:48:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpenjrd96s.rkt:49:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpenjrd96s.rkt:50:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (grade)\n     (cond\n       [(>= grade 4.0) 'A+]\n       [(>=\
    \ grade 3.7) 'A]\n       [(>= grade 3.3) 'A-]\n       [(>= grade 3.0) 'B+]\n \
    \      [(>= grade 2.7) 'B]\n       [(>= grade 2.3) 'B-]\n       [(>= grade 2.0)\
    \ 'C+]\n       [(>= grade 1.7) 'C]\n       [(>= grade 1.3) 'C-]\n       [(>= grade\
    \ 1.0) 'D+]\n       [(>= grade 0.7) 'D]\n       [(>= grade 0.0) 'D-]\n       [else\
    \ 'E]))\n   grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbdirqcwy.rkt:48:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbdirqcwy.rkt:49:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbdirqcwy.rkt:50:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbdirqcwy.rkt:51:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbdirqcwy.rkt:52:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbdirqcwy.rkt:53:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map grade-for-gpa grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpnqstzdeh.rkt:25:7: grade-for-gpa: unbound identifier\n  in: grade-for-gpa\n\
    \  location...:\n   /tmp/tmpnqstzdeh.rkt:25:7\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (e)\n         (cond ((>= e 4.0) 'A+)\n               ((>= e 3.7)\
    \ 'A)\n               ((>= e 3.3) 'A-)\n               ((>= e 3.0) 'B+)\n    \
    \           ((>= e 2.7) 'B)\n               ((>= e 2.3) 'B-)\n               ((>=\
    \ e 2.0) 'C+)\n               ((>= e 1.7) 'C)\n               ((>= e 1.3) 'C-)\n\
    \               ((>= e 1.0) 'D+)\n               ((>= e 0.7) 'D)\n           \
    \    ((>= e 0.0) 'D-)\n               (else 'E)))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptmcluzta.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptmcluzta.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptmcluzta.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptmcluzta.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptmcluzta.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptmcluzta.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \    (map (lambda (GPA) (if (< GPA 1.0) 'D- 'E)) grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9tbq2ilm.rkt:32:4

    actual:     ''(E E E E E)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9tbq2ilm.rkt:33:4

    actual:     ''(E)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9tbq2ilm.rkt:34:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9tbq2ilm.rkt:35:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9tbq2ilm.rkt:36:4

    actual:     ''(E D- E E E)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9tbq2ilm.rkt:37:4

    actual:     ''(D- D-)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (local [(define (grade_tuple_list)\n            (map (lambda (x) (cond [(>=\
    \ x 4.0) '(4.0 \"A+\")]\n                                   [(>= x 3.7) '(3.7\
    \ \"A\")]\n                                   [(>= x 3.3) '(3.3 \"A-\")]\n   \
    \                                [(>= x 3.0) '(3.0 \"B+\")]\n                \
    \                   [(>= x 2.7) '(2.7 \"B\")]\n                              \
    \     [(>= x 2.3) '(2.3 \"B-\")]\n                                   [(>= x 2.0)\
    \ '(2.0 \"C+\")]\n                                   [(>= x 1.7) '(1.7 \"C\")]\n\
    \                                   [(>= x 1.3) '(1.3 \"C-\")]\n             \
    \                      [(>= x 1.0) '(1.0 \"D+\")]\n                          \
    \         [(>= x 0.7) '(0.7 \"D\")]\n                                   [(>= x\
    \ 0.0) '(0.0 \"D-\")]\n                                   [else '(0.0 \"E\")]))\n\
    \                  grades))]\n    (map (lambda (x) (cadr x))\n         (map (lambda\
    \ (t) (list-ref t (index-of (lambda (y) (and (<= (car y) (car t))\n          \
    \                                                      (> (cadr y) (car t))))\n\
    \                                                     (grade_tuple_list))))\n\
    \              (grade_tuple_list)))))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7cyelujy.rkt:51:4\n\
    \nindex-of: contract violation\n  expected: list?\n  given: #<procedure:...tmp/tmp7cyelujy.rkt:41:48>\n\
    \  argument position: 1st\n  other arguments...:\n   '((4.0 \"A+\") (3.0 \"B+\"\
    ) (1.7 \"C\") (2.0 \"C+\") (3.3 \"A-\"))\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmp7cyelujy.rkt:52:4\n\nindex-of:\
    \ contract violation\n  expected: list?\n  given: #<procedure:...tmp/tmp7cyelujy.rkt:41:48>\n\
    \  argument position: 1st\n  other arguments...:\n   '((1.0 \"D+\"))\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7cyelujy.rkt:53:4\n\
    \nindex-of: contract violation\n  expected: list?\n  given: #<procedure:...tmp/tmp7cyelujy.rkt:41:48>\n\
    \  argument position: 1st\n  other arguments...:\n   '((0.0 \"D-\"))\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7cyelujy.rkt:54:4\n\
    \nindex-of: contract violation\n  expected: list?\n  given: #<procedure:...tmp/tmp7cyelujy.rkt:41:48>\n\
    \  argument position: 1st\n  other arguments...:\n   '((0.0 \"D-\"))\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7cyelujy.rkt:55:4\n\
    \nindex-of: contract violation\n  expected: list?\n  given: #<procedure:...tmp/tmp7cyelujy.rkt:41:48>\n\
    \  argument position: 1st\n  other arguments...:\n   '((1.0 \"D+\") (0.0 \"D-\"\
    ) (1.3 \"C-\") (2.7 \"B\") (3.3 \"A-\"))\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmp7cyelujy.rkt:56:4\n\nindex-of:\
    \ contract violation\n  expected: list?\n  given: #<procedure:...tmp/tmp7cyelujy.rkt:41:48>\n\
    \  argument position: 1st\n  other arguments...:\n   '((0.0 \"D-\") (0.7 \"D\"\
    ))\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>=\
    \ gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0)\
    \ 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n\
    \               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n       \
    \        [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n             \
    \  [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0ety6fmb.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0ety6fmb.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0ety6fmb.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0ety6fmb.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0ety6fmb.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0ety6fmb.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (for/list ([grade grades])\n    (cond [(>= grade 4.0) \"A+\"]\n          [(>=\
    \ grade 3.7) \"A\"]\n          [(>= grade 3.3) \"A-\"]\n          [(>= grade 3.0)\
    \ \"B+\"]\n          [(>= grade 2.7) \"B\"]\n          [(>= grade 2.3) \"B-\"\
    ]\n          [(>= grade 2.0) \"C+\"]\n          [(>= grade 1.7) \"C\"]\n     \
    \     [(>= grade 1.3) \"C-\"]\n          [(>= grade 1.0) \"D+\"]\n          [(>=\
    \ grade 0.7) \"D\"]\n          [(>= grade 0.0) \"D-\"]\n          [else \"E\"\
    ])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7jrvagra.rkt:45:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7jrvagra.rkt:48:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7jrvagra.rkt:49:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7jrvagra.rkt:50:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond \n    [(= 4.0 grades) \"A+\"]\n    [(> 3.7 grades) \"A\"]\n    [(> 3.3\
    \ grades) \"A-\"]\n    [(> 3.0 grades) \"B+\"]\n    [(> 2.7 grades) \"B\"]\n \
    \   [(> 2.3 grades) \"B-\"]\n    [(> 2.0 grades) \"C+\"]\n    [(> 1.7 grades)\
    \ \"C\"]\n    [(> 1.3 grades) \"C-\"]\n    [(> 1.0 grades) \"D+\"]\n    [(> 0.7\
    \ grades) \"D\"]\n    [(> 0.0 grades) \"D-\"]\n    [(= 0.0 grades) \"E\"]\n  \
    \  [(< 0.0 grades) \"Error\"]))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkphmk8po.rkt:46:4\n\
    \n=: contract violation\n  expected: number?\n  given: '(4.0 3 1.7 2 3.5)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkphmk8po.rkt:47:4\n\
    \n=: contract violation\n  expected: number?\n  given: '(1.2)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkphmk8po.rkt:48:4\n\
    \n=: contract violation\n  expected: number?\n  given: '(0.5)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkphmk8po.rkt:49:4\n\
    \n=: contract violation\n  expected: number?\n  given: '(0.0)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkphmk8po.rkt:50:4\n\
    \n=: contract violation\n  expected: number?\n  given: '(1.0 0.3 1.5 2.8 3.3)\n\
    --------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpkphmk8po.rkt:51:4\n\n=: contract violation\n  expected: number?\n\
    \  given: '(0.0 0.7)\n--------------------\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond [(empty? grades) empty]\n        [(> (first grades) 4.0) (cons \"A+\"\
    \ (numerical_letter_grade (rest grades)))]\n        [(> (first grades) 3.7) (cons\
    \ \"A\" (numerical_letter_grade (rest grades)))]\n        [(> (first grades) 3.3)\
    \ (cons \"A-\" (numerical_letter_grade (rest grades)))]\n        [(> (first grades)\
    \ 3.0) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n        [(> (first\
    \ grades) 2.7) (cons \"B\" (numerical_letter_grade (rest grades)))]\n        [(>\
    \ (first grades) 2.3) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 2.0) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.7) (cons \"C\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.3) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.0) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 0.7) (cons \"D\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 0.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 0.0) (cons \"E\" (numerical_letter_grade (rest grades)))]))\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpql04jgzv.rkt:44:4

    actual:     ''("A" "B" "C-" "C" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpql04jgzv.rkt:47:4

    actual:     #<void>

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpql04jgzv.rkt:49:4

    actual:     #<void>

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x) (cond ((>= x 4.0) 'A+)\n                         ((>= x 3.7)\
    \ 'A)\n                         ((>= x 3.3) 'A-)\n                         ((>=\
    \ x 3.0) 'B+)\n                         ((>= x 2.7) 'B)\n                    \
    \     ((>= x 2.3) 'B-)\n                         ((>= x 2.0) 'C+)\n          \
    \               ((>= x 1.7) 'C)\n                         ((>= x 1.3) 'C-)\n \
    \                        ((>= x 1.0) 'D+)\n                         ((>= x 0.7)\
    \ 'D)\n                         ((>= x 0.0) 'D-)\n                         (else\
    \ 'E)))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvumgwj7f.rkt:45:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvumgwj7f.rkt:46:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvumgwj7f.rkt:47:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvumgwj7f.rkt:48:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvumgwj7f.rkt:49:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvumgwj7f.rkt:50:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond\n    [(>= (car grades) 4.0) 'A+]\n    [(>= (car grades) 3.7) 'A]\n  \
    \  [(>= (car grades) 3.3) 'A-]\n    [(>= (car grades) 3.0) 'B+]\n    [(>= (car\
    \ grades) 2.7) 'B]\n    [(>= (car grades) 2.3) 'B-]\n    [(>= (car grades) 2.0)\
    \ 'C+]\n    [(>= (car grades) 1.7) 'C]\n    [(>= (car grades) 1.3) 'C-]\n    [(>=\
    \ (car grades) 1.0) 'D+]\n    [(>= (car grades) 0.7) 'D]\n    [(>= (car grades)\
    \ 0.0) 'D-]\n    [else 'E]))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeytg59c3.rkt:45:4

    actual:     ''A+

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeytg59c3.rkt:46:4

    actual:     ''D+

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeytg59c3.rkt:47:4

    actual:     ''D-

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeytg59c3.rkt:48:4

    actual:     ''D-

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeytg59c3.rkt:49:4

    actual:     ''D+

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeytg59c3.rkt:50:4

    actual:     ''D-

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (if (null? grades)\n      '()\n      (cons\n       (cond\n        ((>= (car\
    \ grades) 4.0) \"A+\")\n        ((>= (car grades) 3.7) \"A\")\n        ((>= (car\
    \ grades) 3.3) \"A-\")\n        ((>= (car grades) 3.0) \"B+\")\n        ((>= (car\
    \ grades) 2.7) \"B\")\n        ((>= (car grades) 2.3) \"B-\")\n        ((>= (car\
    \ grades) 2.0) \"C+\")\n        ((>= (car grades) 1.7) \"C\")\n        ((>= (car\
    \ grades) 1.3) \"C-\")\n        ((>= (car grades) 1.0) \"D+\")\n        ((>= (car\
    \ grades) 0.7) \"D\")\n        ((>= (car grades) 0.0) \"D-\")\n        (else \"\
    E\"))\n       (numerical_letter_grade (cdr grades)))))\n```\n\n##### Python:\n\
    ```python\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Fri Dec  1 01:51:45 2017\n\
    \n@author: ruhil\n\"\"\"\n\n#code\n\ndef numerical_letter_grade(grades):\n   \
    \ ret_list = []\n    for grade in grades:\n        if grade >= 4.0:\n        \
    \    ret_list.append(\"A+\")\n        elif grade >= 3.7:\n            ret_list.append(\"\
    A\")\n        elif grade >= 3.3:\n            ret_list.append(\"A-\")\n      \
    \  elif grade >= 3.0:\n            ret_list.append(\"B+\")\n        elif grade\
    \ >= 2.7:\n            ret_list.append(\"B\")\n        elif grade >= 2.3:\n  \
    \          ret_list.append(\"B-\")\n        elif grade >= 2.0:\n            ret_list.append(\"\
    C+\")\n        elif grade >= 1.7:\n            ret_list.append(\"C\")\n      \
    \  elif grade >= 1.3:\n            ret_list.append(\"C-\")\n       \n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpci736x22.rkt:45:0: read-syntax: bad syntax `##`\n  context...:\n\
    \   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>=\
    \ gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0)\
    \ 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n\
    \               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n       \
    \        [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n             \
    \  [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj_lgm5f_.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj_lgm5f_.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj_lgm5f_.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj_lgm5f_.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj_lgm5f_.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj_lgm5f_.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwqrcfskp.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwqrcfskp.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwqrcfskp.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwqrcfskp.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwqrcfskp.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwqrcfskp.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (cond\n    [(and (>= (car grades) 4.0) (< (car grades) 4.2)) \"A+\"]\n    [(and\
    \ (>= (car grades) 3.7) (< (car grades) 4.0)) \"A\"]\n    [(and (>= (car grades)\
    \ 3.3) (< (car grades) 3.7)) \"A-\"]\n    [(and (>= (car grades) 3.0) (< (car\
    \ grades) 3.3)) \"B+\"]\n    [(and (>= (car grades) 2.7) (< (car grades) 3.0))\
    \ \"B\"]\n    [(and (>= (car grades) 2.3) (< (car grades) 2.7)) \"B-\"]\n    [(and\
    \ (>= (car grades) 2.0) (< (car grades) 2.3)) \"C+\"]\n    [(and (>= (car grades)\
    \ 1.7) (< (car grades) 2.0)) \"C\"]\n    [(and (>= (car grades) 1.3) (< (car grades)\
    \ 1.7)) \"C-\"]\n    [(and (>= (car grades) 1.0) (< (car grades) 1.3)) \"D+\"\
    ]\n    [(and (>= (car grades) 0.7) (< (car grades) 1.0)) \"D\"]\n    [(and (>=\
    \ (car grades) 0.0) (< (car grades) 0.7)) \"D-\"]\n    [(= (car grades) 0.0) \"\
    E\"]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr4t1wq27.rkt:45:4

    actual:     "A+"

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr4t1wq27.rkt:46:4

    actual:     "D+"

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr4t1wq27.rkt:47:4

    actual:     "D-"

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr4t1wq27.rkt:48:4

    actual:     "D-"

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr4t1wq27.rkt:49:4

    actual:     "D+"

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr4t1wq27.rkt:50:4

    actual:     "D-"

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 1
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (define (less_than_4_0? grade)\n    (< grade 4.0))\n  (define (greater_than?\
    \ grade lower-bound)\n    (> grade lower-bound))\n  (define (greater_than_3.0?\
    \ grade)\n    (greater_than? grade 3.0))\n  (define (greater_than_2.0? grade)\n\
    \    (greater_than? grade 2.0))\n  (define (greater_than_1.0? grade)\n    (greater_than?\
    \ grade 1.0))\n  (define (greater_than_0.0? grade)\n    (greater_than? grade 0.0))\n\
    \  (define (less_than_1.0? grade)\n    (< grade 1.0))\n  (define (less_than_2.0?\
    \ grade)\n    (< grade 2.0))\n  (define (less_than_3.0? grade)\n    (< grade 3.0))\n\
    \  (define (less_than_1.3? grade)\n    (< grade 1.3))\n  (define (less_than_2.3?\
    \ grade)\n    (< grade 2.3))\n  (define (less_than_3.3? grade)\n    (< grade 3.3))\n\
    \  (define (less_than_0.7? grade)\n    (< grade 0.7))\n  (map (lambda (grade)\n\
    \         (cond [(= grade 4.0) 'A+]\n               [(greater_than? grade 3.7)\
    \ 'A]\n               [(greater_than? grade 3.3) 'A-]\n               [(greater_than?\
    \ grade 3.0) 'B+]\n               [(greater_than? grade 2.7) 'B]\n           \
    \    [(greater_than? grade 2.3) 'B-]\n               [(greater_than? grade 2.0)\
    \ 'C+]\n               [(greater_than? grade 1.7) 'C]\n               [(greater_than?\
    \ grade 1.3) 'C-]\n               [(greater_than? grade 1.0) 'D+]\n          \
    \     [(greater_than? grade 0.7) 'D\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmp2layro9_.rkt:62:15: read-syntax: expected a `]` to close `[`\n\
    \  possible cause: indentation suggests a missing `]` before line 63\n  context...:\n\
    \   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/racket-8.3.0-k63hxj46zvzf4h4gps46prefkjkbgnmp/share/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''

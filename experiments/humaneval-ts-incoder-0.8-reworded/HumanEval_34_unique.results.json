{
  "language": "ts",
  "name": "HumanEval_34_unique",
  "results": [
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const u: number[] = [];\n  for (let i = 0; i < l.length; ++i) {\n    if (u.indexOf(l[i]) === -1) u.push(l[i]);\n  }\n  return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpgql1j4lm.js:15:12)\n    at Object.<anonymous> (/tmp/tmpgql1j4lm.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const s: number[] = [];\n    for (let i = 0; i< l.length; i++) {\n        if (s.indexOf(l[i]) < 0) {\n            s.push(l[i]);\n        }\n    }\n    return s;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp4ebh03nn.js:16:12)\n    at Object.<anonymous> (/tmp/tmp4ebh03nn.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.filter((v, i, a) => {\n    return a.indexOf(v) === i\n  })\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpr6yb9o9n.js:12:12)\n    at Object.<anonymous> (/tmp/tmpr6yb9o9n.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tlet a: number[] = [];\n\tlet hash: Map<string, number> = new Map();\n\tfor (let n of l) {\n\t\tif (!hash.has(n)) {\n\t\t\ta.push(n);\n\t\t\thash.set(n, a.length - 1);\n\t\t}\n\t}\n\treturn a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpjc_11d4s.ts(8,17): error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.\n../../../../tmp/tmpjc_11d4s.ts(10,13): error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.\n",
      "timestamp": 1660334198
    },
    {
      "exit_code": 0,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const s: Set<number> = new Set();\n    l.forEach(n => s.add(n));\n    return [...s].sort((a: number, b: number) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return [...new Set(l)];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp80w9t7h8.js:10:12)\n    at Object.<anonymous> (/tmp/tmp80w9t7h8.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333997
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    let x: number[] = [];\n    l.forEach((a) => {\n        if (x.indexOf(a) === -1) x.push(a);\n    });\n    return x;\n}\n</code>\n<|/ a tags=arrays,javascript,sorting |>\n<| a dscore=1 tags=arrays,javascript,sorting |>\nTry this one for me\n<code>\nconst sortedUnique = arr => {\n    const sortedArr = arr.slice();\n    sortedArr.sort();\n    return uniqueSort(sortedArr)\n}\n\nconst uniqueSort = (arr) => {\n    const result = [];\n    for (let i = 0; i < arr.length; i++) {\n        const elem = arr[i];\n        let exist = false;\n        for (let j = 0; j < result.length; j++) {\n            if (result[j].indexOf(elem) !== -1) {\n                exist = true;\n                break;\n            }\n        }\n        if (!exist) {\n            result.push(elem);\n        }\n    }\n    return result;\n}\n\nconsole.log(uniqueSort([5, 2, 5, 5, 5, 5, 3, 9, 0, 123, 123]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpsszg6o4i.ts(11,2): error TS1110: Type expected.\n../../../../tmp/tmpsszg6o4i.ts(11,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpsszg6o4i.ts(12,2): error TS1109: Expression expected.\n../../../../tmp/tmpsszg6o4i.ts(12,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpsszg6o4i.ts(13,2): error TS1109: Expression expected.\n../../../../tmp/tmpsszg6o4i.ts(13,6): error TS1005: ';' expected.\n../../../../tmp/tmpsszg6o4i.ts(13,15): error TS1005: ';' expected.\n../../../../tmp/tmpsszg6o4i.ts(13,47): error TS1109: Expression expected.\n../../../../tmp/tmpsszg6o4i.ts(14,5): error TS1005: ';' expected.\n../../../../tmp/tmpsszg6o4i.ts(14,10): error TS1005: ';' expected.\n../../../../tmp/tmpsszg6o4i.ts(14,18): error TS1005: '(' expected.\n../../../../tmp/tmpsszg6o4i.ts(16,1): error TS1005: ';' expected.\n",
      "timestamp": 1660334198
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const c: Set<number> = new Set()\n    for (let i = 0; i < l.length; i++) {\n        if (!c.has(+l[i])) {\n            c.add(+l[i])\n        }\n    }\n    return Array.from(c.values())\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpp40snisa.js:16:12)\n    at Object.<anonymous> (/tmp/tmpp40snisa.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    var a = [], l = l.sort(function (a, b) { return a - b; }), i, v;\n    for (i = 0; i < l.length; i++) {\n        if (v = (v = l[i])[i ? 'next' : 'prev']) if (a === v) {\n            a.push(v);\n        } else break;\n    }\n    return a;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp9x9gznwp.js:19:12)\n    at Object.<anonymous> (/tmp/tmp9x9gznwp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const a: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (a.indexOf(l[i]) === -1) a.push(l[i]);\n    }\n    return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp6npvf8ri.js:15:12)\n    at Object.<anonymous> (/tmp/tmp6npvf8ri.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const u: number[] = []\n  for (let i = 0; i < l.length; i++) {\n    if (u.indexOf(l[i]) < 0) {\n      u.push(l[i])\n    }\n  }\n  return u\n}\n</code>\n<|/ a tags=sorting,arrays,javascript |>\n<| c |>\nAgreed! I wanted to do that but couldn't. I don't know why. I think that's because I am a newbie at programming. Thanks anyway!\n<|/ c |>\n<| c |>\nNo worries, I appreciate you taking the time to come up with the working solution.\n<|/ c |>\n<| a dscore=1 |>\nIt can be done using array.map()\n\n<code>\nconst arr = [5, 3, 2, 3, 9, 0, 123]\n\nconst res = arr.map(el => arr.indexOf(el) !== arr.lastIndexOf(el) ? el : null).filter(el => el)\n\nconsole.log(res)</code>\n<|/ a tags=sorting,arrays,javascript |>\n<| c |>\n`.reduce((r, c) => {\n  return r.indexOf(c) > -1 ? r.concat(c) : r;\n}, [])`\n<|/ c |>\n<| a |>\nAnother way to do it :\n\n<code>\nconst input = [5, 3, 2, 3, 9, 0, 123];\nconst output = input.filter(x => {\n  const index = input.indexOf(x);\n  return index !== input.lastIndexOf(x);\n});\nconsole.log(output);</code>\n\nEDIT:\nIt seems that there are some problems with this solution, so I've made this new one:\n\n<code>\nconst input = [5, 3, 2, 3, 9, 0, 123];\nconst output = input.filter((x, i, arr) => {\n  const index = arr.indexOf(x);\n  return index !== arr.lastIndexOf(x);\n});\nconsole.log(output);</code>\n<|/ a dscore=1 tags=sorting,arrays,javascript |>\n<| c |>\nThis doesn't work if the array has a unique value, which it does in this case.\n<|/ c |>\n<| c |>\nIt works, I've added a second snippet, maybe it's an issue with my browser\n<|/ c |>\n<| c |>\nYes, it works with your second snippet too, just not with my original one. I don't know why.\n<|/ c |>\n<| c |>\nI guess it's because of your browser, I'm using chrome and it works fine\n<|/ c |>\n<| c |>\nYeah I'm using the latest version of Chrome, weird\n<|/ c |>\n<| a tags=sorting,arrays,javascript |>\n<code>\nconst arr = [5, 3, 2, 3, 9, 0, 123];\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpk7107cb9.ts(13,2): error TS1110: Type expected.\n../../../../tmp/tmpk7107cb9.ts(13,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpk7107cb9.ts(14,2): error TS1109: Expression expected.\n../../../../tmp/tmpk7107cb9.ts(14,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpk7107cb9.ts(15,2): error TS1109: Expression expected.\n../../../../tmp/tmpk7107cb9.ts(15,7): error TS1109: Expression expected.\n../../../../tmp/tmpk7107cb9.ts(16,9): error TS1005: ';' expected.\n../../../../tmp/tmpk7107cb9.ts(16,11): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpk7107cb9.ts(16,18): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpk7107cb9.ts(16,24): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpk7107cb9.ts(16,29): error TS1005: 'while' expected.\n../../../../tmp/tmpk7107cb9.ts(16,33): error TS1005: ')' expected.\n../../../../tmp/tmpk7107cb9.ts(16,49): error TS1005: ';' expected.\n../../../../tmp/tmpk7107cb9.ts(16,51): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpk7107cb9.ts(16,63): error TS1005: ';' expected.\n../../../../tmp/tmpk7107cb9.ts(16,69): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpk7107cb9.ts(16,128): error TS1002: Unterminated string literal.\n../../../../tmp/tmpk7107cb9.ts(17,2): error TS1109: Expression expected.\n../../../../tmp/tmpk7107cb9.ts(17,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpk7107cb9.ts(18,2): error TS1109: Expression expected.\n../../../../tmp/tmpk7107cb9.ts(18,7): error TS1109: Expression expected.\n../../../../tmp/tmpk7107cb9.ts(19,4): error TS1005: ';' expected.\n../../../../tmp/tmpk7107cb9.ts(19,15): error TS1005: ';' expected.\n../../../../tmp/tmpk7107cb9.ts(19,26): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpk7107cb9.ts(19,30): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpk7107cb9.ts(19,37): error TS1434: Unexpected keyword or identifier.\n../../../../tm",
      "timestamp": 1660334198
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const set = new Set(l);\n    return [...set];\n}\n</code>\n<|/ a tags=typescript,javascript |>\n<| c |>\nThis works, but it only returns unique elements after sorting them, not unique elements from the original array. `[2, 1, 3, 3, 5, 6, 6].unique()` returns `[2, 3, 6, 6]` - not `[1, 2, 3, 5, 6]`.\n<|/ c |>\n<| c |>\nThanks for pointing out. I forgot to add one extra step. I updated the answer\n<|/ c |>\n<| c |>\n`new Set([...l, ...l])` is probably better for performance (as opposed to `[...new Set(l)]`) as it avoids a spread operation.\n<|/ c |>\n<| a dscore=4 |>\nIn case you don't want to use ES6 syntax or don't want to use lodash or underscore, you can do the following:\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpkzlhf4ea.ts(8,2): error TS1110: Type expected.\n../../../../tmp/tmpkzlhf4ea.ts(8,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpkzlhf4ea.ts(9,2): error TS1109: Expression expected.\n../../../../tmp/tmpkzlhf4ea.ts(9,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpkzlhf4ea.ts(10,2): error TS1109: Expression expected.\n../../../../tmp/tmpkzlhf4ea.ts(10,7): error TS1109: Expression expected.\n../../../../tmp/tmpkzlhf4ea.ts(11,6): error TS1005: ';' expected.\n../../../../tmp/tmpkzlhf4ea.ts(11,17): error TS1005: ';' expected.\n../../../../tmp/tmpkzlhf4ea.ts(11,20): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpkzlhf4ea.ts(11,25): error TS1435: Unknown keyword or identifier. Did you mean 'return'?\n../../../../tmp/tmpkzlhf4ea.ts(11,33): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpkzlhf4ea.ts(11,40): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpkzlhf4ea.ts(11,49): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpkzlhf4ea.ts(11,55): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpkzlhf4ea.ts(11,73): error TS1005: ';' expected.\n../../../../tmp/tmpkzlhf4ea.ts(11,80): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpkzlhf4ea.ts(11,89): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpkzlhf4ea.ts(11,94): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpkzlhf4ea.ts(11,98): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpkzlhf4ea.ts(11,114): error TS1003: Identifier expected.\n../../../../tmp/tmpkzlhf4ea.ts(12,1): error TS1003: Identifier expected.\n../../../../tmp/tmpkzlhf4ea.ts(12,2): error TS1109: Expression expected.\n../../../../tmp/tmpkzlhf4ea.ts(12,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpkzlhf4ea.ts(13,2): error TS1109: Expression expected.\n../../../../tmp/tmpkzlhf4ea.ts(13,7): error TS1109: Expression expected.\n../../../../tmp/tmpkzlhf4ea.ts",
      "timestamp": 1660334198
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const a = new Set<number>();\n  for (const n of l) {\n    a.add(n);\n  }\n  return Array.from(a).sort();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  123,\n  2,\n  3,\n  5,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpfcsn77bn.js:14:12)\n    at Object.<anonymous> (/tmp/tmpfcsn77bn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 123, 2, 3, 5, 9 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tlet ret: number[] = new Array(l.length);\n\tlet keys = new Uint32Array(l.length);\n\tfor(let i=0,n=l.length; i<n; i++) {\n\t\tlet key = l[i];\n\t\tlet idx = keys[key];\n\t\tif(idx === undefined) {\n\t\t\tidx = keys[key] = i;\n\t\t}\n\t\telse {\n\t\t\tidx = (idx<<1)|(i+1);\n\t\t}\n\t\tret[idx] = key;\n\t}\n\treturn ret;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty item>,\n  5,\n  3,\n  5,\n  2,\n  3,\n  9,\n  <1 empty item>,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpidn9f0ad.js:23:12)\n    at Object.<anonymous> (/tmp/tmpidn9f0ad.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty item>, 5, 3, 5, 2, 3, 9, <1 empty item>, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tconst a: number[] = [];\n\tconst n: number[] = l;\n\tfor (let i = 0; i < n.length; i++) {\n\t\tif (a.indexOf(n[i]) < 0) {\n\t\t\ta.push(n[i]);\n\t\t}\n\t}\n\treturn a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpec9m6fp0.js:17:12)\n    at Object.<anonymous> (/tmp/tmpec9m6fp0.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const a: number[] = [];\n  const o: {[k: number]: boolean} = {};\n  for (const x of l) {\n    if (x === null) continue;\n    if (o[x] !== true) o[x] = true;\n    else {\n      a.push(x);\n      delete o[x];\n    }\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpog2y_jlq.js:22:12)\n    at Object.<anonymous> (/tmp/tmpog2y_jlq.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 0,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\treturn l.filter((l, i, a) => a.indexOf(l) === i).sort((a: number, b: number) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 0,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.filter(function(elem, pos, self) {\n    return self.indexOf(elem) === pos;\n  }).sort(function(a, b) {\n    return a - b;\n  });\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (result.indexOf(l[i]) == -1) result.push(l[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp0x0if7br.js:15:12)\n    at Object.<anonymous> (/tmp/tmp0x0if7br.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const u: number[] = [],\n    i,\n    len = l.length;\n  for (i = 0; i < len; i++) {\n    if (u.indexOf(l[i]) === -1) {\n      u.push(l[i]);\n    }\n  }\n  return u;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp32kr5_dp.ts(6,5): error TS1155: 'const' declarations must be initialized.\n../../../../tmp/tmp32kr5_dp.ts(8,8): error TS2588: Cannot assign to 'i' because it is a constant.\n../../../../tmp/tmp32kr5_dp.ts(8,24): error TS2588: Cannot assign to 'i' because it is a constant.\n",
      "timestamp": 1660334198
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    var u: number[] = [];\n\n    for (var i = 0, n = l.length; i < n; i++) {\n        if (u.indexOf(+l[i]) === -1)\n            u.push(+l[i]);\n    }\n    return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp7imk47jy.js:15:12)\n    at Object.<anonymous> (/tmp/tmp7imk47jy.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const a: number[] = []\n  for (let i = 0; i < l.length; i++) if (a.indexOf(l[i]) == -1) a.push(l[i])\n  return a\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpfgbh747j.js:14:12)\n    at Object.<anonymous> (/tmp/tmpfgbh747j.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.filter((a,i,a2) => {\n    return i==a2.findIndex(b => a===b);\n  });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpvrxu8tt6.js:12:12)\n    at Object.<anonymous> (/tmp/tmpvrxu8tt6.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tconst a: number[] = [];\n\tfor (let i = 0; i < l.length; i++) {\n\t\tconst val = l[i];\n\t\tif (a.indexOf(val) === -1) {\n\t\t\ta.push(val);\n\t\t}\n\t}\n\treturn a;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpufvcza3g.js:17:12)\n    at Object.<anonymous> (/tmp/tmpufvcza3g.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334198
    },
    {
      "exit_code": 0,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.filter((x, i, l) => l.indexOf(x) === i).sort((a, b) => a - b).filter(x => !isNaN(x));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334201
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  if (l.length === 0) return l;\n  const u: number[] = [];\n  for (let i = 0, n = l.length; i < n; ++i) {\n    if (u.indexOf(+l[i]) == -1) u.push(+l[i]);\n  }\n  return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpqfrkzyh2.js:17:12)\n    at Object.<anonymous> (/tmp/tmpqfrkzyh2.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334202
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    return Array.from(new Set(l));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpagwelwpn.js:10:12)\n    at Object.<anonymous> (/tmp/tmpagwelwpn.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333869
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.filter((e, i, a) => a.indexOf(e) === i);\n}\n</code>\n<|/ a |>\n<| a dscore=1 |>\n<code>\nconst uniqueArr= ([...new Set(arr)] as any[]);\n</code>\n<|/ a tags=javascript,typescript |>\n<| c |>\nThis is an interesting solution; but why is it not working for me on Chrome Version 73.0.3683.103 ? https://codesandbox.io/s/epic-sun-jk4uf?fontsize=14\n<|/ c |>\n<| c |>\n`new Set([...new Set([...new Set(arr)])])` would be even better\n<|/ c |>\n<| c |>\n`arr` is an array, so I changed `...new Set([...new Set(arr)])` to `...new Set(arr)` and the problem persists.\n<|/ c |>\n<| a dscore=1 |>\nThe best way is to use sort and check for duplicates. However, it can be done in linear time complexity.\n\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpn_1fqqvs.ts(7,2): error TS1110: Type expected.\n../../../../tmp/tmpn_1fqqvs.ts(7,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpn_1fqqvs.ts(8,2): error TS1109: Expression expected.\n../../../../tmp/tmpn_1fqqvs.ts(8,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpn_1fqqvs.ts(9,2): error TS1109: Expression expected.\n../../../../tmp/tmpn_1fqqvs.ts(9,6): error TS1005: ';' expected.\n../../../../tmp/tmpn_1fqqvs.ts(9,16): error TS1109: Expression expected.\n../../../../tmp/tmpn_1fqqvs.ts(11,1): error TS1109: Expression expected.\n../../../../tmp/tmpn_1fqqvs.ts(12,2): error TS1110: Type expected.\n../../../../tmp/tmpn_1fqqvs.ts(12,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpn_1fqqvs.ts(13,2): error TS1109: Expression expected.\n../../../../tmp/tmpn_1fqqvs.ts(13,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpn_1fqqvs.ts(14,2): error TS1109: Expression expected.\n../../../../tmp/tmpn_1fqqvs.ts(14,7): error TS1109: Expression expected.\n../../../../tmp/tmpn_1fqqvs.ts(15,6): error TS1005: ';' expected.\n../../../../tmp/tmpn_1fqqvs.ts(15,9): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpn_1fqqvs.ts(15,12): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpn_1fqqvs.ts(15,34): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpn_1fqqvs.ts(15,38): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpn_1fqqvs.ts(15,42): error TS1228: A type predicate is only allowed in return type position for functions and methods.\n../../../../tmp/tmpn_1fqqvs.ts(15,45): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpn_1fqqvs.ts(15,48): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpn_1fqqvs.ts(15,52): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpn_1fqqvs.ts(15,64): error TS1005: '(' expected.\n../../../../tmp/tmpn_1fqqvs.ts(15,67): error TS1005: ';' expected.\n../../../../tmp/tmpn_1fqqv",
      "timestamp": 1660334201
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let i: number[] = [];\n  for (let j = 0; j < l.length; j++) {\n    if (i in l && l[j] !== i) i.push(l[j]);\n  }\n  return i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuqcw1qw.ts(7,9): error TS2360: The left-hand side of an 'in' expression must be a private identifier or of type 'any', 'string', 'number', or 'symbol'.\n../../../../tmp/tmpzuqcw1qw.ts(7,19): error TS2367: This condition will always return 'true' since the types 'number' and 'number[]' have no overlap.\n",
      "timestamp": 1660334202
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\treturn l.filter((v, i, a) => a.indexOf(v) === i);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpjhonbj6l.js:10:12)\n    at Object.<anonymous> (/tmp/tmpjhonbj6l.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334202
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const ret: number[] = [];\n  for (let i = 0, j = l.length; i < j; i++) {\n    if (~ret.indexOf(l[i])) continue;\n    ret.push(l[i]);\n  }\n  return ret;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpaa17kj2u.js:16:12)\n    at Object.<anonymous> (/tmp/tmpaa17kj2u.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334202
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const set = new Set<number>();\n  for (let i = 0; i < l.length; i++) {\n    if (!set.has(l[i])) {\n      set.add(l[i]);\n    }\n  }\n  return Array.from(set);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpkhxdu1jj.js:16:12)\n    at Object.<anonymous> (/tmp/tmpkhxdu1jj.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334202
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const seen = new Set<number>();\n  for (const n of l) {\n    if (seen.has(n)) {\n      continue;\n    }\n    seen.add(n);\n  }\n  return Array.from(seen);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpsc4xbtmn.js:17:12)\n    at Object.<anonymous> (/tmp/tmpsc4xbtmn.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334202
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  var u: number[] = [];\n  var a: number[] = [];\n  for (var i = 0; i < l.length; i++) {\n    if (u.indexOf(l[i]) === -1) {\n      u.push(l[i]);\n      a.push(l[i]);\n    }\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp39p8rjp7.js:18:12)\n    at Object.<anonymous> (/tmp/tmp39p8rjp7.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334202
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\treturn l.filter((value, index, self) => self.indexOf(value) === index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp1q9keoe5.js:10:12)\n    at Object.<anonymous> (/tmp/tmp1q9keoe5.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334202
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const a: number[] = [];\n  for (const item of l) if (a.indexOf(item) < 0) a.push(item);\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp_rqlfswl.js:14:12)\n    at Object.<anonymous> (/tmp/tmp_rqlfswl.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334202
    },
    {
      "exit_code": 0,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.sort((a: number, b: number) => a - b).filter((value, index, self) => self.indexOf(value) === index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334202
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tlet s: any[] = [];\n\tfor(let i in l) {\n\t\tfor(let e in l) {\n\t\t\tif(e == i) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(l[e] == l[i]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ts.push(l[i]);\n\t\t}\n\t}\n\treturn s;\n}\n</code>\n<|/ a tags=java,algorithm,arrays dscore=0 |>\n<| c |>\nThank you for your solution. But, this is my task:\nhttps://imgur.com/a/jtYTcQS\n<|/ c |>\n<| c |>\nUpdated the answer with your requirements\n<|/ c |>\n<| a tags=java,algorithm,arrays |>\nAnother approach would be to sort the array and then use 2 pointers to solve this problem using a O(nlogn) approach.\n<|/ a dscore=0 |>\n<| a |>\nThis is a classic example for the selection algorithm, which can be easily solved using recursion.\n<code>\npublic static int[] selection(int[] arr, int k) {\n    if (k == 0) {\n        return new int[0];\n    }\n    \n    int[] answer = new int[k];\n    answer[0] = 0;\n    answer[k-1] = 0;\n    \n    int i, j;\n    for (i = 0; i < k-1; i++) {\n        for (j = 0; j < i; j++) {\n            if (arr[j] > arr[i]) {\n                answer[i] = arr[i];\n                i++;\n                break;\n            }\n        }\n        answer[i] = arr[i];\n    }\n    return answer;\n}\n</code>\n<|/ a dscore=0 tags=java,algorithm,arrays |>\n<| a |>\nI did this in python to solve this question. Hope it helps.\n<code>\ndef kthLargest(A, k):\n    largest = sorted(A)\n    count = 0\n    idx = 0\n    for i in range(len(A)):\n        if count == 0:\n            count = 1\n            idx = i\n        if A[i] == largest[count-1]:\n            count += 1\n        else:\n            count = 0\n    if count < k:\n        raise Exception(\"Sorry! Can't find that!\")\n    else:\n        return A[idx]\n</code>\n<|/ a dscore=0 tags=java,algorithm,arrays |>\n<| a tags=java,algorithm,arrays |>\n<code>\npublic class KthLargestElement {\npublic static void main(String[] args) {\n    int[] array = {10, 2, 3, 4, 5, 6, 7, 8};\n    System.out.println(kthLargest(array, 3));\n}\n\npublic static Integer kthLargest(int[] A, int k) {\n    if (A.length <= k) return Integer.valueOf(0);\n    int n = A.length;\n    Integer[] arr = new Integer[n];\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpwdvsjktp.ts(19,2): error TS1110: Type expected.\n../../../../tmp/tmpwdvsjktp.ts(19,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpwdvsjktp.ts(20,2): error TS1109: Expression expected.\n../../../../tmp/tmpwdvsjktp.ts(20,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpwdvsjktp.ts(21,2): error TS1109: Expression expected.\n../../../../tmp/tmpwdvsjktp.ts(21,7): error TS1109: Expression expected.\n../../../../tmp/tmpwdvsjktp.ts(22,7): error TS1005: ';' expected.\n../../../../tmp/tmpwdvsjktp.ts(22,15): error TS1005: '(' expected.\n../../../../tmp/tmpwdvsjktp.ts(22,20): error TS1005: ';' expected.\n../../../../tmp/tmpwdvsjktp.ts(22,40): error TS1005: ';' expected.\n../../../../tmp/tmpwdvsjktp.ts(22,43): error TS1005: ')' expected.\n../../../../tmp/tmpwdvsjktp.ts(24,3): error TS1110: Type expected.\n../../../../tmp/tmpwdvsjktp.ts(24,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpwdvsjktp.ts(25,2): error TS1109: Expression expected.\n../../../../tmp/tmpwdvsjktp.ts(25,7): error TS1109: Expression expected.\n../../../../tmp/tmpwdvsjktp.ts(26,9): error TS1005: ';' expected.\n../../../../tmp/tmpwdvsjktp.ts(26,13): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpwdvsjktp.ts(26,25): error TS1005: '(' expected.\n../../../../tmp/tmpwdvsjktp.ts(26,30): error TS1005: ')' expected.\n../../../../tmp/tmpwdvsjktp.ts(27,2): error TS1109: Expression expected.\n../../../../tmp/tmpwdvsjktp.ts(27,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpwdvsjktp.ts(28,2): error TS1109: Expression expected.\n../../../../tmp/tmpwdvsjktp.ts(28,6): error TS1005: ';' expected.\n../../../../tmp/tmpwdvsjktp.ts(28,34): error TS1109: Expression expected.\n../../../../tmp/tmpwdvsjktp.ts(29,9): error TS1005: ';' expected.\n../../../../tmp/tmpwdvsjktp.ts(29,18): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpwdvsjktp.ts(29,24): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpwdvsjktp.ts",
      "timestamp": 1660334202
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    let r = [] as number[];\n    l.forEach(i => {\n        if (r.indexOf(i) < 0) {\n            r.push(i);\n        }\n    });\n    return r;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp_yjyl1q9.js:16:12)\n    at Object.<anonymous> (/tmp/tmp_yjyl1q9.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334202
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const r: string[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if (r.indexOf(+l[i]) == -1) {\n      r.push(+l[i]);\n    }\n  }\n  return r;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp4ursggyj.ts(7,19): error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.\n../../../../tmp/tmp4ursggyj.ts(8,14): error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.\n../../../../tmp/tmp4ursggyj.ts(11,3): error TS2322: Type 'string[]' is not assignable to type 'number[]'.\n  Type 'string' is not assignable to type 'number'.\n",
      "timestamp": 1660334202
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const o = new Array(l.length)\n  l.sort()\n  for (let i = 0; i < l.length; i++) {\n    if (o.indexOf(l[i]) === -1) o[i] = l[i]\n  }\n  return o\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  123,\n  2,\n  3,\n  <2 empty items>,\n  5,\n  <1 empty item>,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmptx1xbb90.js:16:12)\n    at Object.<anonymous> (/tmp/tmptx1xbb90.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 123, 2, 3, <2 empty items>, 5, <1 empty item>, 9 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334202
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return sortUnique(uniqueSort(l));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpr5f2kcoc.ts(5,10): error TS2304: Cannot find name 'sortUnique'.\n../../../../tmp/tmpr5f2kcoc.ts(5,21): error TS2304: Cannot find name 'uniqueSort'.\n",
      "timestamp": 1660334202
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  if (l.length === 0) return [];\n\n  const sorted = l.slice().sort((a: number, b: number) => a - b);\n\n  let result: number[] = [];\n  for (let i = 0; i < sorted.length - 1; i++) {\n    if (sorted[i] === sorted[i + 1]) {\n      result.push(sorted[i + 1]);\n      sorted.splice(i, 1);\n    }\n  }\n\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp5j3oda9n.js:20:12)\n    at Object.<anonymous> (/tmp/tmp5j3oda9n.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 5 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334202
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const a: number[] = [];\n  l.forEach((i) => !a.includes(i) ? a.push(i) : null);\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpnqr7_8ve.js:12:12)\n    at Object.<anonymous> (/tmp/tmpnqr7_8ve.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334202
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const a: number[] = [];\n    let found = false;\n\n    for (let i = 0; i < l.length; i++) {\n        let t = l[i];\n        if (!found && t != i) {\n            a.push(i);\n            found = true;\n        }\n    }\n    return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp71kt4efa.js:19:12)\n    at Object.<anonymous> (/tmp/tmp71kt4efa.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334202
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let r = [];\n  for (let i = 0; i < l.length; i++) {\n    if (r.indexOf(l[i]) === -1) r.push(l[i]);\n  }\n  return r;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmptuck6xrf.js:15:12)\n    at Object.<anonymous> (/tmp/tmptuck6xrf.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334202
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    return Array.from(new Set(l)).sort((a, b) => a - b).filter(n => !Number.isNaN(n));\n}\n</code>\n<|/ a dscore=1 tags=sorting,arrays,javascript,algorithm |>\n<| c |>\nThe above method worked for me. Many thanks\n<|/ c |>\n<| a |>\nHere is an example of how to do it using lodash/underscore and sortBy\n\n<code>\nconst items = [\n  { \"name\": \"A\" },\n  { \"name\": \"B\" },\n  { \"name\": \"C\" },\n  { \"name\": \"D\" },\n  { \"name\": \"E\" }\n];\n\nconst unique = _.sortBy(_.uniq(items, 'name'), 'name');\n\nconsole.log(unique);</code>\n<code>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.20/lodash.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/sort-by/1.2.2/sort-by.js\"></script></code>\n<|/ a dscore=1 tags=sorting,arrays,javascript,algorithm |>\n<| a tags=sorting,arrays,javascript,algorithm |>\n<code>\nconst sorting = ([...values], order = 'ascending') =>\n  values.reduce((acc, [k, v]) => {\n    acc[k] = v;\n    return acc;\n  }, {});\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp256jultm.ts(7,2): error TS1110: Type expected.\n../../../../tmp/tmp256jultm.ts(7,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmp256jultm.ts(8,2): error TS1109: Expression expected.\n../../../../tmp/tmp256jultm.ts(8,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmp256jultm.ts(9,2): error TS1109: Expression expected.\n../../../../tmp/tmp256jultm.ts(9,7): error TS1109: Expression expected.\n../../../../tmp/tmp256jultm.ts(10,5): error TS1005: ';' expected.\n../../../../tmp/tmp256jultm.ts(10,11): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp256jultm.ts(10,18): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp256jultm.ts(10,29): error TS1005: '(' expected.\n../../../../tmp/tmp256jultm.ts(10,38): error TS1005: ';' expected.\n../../../../tmp/tmp256jultm.ts(11,2): error TS1109: Expression expected.\n../../../../tmp/tmp256jultm.ts(11,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tm",
      "timestamp": 1660334202
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    let s: number[] = [];\n\n    for (let i = 0; i < l.length; i++) {\n        if (s.indexOf(l[i]) < 0) {\n            s.push(l[i]);\n        }\n    }\n\n    return s;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpejpek5i4.js:16:12)\n    at Object.<anonymous> (/tmp/tmpejpek5i4.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334202
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const result: number[] = [];\n  const seen: Map<number, boolean> = new Map();\n  for (let i = 0; i < l.length; i++) {\n    const v = l[i];\n    if (seen.has(v)) {\n      continue;\n    }\n    result.push(v);\n    seen.set(v, true);\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpb1p9qf_k.js:20:12)\n    at Object.<anonymous> (/tmp/tmpb1p9qf_k.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334204
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const u = [];\n  l.forEach((x: number) => {\n    if (u.indexOf(x) == -1) {\n      u.push(x);\n    }\n  });\n  return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp66t8jn3f.js:16:12)\n    at Object.<anonymous> (/tmp/tmp66t8jn3f.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334205
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let m: number[] = [], i: number;\n  for (i = 0; i < l.length; i++) {\n    if (m.indexOf(+l[i]) === -1) m.push(+l[i]);\n  }\n  return m;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpswb_uxi7.js:15:12)\n    at Object.<anonymous> (/tmp/tmpswb_uxi7.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334205
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let result: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if (result.indexOf(l[i]) === -1) {\n      result.push(l[i]);\n    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpz65utfbd.js:16:12)\n    at Object.<anonymous> (/tmp/tmpz65utfbd.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334205
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\treturn [...new Set(l)];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpsplxjxr4.js:10:12)\n    at Object.<anonymous> (/tmp/tmpsplxjxr4.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334205
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const i: number[] = [];\n    for (let j = 0; j < l.length; j++) {\n        if (i.indexOf(l[j]) === -1) {\n            i.push(l[j]);\n        }\n    }\n    return i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpg1s_pex1.js:16:12)\n    at Object.<anonymous> (/tmp/tmpg1s_pex1.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334205
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let ns: number[] = [];\n  let i: number = 0;\n  for (let j = 0; j < l.length; j++) {\n    if (ns[i] == l[j]) {\n      continue;\n    } else {\n      ns[i] = l[j];\n    }\n    i++;\n  }\n  return ns.sort();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  123,\n  2,\n  3,\n  3,\n  3,\n  5,\n  5,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmprzvhbfz8.js:21:12)\n    at Object.<anonymous> (/tmp/tmprzvhbfz8.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0, 123, 2, 3, 3,\n    3,   5, 5, 9\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334205
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    return l.filter((a: any) => !l.some(b => a === b));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp41igvnhx.js:10:12)\n    at Object.<anonymous> (/tmp/tmp41igvnhx.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334205
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.filter(function (_, i, a) {\n    return i === a.indexOf(l);\n  });\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp6ebn_m04.ts(6,28): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number'.\n",
      "timestamp": 1660334205
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.filter((v, i, a) => (a.indexOf(v) === i) ? false : true)\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp_y0ao5ts.js:10:12)\n    at Object.<anonymous> (/tmp/tmp_y0ao5ts.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 3 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334205
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const u: number[] = [];\n    const uLen: number = l.length;\n    const i: number;\n    let j: number;\n    for (i = 0; i < uLen; i++) {\n        const el = l[i];\n        for (j = i + 1; j < uLen; j++) {\n            if (el === l[j]) {\n                l.splice(i, 1);\n                uLen--;\n                break;\n            }\n        }\n    }\n    return l;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpdi4gz3gv.ts(7,11): error TS1155: 'const' declarations must be initialized.\n../../../../tmp/tmpdi4gz3gv.ts(9,10): error TS2588: Cannot assign to 'i' because it is a constant.\n../../../../tmp/tmpdi4gz3gv.ts(9,27): error TS2588: Cannot assign to 'i' because it is a constant.\n../../../../tmp/tmpdi4gz3gv.ts(14,17): error TS2588: Cannot assign to 'uLen' because it is a constant.\n",
      "timestamp": 1660334205
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let set: number[] = new Array(l.length);\n  for (let i = 0; i < l.length; i++) {\n    if (!set.includes(l[i])) {\n      set.push(l[i]);\n    }\n  }\n  return set;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <9 empty items>,\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpywu63tfv.js:16:12)\n    at Object.<anonymous> (/tmp/tmpywu63tfv.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <9 empty items>, 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334206
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\treturn l.reduce(function (p, c) {\n\t\treturn p.indexOf(c) === -1 ? p.concat(c) : p;\n\t}, []);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmphts_5tef.js:12:12)\n    at Object.<anonymous> (/tmp/tmphts_5tef.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334206
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const u = [];\n    for (const num of l) {\n        if (u.indexOf(num) === -1) {\n            u.push(num);\n        }\n    }\n    return u;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp7q8f4i90.js:16:12)\n    at Object.<anonymous> (/tmp/tmp7q8f4i90.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334206
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\treturn Array.from(new Set(l));\n}\n\nexport function convertToSnakeCase(name: string): string {\n\treturn name.replace(/^(@)/, match => {\n\t\treturn match.replace(/-(.)/g, (match, char) => char.toUpperCase());\n\t});\n}\n\nexport function convertToCamelCase(name: string): string {\n\treturn name.replace(/^(@)/, match => {\n\t\treturn match.replace(/-(.)/g, (match, char) => char.toLowerCase());\n\t});\n}\n\nexport function camelCaseToSnakeCase(camelCase: string): string {\n\treturn camelCase.indexOf('-') === 0 ? camelCase.substr(1) : camelCase;\n}\n\nexport function toBoolean(value: boolean | undefined | null): boolean {\n\treturn !!value;\n}\n\nexport function convertToRoman(value: number): number {\n\tlet roman = '';\n\twhile (value > 1000) {\n\t\troman += value % 1000 + 'k';\n\t\tvalue = Math.floor(value / 1000);\n\t}\n\twhile (value > 100) {\n\t\troman += value % 100 + 'k';\n\t\tvalue = Math.floor(value / 100);\n\t}\n\twhile (value > 10) {\n\t\troman += value % 10 + 'k';\n\t\tvalue = Math.floor(value / 10);\n\t}\n\troman += value + 'k';\n\treturn +roman;\n}\n\nexport function debounce(func: Function, wait: number, immediate: boolean): Function {\n\tlet timeout: NodeJS.Timer | undefined;\n\treturn () => {\n\t\tconst context = this;\n\t\tconst args = arguments;\n\t\tconst later = () => {\n\t\t\ttimeout!.cancel();\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t};\n\t\tconst callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(context, args);\n\t};\n}\n\nexport function toggleClass(element: HTMLElement, className: string, shouldHaveIt?: boolean) {\n\tif (element.classList) {\n\t\tif (shouldHaveIt) {\n\t\t\telement.classList.add(className);\n\t\t} else {\n\t\t\telement.classList.remove(className);\n\t\t}\n\t} else {\n\t\tconst classList = element.className.split(' ');\n\t\tif (shouldHaveIt) {\n\t\t\tif (classList.indexOf(className) > -1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tclassList.push(className);\n\t\t} else {\n\t\t\tconst index = classList.indexOf(className);\n\t\t\tif (index > -1) {\n\t\t\t\tclassList.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\telement.className = classList.join(' ');\n\t}\n}\n\nexport function toggle(element: HTMLElement\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp1ubo8681.ts(88,1): error TS1005: ',' expected.\n../../../../tmp/tmp1ubo8681.ts(88,9): error TS1359: Identifier expected. 'var' is a reserved word that cannot be used here.\n",
      "timestamp": 1660334206
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\treturn Array.from(new Set(l));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp0d19442q.js:10:12)\n    at Object.<anonymous> (/tmp/tmp0d19442q.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334206
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tlet i: number;\n\tlet j: number;\n\tlet k: number;\n\tlet t: number[];\n\n\ti = j = 0;\n\tt = [];\n\n\tfor (; j < l.length; j++) {\n\t\ti = j;\n\t\tfor (k = j + 1; k < l.length; k++) {\n\t\t\tif (l[j] === l[k]) continue;\n\t\t\tif (l[j] < l[k]) {\n\t\t\t\tt[i] = l[j];\n\t\t\t\ti = k;\n\t\t\t}\n\t\t}\n\n\t\tt[i] = l[i];\n\t}\n\n\treturn t;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  5,\n  2,\n  3,\n  3,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp2y274myk.js:28:12)\n    at Object.<anonymous> (/tmp/tmp2y274myk.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5, 3, 5,   2, 3,\n    3, 9, 0, 123\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334206
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tconst o: number[] = [];\n\tfor (const v of l) {\n\t\tif (o.indexOf(v) < 0) o.push(v);\n\t}\n\treturn o;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpzhwlpemt.js:15:12)\n    at Object.<anonymous> (/tmp/tmpzhwlpemt.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334206
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\treturn l.reduce((a, b) => !this[a] ? this[a] = true : this[a], []);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmplfb8pqgk.ts(5,34): error TS2538: Type 'any[]' cannot be used as an index type.\n../../../../tmp/tmplfb8pqgk.ts(5,44): error TS2538: Type 'any[]' cannot be used as an index type.\n../../../../tmp/tmplfb8pqgk.ts(5,61): error TS2538: Type 'any[]' cannot be used as an index type.\n",
      "timestamp": 1660334205
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    return l.reduce((result: number[], item: number) => result.indexOf(item) === -1 ? [...result, item] : result,\n        []);\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpeazc8fx2.js:10:12)\n    at Object.<anonymous> (/tmp/tmpeazc8fx2.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334206
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const i: number[] = [];\n    let ins: number[] = [];\n    for (let j = 0; j < l.length; j++) {\n        if (ins.indexOf(l[j]) === -1) {\n            ins.push(l[j]);\n            i.push(l[j]);\n        }\n    }\n    return i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpqgw0oqmd.js:18:12)\n    at Object.<anonymous> (/tmp/tmpqgw0oqmd.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334206
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    let r = [];\n    let f = 0;\n    let t = 0;\n    for (let i = 0; i < l.length; i++)\n    {\n        if (r[f] === undefined || l[i] !== r[f])\n        {\n            r[f] = l[i];\n            f++;\n        }\n    }\n    return r;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  5,\n  2,\n  3,\n  3,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpeijiob2v.js:19:12)\n    at Object.<anonymous> (/tmp/tmpeijiob2v.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5, 3, 5,   2, 3,\n    3, 9, 0, 123\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334206
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const o = new Map<number, number>();\n  for (let i = 0; i < l.length; i++) {\n    if (!o.has(l[i])) {\n      o.set(l[i], i);\n    }\n  }\n  return Array.from(o.values()) as number[];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n  3,\n  6,\n  7,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp_jthpge9.js:16:12)\n    at Object.<anonymous> (/tmp/tmp_jthpge9.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 3, 6, 7, 8 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334206
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.filter((v, i) => l.indexOf(v) === i);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp3o7toe84.js:10:12)\n    at Object.<anonymous> (/tmp/tmp3o7toe84.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334208
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tlet u: number[] = [];\n\n\tfor (let i = 0; i < l.length; i++) {\n\t\tconst index = u.indexOf(l[i]);\n\n\t\tif (index === -1) {\n\t\t\tu.push(l[i]);\n\t\t}\n\t}\n\n\treturn u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmptqu9l640.js:17:12)\n    at Object.<anonymous> (/tmp/tmptqu9l640.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    let c: number = l.length\n    for (let i=0; i<c; i++) {\n        let r: number = l[i]\n        let j: number = i\n        while (j<c) {\n            if (l[j] == r) {\n                break\n            }\n            else if (l[j] > r) {\n                l[j+1] = l[j]\n                j++\n            }\n            else {\n                l[j+1] = r\n                j++\n            }\n        }\n        l[j+1] = r\n    }\n    return l\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpp03jff0s.js:29:12)\n    at Object.<anonymous> (/tmp/tmpp03jff0s.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334208
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let a: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    const n = l.indexOf(l[i]);\n    if (n < 0) a.push(l[i]);\n  }\n  return a;\n}\n</code>\n<|/ a dscore=1 tags=javascript,ecmascript-6 |>\n<| c |>\nUsing `Math.max` inside a `for` loop has a potential of O(n^2) time complexity.\n<|/ c |>\n<| c |>\nThat would be true if we were sorting every unique element in the array. However, this isn't actually sorting at all; it's the sort of thing that would be O(n^2) on a big list. Also, if you're going to write your own sort, you're probably going to need to use `Math.max` inside it.\n<|/ c |>\n<| c |>\nHi, I agree. I just mentioned that it's worth noting that the complexity of a sort like this is actually _O(n*log(n))_ (although that is _O(n)_ because of the sort, which is _O(nlogn)_ because of the `Math.max` call).\n<|/ c |>\n<| a tags=javascript,ecmascript-6 |>\nIf you want a pure JavaScript solution, here's a solution that uses the built-in sort().\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpwa3s3mmc.ts(12,2): error TS1110: Type expected.\n../../../../tmp/tmpwa3s3mmc.ts(12,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpwa3s3mmc.ts(13,2): error TS1109: Expression expected.\n../../../../tmp/tmpwa3s3mmc.ts(13,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpwa3s3mmc.ts(14,2): error TS1109: Expression expected.\n../../../../tmp/tmpwa3s3mmc.ts(14,7): error TS1109: Expression expected.\n../../../../tmp/tmpwa3s3mmc.ts(15,18): error TS1005: ';' expected.\n../../../../tmp/tmpwa3s3mmc.ts(15,27): error TS1443: Module declaration names may only use ' or \" quoted strings.\n../../../../tmp/tmpwa3s3mmc.ts(15,33): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpwa3s3mmc.ts(15,38): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpwa3s3mmc.ts(15,42): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpwa3s3mmc.ts(15,44): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpwa3s",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const o: number[] = [];\n  for (let i = 0, j = l.length; i < j; i++) {\n    if (o[i] != l[i]) {\n      o[i] = l[i];\n    }\n  }\n  return o;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  5,\n  2,\n  3,\n  3,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpcl0pyify.js:16:12)\n    at Object.<anonymous> (/tmp/tmpcl0pyify.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5, 3, 5,   2, 3,\n    3, 9, 0, 123\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const hash: number[] = [];\n  const uniqueArr: number[] = [];\n  l.forEach((num) => {\n    const exists = hash.indexOf(num);\n    if (exists < 0) {\n      uniqueArr.push(num);\n      hash.push(num);\n    }\n  });\n  return uniqueArr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpiun1q7gn.js:19:12)\n    at Object.<anonymous> (/tmp/tmpiun1q7gn.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return [...new Set(l)];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp80w9t7h8.js:10:12)\n    at Object.<anonymous> (/tmp/tmp80w9t7h8.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333997
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const a: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if (a.indexOf(l[i]) === -1) {\n      a.push(l[i]);\n    }\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpdyelrxg5.js:16:12)\n    at Object.<anonymous> (/tmp/tmpdyelrxg5.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334041
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  if (l.length > 1) {\n    const a: number[] = l;\n    const results: number[] = [];\n    let j = 0;\n\n    for (let i = 0; i < a.length; ++i) {\n      while (j < results.length && results[j] < a[i]) {\n        j++;\n      }\n\n      results[j] = a[i];\n    }\n\n    results.length = j;\n    return results;\n  }\n\n  return [];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n  3,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpi_xan19w.js:23:12)\n    at Object.<anonymous> (/tmp/tmpi_xan19w.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 3, 0 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    return l.reduce((acc, val) => {\n        if (acc.indexOf(val) < 0) {\n            acc.push(val)\n        }\n\n        return acc\n    }, [])\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpziso4toz.js:15:12)\n    at Object.<anonymous> (/tmp/tmpziso4toz.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const a: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    const n = l[i];\n    if (a.indexOf(n) < 0) a.push(n);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp6nroz0tx.js:16:12)\n    at Object.<anonymous> (/tmp/tmp6nroz0tx.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tlet i: number, llen: number = l.length;\n\tfor (i = 0, llen = l.length; i < llen; i++) {\n\t\tlet value: number = l[i];\n\t\tfor (let j = i + 1; j < llen; j++) {\n\t\t\tif (l[j] == value) {\n\t\t\t\tl.splice(j, 1);\n\t\t\t\tllen--;\n\t\t\t\ti--;\n\t\t\t\tllen--;\n\t\t\t}\n\t\t}\n\t}\n\treturn l;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpl4ov2ibv.js:22:12)\n    at Object.<anonymous> (/tmp/tmpl4ov2ibv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const result: number[] = []\n    for (const e of l) {\n        if (result.indexOf(e) === -1) result.push(e)\n    }\n    return result\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp3oayf0aq.js:15:12)\n    at Object.<anonymous> (/tmp/tmp3oayf0aq.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const u: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if (u.indexOf(l[i]) < 0) {\n      u.push(l[i]);\n    }\n  }\n  return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpe_p_5xt9.js:16:12)\n    at Object.<anonymous> (/tmp/tmpe_p_5xt9.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    var u: number[] = [];\n    for (var i = l.length; i--;) u.push(l[i]);\n    return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  123,\n  0,\n  9,\n  3,\n  3,\n  2,\n  5,\n  3,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpmivkl460.js:13:12)\n    at Object.<anonymous> (/tmp/tmpmivkl460.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    123, 0, 9, 3, 3,\n      2, 5, 3, 5\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let a: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if (a.indexOf(l[i]) < 0) a.push(l[i]);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpx7dw6v0h.js:15:12)\n    at Object.<anonymous> (/tmp/tmpx7dw6v0h.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const a: number[] = [];\n    const o: number[] = [];\n    let n: number = l.length;\n    for (let i: number = 0; i < n; i++) {\n        const e: number = l[i];\n        if (o.indexOf(e) == -1) {\n            a.push(e);\n            o.push(e);\n        }\n    }\n    return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpkp84a6oz.js:20:12)\n    at Object.<anonymous> (/tmp/tmpkp84a6oz.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    return l.filter(function(v, i, a) {\n        return a.indexOf(v) === i;\n    }) as number[];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmps1rfv0zg.js:12:12)\n    at Object.<anonymous> (/tmp/tmps1rfv0zg.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    return l.filter(function (elem, pos, arr) {\n        return arr.indexOf(elem) === pos;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpqxa3y6v6.js:12:12)\n    at Object.<anonymous> (/tmp/tmpqxa3y6v6.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const seen = new Set<number>();\n  return l.filter((n) => {\n    if (seen.has(n)) {\n      return false;\n    }\n    seen.add(n);\n    return true;\n  });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp_v9sc7c_.js:17:12)\n    at Object.<anonymous> (/tmp/tmp_v9sc7c_.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    return Array.from(new Set(l));\n}\nexports.unique = unique;\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpatff85q_.ts(7,1): error TS2304: Cannot find name 'exports'.\n",
      "timestamp": 1660334209
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const result = [], seen = new Set<number>();\n    for (let i = 0; i < l.length; i++) if (!seen.has(l[i])) {\n        result.push(l[i]);\n        seen.add(l[i]);\n    }\n    return result.sort((a,b) => (a-b));\n}\n</code>\n<|/ a |>\n<| a tags=algorithm,sorting,javascript,arrays |>\nThe question is a bit unclear on whether duplicates are allowed or not. However, if duplicates are allowed, you can try this solution using filter and sort:\n\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmphyjf4ebf.ts(12,2): error TS1110: Type expected.\n../../../../tmp/tmphyjf4ebf.ts(12,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmphyjf4ebf.ts(13,2): error TS1109: Expression expected.\n../../../../tmp/tmphyjf4ebf.ts(13,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmphyjf4ebf.ts(14,2): error TS1109: Expression expected.\n../../../../tmp/tmphyjf4ebf.ts(14,6): error TS1005: ';' expected.\n../../../../tmp/tmphyjf4ebf.ts(14,48): error TS1109: Expression expected.\n../../../../tmp/tmphyjf4ebf.ts(15,5): error TS1005: ';' expected.\n../../../../tmp/tmphyjf4ebf.ts(15,14): error TS1228: A type predicate is only allowed in return type position for functions and methods.\n../../../../tmp/tmphyjf4ebf.ts(15,17): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmphyjf4ebf.ts(15,19): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmphyjf4ebf.ts(15,23): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmphyjf4ebf.ts(15,31): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmphyjf4ebf.ts(15,34): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmphyjf4ebf.ts(15,42): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmphyjf4ebf.ts(15,53): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmphyjf4ebf.ts(15,57): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmphyjf4ebf.ts(15,65): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmphyjf4ebf.ts(15,82): error TS1109: Expression expected.\n../../../../tmp/tmphyjf4ebf.ts(15,85): error TS1005: '(' expected.\n../../../../tmp/tmphyjf4ebf.ts(15,96): error TS1005: ')' expected.\n../../../../tmp/tmphyjf4ebf.ts(15,113): error TS1005: ';' expected.\n../../../../tmp/tmphyjf4ebf.ts(15,121): error TS1005: '{' expected.\n../../../../tmp/tmphyjf4ebf.ts(15,126): error TS1005: ';' expected.\n../../../../tmp/tmphyjf4ebf.ts(15,135): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmphyjf",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const r: [number, number] = [0, -1];\n  let i: number;\n  let j: number;\n  for (i = 0; i < l.length; i++) {\n    const x = l[i];\n    j = r[0];\n    while (j > 0) {\n      if (l[j - 1] === x) {\n        r[1] = j;\n        break;\n      } else {\n        j--;\n      }\n    }\n    r[0] = x + 1;\n  }\n  return r;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  124,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpv2mmc8sp.js:27:12)\n    at Object.<anonymous> (/tmp/tmpv2mmc8sp.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 124, 8 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334210
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const set = new Set<number>();\n  for (let i = 0; i < l.length; i++) {\n    set.add(l[i]);\n  }\n  return Array.from(set);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp9zlnifw7.js:14:12)\n    at Object.<anonymous> (/tmp/tmp9zlnifw7.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    let u: number[] = [];\n\n    for (let i = 0; i < l.length; i++) {\n        if (u.indexOf(l[i]) === -1) {\n            u.push(l[i]);\n        }\n    }\n\n    return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpc4ea86ls.js:16:12)\n    at Object.<anonymous> (/tmp/tmpc4ea86ls.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const u: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (u.indexOf(l[i]) === -1) {\n            u.push(l[i]);\n        }\n    }\n    return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp6ua395ez.js:16:12)\n    at Object.<anonymous> (/tmp/tmp6ua395ez.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334041
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tlet u: number[] = [],\n\t\tv: number;\n\tfor (i = 0; i < l.length; i++) {\n\t\tv = l[i];\n\t\tif (u.indexOf(v) == -1) {\n\t\t\tu.push(v);\n\t\t}\n\t}\n\treturn u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpe1488f61.ts(7,7): error TS2304: Cannot find name 'i'.\n../../../../tmp/tmpe1488f61.ts(7,14): error TS2304: Cannot find name 'i'.\n../../../../tmp/tmpe1488f61.ts(7,28): error TS2304: Cannot find name 'i'.\n../../../../tmp/tmpe1488f61.ts(8,9): error TS2304: Cannot find name 'i'.\n",
      "timestamp": 1660334211
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    return l.reduce((a, x, i) => {\n        if (!a.includes(x)) {\n            a.push(x);\n        }\n        return a;\n    }, []);\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpop78x87q.js:15:12)\n    at Object.<anonymous> (/tmp/tmpop78x87q.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334212
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    if (l.length === 0) return [];\n    let i: number;\n    let ret: number[] = [];\n    const obj: { [key: number]: number; } = {};\n\n    for (i = 0; i < l.length; i++) {\n        const key = l[i];\n\n        if (!obj[key]) {\n            ret[i] = key;\n            obj[key] = 1;\n        } else {\n            delete obj[key];\n        }\n    }\n\n    return ret;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  <1 empty item>,\n  2,\n  <1 empty item>,\n  3,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpy8z7_5g9.js:25:12)\n    at Object.<anonymous> (/tmp/tmpy8z7_5g9.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, <1 empty item>, 2, <1 empty item>, 3, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334212
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tconst u: number[] = [];\n\tfor (let i = 0; i < l.length; i++) {\n\t\tconst v = l[i];\n\t\tif (u.indexOf(v) < 0) {\n\t\t\tu.push(v);\n\t\t}\n\t}\n\treturn u;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpf912wkqj.js:17:12)\n    at Object.<anonymous> (/tmp/tmpf912wkqj.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334212
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.filter(function (el, i, a) {\n    return a.indexOf(el) === i;\n  });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpdv9vu_hv.js:12:12)\n    at Object.<anonymous> (/tmp/tmpdv9vu_hv.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334212
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const a = l\n        .filter(function(elem, pos, self) {\n          return self.indexOf(elem) === pos;\n        })\n        .map(function(elem) {\n          return elem\n        })\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpx723rvqb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpx723rvqb.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334212
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const c: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (c.indexOf(l[i]) === -1) {\n            c.push(l[i]);\n        }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpmkuu79ey.js:16:12)\n    at Object.<anonymous> (/tmp/tmpmkuu79ey.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334213
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.filter(function(value, i, l) { return l.indexOf(value) === i; }).sort(function(a, b) { return b - a });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  123,\n  9,\n  5,\n  3,\n  2,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp3qkmo3l0.js:10:12)\n    at Object.<anonymous> (/tmp/tmp3qkmo3l0.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 123, 9, 5, 3, 2, 0 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334212
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tvar res = [];\n\tfor (var i = 0, len = l.length; i < len; i++) {\n\t\tif (!res.includes(l[i])) {\n\t\t\tres.push(l[i]);\n\t\t}\n\t}\n\treturn res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpe8bom9q9.js:16:12)\n    at Object.<anonymous> (/tmp/tmpe8bom9q9.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334213
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const o = new Map<number, boolean>();\n  l.forEach(o => o.has(o) || (o.set(o, true), o.delete(o) && o.size === 1 ? o.values().next().value || undefined : undefined))\n  return [...o.keys()];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp3fe22c4o.ts(6,20): error TS2339: Property 'has' does not exist on type 'number'.\n../../../../tmp/tmp3fe22c4o.ts(6,33): error TS2339: Property 'set' does not exist on type 'number'.\n../../../../tmp/tmp3fe22c4o.ts(6,49): error TS2339: Property 'delete' does not exist on type 'number'.\n../../../../tmp/tmp3fe22c4o.ts(6,64): error TS2339: Property 'size' does not exist on type 'number'.\n../../../../tmp/tmp3fe22c4o.ts(6,79): error TS2339: Property 'values' does not exist on type 'number'.\n",
      "timestamp": 1660334212
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    var u: number[] = [];\n    var c: number = 0;\n    for (var i = 0, n = l.length; i < n; i++) {\n        if (u[c] === l[i]) {\n            continue;\n        }\n        u[++c] = l[i];\n    }\n    return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty item>,\n  5,\n  3,\n  5,\n  2,\n  3,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpyncgr8pt.js:18:12)\n    at Object.<anonymous> (/tmp/tmpyncgr8pt.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty item>, 5, 3, 5, 2, 3, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334213
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const o: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (o.indexOf(l[i]) === -1) {\n            o.push(l[i]);\n        }\n    }\n    return o;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpl27ww_hc.js:16:12)\n    at Object.<anonymous> (/tmp/tmpl27ww_hc.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334213
    },
    {
      "exit_code": 0,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let o = {}\n  for (let i = 0; i < l.length; i++) {\n    o[l[i]] = true\n  }\n  let n = []\n  for (let k in o) {\n    n.push(k)\n  }\n  return n\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334213
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const hash: { [key: number]: boolean; } = {};\n  const out: number[] = [];\n\n  for (let i = 0; i < l.length; i++) {\n    const value = l[i];\n\n    if (!hash[value]) {\n      hash[value] = true;\n      out.push(value);\n    }\n  }\n\n  return out;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpwdy7lwky.js:19:12)\n    at Object.<anonymous> (/tmp/tmpwdy7lwky.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334213
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    var u: number[] = new Array(l.length);\n    var i: number, n: number = 0;\n\n    for (i = 0; i < l.length; ++i) {\n        if (l[i] === l[i]) {\n            n++;\n        } else {\n            u[n] = l[i];\n            n++;\n        }\n    }\n\n    u.length = n;\n\n    return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <9 empty items>\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpd9v5xu47.js:22:12)\n    at Object.<anonymous> (/tmp/tmpd9v5xu47.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <9 empty items> ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334213
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tlet i: number;\n\tlet j: number;\n\tlet result: number[] = new Array((l.length * 2 - 1));\n\tfor (i = 0; i < l.length - 1; i++) {\n\t\tfor (j = i + 1; j < l.length; j++) {\n\t\t\tif (l[i] !== l[j]) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tresult[i] = l[i];\n\t}\n\tfor (j = 1; j < l.length; j++) {\n\t\tif (l[j] === result[j - 1]) {\n\t\t\tresult[j] = undefined;\n\t\t}\n\t}\n\treturn result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  5,\n  2,\n  3,\n  undefined,\n  9,\n  0,\n  <9 empty items>\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpgsmozlgh.js:26:12)\n    at Object.<anonymous> (/tmp/tmpgsmozlgh.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 5, 2, 3, undefined, 9, 0, <9 empty items> ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334213
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const o = new Set(l);\n  return Array.from(o) as number[];\n}\n</code>\n<|/ a tags=arrays,javascript |>\n<| a tags=arrays,javascript |>\nI guess this has to do with the way you're constructing the new array. In the code you posted, you're doing this:\n<code>\nlet result = [...new Set(arr)];\n</code>\nThis converts the array to a Set, which is a unordered collection of unique items. When you call Set(), it first checks if the value already exists in the Set. If it does, it just returns the value. If it doesn't, it adds the value to the Set. That's why you get an array of duplicates. Instead of converting to a Set, you can use the spread syntax to convert the array to a regular array, and then use Set to get unique values.\n<code>\nlet result = Array.from(new Set(arr));\n</code>\n<|/ a dscore=4 |>\n<| c |>\nWhy not just use `[...new Set(arr)]` ? Just curious.\n<|/ c |>\n<| c |>\nGood point,. I think I was trying to be too fancy with the spread syntax. Good suggestion, though.\n<|/ c |>\n<| a dscore=3 |>\nThe solutions here are really good but just one more option is to use map and filter method available in Array\n<code>\nlet arr = [1,2,3,4,5,5,6,7,8];\n\nlet unique = arr.filter(function(elem, index, self) {\n  return index == self.indexOf(elem);\n}).map(function(elem) {\n  return elem;\n});\n\nconsole.log(unique); // [1,2,3,4,5,6,7,8]\n</code>\n<|/ a tags=arrays,javascript |>\n<| c |>\nNice solution. I've never seen it before. Was looking for something like this but was unable to find it.\n<|/ c |>\n<| c |>\nThis is not very efficient\n<|/ c |>\n<| a tags=arrays,javascript |>\nThe issue is with the way you are creating the set. Try changing it to this:\n<code>\nlet result = [...new Set(arr)];\n</code>\n<|/ a dscore=3 |>\n<| c |>\nThank you! I had tried to use `Array.from` but I got an error that said I needed to pass in an array. I'll accept this answer once the timer runs out.\n<|/ c |>\n<| a dscore=3 |>\nThis works perfectly fine:\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpidb69hpm.ts(8,2): error TS1110: Type expected.\n../../../../tmp/tmpidb69hpm.ts(8,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpidb69hpm.ts(9,2): error TS1109: Expression expected.\n../../../../tmp/tmpidb69hpm.ts(9,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpidb69hpm.ts(10,2): error TS1109: Expression expected.\n../../../../tmp/tmpidb69hpm.ts(10,6): error TS1005: ';' expected.\n../../../../tmp/tmpidb69hpm.ts(10,30): error TS1109: Expression expected.\n../../../../tmp/tmpidb69hpm.ts(11,3): error TS1005: ';' expected.\n../../../../tmp/tmpidb69hpm.ts(11,14): error TS1005: ';' expected.\n../../../../tmp/tmpidb69hpm.ts(11,18): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpidb69hpm.ts(11,29): error TS1005: '(' expected.\n../../../../tmp/tmpidb69hpm.ts(11,33): error TS1005: ')' expected.\n../../../../tmp/tmpidb69hpm.ts(11,37): error TS1005: 'while' expected.\n../../../../tmp/tmpidb69hpm.ts(11,40): error TS1005: ')' expecte",
      "timestamp": 1660334213
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const m = {}\n  for (let i = 0, n = l.length; i < n; ++i) m[l[i]] = true\n  const a: number[] = []\n  for (const i in m) a.push(i)\n  return a\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpqezcb29l.ts(8,29): error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.\n",
      "timestamp": 1660334213
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return Array.from(new Set(l)).sort();\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  123,\n  2,\n  3,\n  5,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpx2wba73i.js:10:12)\n    at Object.<anonymous> (/tmp/tmpx2wba73i.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 123, 2, 3, 5, 9 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334213
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const u: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if (u.indexOf(l[i]) === -1) {\n      u.push(l[i]);\n    }\n  }\n  return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpifs8rhe8.js:16:12)\n    at Object.<anonymous> (/tmp/tmpifs8rhe8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334041
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let output: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if (output[l[i]] === undefined) {\n      output[l[i]] = i;\n    }\n  }\n  return output;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7,\n  <1 empty item>,\n  3,\n  1,\n  <1 empty item>,\n  0,\n  <3 empty items>,\n  6,\n  <113 empty items>,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpsspyip35.js:16:12)\n    at Object.<anonymous> (/tmp/tmpsspyip35.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    7,\n    <1 empty item>,\n    3,\n    1,\n    <1 empty item>,\n    0,\n    <3 empty items>,\n    6,\n    <113 empty items>,\n    8\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],",
      "stdout": "",
      "timestamp": 1660334213
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  if (l.length <= 1) return l\n  const result = []\n  let hashSet = new Set()\n  for (let item of l) {\n    if (!hashSet.has(item)) {\n      hashSet.add(item)\n      result.push(item)\n    }\n  }\n  return result\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmptfht1nav.js:20:12)\n    at Object.<anonymous> (/tmp/tmptfht1nav.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334213
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tconst seen = new Set<number>();\n\tconst uniq = [];\n\tl.forEach(d => {\n\t\tif (seen.has(d)) return;\n\t\tseen.add(d);\n\t\tuniq.push(d);\n\t});\n\treturn uniq;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpldhqac1l.js:18:12)\n    at Object.<anonymous> (/tmp/tmpldhqac1l.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334213
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const i: number[] = [];\n    for (let n = 0; n < l.length; n++) i[l.charCodeAt(n)] = n;\n    return i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp3j0q22ev.ts(6,44): error TS2339: Property 'charCodeAt' does not exist on type 'number[]'.\n",
      "timestamp": 1660334213
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    if (l.length <= 1) {\n        return l;\n    }\n    let newArr: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        const j = l.indexOf(l[i]);\n        if (j !== -1) {\n            newArr.push(l[i]);\n            l.splice(j, 1);\n        }\n    }\n    return newArr;\n}\n</code>\n<|/ a dscore=1 |>\n<| a |>\nJust in case, this can be done with a single loop:\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpivhy4uj_.ts(18,2): error TS1110: Type expected.\n../../../../tmp/tmpivhy4uj_.ts(18,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpivhy4uj_.ts(19,2): error TS1109: Expression expected.\n../../../../tmp/tmpivhy4uj_.ts(19,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpivhy4uj_.ts(20,2): error TS1109: Expression expected.\n../../../../tmp/tmpivhy4uj_.ts(20,7): error TS1109: Expression expected.\n../../../../tmp/tmpivhy4uj_.ts(21,9): error TS1109: Expression expected.\n../../../../tmp/tmpivhy4uj_.ts(21,13): error TS1128: Declaration or statement expected.\n../../../../tmp/tmpivhy4uj_.ts(21,20): error TS1005: ';' expected.\n../../../../tmp/tmpivhy4uj_.ts(21,24): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpivhy4uj_.ts(21,27): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpivhy4uj_.ts(21,37): error TS1005: '(' expected.\n../../../../tmp/tmpivhy4uj_.ts(21,39): error TS1005: ')' expected.\n../../../../tmp/tmpivhy4uj_.ts(23,9): error TS1005: ';' expected.\n",
      "timestamp": 1660334215
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let result: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if (result.indexOf(l[i]) === -1) {\n      result.push(l[i]);\n    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpz65utfbd.js:16:12)\n    at Object.<anonymous> (/tmp/tmpz65utfbd.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334205
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  var a = []\n  for (var i = 0; i < l.length; i++) {\n    if (a.indexOf(l[i]) == -1) {\n      a.push(l[i])\n    }\n  }\n  return a\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpvbzpf75t.js:16:12)\n    at Object.<anonymous> (/tmp/tmpvbzpf75t.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334215
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\treturn Array.from(new Set(l)).sort();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  123,\n  2,\n  3,\n  5,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpf9l9jmo8.js:10:12)\n    at Object.<anonymous> (/tmp/tmpf9l9jmo8.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 123, 2, 3, 5, 9 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334216
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const o = new Set<number>();\n    l.forEach(x => {\n        if (!o.has(x)) {\n            o.add(x);\n        }\n    });\n    return [...o];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmprj61dvtr.js:16:12)\n    at Object.<anonymous> (/tmp/tmprj61dvtr.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334216
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\treturn l.filter((v, i, a) => a.indexOf(v) === i);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpjhonbj6l.js:10:12)\n    at Object.<anonymous> (/tmp/tmpjhonbj6l.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334202
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const a: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if (a.indexOf(l[i]) < 0) a.push(l[i]);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpxn2fmmvp.js:15:12)\n    at Object.<anonymous> (/tmp/tmpxn2fmmvp.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334215
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    let a: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (a.indexOf(l[i]) === -1) a.push(l[i]);\n    }\n    return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpuxhx_dj7.js:15:12)\n    at Object.<anonymous> (/tmp/tmpuxhx_dj7.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334216
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  var o: number[] = [];\n  for (var i = 0; i < l.length; i++) {\n    if (o.indexOf(l[i]) == -1) o.push(l[i]);\n  }\n  return o;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp1gs6u9wt.js:15:12)\n    at Object.<anonymous> (/tmp/tmp1gs6u9wt.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334216
    },
    {
      "exit_code": -1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tconst a: number[] = l.concat();\n\tlet i = 0;\n\tconst result: number[] = [];\n\twhile (i < a.length) {\n\t\tlet j = 0;\n\t\tlet k: number;\n\t\twhile (a[j] === a[j + 1]) {\n\t\t\tj++;\n\t\t\tif (j > i) {\n\t\t\t\tk = a[j];\n\t\t\t\tresult.push(k);\n\t\t\t\ta.splice(j, 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "Timeout",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334232
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const a = new Set()\n  for (const i of l) {\n    if (!a.has(i)) {\n      a.add(i)\n    }\n  }\n  return Array.from(a)\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp32s4j4uh.ts(11,3): error TS2322: Type 'unknown[]' is not assignable to type 'number[]'.\n  Type 'unknown' is not assignable to type 'number'.\n",
      "timestamp": 1660334216
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const c: number[] = [];\n    let a: number = l[0];\n    for (let i = 1; i < l.length; i++) {\n        a = l[i];\n        if (c.indexOf(a) !== -1) {\n            continue;\n        }\n        c.push(a);\n    }\n    return c;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp8o6z3_mq.js:19:12)\n    at Object.<anonymous> (/tmp/tmp8o6z3_mq.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 5, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334216
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const a = [],\n        m = [],\n        p = [];\n    for (let i = 0; i < l.length; i++) {\n        if (m.indexOf(l[i]) === -1) {\n            m.push(l[i]);\n            a.push(l[i]);\n            p.push(1);\n        } else {\n            p[p[l[i]]++] = i;\n        }\n    }\n    return a.concat(p);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123,\n  1,\n  1,\n  <1 empty item>,\n  NaN,\n  <1 empty item>,\n  NaN,\n  1,\n  1,\n  1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpf4g5sgs8.js:21:12)\n    at Object.<anonymous> (/tmp/tmpf4g5sgs8.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\n    3,\n    2,\n    9,\n    0,\n    123,\n    1,\n    1,\n    <1 empty item>,\n    NaN,\n    <1 empty item>,\n    NaN,\n    1,\n    1,\n    1,\n    1\n  ],\n  expected:",
      "stdout": "",
      "timestamp": 1660334217
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    return l.filter((e, i, a) => a.indexOf(e) === i);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmppoqeof6g.js:10:12)\n    at Object.<anonymous> (/tmp/tmppoqeof6g.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334216
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const u = {}\n    let result: number[] = []\n\n    l.forEach((e: number) => {\n        (u[e] || (u[e] = [])).push(e)\n    })\n\n    for (let k of Object.values(u)) {\n        if (k.length > 1) result = result.concat(k)\n    }\n\n    return result\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpgsodf827.ts(13,15): error TS2339: Property 'length' does not exist on type 'unknown'.\n../../../../tmp/tmpgsodf827.ts(13,50): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(...items: ConcatArray<number>[]): number[]', gave the following error.\n    Argument of type 'unknown' is not assignable to parameter of type 'ConcatArray<number>'.\n      Type '{}' is missing the following properties from type 'ConcatArray<number>': length, join, slice\n  Overload 2 of 2, '(...items: (number | ConcatArray<number>)[]): number[]', gave the following error.\n    Argument of type 'unknown' is not assignable to parameter of type 'number | ConcatArray<number>'.\n",
      "timestamp": 1660334216
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const u: number[] = [];\n  for (let i = 0; i < l.length; ++i) {\n    if (u.indexOf(+l[i]) === -1) {\n      u.push(+l[i]);\n    }\n  }\n  return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp2g56536j.js:16:12)\n    at Object.<anonymous> (/tmp/tmp2g56536j.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334217
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.filter(function(elem, index, arr) {\n    return index === arr.indexOf(elem);\n  });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp94xsn93n.js:12:12)\n    at Object.<anonymous> (/tmp/tmp94xsn93n.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334217
    },
    {
      "exit_code": 0,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\treturn Array.from(new Set(l)).sort((a: number, b: number) => {\n\t\treturn a - b;\n\t});\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334217
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let res: number[] = [];\n  for (var i = 0; i < l.length; i++) {\n    if (res.indexOf(l[i]) < 0) res.push(l[i]);\n  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpk6376rg8.js:15:12)\n    at Object.<anonymous> (/tmp/tmpk6376rg8.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334217
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tconst a: number[] = [];\n\tconst o: number[] = [];\n\tfor (let i = 0; i < l.length; i++) {\n\t\tconst v = l[i];\n\t\tif (o.indexOf(v) < 0) {\n\t\t\to.push(v);\n\t\t\ta.push(v);\n\t\t}\n\t}\n\treturn a;\n}\n\nexport function removeDuplicates(l: number[]): number[] {\n\tconst a: number[] = [];\n\tlet j: number = 0;\n\tfor (let i = 0; i < l.length; i++) {\n\t\tconst v = l[i];\n\t\tif (a.indexOf(v) < 0) {\n\t\t\tj++;\n\t\t\ta.push(v);\n\t\t}\n\t}\n\tif (j === a.length) return a;\n\telse if (j > a.length) throw new Error(`duplicate-removed: duplicate at index ${j}`);\n\telse throw new Error(`duplicate-removed: duplicate at index ${j}`);\n}\n\nexport function unique2(l: number[]): number[] {\n\tconst a: number[] = [];\n\tconst o: number[] = [];\n\tfor (let i = 0; i < l.length; i++) {\n\t\tconst v = l[i];\n\t\tif (o.indexOf(v) < 0) {\n\t\t\to.push(v);\n\t\t\ta.push(v);\n\t\t}\n\t}\n\treturn a;\n}\n\nexport function removeDuplicates2(l: number[]): number[] {\n\tconst a: number[] = [];\n\tlet j: number = 0;\n\tfor (let i = 0; i < l.length; i++) {\n\t\tconst v = l[i];\n\t\tif (a.indexOf(v) < 0) {\n\t\t\tj++;\n\t\t\ta.push(v);\n\t\t}\n\t}\n\tif (j === a.length) return a;\n\telse if (j > a.length) throw new Error(`duplicate-removed: duplicate at index ${j}`);\n\telse throw new Error(`duplicate-removed: duplicate at index ${j}`);\n}\n\nexport function unique3(l: number[]): number[] {\n\tconst a: number[] = [];\n\tconst o: number[] = [];\n\tlet found: number[] = [];\n\tfor (let i = 0; i < l.length; i++) {\n\t\tconst v = l[i];\n\t\tif (o.indexOf(v) < 0) {\n\t\t\to.push(v);\n\t\t\ta.push(v);\n\t\t\tfound.push(v);\n\t\t}\n\t}\n\tif (found.length === a.length) return a;\n\telse if (found.length > a.length) throw new Error(`duplicate-removed: duplicate at index ${found.length}`);\n\telse throw new Error(`duplicate-removed: duplicate at index ${found.length}`);\n}\n\nexport function removeDuplicates3(l: number[]): number[] {\n\tconst a: number[] = [];\n\tlet j: number = 0;\n\tlet found: number[] = [];\n\tfor (let \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpg_2d1p3k.ts(82,9): error TS1005: ',' expected.\n../../../../tmp/tmpg_2d1p3k.ts(91,8): error TS1005: '}' expected.\n",
      "timestamp": 1660334216
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tlet o = new Map<number, boolean>();\n\tfor (let i = 0; i < l.length; i++) {\n\t\tlet k = l[i];\n\t\tif (o.has(k)) continue;\n\t\to.set(k, true);\n\t\tlet j = i;\n\t\twhile (j < l.length && l[j] === k) j++;\n\t\tlet tmp = j;\n\t\twhile (j--) {\n\t\t\tif (l[j] === k) break;\n\t\t\ttmp = o.get(l[j]) || tmp;\n\t\t}\n\t\to.set(k, false);\n\t\tl[tmp] = k;\n\t}\n\tlet ret = [];\n\tfor (let i = 0; i < l.length; i++) {\n\t\tif (!o.has(l[i])) ret.push(l[i]);\n\t}\n\treturn ret;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpu5t8a90w.ts(15,4): error TS2322: Type 'number | true' is not assignable to type 'number'.\n  Type 'boolean' is not assignable to type 'number'.\n",
      "timestamp": 1660334216
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const u: number[] = []\n  const o: number = l.length\n  let j: number = 0\n  let k = 0\n  for (let i: number = 1; i < o; i++) {\n    if (l[i] !== l[k]) {\n      u.push(l[j])\n      j++\n    }\n    k++\n  }\n  return u\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  5,\n  2,\n  3,\n  3,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpudjgfled.js:21:12)\n    at Object.<anonymous> (/tmp/tmpudjgfled.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5, 3, 5, 2,\n    3, 3, 9\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334217
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const a: number[] = [];\n  for (const i in l) {\n    if (a.indexOf(l[i]) === -1) {\n      a.push(l[i]);\n    }\n  }\n  return a;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp9_emuqca.js:16:12)\n    at Object.<anonymous> (/tmp/tmp9_emuqca.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334217
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.filter((v, i) => l.indexOf(v) === i);\n}\n</code>\n<|/ a dscore=2 |>\n<| a |>\nUse an object to track duplicates:\n\n<code>\nconst a = [1, 2, 2, 3, 4, 4, 4, 5, 5, 6, 6];\n\nconst set = {};\n\na.filter(v => !set[v]).forEach((v) => set[v] = true);\n\nconsole.log(JSON.stringify(a));</code>\n<|/ a tags=arrays,javascript,sorting dscore=1 |>\n<| a dscore=1 |>\nYou could use the unique function from lodash library to remove duplicates before sorting:\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpvobddqf5.ts(7,2): error TS1110: Type expected.\n../../../../tmp/tmpvobddqf5.ts(7,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpvobddqf5.ts(8,2): error TS1109: Expression expected.\n../../../../tmp/tmpvobddqf5.ts(8,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpvobddqf5.ts(9,2): error TS1109: Expression expected.\n../../../../tmp/tmpvobddqf5.ts(9,7): error TS1109: Expression expected.\n../../../../tmp/tmpvobddqf5.ts(10,5): error TS1005: ';' expected.\n../../../../tmp/tmpvobddqf5.ts(10,8): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvobddqf5.ts(10,15): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvobddqf5.ts(10,18): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvobddqf5.ts(13,1): error TS1109: Expression expected.\n../../../../tmp/tmpvobddqf5.ts(19,33): error TS1110: Type expected.\n../../../../tmp/tmpvobddqf5.ts(19,34): error TS1161: Unterminated regular expression litera",
      "timestamp": 1660334216
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const u: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if (u.indexOf(l[i]) < 0) u.push(l[i]);\n  }\n  return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpk9c33jnj.js:15:12)\n    at Object.<anonymous> (/tmp/tmpk9c33jnj.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334217
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.filter(function (elem, pos) {\n    return l.indexOf(elem) == pos;\n  });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpsqnmwh8d.js:12:12)\n    at Object.<anonymous> (/tmp/tmpsqnmwh8d.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334218
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const ns: number[] = [];\n  const vals: number[] = [];\n  let v = ns;\n  let w = vals;\n  l.sort((a, b) => {\n    return a - b;\n  });\n  while (w.length !== 0) {\n    const e = w.pop();\n    if (vals.indexOf(e) === -1 && ns.length !== 0) {\n      v = v.concat(ns);\n      w = w.concat(vals);\n    }\n    if (ns.length === 0 && vals.length === 0) {\n      return v;\n    }\n    v.push(e);\n    vals.push(e);\n  }\n  return v;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmphem8k9xq.js:29:12)\n    at Object.<anonymous> (/tmp/tmphem8k9xq.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334219
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    if (l.length <= 1) {\n        return l;\n    }\n\n    const sorted = l.slice();\n    sorted.sort();\n\n    let i = 1;\n    for (; i < sorted.length; ++i) {\n        if (sorted[i] !== sorted[i - 1]) {\n            break;\n        }\n    }\n\n    return sorted.slice(0, i);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp1lu40us5.js:21:12)\n    at Object.<anonymous> (/tmp/tmp1lu40us5.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334219
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    var u: number[] = [],\n        a: number[] = [],\n        i: number;\n    for (i = 0; i < l.length; ++i) {\n        if (l[i] !== l[i + 1]) {\n            a.push(l[i]);\n        }\n    }\n    a = a.sort();\n    for (i = 0; i < a.length; ++i) {\n        u.push(a[i]);\n    }\n    return u;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  123,\n  2,\n  3,\n  3,\n  5,\n  5,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpqc7bh0vp.js:20:12)\n    at Object.<anonymous> (/tmp/tmpqc7bh0vp.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0, 123, 2, 3,\n    3,   5, 5, 9\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334219
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    var u = [];\n    var result = [];\n    for(let i = 0; i < l.length; i++) {\n        if(u.indexOf(+l[i]) < 0) u.push(+l[i]);\n        result.push(l[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  5,\n  2,\n  3,\n  3,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpdxmtgirk.js:17:12)\n    at Object.<anonymous> (/tmp/tmpdxmtgirk.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5, 3, 5,   2, 3,\n    3, 9, 0, 123\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334219
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const u: number[] = [];\n  for (let i = 0; i < l.length; ++i) u.push(l.indexOf(l[i]));\n  return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n  0,\n  3,\n  1,\n  1,\n  6,\n  7,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmptte327zf.js:13:12)\n    at Object.<anonymous> (/tmp/tmptte327zf.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0, 1, 0, 3, 1,\n    1, 6, 7, 8\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334219
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    return l.reduce(function (res: number[], value: number): number[] {\n        const uniqueValueIndex = res.indexOf(value);\n        if (uniqueValueIndex === -1) {\n            return [...res, value];\n        } else {\n            return res;\n        }\n    });\n}\n\nexport function hasMultipleValues(arr: number[]): boolean {\n    return arr.length > 1 || !arr.some((n: number) => n === 0);\n}\n\nexport function hasAnyValues(arr: number[]): boolean {\n    return arr.length > 0 || !arr.some((n: number) => n !== 0);\n}\n\nexport function hasAllValues(arr: number[]): boolean {\n    return arr.some((n: number) => n === 0);\n}\n\nexport function containsNot(arr: number[]): boolean {\n    return arr.some((n: number) => n !== 0);\n}\n\nexport function containsAll(arr: number[]): boolean {\n    return arr.length > 0 && arr.some((n: number) => n === 0);\n}\n\nexport function containsAny(arr: number[]): boolean {\n    return arr.length > 0 && arr.some((n: number) => n !== 0);\n}\n\nexport function containsNoneOf(arr: number[]): boolean {\n    return arr.length > 0 && arr.some((n: number) => n === 0);\n}\n\nexport function min<T>(arr: T[]): T | undefined {\n    return arr.reduce(function (min: T, n: number): T | undefined {\n        return min === undefined ? n : n < min ? n : min;\n    }, undefined);\n}\n\nexport function max<T>(arr: T[]): T | undefined {\n    return arr.reduce(function (max: T, n: number): T | undefined {\n        return max === undefined ? n : n > max ? n : max;\n    }, undefined);\n}\n\nexport function sum<T>(arr: T[]): number {\n    return arr.reduce((sum: number, n: number) => sum + n, 0);\n}\n\nexport function mean<T>(arr: T[]): number {\n    return sum(arr) / arr.length;\n}\n\nexport function median<T>(arr: T[]): number {\n    const length = arr.length;\n    if (length % 2 === 0) {\n        // Even\n        const half = Math.floor(length / 2);\n        let lower = half - 1;\n        let upper = half;\n        if (arr[lower] > arr[upper]) {\n            upper = lower + 1;\n        }\n\n        return Math.round((arr[lower] + arr[upper]) / 2);\n    } else {\n        // Odd\n        const half = Math.ceil(length / 2);\n        let lower = half - 1;\n        let upper = half;\n        if (arr[lower] > arr[upper]) {\n            lower = upper;\n        }\n\n        return Math.round((arr[lower] + arr[upper]) / 2);\n    }\n}\n\nexport function variance<T>(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmprcwj_tu8.ts(89,9): error TS1359: Identifier expected. 'var' is a reserved word that cannot be used here.\n",
      "timestamp": 1660334219
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.filter((item, index) => l.indexOf(item) === index)\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpsg5a_6zr.js:10:12)\n    at Object.<anonymous> (/tmp/tmpsg5a_6zr.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334220
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const o: number[] = [];\n  const s: Set<number> = new Set();\n  for (const i of l) {\n    if (!s.has(i)) {\n      o.push(i);\n      s.add(i);\n    }\n  }\n  return o;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpblqbeazv.js:18:12)\n    at Object.<anonymous> (/tmp/tmpblqbeazv.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334220
    },
    {
      "exit_code": -5,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const u: number[] = new Array(l.length);\n  for (let i = 0; i < u.length; ++i) {\n    if (l.indexOf(u[i]) == -1) u.push(i);\n  }\n  return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "Exception",
      "stderr": "\n\n#\n# Fatal error in , line 0\n# Fatal JavaScript invalid size error 143384680\n#\n#\n#\n#FailureMessage Object: 0x7fff18508370\n 1: 0x2ba1f9996727  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 2: 0x2ba1fa52b28e V8_Fatal(char const*, ...) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 3: 0x2ba1f9e65f8b  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 4: 0x2ba1f9ff78a0  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 5: 0x2ba1f9fff230  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 6: 0x2ba1fa1e97db v8::internal::Runtime_GrowArrayElements(int, unsigned long*, v8::internal::Isolate*) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 7: 0x2ba1f9b487f9  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n",
      "stdout": "",
      "timestamp": 1660334224
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.filter((v, i, a) => (i === a.indexOf(v)) || (i > 0))\n}\n</code>\n<|/ a |>\n<| a tags=sorting,javascript |>\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpz2uzjp2c.ts(7,2): error TS1110: Type expected.\n../../../../tmp/tmpz2uzjp2c.ts(7,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpz2uzjp2c.ts(8,2): error TS1109: Expression expected.\n../../../../tmp/tmpz2uzjp2c.ts(8,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpz2uzjp2c.ts(9,2): error TS1109: Expression expected.\n../../../../tmp/tmpz2uzjp2c.ts(9,6): error TS1005: ';' expected.\n../../../../tmp/tmpz2uzjp2c.ts(9,31): error TS1109: Expression expected.\n../../../../tmp/tmpz2uzjp2c.ts(11,9): error TS1005: ';' expected.\n",
      "timestamp": 1660334220
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\treturn l.filter(function(v, i, a) {\n\t\treturn a.indexOf(v) == i;\n\t});\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpy9qgp_ov.js:12:12)\n    at Object.<anonymous> (/tmp/tmpy9qgp_ov.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334220
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    if (l.length === 0) {\n        return l;\n    }\n    const u = [];\n    for (let i = 0; i < l.length; i++) {\n        if (u.indexOf(+l[i]) === -1) {\n            u.push(+l[i]);\n        }\n    }\n    return u;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmph_cpbifa.js:19:12)\n    at Object.<anonymous> (/tmp/tmph_cpbifa.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334220
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return Array.from(new Set(l)).sort();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  123,\n  2,\n  3,\n  5,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpkra3s5pa.js:10:12)\n    at Object.<anonymous> (/tmp/tmpkra3s5pa.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 123, 2, 3, 5, 9 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334220
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const u: number[] = [];\n    const result: number[] = [];\n    for(let i = 0; i < l.length; i++) {\n        if(u.indexOf(l[i]) === -1) {\n            u.push(l[i]);\n            result.push(l[i]);\n        }\n    }\n    return result;\n}\n</code>\n<|/ a tags=typescript,arrays dscore=5 |>\n<| c |>\nThis won't work in general cases. For example, with array `[5, 3, 9, 1, 123]`, your function will return `[5, 3, 9, 1, 123]` while `unique([5, 3, 9, 1, 123, 5])` will return `[5, 3, 9, 1, 123, 5]`.\n<|/ c |>\n<| c |>\nIt seems to me a much better solution is the one presented here: https://stackoverflow.com/a/41390510/839625\n<|/ c |>\n<| a dscore=5 |>\nA more efficient way to do this is to sort and remove duplicates. You can remove duplicates using Set data structure:\n<code>\nvar numbers = [1, 2, 3, 4, 2, 3, 4, 2];\nvar unique = new Set(numbers);\nconsole.log(Array.from(unique)); // [1,2,3]\n</code>\n<|/ a tags=typescript,arrays |>\n<| c |>\nThis is probably the fastest in terms of performance.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. `Set` is fast and efficient.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. `Set` is fast and efficient.\n<|/ c |>\n<| a dscore=5 |>\nA faster way is to run this loop:\n<code>\narray.filter((v, i, a) => a.indexOf(v) === i);\n</code>\n<|/ a tags=typescript,arrays |>\n<| c |>\nThis should be the best answer.\n<|/ c |>\n<| c |>\nIt's a really bad answer.\n<|/ c |>\n<| c |>\nIt should be the top answer.\n<|/ c |>\n<| c |>\nThis is exactly what I was looking for!\n<|/ c |>\n<| c |>\nI like this but be aware that `indexOf` can be slow with large arrays, as it may have to scan through the entire array each time. It's not too bad in this case, but could be an issue if you were using a large array and wanted it to be as fast as possible.\n<|/ c |>\n<| a |>\nThis solution is better in terms of performance than above solutions\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp8cjxo2f6.ts(15,2): error TS1110: Type expected.\n../../../../tmp/tmp8cjxo2f6.ts(15,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmp8cjxo2f6.ts(16,2): error TS1109: Expression expected.\n../../../../tmp/tmp8cjxo2f6.ts(16,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmp8cjxo2f6.ts(17,2): error TS1109: Expression expected.\n../../../../tmp/tmp8cjxo2f6.ts(17,7): error TS1109: Expression expected.\n../../../../tmp/tmp8cjxo2f6.ts(18,6): error TS1005: ';' expected.\n../../../../tmp/tmp8cjxo2f6.ts(18,6): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp8cjxo2f6.ts(18,198): error TS1002: Unterminated string literal.\n../../../../tmp/tmp8cjxo2f6.ts(19,2): error TS1109: Expression expected.\n../../../../tmp/tmp8cjxo2f6.ts(19,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmp8cjxo2f6.ts(20,2): error TS1109: Expression expected.\n../../../../tmp/tmp8cjxo2f6.ts(20,7): error TS1109: Expression expected.\n../../../../tmp/tmp8cjxo2f6.ts(21,4): error TS1005: ';' expected.\n../../../../tmp/tmp8cjxo2f6.ts(21,10): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp8cjxo2f6.ts(21,13): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp8cjxo2f6.ts(21,16): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp8cjxo2f6.ts(21,18): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp8cjxo2f6.ts(21,23): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp8cjxo2f6.ts(21,30): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp8cjxo2f6.ts(21,39): error TS1228: A type predicate is only allowed in return type position for functions and methods.\n../../../../tmp/tmp8cjxo2f6.ts(21,42): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp8cjxo2f6.ts(21,46): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp8cjxo2f6.ts(21,50): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp8cjxo2f6.ts(22,3): error",
      "timestamp": 1660334220
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tconst result = new Set<number>();\n\tfor (let i = 0; i < l.length; i++) {\n\t\tif (!result.has(l[i])) {\n\t\t\tresult.add(l[i]);\n\t\t}\n\t}\n\treturn Array.from(result);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpzolerk5v.js:16:12)\n    at Object.<anonymous> (/tmp/tmpzolerk5v.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334220
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const a: number[] = [],\n        l = l.filter(function (val: number) {\n            return a.indexOf(val) === -1;\n        }),\n        l = l.sort(function (a: number, b: number) {\n            return a - b;\n        });\n    return l;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you for your time and effort, but you missed the point. The question is how to do the same using just JS native methods.\n<|/ c |>\n<| c |>\nThe question was how to sort numbers in ascending order. I provided an answer which does that and only uses native methods. Not sure how this can be missed, so +1\n<|/ c |>\n<| c |>\nThis answer doesn't use native, which is OP's point. And it uses multiple arrays to do the same thing. Not the most performant or efficient way. But it is correct and works.\n<|/ c |>\n<| a tags=arrays,algorithm,javascript,sorting |>\nI recently had this same problem and found a great solution.\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpv1t8sptb.ts(14,2): error TS1110: Type expected.\n../../../../tmp/tmpv1t8sptb.ts(14,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpv1t8sptb.ts(15,2): error TS1109: Expression expected.\n../../../../tmp/tmpv1t8sptb.ts(15,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpv1t8sptb.ts(16,2): error TS1109: Expression expected.\n../../../../tmp/tmpv1t8sptb.ts(16,7): error TS1109: Expression expected.\n../../../../tmp/tmpv1t8sptb.ts(17,7): error TS1005: ';' expected.\n../../../../tmp/tmpv1t8sptb.ts(17,15): error TS1005: '(' expected.\n../../../../tmp/tmpv1t8sptb.ts(17,20): error TS1005: ';' expected.\n../../../../tmp/tmpv1t8sptb.ts(17,25): error TS1005: ';' expected.\n../../../../tmp/tmpv1t8sptb.ts(17,29): error TS1005: ')' expected.\n../../../../tmp/tmpv1t8sptb.ts(17,41): error TS1005: ';' expected.\n../../../../tmp/tmpv1t8sptb.ts(17,45): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpv1t8sptb.ts(17,52): error TS1434: Unexpected ",
      "timestamp": 1660334220
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let ret: number[] = [];\n  for (let i = 0, len = l.length; i < len; i++) {\n    if (ret.indexOf(l[i]) === -1) {\n      ret.push(l[i]);\n    }\n  }\n  return ret;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp0whbbdh7.js:16:12)\n    at Object.<anonymous> (/tmp/tmp0whbbdh7.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334220
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const seen: Set<number> = new Set();\n  const sorted: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if (seen.has(l[i])) {\n      continue;\n    }\n    seen.add(l[i]);\n    sorted.push(l[i]);\n  }\n  return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp19xdjkcf.js:19:12)\n    at Object.<anonymous> (/tmp/tmp19xdjkcf.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334220
    },
    {
      "exit_code": 0,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const m = new Set(l);\n  return [...m].sort((a: number, b: number) => a - b).filter(a => a !== void 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660334221
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let i: number, c: number, o: number[] = [];\n\n  for (i = 0, c = l.length - 1; i <= c; i++) {\n    const val = l[i];\n\n    if (l.indexOf(val) == i) o.push(val);\n  }\n  return o;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp567tjxsc.js:16:12)\n    at Object.<anonymous> (/tmp/tmp567tjxsc.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334220
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const map = new Map<number, boolean>();\n  const result = [];\n  for (let i = 0; i < l.length; i++) {\n    if (!map.has(l[i])) {\n      result.push(l[i]);\n      map.set(l[i], true);\n    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpz2agx9eg.js:18:12)\n    at Object.<anonymous> (/tmp/tmpz2agx9eg.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334221
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let r = [];\n  for (let i = 0; i < l.length; i++) {\n    if (r.indexOf(l[i]) === -1) {\n      r.push(l[i]);\n    }\n  }\n  return r;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp1wgftq_y.js:16:12)\n    at Object.<anonymous> (/tmp/tmp1wgftq_y.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334221
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  var c: number[] = [];\n  var i: number;\n  var j: number;\n  for (j = 0; j < l.length; j++) {\n    for (i = 0; i < l.length; i++) {\n      if (l[i] === l[j]) {\n        continue;\n      }\n      if (c.indexOf(l[i]) === -1) {\n        c.push(l[i]);\n      }\n    }\n  }\n  return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n  9,\n  0,\n  123,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpkhl12qis.js:23:12)\n    at Object.<anonymous> (/tmp/tmpkhl12qis.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 9, 0, 123, 5 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334223
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    return Array.from(new Set(l))\n}\n</code>\n<|/ a |>\n<| a dscore=1 |>\nIf you do not want to use any library just use for loop and sort it\n<code>\nlet unq = [];\nfor(let i in a){\n  if(a.indexOf(a[i]) == -1) unq.push(a[i]);\n}\n</code>\n<|/ a tags=javascript |>\n<| c |>\nPlease add some explanation to your answer to improve its quality.\n<|/ c |>\n<| c |>\nplease add an explanation, what does the code do and why should one use this?\n<|/ c |>\n<| a dscore=1 |>\nYou can try this\n<code>\nlet a = [1,2,3,3,5,5,6,6,9,9,9,10,10,10]\n\nlet unique = a.filter((a,i,arr) => arr.indexOf(a) === i)\n</code>\n<|/ a tags=javascript |>\n<| a tags=javascript |>\nUsing ES6 Set() with spread operator\n<code>\nvar arr = [1,2,3,3,5,5,6,6,9,9,9,10,10,10];\nvar unique = [...new Set(arr)];\nconsole.log(unique)\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript |>\nES6 version (ES6)\n<code>\nvar a = [1,2,3,3,5,5,6,6,9,9,9,10,10,10];\nvar unique = []; \n\nlet unique = a.filter((value,index,array)=>{\n  if(array.indexOf(value)==index)\n  {\n    return false;\n  }\n  else\n  {\n    unique.push(value);\n    return true;\n  }\n\n});\n\nconsole.log(unique);\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript dscore=0 |>\nWithout using any library you could use the following code (using lodash):\n<code>\nvar a = [1,2,3,3,5,5,6,6,9,9,9,10,10,10];\nvar unique = _.uniq(a)\n</code>\n<|/ a |>\n<| c |>\nI assume you mean `_.uniq(a)` instead of `_.uniq`\n<|/ c |>\n<| a dscore=0 |>\nYou can use the following function, which will return only unique values\n\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp7hskbnor.ts(7,2): error TS1110: Type expected.\n../../../../tmp/tmp7hskbnor.ts(7,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmp7hskbnor.ts(8,2): error TS1109: Expression expected.\n../../../../tmp/tmp7hskbnor.ts(8,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmp7hskbnor.ts(9,2): error TS1109: Expression expected.\n../../../../tmp/tmp7hskbnor.ts(9,6): error TS1005: ';' expected.\n../../../../tmp/tmp7hskbnor.ts(9,16): error TS1109: Expression expected.\n../../../../tmp/tmp7hskbnor.ts(10,4): error TS1005: ';' expected.\n../../../../tmp/tmp7hskbnor.ts(10,11): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp7hskbnor.ts(10,15): error TS1005: 'while' expected.\n../../../../tmp/tmp7hskbnor.ts(10,20): error TS1005: ')' expected.\n../../../../tmp/tmp7hskbnor.ts(10,23): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp7hskbnor.ts(10,27): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp7hskbnor",
      "timestamp": 1660334222
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let s: Set<number> = new Set();\n  for (let i of l) {\n    s.add(i);\n  }\n  return Array.from(s);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpdlkvwk17.js:14:12)\n    at Object.<anonymous> (/tmp/tmpdlkvwk17.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334222
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    if (l.length <= 1) {\n        return l;\n    }\n    var ret: number[] = [];\n    var found = false;\n    for (var i = 0, len = l.length; i < len; i++) {\n        if (found) {\n            break;\n        }\n        var val = l[i];\n        for (var j = 0; j < i; j++) {\n            if (l[j] === val) {\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            ret.push(val);\n        }\n    }\n    return ret;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpeo7r4grc.js:30:12)\n    at Object.<anonymous> (/tmp/tmpeo7r4grc.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334223
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let a: number[] = []\n  let u: number[] = []\n  let v: number[] = []\n\n  for (let i = 0; i < l.length; i++) {\n    if (a.indexOf(l[i]) == -1) a.push(l[i])\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    if (u.indexOf(a[i]) == -1) u.push(a[i])\n  }\n\n  for (let i = 0; i < u.length; i++) {\n    if (v.indexOf(<any>u[i]) == -1) v.push(<any>u[i])\n  }\n\n  return v\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpaa6nvuix.js:25:12)\n    at Object.<anonymous> (/tmp/tmpaa6nvuix.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334223
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    var u = {}, a = [];\n    for(var i = 0; i < l.length; i++) {\n        if(u.hasOwnProperty(l[i])) {\n            continue;\n        }\n        a.push(l[i]);\n        u[l[i]] = 1;\n    }\n    return a;\n}\n</code>\n<|/ a tags=numbers,javascript,arrays dscore=1 |>\n<| c |>\nThanks everybody for responding and sharing different ideas! I'm sure they're helpful but since I'm new to Javascript I haven't implemented it yet. I tried the code from Gordon's answer first, but then when I ran it, the code was still returning all the values in my array as duplicates. So, I decided to see if I could get a solution without using Sets and only using Arrays. Thanks again everyone!\n<|/ c |>\n<| a tags=numbers,javascript,arrays dscore=0 |>\nHere's a more efficient solution:\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpe4g5uptn.ts(15,2): error TS1110: Type expected.\n../../../../tmp/tmpe4g5uptn.ts(15,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpe4g5uptn.ts(16,2): error TS1109: Expression expected.\n../../../../tmp/tmpe4g5uptn.ts(16,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpe4g5uptn.ts(17,2): error TS1109: Expression expected.\n../../../../tmp/tmpe4g5uptn.ts(17,7): error TS1109: Expression expected.\n../../../../tmp/tmpe4g5uptn.ts(18,8): error TS1005: ';' expected.\n../../../../tmp/tmpe4g5uptn.ts(18,22): error TS1005: '(' expected.\n../../../../tmp/tmpe4g5uptn.ts(18,33): error TS1005: ';' expected.\n../../../../tmp/tmpe4g5uptn.ts(18,37): error TS1005: ';' expected.\n../../../../tmp/tmpe4g5uptn.ts(18,45): error TS1005: ')' expected.\n../../../../tmp/tmpe4g5uptn.ts(18,62): error TS1005: ';' expected.\n../../../../tmp/tmpe4g5uptn.ts(18,76): error TS1005: ';' expected.\n../../../../tmp/tmpe4g5uptn.ts(18,79): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpe4g5uptn.ts(18,87): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpe4g5uptn.ts(18,91): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpe4g5uptn.ts(18,97): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpe4g5uptn.ts(18,127): error TS1005: ';' expected.\n../../../../tmp/tmpe4g5uptn.ts(18,129): error TS1435: Unknown keyword or identifier. Did you mean 'implements'?\n../../../../tmp/tmpe4g5uptn.ts(18,141): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpe4g5uptn.ts(18,151): error TS1005: ';' expected.\n../../../../tmp/tmpe4g5uptn.ts(18,157): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpe4g5uptn.ts(18,161): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpe4g5uptn.ts(18,166): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpe4g5uptn.ts(18,171): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpe4g5uptn.ts(18,400): error TS1002: Unterminated strin",
      "timestamp": 1660334223
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    let uniqueArr = [];\n    let uniqueCounter = 0;\n    for (let i = 0; i < l.length; i++) {\n        if (uniqueCounter < uniqueArr.length) {\n            if (l[i] == uniqueArr[uniqueCounter]) {\n                uniqueCounter++;\n            } else {\n                uniqueArr.push(l[i]);\n                uniqueCounter++;\n            }\n        } else {\n            uniqueArr.push(l[i]);\n            uniqueCounter++;\n        }\n    }\n    return uniqueArr;\n}\n</code>\nThe algorithm is O(n), but it is very inefficient and does not take advantage of the fact that an array can be sorted, therefore it can be done in O(n + k) time instead of O(n * k). I am not saying this is faster or better, but it is much more efficient and much easier to implement.\nHere is a more efficient version that also sorts the array:\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpvawtagd7.ts(22,2): error TS1110: Type expected.\n../../../../tmp/tmpvawtagd7.ts(22,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpvawtagd7.ts(23,1): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvawtagd7.ts(23,5): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvawtagd7.ts(23,15): error TS1228: A type predicate is only allowed in return type position for functions and methods.\n../../../../tmp/tmpvawtagd7.ts(23,28): error TS1005: ';' expected.\n../../../../tmp/tmpvawtagd7.ts(23,31): error TS1228: A type predicate is only allowed in return type position for functions and methods.\n../../../../tmp/tmpvawtagd7.ts(23,34): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvawtagd7.ts(23,39): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvawtagd7.ts(23,51): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvawtagd7.ts(23,55): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvawtagd7.ts(23,60): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvawtagd7.ts(23,64): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvawtagd7.ts(23,69): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvawtagd7.ts(23,79): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvawtagd7.ts(23,82): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvawtagd7.ts(23,86): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvawtagd7.ts(23,91): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvawtagd7.ts(23,96): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvawtagd7.ts(23,99): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvawtagd7.ts(23,105): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvawtagd7.ts(23,109): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpvawtagd7.ts(23,130): error TS1005: ';' expected.\n",
      "timestamp": 1660334223
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tconst a: number[] = [];\n\tfor (let i = 0; i < l.length; i++) {\n\t\tconst j = a.indexOf(l[i]);\n\t\tif (j === -1) a.push(l[i]);\n\t}\n\treturn a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpx93h34es.js:16:12)\n    at Object.<anonymous> (/tmp/tmpx93h34es.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334223
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.filter((value, index, self) => self.indexOf(value) === index)\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpty33mtxw.js:10:12)\n    at Object.<anonymous> (/tmp/tmpty33mtxw.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334223
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    return l.filter((value, index) => l.indexOf(value) === index);\n}\n</code>\n<|/ a tags=typescript,javascript,arrays |>\n<| a dscore=0 tags=typescript,javascript,arrays |>\nThis is a very handy function, if you don't need to check for duplicate values.\n<code>\nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([].concat(a,b,c)));\n\nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([].concat(a,b,c)));\n\nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp4nzfnnom.ts(7,2): error TS1110: Type expected.\n../../../../tmp/tmp4nzfnnom.ts(7,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmp4nzfnnom.ts(8,2): error TS1109: Expression expected.\n../../../../tmp/tmp4nzfnnom.ts(8,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmp4nzfnnom.ts(9,2): error TS1109: Expression expected.\n../../../../tmp/tmp4nzfnnom.ts(9,6): error TS1005: ';' expected.\n../../../../tmp/tmp4nzfnnom.ts(9,15): error TS1005: ';' expected.\n../../../../tmp/tmp4nzfnnom.ts(9,50): error TS1109: Expression expected.\n../../../../tmp/tmp4nzfnnom.ts(10,6): error TS1005: ';' expected.\n../../../../tmp/tmp4nzfnnom.ts(10,9): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp4nzfnnom.ts(10,11): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp4nzfnnom.ts(10,16): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp4nzfnnom.ts(10,30): error TS1003: Identifier expected.\n../../../../tmp/tmp4nzfnnom.ts(10,35): error TS1005: '(' expected.\n../../../../tmp/tmp4nzfnnom.ts(10,39): error TS1005: ')' expected.\n../../../../tmp/tmp4nzfnnom.ts(10,39): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmp4nzfnnom.ts(10,80): error TS1002: Unterminated string literal.\n",
      "timestamp": 1660334223
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let res: number[] = [];\n\n  for (let i = 0; i < l.length; i++) {\n    const val = l[i];\n\n    if (res.indexOf(val) === -1) {\n      res.push(val);\n    }\n  }\n\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpnffyu4cs.js:17:12)\n    at Object.<anonymous> (/tmp/tmpnffyu4cs.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334224
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const set = new Set<number>();\n    l.forEach((val) => {\n        if (set.has(val)) {\n            set.delete(val);\n        } else {\n            set.add(val);\n        }\n    });\n    return [...set];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp7b9zep4e.js:19:12)\n    at Object.<anonymous> (/tmp/tmp7b9zep4e.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334224
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let u: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if (u.indexOf(l[i]) < 0) u.push(l[i]);\n  }\n  return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp3umlcafx.js:15:12)\n    at Object.<anonymous> (/tmp/tmp3umlcafx.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334224
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    var u: number[] = [],\n        i = -1,\n        n = l.length;\n\n    while (++i < n) if (u.indexOf(+l[i]) === -1) u.push(+l[i]);\n\n    return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp2kzq4s5n.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2kzq4s5n.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334223
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    const a: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        const num = l[i];\n        if (num === 0 || num === undefined || num === null) {\n            continue;\n        }\n        if (a.indexOf(num) === -1) {\n            a.push(num);\n        }\n    }\n    return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp8v5lg9vp.js:20:12)\n    at Object.<anonymous> (/tmp/tmp8v5lg9vp.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334224
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    let i: number[] = [],\n        s: number[] = [],\n        map: Object = {},\n        maps: Object[] = [],\n        m: number = 0;\n\n    for (i = 0; i < l.length; i++) {\n        if (i > 0) {\n            if (map[l[i - 1]] === undefined) {\n                map[l[i - 1]] = m;\n                maps.push(map);\n                m = m + 1\n            } else {\n                map[l[i - 1]] = m[map[l[i - 1]]]\n            }\n        }\n        s[map[l[i]]] = l[i]\n    }\n\n    return s.filter(function (x: number) {\n        return map[x] === undefined\n    }).concat(maps.map(function (map) {\n        return map\n    }))\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nYour implementation is incorrect and will throw an exception in `unique`. The idea is to use a map to store all the unique elements and a set to remove all duplicates. So you should change your `if (i > 0) {` to `if (i > 0) {\n                if (map[l[i - 1]] === undefined) {\n                    map[l[i - 1]] = m;\n                    maps.push(map);\n                    m = m + 1\n                }\n            }\n            s[map[l[i]]] = l[i]\n        }`\n<|/ c |>\n<| c |>\nI didn't test your code. The code that I wrote here is meant to be an example of how to implement it. If you're going to write your own code then you have to make sure that you actually understand what you are doing.\n<|/ c |>\n<| c |>\nYou are not implementing the algorithm, you are simply giving the solution. Notice that the OP wrote \"unique elements\" but implemented \"unique items\" in your code.\n<|/ c |>\n<| c |>\nI see what you're saying. It seems that there are two possible solutions to your problem. One is to use an array of integers that will hold the unique elements and another one is to use an object to store each unique element.\n<|/ c |>\n<| c |>\nI agree with you that this is the way to go about it. The OP could of done this with sets or other data structures.\n<|/ c |>\n<| a tags=javascript,typescript dscore=1 |>\nIf you have lodash installed, you can use the _.uniqWith method:\n<code>\n_.uniqWith(arr, [func]);\n</code>\nExample:\n<code>\nvar arr = [1, 1, 2, 2, 3, 3]\nvar result = _.uniqWith(arr, (val) => val % 2)\nconsole.log(result)\n> [1, 2, 3]\n</code>\n<|/ a |>\n<| a dscore=1 tags=javascript,typescript |>\nTo achieve this with plain JavaScript I would use the following:\n<code>\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpd866fq6y.ts(30,2): error TS1110: Type expected.\n../../../../tmp/tmpd866fq6y.ts(30,3): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpd866fq6y.ts(31,2): error TS1109: Expression expected.\n../../../../tmp/tmpd866fq6y.ts(31,4): error TS1161: Unterminated regular expression literal.\n../../../../tmp/tmpd866fq6y.ts(32,2): error TS1109: Expression expected.\n../../../../tmp/tmpd866fq6y.ts(32,7): error TS1109: Expression expected.\n../../../../tmp/tmpd866fq6y.ts(33,6): error TS1005: ';' expected.\n../../../../tmp/tmpd866fq6y.ts(33,21): error TS1228: A type predicate is only allowed in return type position for functions and methods.\n../../../../tmp/tmpd866fq6y.ts(33,24): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpd866fq6y.ts(33,34): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpd866fq6y.ts(33,38): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpd866fq6y.ts(33,49): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpd866fq6y.ts(33,79): error TS1005: ';' expected.\n../../../../tmp/tmpd866fq6y.ts(33,84): error TS1228: A type predicate is only allowed in return type position for functions and methods.\n../../../../tmp/tmpd866fq6y.ts(33,87): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpd866fq6y.ts(33,90): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpd866fq6y.ts(33,94): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpd866fq6y.ts(33,96): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpd866fq6y.ts(33,100): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpd866fq6y.ts(33,103): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpd866fq6y.ts(33,109): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpd866fq6y.ts(33,113): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpd866fq6y.ts(33,117): error TS1434: Unexpected keyword or identifier.\n../../../../tmp/tmpd866fq6y.ts(33",
      "timestamp": 1660334224
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const seen = new Set<number>();\n  const result = [];\n\n  for (let i = 0, len = l.length; i < len; i++) {\n    const j = i + 1;\n\n    const item = l[i];\n    if (seen.has(item)) {\n      continue;\n    }\n\n    seen.add(item);\n    result.push(item);\n  }\n\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpa90cvevk.js:21:12)\n    at Object.<anonymous> (/tmp/tmpa90cvevk.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334224
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n\tlet o: number[] = [];\n\tfor (let i = 0; i < l.length; i++) {\n\t\tif (o.indexOf(+l[i]) === -1) {\n\t\t\to.push(+l[i]);\n\t\t}\n\t}\n\treturn o;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmplld24hcs.js:16:12)\n    at Object.<anonymous> (/tmp/tmplld24hcs.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334224
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  var u: number[] = [];\n  for (var i = l.length - 1; i >= 0; i--) {\n    if (u.indexOf(l[i]) === -1) {\n      u.push(l[i]);\n    }\n  }\n  return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  123,\n  0,\n  9,\n  3,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpkgztsv3v.js:16:12)\n    at Object.<anonymous> (/tmp/tmpkgztsv3v.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 123, 0, 9, 3, 2, 5 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334224
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return uniqueSort(l).reverse();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpnz83itkf.ts(5,10): error TS2304: Cannot find name 'uniqueSort'.\n",
      "timestamp": 1660334224
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const map = new Map();\n  for (let i = 0; i < l.length; i++) {\n    const v = l[i];\n    if (map.has(v)) {\n      map.set(v, map.get(v) + 1);\n    } else {\n      map.set(v, 1);\n    }\n  }\n  return Array.from(map.keys());\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpoghug_vo.js:20:12)\n    at Object.<anonymous> (/tmp/tmpoghug_vo.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334225
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    let u: number[] = [];\n\n    for (let i = 0; i < l.length; i++) {\n        if (u.indexOf(l[i]) === -1) {\n            u.push(l[i]);\n        }\n    }\n\n    return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpc4ea86ls.js:16:12)\n    at Object.<anonymous> (/tmp/tmpc4ea86ls.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334209
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let r: number[] = [];\n  let q: number[] = [...l];\n  while (q.length > 0) {\n    let a = q.shift();\n    if (r.indexOf(a) === -1) {\n      r.push(a);\n    }\n  }\n  return r;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpgvkubogb.js:18:12)\n    at Object.<anonymous> (/tmp/tmpgvkubogb.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334225
    },
    {
      "exit_code": 2,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  if (l.length !== l.uniq().length) {\n    throw new Error('Array does not contain unique elements.')\n  }\n  return l\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpuvsc9dyo.ts(5,22): error TS2339: Property 'uniq' does not exist on type 'number[]'.\n",
      "timestamp": 1660334225
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return Array.from(new Set(l));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp4pii1j2s.js:10:12)\n    at Object.<anonymous> (/tmp/tmp4pii1j2s.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333871
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  const u: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if (u.indexOf(l[i]) == -1) {\n      u.push(l[i]);\n    }\n  }\n  return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpj_7orli6.js:16:12)\n    at Object.<anonymous> (/tmp/tmpj_7orli6.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334225
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  var a: number[] = [], l: number[] = [];\n  for (var i = 0, n = l.length; i < n; i++) {\n    if (!l[i]) {\n      a[i] = l[i];\n      l.splice(i, 1);\n      n--;\n    }\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpe2_fw6ah.js:18:12)\n    at Object.<anonymous> (/tmp/tmpe2_fw6ah.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334225
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    return l.filter(function(elem, pos, self) {\n        return self.indexOf(elem) === pos;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpvkr4u7ue.js:12:12)\n    at Object.<anonymous> (/tmp/tmpvkr4u7ue.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334225
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  return l.filter((e, i) => l.indexOf(e) === i);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp8gkg_vlj.js:10:12)\n    at Object.<anonymous> (/tmp/tmp8gkg_vlj.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334225
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n    let u = [];\n    for(let i of l) {\n        if(u.indexOf(i) == -1) u.push(i);\n    }\n    return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmps9yd5ro0.js:15:12)\n    at Object.<anonymous> (/tmp/tmps9yd5ro0.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334226
    },
    {
      "exit_code": 1,
      "program": "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[] {\n  let i: number;\n  const unq = [];\n\n  for (i = 0; i < l.length; i += 1) {\n    if (unq.indexOf(l[i]) === -1) {\n      unq.push(l[i]);\n    }\n  }\n\n  return unq;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpqrjbnxau.js:17:12)\n    at Object.<anonymous> (/tmp/tmpqrjbnxau.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660334226
    }
  ]
}
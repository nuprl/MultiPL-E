{
  "name": "mbpp_292_find",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find quotient of two numbers (rounded down to the nearest integer).\n\t\n*/\nlong find(long n, long m) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_292_find.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = find;\n\n    assert(candidate(10L, 3L) == 3L);\n    assert(candidate(4L, 2L) == 2L);\n    assert(candidate(20L, 5L) == 4L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn n / m;\n}",
    "{\n\treturn cast(long)(n / m);\n}",
    "{\n\treturn n/m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn cast(long)(n/m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n/m;\n}",
    "{\n\treturn cast(long)floor(cast(double)n/m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn (n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n/m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n/m;\n}",
    "{\n\treturn n/m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn (n / m);\n}",
    "{\n\treturn (long)floor(n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn cast(long)(n / m);\n}",
    "{\n\treturn cast(long)(n/m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn (n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n/m;\n}",
    "{\n\treturn cast(long)(n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn (n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn cast(long)(n/m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn cast(long)(n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn cast(long)(n / m);\n}",
    "{\n\treturn cast(long)(n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n/m;\n}",
    "{\n\treturn n/m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn (n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn cast(long)(n / m);\n}",
    "{\n\treturn cast(long)(n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn cast(long)floor(n/m);\n}",
    "{\n\treturn cast(long)(n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn cast(long)(n / m);\n}",
    "{\n\treturn cast(long)floor(n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn cast(long)(n/m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn (long) floor(n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn cast(long)(n/m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n/m;\n}",
    "{\n\treturn cast(long)(n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn (long)floor(n/m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn cast(long)(n / m);\n}",
    "{\n\treturn (long)floor(n / m);\n}",
    "{\n\treturn (n / m);\n}",
    "{\n\treturn cast(long)(n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n/m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn (n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n/m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn (n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n/m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn cast(long)floor(cast(double)n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn (n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn cast(long)(n / m);\n}",
    "{\n\treturn cast(long)(n / m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn cast(long)(n/m);\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}",
    "{\n\treturn n / m;\n}"
  ]
}
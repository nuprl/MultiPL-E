{
  "name": "mbpp_285_text_match_two_three",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_285_text_match_two_three.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool found = false;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfound = true;\n\t\t\tcount = 0;\n\t\t}\n\t\telse if (text[i] == 'b' && found)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfound = false;\n\t\t}\n\t\tif (count == 2 || count == 3)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn text.length == 4;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_9si4tl.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpz_9si4tl.__unittest_L29_C1() [0x427b82]\n??:? void tmpz_9si4tl.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool match = false;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tfor(int j = i+1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif(text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(count == 2 || count == 3)\n\t\t\t{\n\t\t\t\tmatch = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn match;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw0x9me7e.d(46): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpw0x9me7e.__unittest_L40_C1() [0x427b46]\n??:? void tmpw0x9me7e.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb77]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43004c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e1]\n??:? runModuleUnitTests [0x42b94d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfor (int j = i; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif (text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (count == 2 || count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7sdqkym1.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmp7sdqkym1.__unittest_L32_C1() [0x427b3e]\n??:? void tmp7sdqkym1.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppxslinuw.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmppxslinuw.__unittest_L33_C1() [0x427b2e]\n??:? void tmppxslinuw.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfor (int j = i + 1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif (text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t\tif (count == 2)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcount = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_iaqhcmd.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp_iaqhcmd.__unittest_L33_C1() [0x427b2e]\n??:? void tmp_iaqhcmd.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\t\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\treturn b_count == 2 || b_count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbq9z41bd.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpbq9z41bd.__unittest_L27_C1() [0x427b36]\n??:? void tmpbq9z41bd.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a = 0;\n\tint b = 0;\n\tint c = 0;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfor(int i = a; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'b')\n\t\t{\n\t\t\tb = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfor(int i = b; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'b')\n\t\t{\n\t\t\tc = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif(a != 0 && b != 0 && c != 0)\n\t{\n\t\tif(b - a == 1 && c - b == 1)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse if(b - a == 1 && c - b == 2)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_unl4tp_.d(66): unittest failure\n----------------\n??:? _d_unittestp [0x427e6d]\n??:? void tmp_unl4tp_.__unittest_L60_C1() [0x427bd6]\n??:? void tmp_unl4tp_.__modtest() [0x427bec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa9a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]\n??:? runModuleUnitTests [0x42b9dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428330]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 4)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\treturn b_count == 2 || b_count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8v8ld7v1.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp8v8ld7v1.__unittest_L26_C1() [0x427b36]\n??:? void tmp8v8ld7v1.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool result = false;\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tif(text[i+1] == 'b' && text[i+2] == 'b')\n\t\t\t{\n\t\t\t\tresult = true;\n\t\t\t}\n\t\t\telse if(text[i+1] == 'b' && text[i+2] == 'b' && text[i+3] == 'b')\n\t\t\t{\n\t\t\t\tresult = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpl9gziopo.d(15): Range violation\n----------------\n??:? _d_arrayboundsp [0x427f16]\n??:? bool tmpl9gziopo.text_match_two_three(immutable(char)[]) [0x427a77]\n??:? void tmpl9gziopo.__unittest_L27_C1() [0x427bb9]\n??:? void tmpl9gziopo.__modtest() [0x427be4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa92]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc25]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa69]\n??:? runModuleUnitTests [0x42b9d5]\n??:? void rt.dmain2._d_run_main(int, char**, extern",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\t\n\tfor(int i = 1; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\tif(b_count == 2 || b_count == 3)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppi4q70ac.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmppi4q70ac.__unittest_L30_C1() [0x427b42]\n??:? void tmppi4q70ac.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\tif (text[0] != 'a') return false;\n\tif (text[1] != 'b') return false;\n\tif (text[2] != 'b') return false;\n\tif (text.length == 3) return true;\n\tif (text[3] != 'b') return false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tbool result = false;\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe9yqctsc.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpe9yqctsc.__unittest_L32_C1() [0x427b0e]\n??:? void tmpe9yqctsc.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tint i = 0;\n\t\n\twhile (i < text.length)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvr07exri.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpvr07exri.__unittest_L35_C1() [0x427b2e]\n??:? void tmpvr07exri.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/ab{2,3}/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "/tmp/tmpie_do6rp.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie_do6rp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/ab{2,3}/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "/tmp/tmpie_do6rp.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie_do6rp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/ab{2,3}/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "/tmp/tmpie_do6rp.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie_do6rp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[1] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text.length == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(text[3] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tint i = 0;\n\t\n\twhile (i < text.length)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvr07exri.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpvr07exri.__unittest_L35_C1() [0x427b2e]\n??:? void tmpvr07exri.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq6l0khgq.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpq6l0khgq.__unittest_L33_C1() [0x427b2e]\n??:? void tmpq6l0khgq.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) \n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[0] != 'a') \n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[1] != 'b') \n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[2] != 'b') \n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text.length == 3) \n\t{\n\t\treturn true;\n\t}\n\t\n\tif (text[3] != 'b') \n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkdjvkr6w.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpkdjvkr6w.__unittest_L41_C1() [0x427b7e]\n??:? void tmpkdjvkr6w.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq5a3xir4.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpq5a3xir4.__unittest_L32_C1() [0x427b2e]\n??:? void tmpq5a3xir4.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool found = false;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tif (text[i+1] == 'b')\n\t\t\t{\n\t\t\t\tif (text[i+2] == 'b')\n\t\t\t\t{\n\t\t\t\t\tif (text[i+3] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn found;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint i = 0;\n\tint count = 0;\n\tint count_b = 0;\n\twhile(i < text.length)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t\ti++;\n\t\t\twhile(text[i] == 'b')\n\t\t\t{\n\t\t\t\tcount_b++;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif(count_b == 2 || count_b == 3)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnzt19hea.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpnzt19hea.__unittest_L39_C1() [0x427b3e]\n??:? void tmpnzt19hea.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpwjl96dg_.d(11): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwjl96dg_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3) return false;\n\t\n\tif(text[0] != 'a') return false;\n\t\n\tint b_count = 0;\n\t\n\tfor(int i = 1; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'b') b_count++;\n\t\telse break;\n\t}\n\t\n\tif(b_count == 2 || b_count == 3) return true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9r69n4qz.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp9r69n4qz.__unittest_L25_C1() [0x427b3a]\n??:? void tmp9r69n4qz.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/a(bb|bbb)/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmplt6o8vz_.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplt6o8vz_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[1] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text.length == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(text[3] == 'b')\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(char c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\treturn a_count == 1 && (b_count == 2 || b_count == 3);\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1xmzyol7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp1xmzyol7.__unittest_L26_C1() [0x427b0e]\n??:? void tmp1xmzyol7.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_r1929d3.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp_r1929d3.__unittest_L31_C1() [0x427b2e]\n??:? void tmp_r1929d3.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[1] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text.length == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(text[3] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn b_count == 2 || b_count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxhfhtj8w.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpxhfhtj8w.__unittest_L26_C1() [0x427b42]\n??:? void tmpxhfhtj8w.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\tif (text[0] != 'a') return false;\n\tif (text[1] != 'b') return false;\n\tif (text[2] != 'b') return false;\n\tif (text.length == 3) return true;\n\tif (text[3] != 'b') return false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfor (int j = i; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif (text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count == 2 || count == 3)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0z2xsyb1.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmp0z2xsyb1.__unittest_L33_C1() [0x427b46]\n??:? void tmp0z2xsyb1.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb77]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43004c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e1]\n??:? runModuleUnitTests [0x42b94d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq6l0khgq.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpq6l0khgq.__unittest_L33_C1() [0x427b2e]\n??:? void tmpq6l0khgq.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool found = false;\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\tfound = true;\n\t\t}\n\t\tif(found && c == 'b')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count == 2 || count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_9xbrcuz.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp_9xbrcuz.__unittest_L24_C1() [0x427b12]\n??:? void tmp_9xbrcuz.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(char c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\treturn a_count == 1 && (b_count == 2 || b_count == 3);\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1xmzyol7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp1xmzyol7.__unittest_L26_C1() [0x427b0e]\n??:? void tmp1xmzyol7.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint i = 0;\n\twhile (i < text.length)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ti++;\n\t\t\twhile (i < text.length && text[i] == 'b')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (count == 2 || count == 3)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt3xgt26d.d(43): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpt3xgt26d.__unittest_L37_C1() [0x427b3e]\n??:? void tmpt3xgt26d.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tbool result = false;\n\t\n\tif(text.length >= 4)\n\t{\n\t\tif(text[0] == 'a')\n\t\t{\n\t\t\tif(text[1] == 'b')\n\t\t\t{\n\t\t\t\tif(text[2] == 'b')\n\t\t\t\t{\n\t\t\t\t\tif(text[3] == 'b' || text[3] == 'a')\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3) return false;\n\t\n\tif(text[0] == 'a')\n\t{\n\t\tif(text[1] == 'b' && text[2] == 'b') return true;\n\t\tif(text.length > 3 && text[1] == 'b' && text[2] == 'b' && text[3] == 'b') return true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint len = text.length;\n\tif(len < 3)\n\t\treturn false;\n\telse if(text[0] == 'a' && text[1] == 'b' && text[2] == 'b')\n\t\treturn true;\n\telse if(len > 3 && text[0] == 'a' && text[1] == 'b' && text[2] == 'b' && text[3] == 'b')\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmplacd3ayr.d(9): Error: cannot implicitly convert expression `text.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplacd3ayr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/ab{2,3}/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "/tmp/tmpie_do6rp.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie_do6rp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/ab{2,3}/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "/tmp/tmpie_do6rp.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie_do6rp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint count2 = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tcount2++;\n\t\t}\n\t}\n\tif (count == 1 && (count2 == 2 || count2 == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiizivtoo.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpiizivtoo.__unittest_L31_C1() [0x427b2e]\n??:? void tmpiizivtoo.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfor (int j = i + 1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif (text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count == 2 || count == 3)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpybzlljir.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpybzlljir.__unittest_L33_C1() [0x427b46]\n??:? void tmpybzlljir.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb77]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43004c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e1]\n??:? runModuleUnitTests [0x42b94d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/a(b{2,3})/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpx377dfvr.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx377dfvr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpkl_l2jek.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkl_l2jek.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn text.length == 4;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_9si4tl.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpz_9si4tl.__unittest_L29_C1() [0x427b82]\n??:? void tmpz_9si4tl.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\tif(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyg581vzk.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpyg581vzk.__unittest_L32_C1() [0x427b2e]\n??:? void tmpyg581vzk.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tint count = 0;\n\t\n\tfor(int i = 1; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'b')\n\t\t\tcount++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\tif(count == 2 || count == 3)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp99s0u23v.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp99s0u23v.__unittest_L30_C1() [0x427b3a]\n??:? void tmp99s0u23v.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && b_count >= 2 && b_count <= 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpae3ji18t.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpae3ji18t.__unittest_L33_C1() [0x427b2e]\n??:? void tmpae3ji18t.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/ab{2,3}/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "/tmp/tmpie_do6rp.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie_do6rp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxwndgn74.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpxwndgn74.__unittest_L32_C1() [0x427b2e]\n??:? void tmpxwndgn74.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tbool result = false;\n\tint i = 0;\n\twhile (i < text.length)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tif (text[i+1] == 'b' && text[i+2] == 'b')\n\t\t\t{\n\t\t\t\tresult = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (text[i+1] == 'b' && text[i+2] == 'b' && text[i+3] == 'b')\n\t\t\t{\n\t\t\t\tresult = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuvxftxya.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpuvxftxya.__unittest_L29_C1() [0x427b7e]\n??:? void tmpuvxftxya.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[1] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text.length == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(text[3] != 'b')\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw5yzoai4.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpw5yzoai4.__unittest_L41_C1() [0x427b7e]\n??:? void tmpw5yzoai4.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\tfor(int i = 1; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\tif(b_count == 2 || b_count == 3)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm9526vvg.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpm9526vvg.__unittest_L29_C1() [0x427b3a]\n??:? void tmpm9526vvg.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\tif (text[0] != 'a') return false;\n\tif (text[1] != 'b') return false;\n\tif (text[2] != 'b') return false;\n\tif (text.length == 3) return true;\n\tif (text[3] != 'b') return false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/a(b{2,3})/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpx377dfvr.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx377dfvr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tbool result = false;\n\t\n\tif (text.length > 3)\n\t{\n\t\tif (text[0] == 'a')\n\t\t{\n\t\t\tif (text[1] == 'b')\n\t\t\t{\n\t\t\t\tif (text[2] == 'b')\n\t\t\t\t{\n\t\t\t\t\tif (text[3] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = true;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_iaqhcmd.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp_iaqhcmd.__unittest_L33_C1() [0x427b2e]\n??:? void tmp_iaqhcmd.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[1] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text.length == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(text[3] != 'b')\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw5yzoai4.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpw5yzoai4.__unittest_L41_C1() [0x427b7e]\n??:? void tmpw5yzoai4.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint b_count = 0;\n\tbool a_found = false;\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_found = true;\n\t\t\tb_count = 0;\n\t\t}\n\t\telse if(c == 'b' && a_found)\n\t\t{\n\t\t\tb_count++;\n\t\t\tif(b_count == 3)\n\t\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ta_found = false;\n\t\t\tb_count = 0;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool result = false;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfor (int j = i + 1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif (text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count == 2 || count == 3)\n\t\t\t{\n\t\t\t\tresult = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpquolvtpz.d(46): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpquolvtpz.__unittest_L40_C1() [0x427b46]\n??:? void tmpquolvtpz.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb77]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43004c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e1]\n??:? runModuleUnitTests [0x42b94d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpkl_l2jek.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkl_l2jek.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\t\n\tif(text[1] != 'b')\n\t\treturn false;\n\t\t\n\tif(text[2] != 'b')\n\t\treturn false;\n\t\t\n\tif(text.length == 3)\n\t\treturn true;\n\t\t\n\tif(text[3] != 'b')\n\t\treturn true;\n\t\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr94rmdi7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpr94rmdi7.__unittest_L29_C1() [0x427b7e]\n??:? void tmpr94rmdi7.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool result = false;\n\t\n\tforeach(char c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\tcount = 0;\n\t\t\tforeach(char c2; text)\n\t\t\t{\n\t\t\t\tif(c2 == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t\tif(count == 2 || count == 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 4)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tif(text[1] != 'b')\n\t\treturn false;\n\t\n\tif(text[2] != 'b')\n\t\treturn false;\n\t\n\tif(text.length == 4)\n\t\treturn true;\n\t\n\tif(text[3] != 'b')\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(char c; text)\n\t{\n\t\tif (c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn3nzmnu5.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpn3nzmnu5.__unittest_L31_C1() [0x427b0e]\n??:? void tmpn3nzmnu5.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\t\n\tif (text[0] == 'a')\n\t{\n\t\tif (text[1] == 'b' && text[2] == 'b') return true;\n\t\tif (text.length > 3 && text[1] == 'b' && text[2] == 'b' && text[3] == 'b') return true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && b_count >= 2 && b_count <= 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpae3ji18t.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpae3ji18t.__unittest_L33_C1() [0x427b2e]\n??:? void tmpae3ji18t.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn (text.find(\"abb\") != -1 || text.find(\"abbb\") != -1);\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmp9izu70hi.d(9): Error: no property `find` for type `string`\n/tmp/tmp9izu70hi.d(9): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9izu70hi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool found = false;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfound = true;\n\t\t\tcount = 0;\n\t\t}\n\t\telse if (found && text[i] == 'b')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfound = false;\n\t\t\tcount = 0;\n\t\t}\n\t\tif (count == 2 || count == 3)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t\tif (count == 1)\n\t\t\t{\n\t\t\t\tfor (int j = i + 1; j < text.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (text[j] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tif (count == 3)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcount = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ta_count = 0;\n\t\t\tb_count = 0;\n\t\t}\n\t\t\n\t\tif (a_count == 1 && b_count == 2)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse if (a_count == 1 && b_count == 3)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\t\n\tfor(int i = 1; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\tif(b_count == 2 || b_count == 3)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm5t8wluv.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpm5t8wluv.__unittest_L30_C1() [0x427b3a]\n??:? void tmpm5t8wluv.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint count2 = 0;\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tcount = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i = count; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'b')\n\t\t{\n\t\t\tcount2++;\n\t\t}\n\t}\n\tif(count2 == 2 || count2 == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy_q7jzdg.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpy_q7jzdg.__unittest_L35_C1() [0x427b42]\n??:? void tmpy_q7jzdg.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint count2 = 0;\n\tbool result = false;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t\tif (text[i+1] == 'b')\n\t\t\t{\n\t\t\t\tcount2++;\n\t\t\t\tif (text[i+2] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount2++;\n\t\t\t\t\tif (text[i+3] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount2++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (count == count2)\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwbam00ku.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpwbam00ku.__unittest_L40_C1() [0x427b69]\n??:? void tmpwbam00ku.__modtest() [0x427ba8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa52]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa29]\n??:? runModuleUnitTests [0x42b995]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++) \n\t{\n\t\tif (text[i] == 'a') \n\t\t{\n\t\t\tcount++;\n\t\t\tif (count == 1) \n\t\t\t{\n\t\t\t\tif (text[i + 1] == 'b' && text[i + 2] == 'b') \n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if (text[i + 1] == 'b' && text[i + 2] == 'b' && text[i + 3] == 'b') \n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tfor (int i = 0; i < text.length(); i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "/tmp/tmpuy2xw_x3.d(13): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuy2xw_x3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfor (int j = i + 1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif (text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (count == 2 || count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4sawd5gr.d(42): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmp4sawd5gr.__unittest_L36_C1() [0x427b3e]\n??:? void tmp4sawd5gr.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\t\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\treturn b_count == 2 || b_count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbq9z41bd.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpbq9z41bd.__unittest_L27_C1() [0x427b36]\n??:? void tmpbq9z41bd.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptw04uv82.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmptw04uv82.__unittest_L33_C1() [0x427b0e]\n??:? void tmptw04uv82.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/ab{2,3}/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "/tmp/tmpie_do6rp.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie_do6rp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_iaqhcmd.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp_iaqhcmd.__unittest_L33_C1() [0x427b2e]\n??:? void tmp_iaqhcmd.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuvxftxya.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpuvxftxya.__unittest_L29_C1() [0x427b7e]\n??:? void tmpuvxftxya.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint count_b = 0;\n\tbool flag = false;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tcount_b++;\n\t\t}\n\t\tif (count == 1 && count_b == 2 || count_b == 3)\n\t\t{\n\t\t\tflag = true;\n\t\t}\n\t}\n\treturn flag;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 4)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 4)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/ab{2,3}/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "/tmp/tmpie_do6rp.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie_do6rp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint i = 0;\n\tint count = 0;\n\twhile (i < text.length)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tif (text[i+1] == 'b' && text[i+2] == 'b')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t\telse if (text[i+1] == 'b' && text[i+2] == 'b' && text[i+3] == 'b')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\ti += 3;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\tif (count > 0)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp9a1si89u.d(15): Range violation\n----------------\n??:? _d_arrayboundsp [0x427f46]\n??:? bool tmp9a1si89u.text_match_two_three(immutable(char)[]) [0x427a7a]\n??:? void tmp9a1si89u.__unittest_L37_C1() [0x427bed]\n??:? void tmp9a1si89u.__modtest() [0x427c18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc2f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aac2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc55]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430104]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa99]\n??:? runModuleUnitTests [0x42ba05]\n??:? void rt.dmain2._d_run_main(int, char**, extern",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[1] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text.length == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif (text[3] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3) return false;\n\t\n\tif(text[0] != 'a') return false;\n\t\n\tint b_count = 0;\n\t\n\tfor(int i = 1; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif(b_count == 2 || b_count == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbzsm7y35.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpbzsm7y35.__unittest_L34_C1() [0x427b3a]\n??:? void tmpbzsm7y35.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] == 'b')\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\tif (text[0] != 'a') return false;\n\tif (text[1] != 'b') return false;\n\tif (text[2] != 'b') return false;\n\tif (text.length == 3) return true;\n\tif (text[3] != 'b') return true;\n\treturn text.length == 4;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4s7z4kfv.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp4s7z4kfv.__unittest_L17_C1() [0x427b82]\n??:? void tmp4s7z4kfv.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_iaqhcmd.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp_iaqhcmd.__unittest_L33_C1() [0x427b2e]\n??:? void tmp_iaqhcmd.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tif(text[1] != 'b')\n\t\treturn false;\n\t\n\tif(text[2] != 'b')\n\t\treturn false;\n\t\n\tif(text.length == 3)\n\t\treturn true;\n\t\n\tif(text[3] != 'b')\n\t\treturn true;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\tfor(int i = 1; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\tif(b_count == 2 || b_count == 3)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm9526vvg.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpm9526vvg.__unittest_L29_C1() [0x427b3a]\n??:? void tmpm9526vvg.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq6l0khgq.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpq6l0khgq.__unittest_L33_C1() [0x427b2e]\n??:? void tmpq6l0khgq.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint i = 0;\n\tint count = 0;\n\t\n\tif (text.length > 0)\n\t{\n\t\tif (text[0] == 'a')\n\t\t{\n\t\t\tfor (i = 1; i < text.length; i++)\n\t\t\t{\n\t\t\t\tif (text[i] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (count == 2 || count == 3)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpugt1vbf0.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpugt1vbf0.__unittest_L33_C1() [0x427b2e]\n??:? void tmpugt1vbf0.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\t\n\tif (text[0] != 'a') return false;\n\t\n\tif (text[1] != 'b') return false;\n\t\n\tif (text[2] != 'b') return false;\n\t\n\tif (text.length == 3) return true;\n\t\n\tif (text[3] != 'b') return true;\n\t\n\treturn text.length == 4;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2qpomrce.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp2qpomrce.__unittest_L23_C1() [0x427b82]\n??:? void tmp2qpomrce.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmpok7ev4u7.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpok7ev4u7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint i = 0;\n\twhile (i < text.length)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t\tif (count == 1)\n\t\t\t{\n\t\t\t\tif (text[i + 1] == 'b' && text[i + 2] == 'b')\n\t\t\t\t{\n\t\t\t\t\tif (text[i + 3] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptw04uv82.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmptw04uv82.__unittest_L33_C1() [0x427b0e]\n??:? void tmptw04uv82.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\tif (b_count == 2 || b_count == 3)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsdn_bjqi.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpsdn_bjqi.__unittest_L29_C1() [0x427b3a]\n??:? void tmpsdn_bjqi.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint count2 = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tcount2++;\n\t\t}\n\t}\n\tif (count == 1 && (count2 == 2 || count2 == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz3z8lcgr.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpz3z8lcgr.__unittest_L31_C1() [0x427b2e]\n??:? void tmpz3z8lcgr.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpkl_l2jek.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkl_l2jek.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool result = false;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tfor(int j = i+1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif(text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(count == 2 || count == 3)\n\t\t\t{\n\t\t\t\tresult = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf8x7c90f.d(48): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpf8x7c90f.__unittest_L42_C1() [0x427b46]\n??:? void tmpf8x7c90f.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb77]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43004c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e1]\n??:? runModuleUnitTests [0x42b94d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[1] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text.length == 4)\n\t{\n\t\tif(text[3] != 'b')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_iaqhcmd.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp_iaqhcmd.__unittest_L33_C1() [0x427b2e]\n??:? void tmp_iaqhcmd.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool two_three = false;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t\tif (a_count == 1 && b_count == 2)\n\t\t{\n\t\t\ttwo_three = true;\n\t\t}\n\t\tif (a_count == 1 && b_count == 3)\n\t\t{\n\t\t\ttwo_three = true;\n\t\t}\n\t}\n\treturn two_three;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\treturn a_count == 1 && (b_count == 2 || b_count == 3);\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9gg1be9y.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp9gg1be9y.__unittest_L26_C1() [0x427b0e]\n??:? void tmp9gg1be9y.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "/tmp/tmphhqr4meg.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphhqr4meg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmpok7ev4u7.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpok7ev4u7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && b_count == 2)\n\t{\n\t\treturn true;\n\t}\n\telse if(a_count == 1 && b_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0s74g821.d(43): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp0s74g821.__unittest_L37_C1() [0x427b1a]\n??:? void tmp0s74g821.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\t//return (text.find(\"abb\") != -1 || text.find(\"abbb\") != -1);\n\treturn (text.find(\"abb\") != -1 || text.find(\"abbb\") != -1);\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "/tmp/tmp0ba7xb3a.d(10): Error: no property `find` for type `string`\n/tmp/tmp0ba7xb3a.d(10): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ba7xb3a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tif (text[i+1] == 'b')\n\t\t\t{\n\t\t\t\tif (text[i+2] == 'b')\n\t\t\t\t{\n\t\t\t\t\tif (text[i+3] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\tif (count > 0)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpbitpy667.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427ece]\n??:? bool tmpbitpy667.text_match_two_three(immutable(char)[]) [0x427a76]\n??:? void tmpbitpy667.__unittest_L37_C1() [0x427b75]\n??:? void tmpbitpy667.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa4a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbdd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb69]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa21]\n??:? runModuleUnitTests [0x42b98d]\n??:? void rt.dmain2._d_run_main(int, char**, extern",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") || match(text, \"a*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "/tmp/tmpexa7bk0v.d(9): Error: undefined identifier `match`\n/tmp/tmpexa7bk0v.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpexa7bk0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_iaqhcmd.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp_iaqhcmd.__unittest_L33_C1() [0x427b2e]\n??:? void tmp_iaqhcmd.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdco_mf88.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpdco_mf88.__unittest_L31_C1() [0x427b2e]\n??:? void tmpdco_mf88.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tint i = 0;\n\twhile (i < text.length)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t\ti++;\n\t}\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpunrhtgee.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpunrhtgee.__unittest_L30_C1() [0x427b2e]\n??:? void tmpunrhtgee.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfor (int j = i + 1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif (text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (count == 2 || count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwi6tr57a.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpwi6tr57a.__unittest_L32_C1() [0x427b3e]\n??:? void tmpwi6tr57a.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmpok7ev4u7.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpok7ev4u7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool result = false;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\tcount = 0;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\tif(count == 2 || count == 3)\n\t\t{\n\t\t\tresult = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuvxftxya.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpuvxftxya.__unittest_L29_C1() [0x427b7e]\n??:? void tmpuvxftxya.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tbool result = false;\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfor (int j = i + 1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif (text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (count == 2 || count == 3)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4x1vtt63.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmp4x1vtt63.__unittest_L34_C1() [0x427b3e]\n??:? void tmp4x1vtt63.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\t\n\t\tif(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2u9sy6da.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp2u9sy6da.__unittest_L32_C1() [0x427b2e]\n??:? void tmp2u9sy6da.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tif (text[i + 1] == 'b' && text[i + 2] == 'b')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse if (text[i + 1] == 'b' && text[i + 2] == 'b' && text[i + 3] == 'b')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\tif (count > 0)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmperyllrgq.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427f1e]\n??:? bool tmperyllrgq.text_match_two_three(immutable(char)[]) [0x427a77]\n??:? void tmperyllrgq.__unittest_L33_C1() [0x427bc1]\n??:? void tmperyllrgq.__modtest() [0x427bec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa9a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]\n??:? runModuleUnitTests [0x42b9dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq6l0khgq.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpq6l0khgq.__unittest_L33_C1() [0x427b2e]\n??:? void tmpq6l0khgq.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 4) return false;\n\tif (text[0] != 'a') return false;\n\tif (text[1] != 'b') return false;\n\tif (text[2] != 'b') return false;\n\tif (text.length == 4) return true;\n\tif (text[3] != 'b') return false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(char c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppv14t4_3.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmppv14t4_3.__unittest_L33_C1() [0x427b0e]\n??:? void tmppv14t4_3.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tif (text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tif (text[i + 1] == 'b')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tif (text[i + 2] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t\tif (text[i + 3] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (count == 2 || count == 3)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpa1s5kt9q.d(18): Range violation\n----------------\n??:? _d_arrayboundsp [0x427eee]\n??:? bool tmpa1s5kt9q.text_match_two_three(immutable(char)[]) [0x427a8a]\n??:? void tmpa1s5kt9q.__unittest_L38_C1() [0x427b91]\n??:? void tmpa1s5kt9q.__modtest() [0x427bbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbd7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbfd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa41]\n??:? runModuleUnitTests [0x42b9ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tint count = 0;\n\t\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t\tcount++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\treturn count == 2 || count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp06b3xuma.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp06b3xuma.__unittest_L27_C1() [0x427b36]\n??:? void tmp06b3xuma.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint i = 0;\n\twhile(i < text.length)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tif(text[i+1] == 'b')\n\t\t\t{\n\t\t\t\tif(text[i+2] == 'b')\n\t\t\t\t{\n\t\t\t\t\tif(text[i+3] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\tif(count > 0)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpid61yu54.d(15): Range violation\n----------------\n??:? _d_arrayboundsp [0x427ece]\n??:? bool tmpid61yu54.text_match_two_three(immutable(char)[]) [0x427a76]\n??:? void tmpid61yu54.__unittest_L41_C1() [0x427b75]\n??:? void tmpid61yu54.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa4a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbdd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb69]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa21]\n??:? runModuleUnitTests [0x42b98d]\n??:? void rt.dmain2._d_run_main(int, char**, extern",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tint i = 0;\n\twhile(i < text.length)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t\ti++;\n\t}\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfde3jc79.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpfde3jc79.__unittest_L30_C1() [0x427b2e]\n??:? void tmpfde3jc79.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpkl_l2jek.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkl_l2jek.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq5a3xir4.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpq5a3xir4.__unittest_L32_C1() [0x427b2e]\n??:? void tmpq5a3xir4.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn text.length == 4;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_9si4tl.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpz_9si4tl.__unittest_L29_C1() [0x427b82]\n??:? void tmpz_9si4tl.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] == 'b')\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpkl_l2jek.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkl_l2jek.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length(); i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmp_pwsxrzz.d(12): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pwsxrzz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tfor(int j = i+1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif(text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif(count == 2 || count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5lp5mddx.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmp5lp5mddx.__unittest_L38_C1() [0x427b3e]\n??:? void tmp5lp5mddx.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tif (text[i + 1] == 'b' && text[i + 2] == 'b')\n\t\t\t{\n\t\t\t\tif (text[i + 3] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (count > 0)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpkuzpjpgu.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427ece]\n??:? bool tmpkuzpjpgu.text_match_two_three(immutable(char)[]) [0x427a77]\n??:? void tmpkuzpjpgu.__unittest_L36_C1() [0x427b71]\n??:? void tmpkuzpjpgu.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa4a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbdd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb69]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa21]\n??:? runModuleUnitTests [0x42b98d]\n??:? void rt.dmain2._d_run_main(int, char**, extern",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool result = false;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tfor(int j = i+1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif(text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(count == 2 || count == 3)\n\t\t\t{\n\t\t\t\tresult = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7wj3uy6k.d(46): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmp7wj3uy6k.__unittest_L40_C1() [0x427b46]\n??:? void tmp7wj3uy6k.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb77]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43004c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e1]\n??:? runModuleUnitTests [0x42b94d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tif(text[1] != 'b')\n\t\treturn false;\n\t\n\tif(text[2] != 'b')\n\t\treturn false;\n\t\n\tif(text.length == 3)\n\t\treturn true;\n\t\n\tif(text[3] != 'b')\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe6pxm5yw.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpe6pxm5yw.__unittest_L29_C1() [0x427b7e]\n??:? void tmpe6pxm5yw.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t\tif (count == 1)\n\t\t\t{\n\t\t\t\tfor (int j = i + 1; j < text.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (text[j] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tif (count == 3)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[1] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text.length == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif (text[3] != 'b')\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu927xf99.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpu927xf99.__unittest_L41_C1() [0x427b7e]\n??:? void tmpu927xf99.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\t\n\tfor(int i = 1; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'b')\n\t\t\tb_count++;\n\t}\n\t\n\treturn b_count == 2 || b_count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0wgvs8lp.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp0wgvs8lp.__unittest_L25_C1() [0x427b36]\n??:? void tmp0wgvs8lp.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool found = false;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tfound = true;\n\t\t\tcount = 0;\n\t\t}\n\t\telse if(found && text[i] == 'b')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfound = false;\n\t\t\tcount = 0;\n\t\t}\n\t\t\n\t\tif(count == 2 || count == 3)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(char c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppv14t4_3.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmppv14t4_3.__unittest_L33_C1() [0x427b0e]\n??:? void tmppv14t4_3.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[1] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text.length == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(text[3] != 'b')\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw5yzoai4.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpw5yzoai4.__unittest_L41_C1() [0x427b7e]\n??:? void tmpw5yzoai4.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool found = false;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfound = true;\n\t\t}\n\t\telse if (found && text[i] == 'b')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfound = false;\n\t\t\tcount = 0;\n\t\t}\n\t\tif (count == 2 || count == 3)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\t\n\t\tif(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2u9sy6da.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp2u9sy6da.__unittest_L32_C1() [0x427b2e]\n??:? void tmp2u9sy6da.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 4)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tif(text[1] != 'b')\n\t\treturn false;\n\t\n\tif(text[2] != 'b')\n\t\treturn false;\n\t\n\tif(text.length == 4)\n\t\treturn true;\n\t\n\tif(text[3] != 'b')\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\tif (text.length == 4)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplyilrlue.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmplyilrlue.__unittest_L32_C1() [0x427b8e]\n??:? void tmplyilrlue.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa52]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa29]\n??:? runModuleUnitTests [0x42b995]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\t\n\tif (text[0] != 'a') return false;\n\t\n\tint b_count = 0;\n\t\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b') b_count++;\n\t\telse break;\n\t}\n\t\n\tif (b_count == 2 || b_count == 3) return true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdg78n6r7.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpdg78n6r7.__unittest_L25_C1() [0x427b3a]\n??:? void tmpdg78n6r7.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuvxftxya.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpuvxftxya.__unittest_L29_C1() [0x427b7e]\n??:? void tmpuvxftxya.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a = 0;\n\tint b = 0;\n\tint c = 0;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta++;\n\t\t}\n\t\tif(text[i] == 'b')\n\t\t{\n\t\t\tb++;\n\t\t}\n\t\tif(text[i] == 'c')\n\t\t{\n\t\t\tc++;\n\t\t}\n\t}\n\t\n\tif(a == 1 && (b == 2 || b == 3) && c == 0)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp773k44hu.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmp773k44hu.__unittest_L38_C1() [0x427b6a]\n??:? void tmp773k44hu.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43006c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa01]\n??:? runModuleUnitTests [0x42b96d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(b{2,3})\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpobtwxy_9.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpobtwxy_9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint count2 = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tcount2++;\n\t\t}\n\t}\n\t\n\tif (count == 1 && (count2 == 2 || count2 == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp39417ek_.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp39417ek_.__unittest_L33_C1() [0x427b2e]\n??:? void tmp39417ek_.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\treturn b_count == 2 || b_count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdpzrg_0n.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpdpzrg_0n.__unittest_L26_C1() [0x427b36]\n??:? void tmpdpzrg_0n.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpkl_l2jek.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkl_l2jek.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint count2 = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tcount2++;\n\t\t}\n\t}\n\t\n\tif (count == 1 && (count2 == 2 || count2 == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpau4z468h.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpau4z468h.__unittest_L33_C1() [0x427b2e]\n??:? void tmpau4z468h.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\tif (text[0] != 'a') return false;\n\tif (text[1] != 'b') return false;\n\tif (text[2] != 'b') return false;\n\tif (text.length == 3) return true;\n\tif (text[3] != 'b') return true;\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprnnxauwy.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmprnnxauwy.__unittest_L17_C1() [0x427b7e]\n??:? void tmprnnxauwy.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint a_count = 0;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\tif(text[i] == 'b')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\t\n\tif(count == 2 || count == 3 && a_count == 1)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoeaarezc.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpoeaarezc.__unittest_L33_C1() [0x427b2e]\n??:? void tmpoeaarezc.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\tif (text[0] != 'a')\n\t\treturn false;\n\tif (text[1] != 'b')\n\t\treturn false;\n\tif (text[2] != 'b')\n\t\treturn false;\n\tif (text.length == 3)\n\t\treturn true;\n\tif (text[3] != 'b')\n\t\treturn true;\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy0lwwqne.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpy0lwwqne.__unittest_L23_C1() [0x427b7e]\n??:? void tmpy0lwwqne.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfor (int j = i + 1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif (text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (count == 2 || count == 3)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw3lnt3gs.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpw3lnt3gs.__unittest_L29_C1() [0x427b3e]\n??:? void tmpw3lnt3gs.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn text.length == 4;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_9si4tl.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpz_9si4tl.__unittest_L29_C1() [0x427b82]\n??:? void tmpz_9si4tl.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount = 0;\n\t\t\tfor (int j = i + 1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif (text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t\tif (count == 2 || count == 3)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpkl_l2jek.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkl_l2jek.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpkl_l2jek.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkl_l2jek.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tforeach(char c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\tif(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0kx24x8e.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp0kx24x8e.__unittest_L32_C1() [0x427b0e]\n??:? void tmp0kx24x8e.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool result = false;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tfor(int j = i + 1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif(text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(count == 2 || count == 3)\n\t\t\t{\n\t\t\t\tresult = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr68701v_.d(46): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpr68701v_.__unittest_L40_C1() [0x427b46]\n??:? void tmpr68701v_.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb77]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43004c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e1]\n??:? runModuleUnitTests [0x42b94d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tint count = 0;\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t\tcount++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\treturn count == 2 || count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp50gcqubo.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp50gcqubo.__unittest_L26_C1() [0x427b36]\n??:? void tmp50gcqubo.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[1] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text.length == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(text[3] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\t// Write your code here\n\tint count = 0;\n\tint count2 = 0;\n\tint count3 = 0;\n\tfor (int i = 0; i < text.length(); i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tcount2++;\n\t\t}\n\t}\n\tif (count == 1)\n\t{\n\t\tif (count2 == 2 || count2 == 3)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "/tmp/tmpe42i_o5z.d(13): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe42i_o5z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp51f2h36p.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp51f2h36p.__unittest_L32_C1() [0x427b0e]\n??:? void tmp51f2h36p.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tint i = 0;\n\t\n\twhile (i < text.length)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvr07exri.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpvr07exri.__unittest_L35_C1() [0x427b2e]\n??:? void tmpvr07exri.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t\tif(a_count == 1)\n\t\t\t{\n\t\t\t\tif(text[i+1] == 'b')\n\t\t\t\t{\n\t\t\t\t\tb_count++;\n\t\t\t\t\tif(text[i+2] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\tb_count++;\n\t\t\t\t\t\tif(text[i+3] == 'b')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tb_count++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiyutxh0x.d(50): unittest failure\n----------------\n??:? _d_unittestp [0x427e3d]\n??:? void tmpiyutxh0x.__unittest_L44_C1() [0x427baa]\n??:? void tmpiyutxh0x.__modtest() [0x427bc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbd7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbfd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa41]\n??:? runModuleUnitTests [0x42b9ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428300]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tint count = 0;\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t\tcount++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\tif (count == 2 || count == 3)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvaqtrw7f.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpvaqtrw7f.__unittest_L29_C1() [0x427b3a]\n??:? void tmpvaqtrw7f.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptw04uv82.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmptw04uv82.__unittest_L33_C1() [0x427b0e]\n??:? void tmptw04uv82.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq5a3xir4.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpq5a3xir4.__unittest_L32_C1() [0x427b2e]\n??:? void tmpq5a3xir4.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\tif (text.length == 4)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplyilrlue.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmplyilrlue.__unittest_L32_C1() [0x427b8e]\n??:? void tmplyilrlue.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa52]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa29]\n??:? runModuleUnitTests [0x42b995]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length(); i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "/tmp/tmpstz7kzqj.d(12): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpstz7kzqj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\t\n\tif (text[0] != 'a') return false;\n\t\n\tif (text[1] != 'b') return false;\n\t\n\tif (text[2] != 'b') return false;\n\t\n\tif (text.length == 3) return true;\n\t\n\tif (text[3] != 'b') return true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptg7vkj_a.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmptg7vkj_a.__unittest_L23_C1() [0x427b7e]\n??:? void tmptg7vkj_a.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuvxftxya.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpuvxftxya.__unittest_L29_C1() [0x427b7e]\n??:? void tmpuvxftxya.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp45f3doa6.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp45f3doa6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpkl_l2jek.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkl_l2jek.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn text.length == 4;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_9si4tl.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpz_9si4tl.__unittest_L29_C1() [0x427b82]\n??:? void tmpz_9si4tl.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\t\n\tif (text[0] != 'a') return false;\n\t\n\tint b_count = 0;\n\t\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn b_count == 2 || b_count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6msg2fna.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp6msg2fna.__unittest_L29_C1() [0x427b36]\n??:? void tmp6msg2fna.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_iaqhcmd.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp_iaqhcmd.__unittest_L33_C1() [0x427b2e]\n??:? void tmp_iaqhcmd.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint count2 = 0;\n\tbool result = false;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tcount2++;\n\t\t}\n\t}\n\t\n\tif (count == 1 && (count2 == 2 || count2 == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbc5e2y8q.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpbc5e2y8q.__unittest_L32_C1() [0x427b2e]\n??:? void tmpbc5e2y8q.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmpok7ev4u7.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpok7ev4u7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tif (text[i + 1] == 'b')\n\t\t\t{\n\t\t\t\tif (text[i + 2] == 'b')\n\t\t\t\t{\n\t\t\t\t\tif (text[i + 3] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\tif (count > 0)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpe__wxifx.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427ece]\n??:? bool tmpe__wxifx.text_match_two_three(immutable(char)[]) [0x427a76]\n??:? void tmpe__wxifx.__unittest_L37_C1() [0x427b75]\n??:? void tmpe__wxifx.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa4a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbdd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb69]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa21]\n??:? runModuleUnitTests [0x42b98d]\n??:? void rt.dmain2._d_run_main(int, char**, extern",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && b_count == 2 || b_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyhu5jkv7.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpyhu5jkv7.__unittest_L33_C1() [0x427b2e]\n??:? void tmpyhu5jkv7.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint i = 0;\n\tint count = 0;\n\t\n\twhile (i < text.length)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ti++;\n\t\t\twhile (text[i] == 'b')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (count == 2 || count == 3)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzg705xsz.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpzg705xsz.__unittest_L38_C1() [0x427b36]\n??:? void tmpzg705xsz.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\tif (text[0] != 'a') return false;\n\tif (text[1] != 'b') return false;\n\tif (text[2] != 'b') return false;\n\tif (text.length == 3) return true;\n\tif (text[3] != 'b') return false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_iaqhcmd.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp_iaqhcmd.__unittest_L33_C1() [0x427b2e]\n??:? void tmp_iaqhcmd.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tint count = 0;\n\t\n\tfor(int i = 1; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'b')\n\t\t\tcount++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\treturn count == 2 || count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprgpzukb1.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmprgpzukb1.__unittest_L27_C1() [0x427b36]\n??:? void tmprgpzukb1.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
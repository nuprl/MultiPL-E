{
  "name": "mbpp_61_count_Substrings",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_61_count_Substrings.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring temp = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(k; 0 .. temp.length)\n\t\t\t{\n\t\t\t\tsum += temp[k] - '0';\n\t\t\t}\n\t\t\tif(sum == temp.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyff7b_y9.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e2d]\n??:? void tmpyff7b_y9.__unittest_L29_C1() [0x427b46]\n??:? void tmpyff7b_y9.__modtest() [0x427bb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbc7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa5a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43009c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa31]\n??:? runModuleUnitTests [0x42b99d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length) \n\t{\n\t\tforeach(j; i .. s.length) \n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(k; 0 .. sub.length) \n\t\t\t{\n\t\t\t\tsum += sub[k] - '0';\n\t\t\t}\n\t\t\tif(sum == sub.length) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppyldzj0q.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e2d]\n??:? void tmppyldzj0q.__unittest_L29_C1() [0x427b46]\n??:? void tmppyldzj0q.__modtest() [0x427bb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbc7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa5a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43009c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa31]\n??:? runModuleUnitTests [0x42b99d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tlong sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjlyynfnr.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpjlyynfnr.__unittest_L28_C1() [0x427b1a]\n??:? void tmpjlyynfnr.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa32]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbc5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430074]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb51]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa09]\n??:? runModuleUnitTests [0x42b975]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i, immutable c; s)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tforeach(immutable j; i .. s.length)\n\t\t\t{\n\t\t\t\timmutable sum = s[i .. j].sum!q{a.isDigit ? a - '0' : 0};\n\t\t\t\tif(sum == j - i)\n\t\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpxo13xyo_.d(13): Error: no property `isDigit` for type `immutable(char)`\n/tmp/tmpxo13xyo_.d(17): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxo13xyo_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring temp = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(k; 0 .. temp.length)\n\t\t\t{\n\t\t\t\tsum += temp[k] - '0';\n\t\t\t}\n\t\t\tif(sum == temp.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyff7b_y9.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e2d]\n??:? void tmpyff7b_y9.__unittest_L29_C1() [0x427b46]\n??:? void tmpyff7b_y9.__modtest() [0x427bb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbc7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa5a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43009c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa31]\n??:? runModuleUnitTests [0x42b99d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tif(s[i .. j].sumOfDigits() == s[i .. j].length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpiil17g81.d(15): Error: no property `sumOfDigits` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiil17g81.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong result = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tint sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i + 1)\n\t\t\t{\n\t\t\t\tresult++;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp17u8pkpt.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmp17u8pkpt.__unittest_L28_C1() [0x427b16]\n??:? void tmp17u8pkpt.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43006c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa01]\n??:? runModuleUnitTests [0x42b96d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tif(sum(map!(a => a - '0', s[i .. j])) == j - i)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmp2o_9ckfx.d(15): Error: undefined identifier `sum`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2o_9ckfx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c - '0';\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv_z3q95n.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpv_z3q95n.__unittest_L29_C1() [0x427b3e]\n??:? void tmpv_z3q95n.__modtest() [0x427ba8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa52]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa29]\n??:? runModuleUnitTests [0x42b995]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring temp = s[i .. j];\n\t\t\tif(temp.length == temp.sum!(\"a - '0'\"))\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmp8kp45k1k.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8kp45k1k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tauto sum = 0;\n\t\t\tforeach(k; i .. j + 1)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!int - '0'.to!int;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx4_1gmew.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tlong len = s.length;\n\tfor (long i = 0; i < len; i++) \n\t{\n\t\tfor (long j = i + 1; j <= len; j++) \n\t\t{\n\t\t\tstring sub = s[i..j];\n\t\t\tlong sum = 0;\n\t\t\tforeach (c; sub) \n\t\t\t{\n\t\t\t\tsum += c - '0';\n\t\t\t}\n\t\t\tif (sum == sub.length) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tauto sum = 0;\n\t\t\tforeach(immutable k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp25oq0d_w.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmp25oq0d_w.__unittest_L28_C1() [0x427b22]\n??:? void tmp25oq0d_w.__modtest() [0x427b8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbcd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb59]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa11]\n??:? runModuleUnitTests [0x42b97d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!int - '0'.to!int;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx4_1gmew.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tif(sum(s[i .. j].map!(a => a.to!long - '0'.to!long)) == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpugdpevlz.d(15): Error: undefined identifier `sum`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpugdpevlz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{ \n    long n = s.length; \n    long count = 0; \n    for (long i = 0; i < n; i++) \n    { \n        long sum = 0; \n        for (long j = i; j < n; j++) \n        { \n            sum += s[j] - '0'; \n            if (sum == (j - i + 1)) \n                count++; \n        } \n    } \n    return count; \n} \nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\timmutable sub = s[i .. j];\n\t\t\timmutable sum = 0;\n\t\t\tforeach(immutable c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!int - '0'.to!int;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpnohv48jy.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpnohv48jy.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnohv48jy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tif(s[i .. j].sum() == (j - i + 1))\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpumlc7i8u.d(15): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpumlc7i8u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tfor (size_t i = 0; i < s.length; i++)\n\t{\n\t\tlong sum = 0;\n\t\tfor (size_t j = i; j < s.length; j++)\n\t\t{\n\t\t\tsum += s[j] - '0';\n\t\t\tif (sum == (j - i + 1))\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sum(sub.map!(a => a.to!long - '0'.to!long)))\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmpy_kupexo.d(16): Error: undefined identifier `sum`, did you mean variable `sub`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy_kupexo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tfor (int i = 0; i < s.length; i++) \n\t{\n\t\tint sum = 0;\n\t\tfor (int j = i; j < s.length; j++) \n\t\t{\n\t\t\tsum += s[j] - '0';\n\t\t\tif (sum == j - i + 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!(\"a - '0'\")())\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmp2p8m6r2s.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2p8m6r2s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tlong n = s.length;\n\tforeach(i; 0 .. n)\n\t{\n\t\tforeach(j; i .. n)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c - '0';\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxuoqy46d.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427e3d]\n??:? void tmpxuoqy46d.__unittest_L30_C1() [0x427b52]\n??:? void tmpxuoqy46d.__modtest() [0x427bbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbd7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbfd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa41]\n??:? runModuleUnitTests [0x42b9ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428300]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tint sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8koqttxa.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmp8koqttxa.__unittest_L28_C1() [0x427b16]\n??:? void tmp8koqttxa.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43006c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa01]\n??:? runModuleUnitTests [0x42b96d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tauto sum = 0;\n\t\t\tforeach(immutable k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp25oq0d_w.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmp25oq0d_w.__unittest_L28_C1() [0x427b22]\n??:? void tmp25oq0d_w.__modtest() [0x427b8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbcd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb59]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa11]\n??:? runModuleUnitTests [0x42b97d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{ \n    long n = s.length; \n    long result = 0; \n    for (long i = 0; i < n; i++) \n    { \n        long sum = 0; \n        for (long j = i; j < n; j++) \n        { \n            sum += s[j] - '0'; \n            if (sum == (j - i + 1)) \n                result++; \n        } \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tint n = s.length;\n\tint count = 0;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tint sum = 0;\n\t\tfor (int j = i; j < n; j++) \n\t\t{\n\t\t\tsum += s[j] - '0';\n\t\t\tif (sum == (j - i + 1))\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmp69wevy92.d(10): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp69wevy92.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{ \n    long n = s.length; \n    long result = 0; \n    for (long i = 0; i < n; i++) \n    { \n        long sum = 0; \n        for (long j = i; j < n; j++) \n        { \n            sum += s[j] - '0'; \n            if (sum == (j - i + 1)) \n                result++; \n        } \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(immutable c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmplq4cpt6w.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmplq4cpt6w.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplq4cpt6w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!q{to!int(a)}())\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmpvpbst867.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvpbst867.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmp3s8sjmqy.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s8sjmqy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sum(sub.map!(a => a.to!long - '0'.to!long)))\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmplgcrhk3s.d(16): Error: undefined identifier `sum`, did you mean variable `sub`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgcrhk3s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmposgfdguh.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmposgfdguh.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmposgfdguh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tlong sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjlyynfnr.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpjlyynfnr.__unittest_L28_C1() [0x427b1a]\n??:? void tmpjlyynfnr.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa32]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbc5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430074]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb51]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa09]\n??:? runModuleUnitTests [0x42b975]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tif(sum(map!(to!int)(s[i .. j])) == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmpnyzl9p5p.d(15): Error: undefined identifier `sum`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnyzl9p5p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\timmutable sum = 0;\n\t\t\tforeach(immutable k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == (j - i))\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmprlwhd0ws.d(18): Error: cannot modify `immutable` expression `0`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprlwhd0ws.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i, j; iota(s.length))\n\t{\n\t\tlong sum = 0;\n\t\tforeach(k; iota(j - i + 1))\n\t\t{\n\t\t\tsum += s[i + k] - '0';\n\t\t}\n\t\tif(sum == j - i + 1)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmpx8_19x2c.d(11): Error: undefined identifier `iota`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx8_19x2c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tint len = s.length;\n\tfor (int i = 0; i < len; i++) \n\t{\n\t\tint sum = 0;\n\t\tfor (int j = i; j < len; j++) \n\t\t{\n\t\t\tsum += s[j] - '0';\n\t\t\tif (sum == (j - i + 1)) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmpfj9qlnw1.d(11): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfj9qlnw1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tfor (int i = 0; i < s.length; i++) \n\t{\n\t\tfor (int j = i + 1; j <= s.length; j++) \n\t\t{\n\t\t\tstring sub = s[i..j];\n\t\t\tint sum = 0;\n\t\t\tfor (int k = 0; k < sub.length; k++) \n\t\t\t{\n\t\t\t\tsum += sub[k] - '0';\n\t\t\t}\n\t\t\tif (sum == sub.length) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tint sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8koqttxa.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmp8koqttxa.__unittest_L28_C1() [0x427b16]\n??:? void tmp8koqttxa.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43006c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa01]\n??:? runModuleUnitTests [0x42b96d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i, immutable c; s)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tlong sum = 0;\n\t\t\tforeach(immutable j; i .. s.length)\n\t\t\t{\n\t\t\t\tsum += s[j].to!long;\n\t\t\t\tif(sum == j - i + 1)\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmpffovilgh.d(13): Error: no property `isDigit` for type `immutable(char)`\n/tmp/tmpffovilgh.d(18): Error: no property `to` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpffovilgh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!int - '0'.to!int;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx4_1gmew.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c - '0';\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7pclai5i.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp7pclai5i.__unittest_L29_C1() [0x427b3a]\n??:? void tmp7pclai5i.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa52]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa29]\n??:? runModuleUnitTests [0x42b995]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(immutable c; sub)\n\t\t\t{\n\t\t\t\tsum += c.isDigit ? c.to!long - '0'.to!long : 0;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmpi1m0v06o.d(19): Error: no property `isDigit` for type `immutable(char)`\n/tmp/tmpi1m0v06o.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpi1m0v06o.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi1m0v06o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tif(s[i..j].sum == j-i+1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmp5m_6yrkt.d(15): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5m_6yrkt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sum(sub.map!(a => a.to!long - '0'.to!long)))\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmpy2my_7lq.d(16): Error: undefined identifier `sum`, did you mean variable `sub`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy2my_7lq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tif(s[i .. j].sum == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmpr4tamwxw.d(15): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr4tamwxw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!int - '0'.to!int;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx4_1gmew.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sum(sub.map!(a => a.to!long - '0'.to!long)))\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmpy2my_7lq.d(16): Error: undefined identifier `sum`, did you mean variable `sub`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy2my_7lq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tlong n = s.length;\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tforeach(j; i .. n)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpxioc0tv7.d(21): Error: no property `to` for type `immutable(char)`\n/tmp/tmpxioc0tv7.d(21): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxioc0tv7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tif(j - i == sum(s[i .. j].map!(a => a.to!long - '0'.to!long)))\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpd80q5snw.d(15): Error: undefined identifier `sum`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd80q5snw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tint sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8koqttxa.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmp8koqttxa.__unittest_L28_C1() [0x427b16]\n??:? void tmp8koqttxa.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43006c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa01]\n??:? runModuleUnitTests [0x42b96d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp58313z5a.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp58313z5a.__unittest_L29_C1() [0x427b65]\n??:? void tmp58313z5a.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa52]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa29]\n??:? runModuleUnitTests [0x42b995]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tint sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8koqttxa.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmp8koqttxa.__unittest_L28_C1() [0x427b16]\n??:? void tmp8koqttxa.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43006c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa01]\n??:? runModuleUnitTests [0x42b96d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!(a => a - '0'))\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpm4_c4ups.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm4_c4ups.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tfor (int i = 0; i < s.length; i++)\n\t{\n\t\tfor (int j = i + 1; j <= s.length; j++)\n\t\t{\n\t\t\tstring sub = s[i..j];\n\t\t\tint sum = 0;\n\t\t\tforeach (char c; sub)\n\t\t\t{\n\t\t\t\tsum += c - '0';\n\t\t\t}\n\t\t\tif (sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tlong sum = 0;\n\t\t\tforeach(immutable k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcykob0sf.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmpcykob0sf.__unittest_L28_C1() [0x427b22]\n??:? void tmpcykob0sf.__modtest() [0x427b8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbcd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb59]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa11]\n??:? runModuleUnitTests [0x42b97d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope void delegate()) [0x428257]\n??:? _d_run_main [0x4281c2]\n??:? main [0x427b9f]\n??:? __libc_start_main [0x5feb6554]\n1/1 unittests FAILED\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring temp = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(immutable k; 0 .. temp.length)\n\t\t\t{\n\t\t\t\tsum += temp[k] - '0';\n\t\t\t}\n\t\t\tif(sum == temp.length)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppb0f2n5k.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmppb0f2n5k.__unittest_L27_C1() [0x427b66]\n??:? void tmppb0f2n5k.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbe7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa7a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa51]\n??:? runModuleUnitTests [0x42b9bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428310]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length) \n\t{\n\t\tforeach(j; i .. s.length) \n\t\t{\n\t\t\tif(sum(s[i .. j].map!(a => a.to!long - '0'.to!long)) == j - i + 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp4mvbwe1u.d(15): Error: undefined identifier `sum`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4mvbwe1u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{ \n\tlong count = 0; \n\tlong n = s.length; \n\tfor (long i = 0; i < n; i++) \n\t{ \n\t\tlong sum = 0; \n\t\tfor (long j = i; j < n; j++) \n\t\t{ \n\t\t\tsum += s[j] - '0'; \n\t\t\tif (sum == (j - i + 1)) \n\t\t\t\tcount++; \n\t\t} \n\t} \n\treturn count; \n} \nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmposgfdguh.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmposgfdguh.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmposgfdguh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tint sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8koqttxa.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmp8koqttxa.__unittest_L28_C1() [0x427b16]\n??:? void tmp8koqttxa.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43006c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa01]\n??:? runModuleUnitTests [0x42b96d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring substr = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(c; substr)\n\t\t\t{\n\t\t\t\tsum += c.to!int - '0'.to!int;\n\t\t\t}\n\t\t\tif(sum == substr.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpbbfs0wzz.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpbbfs0wzz.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbbfs0wzz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tauto sub = s[i .. j];\n\t\t\tif(sub.length == sum(sub.map!(a => a.to!long - '0'.to!long)))\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp7u6zoyl3.d(16): Error: undefined identifier `sum`, did you mean variable `sub`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7u6zoyl3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmposgfdguh.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmposgfdguh.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmposgfdguh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c - '0';\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv_z3q95n.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpv_z3q95n.__unittest_L29_C1() [0x427b3e]\n??:? void tmpv_z3q95n.__modtest() [0x427ba8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa52]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa29]\n??:? runModuleUnitTests [0x42b995]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(immutable c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!int - '0'.to!int;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpmjze1ipt.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpmjze1ipt.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmjze1ipt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{ \n\tlong count = 0; \n\tint n = s.length(); \n\tfor (int i = 0; i < n; i++) \n\t{ \n\t\tint sum = 0; \n\t\tfor (int j = i; j < n; j++) \n\t\t{ \n\t\t\tsum += s[j] - '0'; \n\t\t\tif (sum == (j - i + 1)) \n\t\t\t\tcount++; \n\t\t} \n\t} \n\treturn count; \n} \nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp5_xpl02c.d(11): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5_xpl02c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring substr = s[i .. j];\n\t\t\tif(substr.length == substr.sum!int)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp0t3or56k.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0t3or56k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(immutable c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmplq4cpt6w.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmplq4cpt6w.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplq4cpt6w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tint n = s.length;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i + 1; j <= n; j++) \n\t\t{\n\t\t\tstring sub_str = s.substr(i, j - i);\n\t\t\tint sum = 0;\n\t\t\tfor (int k = 0; k < sub_str.length; k++) \n\t\t\t{\n\t\t\t\tsum += sub_str[k] - '0';\n\t\t\t}\n\t\t\tif (sum == sub_str.length) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp2ctofcgg.d(11): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\n/tmp/tmp2ctofcgg.d(16): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2ctofcgg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sum(sub.map!(a => a.to!int - '0'.to!int)))\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp1ejjt801.d(16): Error: undefined identifier `sum`, did you mean variable `sub`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1ejjt801.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tint n = s.length;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tint sum = 0;\n\t\tfor (int j = i; j < n; j++) \n\t\t{\n\t\t\tsum += s[j] - '0';\n\t\t\tif (sum == (j - i + 1)) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp051allfs.d(11): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp051allfs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tif(s[i..j].sum() == j - i)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpaq07zlng.d(15): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaq07zlng.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n    long count = 0;\n    for (int i = 0; i < s.length; i++) \n    {\n        for (int j = i + 1; j <= s.length; j++) \n        {\n            string sub = s[i..j];\n            int sum = 0;\n            foreach (c; sub) \n            {\n                sum += c - '0';\n            }\n            if (sum == sub.length) \n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tlong len = s.length;\n\tlong i = 0;\n\twhile (i < len) \n\t{\n\t\tlong j = i;\n\t\tlong sum = 0;\n\t\twhile (j < len) \n\t\t{\n\t\t\tsum += s[j] - '0';\n\t\t\tif (sum == (j - i + 1)) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!uint)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp7yj_17d2.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7yj_17d2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tlong sum = 0;\n\t\t\tforeach(immutable k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcykob0sf.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmpcykob0sf.__unittest_L28_C1() [0x427b22]\n??:? void tmpcykob0sf.__modtest() [0x427b8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbcd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb59]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa11]\n??:? runModuleUnitTests [0x42b97d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope void delegate()) [0x428257]\n??:? _d_run_main [0x4281c2]\n??:? main [0x427b9f]\n??:? __libc_start_main [0x5feb6554]\n1/1 unittests FAILED\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmposgfdguh.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmposgfdguh.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmposgfdguh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c - '0';\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7pclai5i.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp7pclai5i.__unittest_L29_C1() [0x427b3a]\n??:? void tmp7pclai5i.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa52]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa29]\n??:? runModuleUnitTests [0x42b995]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tint sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8koqttxa.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmp8koqttxa.__unittest_L28_C1() [0x427b16]\n??:? void tmp8koqttxa.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43006c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa01]\n??:? runModuleUnitTests [0x42b96d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable start; 0 .. s.length)\n\t{\n\t\tforeach(immutable end; start .. s.length)\n\t\t{\n\t\t\tif(s[start .. end].sum() == (end - start))\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmprge05zkd.d(15): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprge05zkd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\timmutable sum = 0;\n\t\t\tforeach(immutable k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmppuihekhr.d(18): Error: cannot modify `immutable` expression `0`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppuihekhr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tfor (long i = 0; i < s.length; i++) \n\t{\n\t\tlong sum = 0;\n\t\tfor (long j = i; j < s.length; j++) \n\t\t{\n\t\t\tsum += s[j] - '0';\n\t\t\tif (sum == (j - i + 1)) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpc4ozmwpb.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc4ozmwpb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sum(sub.map!(a => a.to!long - '0'.to!long)))\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmplgcrhk3s.d(16): Error: undefined identifier `sum`, did you mean variable `sub`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgcrhk3s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tauto sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7ran0scp.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmp7ran0scp.__unittest_L26_C1() [0x427b16]\n??:? void tmp7ran0scp.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43006c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa01]\n??:? runModuleUnitTests [0x42b96d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tif(sum(s[i .. j].map!(a => a.to!long - '0'.to!long)) == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp2n46nzvt.d(15): Error: undefined identifier `sum`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2n46nzvt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmposgfdguh.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmposgfdguh.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmposgfdguh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tauto sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!(\"a - '0'\"))\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpgtjjw_ne.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgtjjw_ne.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i;0..s.length)\n\t{\n\t\tforeach(j;i..s.length)\n\t\t{\n\t\t\tlong sum = 0;\n\t\t\tforeach(k;i..j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == (j - i + 1))\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkb5xygyi.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpkb5xygyi.__unittest_L28_C1() [0x427b1a]\n??:? void tmpkb5xygyi.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa32]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbc5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430074]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb51]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa09]\n??:? runModuleUnitTests [0x42b975]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmp3s8sjmqy.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s8sjmqy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sum(sub.map!(a => a.to!int - '0'.to!int)))\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp2wq70gpj.d(16): Error: undefined identifier `sum`, did you mean variable `sub`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2wq70gpj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!q{to!int(a)}())\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmpvpbst867.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvpbst867.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpc4ozmwpb.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc4ozmwpb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(immutable c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmplq4cpt6w.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmplq4cpt6w.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplq4cpt6w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tint n = s.length;\n\tlong count = 0;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i + 1; j <= n; j++) \n\t\t{\n\t\t\tstring sub = s.substr(i, j - i);\n\t\t\tint sum = 0;\n\t\t\tfor (int k = 0; k < sub.length; k++) \n\t\t\t{\n\t\t\t\tsum += sub[k] - '0';\n\t\t\t}\n\t\t\tif (sum == sub.length) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp3wlpq9dc.d(10): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\n/tmp/tmp3wlpq9dc.d(16): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3wlpq9dc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!(\"a - '0'\"))\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp2wrrwa34.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2wrrwa34.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tauto sum = 0;\n\t\t\tforeach(immutable k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp25oq0d_w.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmp25oq0d_w.__unittest_L28_C1() [0x427b22]\n??:? void tmp25oq0d_w.__modtest() [0x427b8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbcd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb59]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa11]\n??:? runModuleUnitTests [0x42b97d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{ \n    long n = s.length; \n    long ans = 0; \n    for (long i = 0; i < n; i++) { \n        long sum = 0; \n        for (long j = i; j < n; j++) { \n            sum += s[j] - '0'; \n            if (sum == (j - i + 1)) \n                ans++; \n        } \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\timmutable sum = 0;\n\t\t\tforeach(immutable k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmppuihekhr.d(18): Error: cannot modify `immutable` expression `0`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppuihekhr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!q{to!int}())\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp1ryqu3wj.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1ryqu3wj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmp3s8sjmqy.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s8sjmqy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tint sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8koqttxa.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmp8koqttxa.__unittest_L28_C1() [0x427b16]\n??:? void tmp8koqttxa.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43006c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa01]\n??:? runModuleUnitTests [0x42b96d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{ \n    long n = s.length; \n    long res = 0; \n    for (long i = 0; i < n; i++) { \n        long sum = 0; \n        for (long j = i; j < n; j++) { \n            sum += s[j] - '0'; \n            if (sum == (j - i + 1)) \n                res++; \n        } \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!int - '0'.to!int;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx4_1gmew.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tint n = s.length;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i + 1; j <= n; j++) \n\t\t{\n\t\t\tstring sub_str = s.substr(i, j);\n\t\t\tint sum = 0;\n\t\t\tfor (int k = 0; k < sub_str.length; k++) \n\t\t\t{\n\t\t\t\tsum += (sub_str[k] - '0');\n\t\t\t}\n\t\t\tif (sum == sub_str.length) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpe7zt1l30.d(11): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\n/tmp/tmpe7zt1l30.d(16): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe7zt1l30.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0..s.length)\n\t{\n\t\tforeach(immutable j; i..s.length)\n\t\t{\n\t\t\tif(sum(map!(to!int)(s[i..j])) == j-i)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpph84ezml.d(15): Error: undefined identifier `sum`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpph84ezml.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\timmutable sum = 0;\n\t\t\tforeach(immutable k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp4t0a7bd7.d(18): Error: cannot modify `immutable` expression `0`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4t0a7bd7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmposgfdguh.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmposgfdguh.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmposgfdguh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmposgfdguh.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmposgfdguh.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmposgfdguh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!int)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmplgvxb7oz.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgvxb7oz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tint sum = 0;\n\t\t\tforeach(immutable k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq9bz9p5l.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmpq9bz9p5l.__unittest_L28_C1() [0x427b22]\n??:? void tmpq9bz9p5l.__modtest() [0x427b8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbcd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb59]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa11]\n??:? runModuleUnitTests [0x42b97d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tfor(int i = 0; i < s.length; i++)\n\t{\n\t\tint sum = 0;\n\t\tfor(int j = i; j < s.length; j++)\n\t\t{\n\t\t\tsum += s[j] - '0';\n\t\t\tif(sum == (j - i + 1))\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!q{to!int}())\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpbp5bk4g0.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbp5bk4g0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tint n = s.length;\n\tint count = 0;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i + 1; j <= n; j++) \n\t\t{\n\t\t\tstring sub = s.substr(i, j - i);\n\t\t\tint sum = 0;\n\t\t\tfor (int k = 0; k < sub.length; k++) \n\t\t\t{\n\t\t\t\tsum += sub[k] - '0';\n\t\t\t}\n\t\t\tif (sum == sub.length) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpl6wy91vm.d(10): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\n/tmp/tmpl6wy91vm.d(16): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl6wy91vm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!int - '0'.to!int;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx4_1gmew.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach (i; 0 .. s.length) \n\t{\n\t\tforeach (j; i .. s.length) \n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif (sub.length == sum(sub.map!(a => a.to!int - '0'.to!int))) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp24cwhn2a.d(16): Error: undefined identifier `sum`, did you mean variable `sub`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp24cwhn2a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n    long count = 0;\n    for (int i = 0; i < s.length; i++) \n    {\n        for (int j = i + 1; j <= s.length; j++) \n        {\n            string sub = s[i..j];\n            int sum = 0;\n            foreach (char c; sub) \n            {\n                sum += c - '0';\n            }\n            if (sum == sub.length) \n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c - '0';\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv_z3q95n.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpv_z3q95n.__unittest_L29_C1() [0x427b3e]\n??:? void tmpv_z3q95n.__modtest() [0x427ba8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa52]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa29]\n??:? runModuleUnitTests [0x42b995]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(immutable c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpy94n8gtq.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpy94n8gtq.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy94n8gtq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tint len = s.length;\n\tforeach(i; 0 .. len)\n\t{\n\t\tforeach(j; i .. len)\n\t\t{\n\t\t\tint sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpl_2rpw9u.d(11): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl_2rpw9u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tif(s[i .. j].sumOfDigits() == j - i)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpeyt6ki8q.d(15): Error: no property `sumOfDigits` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeyt6ki8q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(immutable c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmplq4cpt6w.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmplq4cpt6w.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplq4cpt6w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tif(s[i..j].sum() == j - i)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmppgey7eiq.d(15): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppgey7eiq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tfor (int i = 0; i < s.length; i++) \n\t{\n\t\tfor (int j = i + 1; j <= s.length; j++) \n\t\t{\n\t\t\tstring sub = s[i..j];\n\t\t\tint sum = 0;\n\t\t\tfor (int k = 0; k < sub.length; k++) \n\t\t\t{\n\t\t\t\tsum += sub[k] - '0';\n\t\t\t}\n\t\t\tif (sum == sub.length) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{ \n    long n = s.length; \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n    { \n        long sum = 0; \n        for (long j = i; j < n; j++) \n        { \n            sum += s[j] - '0'; \n            if (sum == (j - i + 1)) \n                ans++; \n        } \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmp3s8sjmqy.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s8sjmqy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tint n = s.length;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i + 1; j <= n; j++) \n\t\t{\n\t\t\tstring sub = s[i..j];\n\t\t\tint sum = 0;\n\t\t\tfor (int k = 0; k < sub.length; k++) \n\t\t\t{\n\t\t\t\tsum += sub[k] - '0';\n\t\t\t}\n\t\t\tif (sum == sub.length) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpx3cupm0q.d(11): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx3cupm0q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tif(sum(s[i .. j].map!(a => a.to!long - '0'.to!long)) == j - i + 1)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp5ceofv3b.d(15): Error: undefined identifier `sum`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5ceofv3b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tif(sum(s[i .. j].map!(a => a.to!long - '0'.to!long)) == j - i + 1)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp5ceofv3b.d(15): Error: undefined identifier `sum`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5ceofv3b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c - '0';\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv_z3q95n.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpv_z3q95n.__unittest_L29_C1() [0x427b3e]\n??:? void tmpv_z3q95n.__modtest() [0x427ba8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa52]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa29]\n??:? runModuleUnitTests [0x42b995]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring substr = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; substr)\n\t\t\t{\n\t\t\t\tsum += to!long(c);\n\t\t\t}\n\t\t\tif(sum == substr.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpy5tcpq_v.d(19): Error: template instance `to!long` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy5tcpq_v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tif(s[i .. j].sum == (j - i + 1))\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpaahuc6zc.d(15): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaahuc6zc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!int - '0'.to!int;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx4_1gmew.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tif(sum(s[i .. j].map!(a => a.to!long - '0'.to!long)) == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpugdpevlz.d(15): Error: undefined identifier `sum`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpugdpevlz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(k; 0 .. sub.length)\n\t\t\t{\n\t\t\t\tsum += sub[k] - '0';\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqwmow6vl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e2d]\n??:? void tmpqwmow6vl.__unittest_L29_C1() [0x427b46]\n??:? void tmpqwmow6vl.__modtest() [0x427bb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbc7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa5a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43009c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa31]\n??:? runModuleUnitTests [0x42b99d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tlong len = s.length;\n\tforeach(i; 0 .. len)\n\t{\n\t\tforeach(j; i .. len)\n\t\t{\n\t\t\tlong sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzer3h9va.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmpzer3h9va.__unittest_L29_C1() [0x427b22]\n??:? void tmpzer3h9va.__modtest() [0x427b8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbcd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb59]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa11]\n??:? runModuleUnitTests [0x42b97d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tif(s[i .. j].sum == j - i)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpdqggff2b.d(15): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdqggff2b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tint sum = 0;\n\t\t\tforeach(immutable k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq9bz9p5l.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmpq9bz9p5l.__unittest_L28_C1() [0x427b22]\n??:? void tmpq9bz9p5l.__modtest() [0x427b8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbcd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb59]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa11]\n??:? runModuleUnitTests [0x42b97d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring substr = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; substr)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == substr.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmppmm3ow8a.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmppmm3ow8a.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppmm3ow8a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tint len = s.length;\n\tforeach(i; 0 .. len)\n\t{\n\t\tforeach(j; i .. len)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!int - '0'.to!int;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpgrgkk_8b.d(11): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\n/tmp/tmpgrgkk_8b.d(20): Error: no property `to` for type `immutable(char)`\n/tmp/tmpgrgkk_8b.d(20): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgrgkk_8b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tauto sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyqz53dmy.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmpyqz53dmy.__unittest_L28_C1() [0x427b16]\n??:? void tmpyqz53dmy.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43006c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa01]\n??:? runModuleUnitTests [0x42b96d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\timmutable sum = 0;\n\t\t\tforeach(immutable k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmppuihekhr.d(18): Error: cannot modify `immutable` expression `0`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppuihekhr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tint sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8koqttxa.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmp8koqttxa.__unittest_L28_C1() [0x427b16]\n??:? void tmp8koqttxa.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43006c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa01]\n??:? runModuleUnitTests [0x42b96d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmposgfdguh.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmposgfdguh.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmposgfdguh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tfor (long i = 0; i < s.length; i++) \n\t{\n\t\tfor (long j = i + 1; j <= s.length; j++) \n\t\t{\n\t\t\tstring sub_str = s.substr(i, j);\n\t\t\tlong sum = 0;\n\t\t\tfor (long k = 0; k < sub_str.length; k++) \n\t\t\t{\n\t\t\t\tsum += sub_str[k] - '0';\n\t\t\t}\n\t\t\tif (sum == sub_str.length) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpkzmfdbz8.d(15): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkzmfdbz8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmp3s8sjmqy.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s8sjmqy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tauto sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == (j - i))\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpan_nnqje.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmpan_nnqje.__unittest_L28_C1() [0x427b16]\n??:? void tmpan_nnqje.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43006c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa01]\n??:? runModuleUnitTests [0x42b96d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp_a4wwfq3.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmp_a4wwfq3.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_a4wwfq3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!(\"a - '0'\"))\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp2wrrwa34.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2wrrwa34.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!q{to!int}())\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpq8jrjy6v.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq8jrjy6v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmposgfdguh.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmposgfdguh.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmposgfdguh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\timmutable sum = 0;\n\t\t\tforeach(immutable k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp4t0a7bd7.d(18): Error: cannot modify `immutable` expression `0`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4t0a7bd7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tint l = s.length;\n\tfor (int i = 0; i < l; i++) \n\t{\n\t\tfor (int j = i + 1; j <= l; j++) \n\t\t{\n\t\t\tint sum = 0;\n\t\t\tstring sub = s[i..j];\n\t\t\tforeach (c; sub)\n\t\t\t{\n\t\t\t\tsum += c - '0';\n\t\t\t}\n\t\t\tif (sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpj4wfof83.d(11): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj4wfof83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!int)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpr5r5wwbf.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr5r5wwbf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring substr = s[i .. j];\n\t\t\tif(substr.length == substr.sum)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpblkepmgw.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpblkepmgw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tif(sum(s[i .. j].map!(a => a.to!long - '0'.to!long)) == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpugdpevlz.d(15): Error: undefined identifier `sum`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpugdpevlz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tint n = s.length;\n\tlong count = 0;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i + 1; j <= n; j++) \n\t\t{\n\t\t\tint sum = 0;\n\t\t\tfor (int k = i; k < j; k++) \n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif (sum == (j - i)) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmprsofspug.d(10): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprsofspug.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(immutable c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmplq4cpt6w.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmplq4cpt6w.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplq4cpt6w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!q{to!int(a)}())\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpb_hsnzwn.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_hsnzwn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tlong n = s.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i + 1; j <= n; j++) \n\t\t{\n\t\t\tif (sum(s[i .. j]) == j - i) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpuzii5s09.d(16): Error: undefined identifier `sum`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuzii5s09.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tint n = s.length;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i + 1; j <= n; j++) \n\t\t{\n\t\t\tstring sub = s.substr(i, j - i);\n\t\t\tint sum = 0;\n\t\t\tfor (int k = 0; k < sub.length; k++) \n\t\t\t{\n\t\t\t\tsum += sub[k] - '0';\n\t\t\t}\n\t\t\tif (sum == sub.length) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpnlyl0y69.d(11): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\n/tmp/tmpnlyl0y69.d(16): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnlyl0y69.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tint sum = 0;\n\t\t\tforeach(immutable k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq9bz9p5l.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmpq9bz9p5l.__unittest_L28_C1() [0x427b22]\n??:? void tmpq9bz9p5l.__modtest() [0x427b8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbcd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb59]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa11]\n??:? runModuleUnitTests [0x42b97d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring temp = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(k; 0 .. temp.length)\n\t\t\t{\n\t\t\t\tsum += temp[k] - '0';\n\t\t\t}\n\t\t\tif(sum == temp.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyff7b_y9.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e2d]\n??:? void tmpyff7b_y9.__unittest_L29_C1() [0x427b46]\n??:? void tmpyff7b_y9.__modtest() [0x427bb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbc7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa5a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43009c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa31]\n??:? runModuleUnitTests [0x42b99d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring temp = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(immutable c; temp)\n\t\t\t{\n\t\t\t\tsum += c.to!long;\n\t\t\t}\n\t\t\tif(sum == temp.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpih5ybcdi.d(19): Error: no property `to` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpih5ybcdi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!int - '0'.to!int;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx4_1gmew.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!int)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpvumsypqp.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvumsypqp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tfor (int i = 0; i < s.length; i++) \n\t{\n\t\tint sum = 0;\n\t\tfor (int j = i; j < s.length; j++) \n\t\t{\n\t\t\tsum += s[j] - '0';\n\t\t\tif (sum == (j - i + 1)) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(immutable c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpy94n8gtq.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpy94n8gtq.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy94n8gtq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!q{to!int(a)})\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmplgvamw98.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgvamw98.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i, immutable c; s)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(immutable j, immutable d; s[i..$])\n\t\t{\n\t\t\tsum += d - '0';\n\t\t\tif(sum == j + 1)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\t\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\t\n\t\t\tif(sub.length == sub.sum!(\"a - '0'\"))\n\t\t\t\tcount++;\n\t\t}\n\t}\n\t\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpk62t4j9i.d(18): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk62t4j9i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tint n = s.length;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i + 1; j <= n; j++) \n\t\t{\n\t\t\tstring sub = s.substr(i, j - i);\n\t\t\tint sum = 0;\n\t\t\tfor (int k = 0; k < sub.length; k++) \n\t\t\t{\n\t\t\t\tsum += sub[k] - '0';\n\t\t\t}\n\t\t\tif (sum == sub.length) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpnlyl0y69.d(11): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\n/tmp/tmpnlyl0y69.d(16): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnlyl0y69.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tfor (int i = 0; i < s.length; i++) \n\t{\n\t\tfor (int j = i + 1; j <= s.length; j++) \n\t\t{\n\t\t\tstring sub = s[i..j];\n\t\t\tint sum = 0;\n\t\t\tfor (int k = 0; k < sub.length; k++) \n\t\t\t{\n\t\t\t\tsum += sub[k] - '0';\n\t\t\t}\n\t\t\tif (sum == sub.length) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0..s.length)\n\t{\n\t\tforeach(immutable j; i..s.length)\n\t\t{\n\t\t\tstring sub = s[i..j];\n\t\t\tif(sub.length == sub.sum!int)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "/tmp/tmph1bzi9ba.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph1bzi9ba.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!int - '0'.to!int;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx4_1gmew.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmposgfdguh.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmposgfdguh.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmposgfdguh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!q{to!int}())\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmpbp5bk4g0.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbp5bk4g0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{ \n    long sum = 0; \n    long n = s.length; \n    for (long i = 0; i < n; i++) \n    { \n        long len = 1; \n        long curr_sum = s[i] - '0'; \n        for (long j = i + 1; j < n; j++) \n        { \n            curr_sum += s[j] - '0'; \n            len++; \n            if (curr_sum == len) \n                sum++; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprjzumpl0.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427df5]\n??:? void tmprjzumpl0.__unittest_L26_C1() [0x427b0e]\n??:? void tmprjzumpl0.__modtest() [0x427b78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa22]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430064]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f9]\n??:? runModuleUnitTests [0x42b965]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tint n = s.length;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i + 1; j <= n; j++) \n\t\t{\n\t\t\tstring sub_str = s.substr(i, j - i);\n\t\t\tint sum = 0;\n\t\t\tfor (int k = 0; k < sub_str.length; k++) \n\t\t\t{\n\t\t\t\tsum += sub_str[k] - '0';\n\t\t\t}\n\t\t\tif (sum == sub_str.length) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp2ctofcgg.d(11): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\n/tmp/tmp2ctofcgg.d(16): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2ctofcgg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n    long count = 0;\n    for (size_t i = 0; i < s.length(); i++) \n    {\n        for (size_t j = i + 1; j <= s.length(); j++) \n        {\n            string sub = s.substr(i, j);\n            long sum = 0;\n            for (size_t k = 0; k < sub.length(); k++) \n            {\n                sum += sub[k] - '0';\n            }\n            if (sum == sub.length()) \n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "/tmp/tmp_qreog1u.d(11): Error: no property `length` for type `string`\n/tmp/tmp_qreog1u.d(13): Error: no property `length` for type `string`\n/tmp/tmp_qreog1u.d(15): Error: no property `substr` for type `string`\n/tmp/tmp_qreog1u.d(17): Error: no property `length` for type `string`\n/tmp/tmp_qreog1u.d(21): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_qreog1u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tlong sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0ohz4aaz.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmp0ohz4aaz.__unittest_L26_C1() [0x427b16]\n??:? void tmp0ohz4aaz.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43006c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa01]\n??:? runModuleUnitTests [0x42b96d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\tauto sum = 0;\n\t\t\tforeach(immutable k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp25oq0d_w.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmp25oq0d_w.__unittest_L28_C1() [0x427b22]\n??:? void tmp25oq0d_w.__modtest() [0x427b8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbcd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb59]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa11]\n??:? runModuleUnitTests [0x42b97d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!q{to!long(a)})\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "/tmp/tmpiur5y4hm.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiur5y4hm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tfor (int i = 0; i < s.length; i++) \n\t{\n\t\tint sum = 0;\n\t\tfor (int j = i; j < s.length; j++) \n\t\t{\n\t\t\tsum += s[j] - '0';\n\t\t\tif (sum == (j - i + 1)) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sum(sub.map!(a => a.to!long - '0'.to!long)))\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmpy_kupexo.d(16): Error: undefined identifier `sum`, did you mean variable `sub`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy_kupexo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tfor (int i = 0; i < s.length; i++)\n\t{\n\t\tfor (int j = i + 1; j <= s.length; j++)\n\t\t{\n\t\t\tstring sub = s[i..j];\n\t\t\tint sum = 0;\n\t\t\tfor (int k = 0; k < sub.length; k++)\n\t\t\t{\n\t\t\t\tsum += sub[k] - '0';\n\t\t\t}\n\t\t\tif (sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!int - '0'.to!int;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx4_1gmew.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tlong sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!long - '0'.to!long;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122715,
      "stdout": "",
      "stderr": "/tmp/tmposgfdguh.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmposgfdguh.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmposgfdguh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tfor (int i = 0; i < s.length; i++) {\n\t\tfor (int j = i; j < s.length; j++) {\n\t\t\tint sum = 0;\n\t\t\tfor (int k = i; k <= j; k++) {\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif (sum == (j - i + 1)) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tint n = s.length;\n\tlong count = 0;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i + 1; j <= n; j++) \n\t\t{\n\t\t\tstring sub = s.substr(i, j - i);\n\t\t\tint sum = 0;\n\t\t\tfor (int k = 0; k < sub.length; k++) \n\t\t\t{\n\t\t\t\tsum += sub[k] - '0';\n\t\t\t}\n\t\t\tif (sum == sub.length) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmp3wlpq9dc.d(10): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\n/tmp/tmp3wlpq9dc.d(16): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3wlpq9dc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tint len = s.length;\n\tfor (int i = 0; i < len; i++) \n\t{\n\t\tfor (int j = i + 1; j <= len; j++) \n\t\t{\n\t\t\tstring sub = s.substr(i, j - i);\n\t\t\tint sum = 0;\n\t\t\tforeach (c; sub) \n\t\t\t{\n\t\t\t\tsum += c - '0';\n\t\t\t}\n\t\t\tif (sum == sub.length) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "/tmp/tmpz7askdf4.d(11): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\n/tmp/tmpz7askdf4.d(16): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz7askdf4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(immutable i; 0 .. s.length)\n\t{\n\t\tforeach(immutable j; i .. s.length)\n\t\t{\n\t\t\timmutable sum = 0;\n\t\t\tforeach(immutable k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmppuihekhr.d(18): Error: cannot modify `immutable` expression `0`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppuihekhr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tauto sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyqz53dmy.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmpyqz53dmy.__unittest_L28_C1() [0x427b16]\n??:? void tmpyqz53dmy.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43006c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa01]\n??:? runModuleUnitTests [0x42b96d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tlong sum = 0;\n\t\t\tforeach(k; i .. j)\n\t\t\t{\n\t\t\t\tsum += s[k] - '0';\n\t\t\t}\n\t\t\tif(sum == j - i + 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjlyynfnr.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpjlyynfnr.__unittest_L28_C1() [0x427b1a]\n??:? void tmpjlyynfnr.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa32]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbc5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430074]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb51]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa09]\n??:? runModuleUnitTests [0x42b975]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tif(sub.length == sub.sum!int)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122716,
      "stdout": "",
      "stderr": "/tmp/tmplgvxb7oz.d(16): Error: no property `sum` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgvxb7oz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!int - '0'.to!int;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "/tmp/tmpvpnitel_.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpvpnitel_.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvpnitel_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\t\n*/\nlong count_Substrings(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tforeach(j; i .. s.length)\n\t\t{\n\t\t\tstring sub = s[i .. j];\n\t\t\tint sum = 0;\n\t\t\tforeach(c; sub)\n\t\t\t{\n\t\t\t\tsum += c.to!int - '0'.to!int;\n\t\t\t}\n\t\t\tif(sum == sub.length)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_Substrings;\n\n    assert(candidate(\"112112\") == 6L);\n    assert(candidate(\"111\") == 6L);\n    assert(candidate(\"1101112\") == 12L);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `immutable(char)`\n/tmp/tmpx4_1gmew.d(19): Error: no property `to` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx4_1gmew.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
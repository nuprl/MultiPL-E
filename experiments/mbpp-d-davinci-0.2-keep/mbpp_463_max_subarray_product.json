{
  "name": "mbpp_463_max_subarray_product",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the maximum product subarray of the given array.\n\t\n*/\nlong max_subarray_product(long[] arr) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_463_max_subarray_product.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = max_subarray_product;\n\n    assert(candidate([1L, -2L, -3L, 0L, 7L, -8L, -2L]) == 112L);\n    assert(candidate([6L, -3L, -10L, 0L, 2L]) == 180L);\n    assert(candidate([-2L, -40L, 0L, -2L, -3L]) == 80L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong max_ending_here = 1;\n\tlong min_ending_here = 1;\n\tlong max_so_far = 1;\n\t\n\tforeach(i; 0..arr.length)\n\t{\n\t\tif(arr[i] > 0)\n\t\t{\n\t\t\tmax_ending_here = max_ending_here * arr[i];\n\t\t\tmin_ending_here = min(min_ending_here * arr[i], 1);\n\t\t}\n\t\telse if(arr[i] == 0)\n\t\t{\n\t\t\tmax_ending_here = 1;\n\t\t\tmin_ending_here = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlong temp = max_ending_here;\n\t\t\tmax_ending_here = max(min_ending_here * arr[i], 1);\n\t\t\tmin_ending_here = temp * arr[i];\n\t\t}\n\t\t\n\t\tif(max_so_far < max_ending_here)\n\t\t\tmax_so_far = max_ending_here;\n\t}\n\t\n\treturn max_so_far;\n}",
    "{\n\tlong max_ending_here = 1;\n\tlong min_ending_here = 1;\n\tlong max_so_far = 1;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] > 0)\n\t\t{\n\t\t\tmax_ending_here = max_ending_here * arr[i];\n\t\t\tmin_ending_here = min(min_ending_here * arr[i], 1);\n\t\t}\n\t\telse if(arr[i] == 0)\n\t\t{\n\t\t\tmax_ending_here = 1;\n\t\t\tmin_ending_here = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tauto temp = max_ending_here;\n\t\t\tmax_ending_here = max(min_ending_here * arr[i], 1);\n\t\t\tmin_ending_here = temp * arr[i];\n\t\t}\n\t\t\n\t\tif(max_so_far < max_ending_here)\n\t\t\tmax_so_far = max_ending_here;\n\t}\n\t\n\treturn max_so_far;\n}",
    "{\n\tlong max_ending_here = 1;\n\tlong min_ending_here = 1;\n\tlong max_so_far = 1;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] > 0)\n\t\t{\n\t\t\tmax_ending_here = max_ending_here * arr[i];\n\t\t\tmin_ending_here = min(min_ending_here * arr[i], 1);\n\t\t}\n\t\telse if(arr[i] == 0)\n\t\t{\n\t\t\tmax_ending_here = 1;\n\t\t\tmin_ending_here = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlong temp = max_ending_here;\n\t\t\tmax_ending_here = max(min_ending_here * arr[i], 1);\n\t\t\tmin_ending_here = temp * arr[i];\n\t\t}\n\t\t\n\t\tif(max_so_far < max_ending_here)\n\t\t\tmax_so_far = max_ending_here;\n\t}\n\t\n\treturn max_so_far;\n}",
    "{\n\tlong max_ending_here = 1;\n\tlong min_ending_here = 1;\n\tlong max_so_far = 1;\n\t\n\tforeach(i, val; arr)\n\t{\n\t\tif(val > 0)\n\t\t{\n\t\t\tmax_ending_here = max_ending_here * val;\n\t\t\tmin_ending_here = min(min_ending_here * val, 1);\n\t\t}\n\t\telse if(val == 0)\n\t\t{\n\t\t\tmax_ending_here = 1;\n\t\t\tmin_ending_here = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlong temp = max_ending_here;\n\t\t\tmax_ending_here = max(min_ending_here * val, 1);\n\t\t\tmin_ending_here = temp * val;\n\t\t}\n\t\t\n\t\tif(max_so_far < max_ending_here)\n\t\t\tmax_so_far = max_ending_here;\n\t}\n\t\n\treturn max_so_far;\n}",
    "{ \n    long max_ending_here = 1; \n    long min_ending_here = 1; \n    long max_so_far = 1; \n    long flag = 0; \n    for (int i = 0; i < arr.length; i++) \n    { \n        if (arr[i] > 0) \n        { \n            max_ending_here = max_ending_here*arr[i]; \n            min_ending_here = min(min_ending_here * arr[i], 1); \n            flag = 1; \n        } \n        else if (arr[i] == 0) \n        { \n            max_ending_here = 1; \n            min_ending_here = 1; \n        } \n        else\n        { \n            long temp = max_ending_here; \n            max_ending_here = max(min_ending_here * arr[i], 1); \n            min_ending_here = temp * arr[i]; \n        } \n        if (max_so_far <  max_ending_here) \n            max_so_far  =  max_ending_here; \n    } \n    if (flag == 0 && max_so_far == 1) \n        return 0; \n    return max_so_far; \n} ",
    "{\n\tlong max_ending_here = 1;\n\tlong min_ending_here = 1;\n\tlong max_so_far = 1;\n\t\n\tforeach(i; arr) \n\t{\n\t\tif(i > 0) \n\t\t{\n\t\t\tmax_ending_here = max_ending_here * i;\n\t\t\tmin_ending_here = min(min_ending_here * i, 1);\n\t\t}\n\t\telse if(i == 0) \n\t\t{\n\t\t\tmax_ending_here = 1;\n\t\t\tmin_ending_here = 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlong temp = max_ending_here;\n\t\t\tmax_ending_here = max(min_ending_here * i, 1);\n\t\t\tmin_ending_here = temp * i;\n\t\t}\n\t\t\n\t\tif(max_so_far < max_ending_here) \n\t\t{\n\t\t\tmax_so_far = max_ending_here;\n\t\t}\n\t}\n\t\n\treturn max_so_far;\n}",
    "{ \n    if (arr.length == 0) \n        return 0; \n  \n    long max_ending_here = 1; \n    long min_ending_here = 1; \n    long max_so_far = 1; \n  \n    for (int i = 0; i < arr.length; i++) \n    { \n        if (arr[i] > 0) \n        { \n            max_ending_here = max_ending_here * arr[i]; \n            min_ending_here = min(min_ending_here * arr[i], 1); \n        } \n  \n        else if (arr[i] == 0) \n        { \n            max_ending_here = 1; \n            min_ending_here = 1; \n        } \n  \n        else\n        { \n            long temp = max_ending_here; \n            max_ending_here = max(min_ending_here * arr[i], 1); \n            min_ending_here = temp * arr[i]; \n        } \n  \n        if (max_so_far < max_ending_here) \n            max_so_far = max_ending_here; \n    } \n    return max_so_far; \n} ",
    "{\n\tlong max_ending_here = 1;\n\tlong min_ending_here = 1;\n\tlong max_so_far = 1;\n\t\n\tforeach(i; 0 .. arr.length) \n\t{\n\t\tif (arr[i] > 0) \n\t\t{\n\t\t\tmax_ending_here = max_ending_here * arr[i];\n\t\t\tmin_ending_here = min(min_ending_here * arr[i], 1);\n\t\t} \n\t\telse if (arr[i] == 0) \n\t\t{\n\t\t\tmax_ending_here = 1;\n\t\t\tmin_ending_here = 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tauto temp = max_ending_here;\n\t\t\tmax_ending_here = max(min_ending_here * arr[i], 1);\n\t\t\tmin_ending_here = temp * arr[i];\n\t\t}\n\t\t\n\t\tif (max_so_far < max_ending_here)\n\t\t\tmax_so_far = max_ending_here;\n\t}\n\treturn max_so_far;\n}",
    "{\n\tlong max_ending_here = 1;\n\tlong min_ending_here = 1;\n\tlong max_so_far = 1;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] > 0)\n\t\t{\n\t\t\tmax_ending_here = max_ending_here * arr[i];\n\t\t\tmin_ending_here = min(min_ending_here * arr[i], 1);\n\t\t}\n\t\telse if(arr[i] == 0)\n\t\t{\n\t\t\tmax_ending_here = 1;\n\t\t\tmin_ending_here = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlong temp = max_ending_here;\n\t\t\tmax_ending_here = max(min_ending_here * arr[i], 1);\n\t\t\tmin_ending_here = temp * arr[i];\n\t\t}\n\t\t\n\t\tif(max_so_far < max_ending_here)\n\t\t\tmax_so_far = max_ending_here;\n\t}\n\treturn max_so_far;\n}",
    "{\n\tlong max_ending_here = 1;\n\tlong min_ending_here = 1;\n\tlong max_so_far = 1;\n\t\n\tforeach(i; 0..arr.length)\n\t{\n\t\tif(arr[i] > 0)\n\t\t{\n\t\t\tmax_ending_here = max_ending_here * arr[i];\n\t\t\tmin_ending_here = min(min_ending_here * arr[i], 1);\n\t\t}\n\t\telse if(arr[i] == 0)\n\t\t{\n\t\t\tmax_ending_here = 1;\n\t\t\tmin_ending_here = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlong temp = max_ending_here;\n\t\t\tmax_ending_here = max(min_ending_here * arr[i], 1);\n\t\t\tmin_ending_here = temp * arr[i];\n\t\t}\n\t\t\n\t\tif(max_so_far < max_ending_here)\n\t\t\tmax_so_far = max_ending_here;\n\t}\n\t\n\treturn max_so_far;\n}",
    "{\n\tlong max_ending_here = 1;\n\tlong min_ending_here = 1;\n\tlong max_so_far = 1;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] > 0)\n\t\t{\n\t\t\tmax_ending_here = max_ending_here * arr[i];\n\t\t\tmin_ending_here = min(min_ending_here * arr[i], 1);\n\t\t}\n\t\telse if(arr[i] == 0)\n\t\t{\n\t\t\tmax_ending_here = 1;\n\t\t\tmin_ending_here = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tauto temp = max_ending_here;\n\t\t\tmax_ending_here = max(min_ending_here * arr[i], 1);\n\t\t\tmin_ending_here = temp * arr[i];\n\t\t}\n\t\t\n\t\tif(max_so_far < max_ending_here)\n\t\t{\n\t\t\tmax_so_far = max_ending_here;\n\t\t}\n\t}\n\t\n\treturn max_so_far;\n}",
    "{\n\tlong max_ending_here = 1;\n\tlong min_ending_here = 1;\n\tlong max_so_far = 1;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] > 0)\n\t\t{\n\t\t\tmax_ending_here = max_ending_here * arr[i];\n\t\t\tmin_ending_here = min(min_ending_here * arr[i], 1);\n\t\t}\n\t\telse if(arr[i] == 0)\n\t\t{\n\t\t\tmax_ending_here = 1;\n\t\t\tmin_ending_here = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlong temp = max_ending_here;\n\t\t\tmax_ending_here = max(min_ending_here * arr[i], 1);\n\t\t\tmin_ending_here = temp * arr[i];\n\t\t}\n\t\t\n\t\tif(max_so_far < max_ending_here)\n\t\t\tmax_so_far = max_ending_here;\n\t}\n\t\n\treturn max_so_far;\n}",
    "{\n\tlong max_ending_here = 1;\n\tlong min_ending_here = 1;\n\tlong max_so_far = 1;\n\t\n\tforeach(i; 0 .. arr.length) \n\t{\n\t\tif(arr[i] > 0) \n\t\t{\n\t\t\tmax_ending_here = max_ending_here * arr[i];\n\t\t\tmin_ending_here = min(min_ending_here * arr[i], 1);\n\t\t}\n\t\telse if(arr[i] == 0) \n\t\t{\n\t\t\tmax_ending_here = 1;\n\t\t\tmin_ending_here = 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlong temp = max_ending_here;\n\t\t\tmax_ending_here = max(min_ending_here * arr[i], 1);\n\t\t\tmin_ending_here = temp * arr[i];\n\t\t}\n\t\t\n\t\tif(max_so_far < max_ending_here) \n\t\t{\n\t\t\tmax_so_far = max_ending_here;\n\t\t}\n\t}\n\t\n\treturn max_so_far;\n}",
    "{\n\tlong max_ending_here = 1;\n\tlong min_ending_here = 1;\n\tlong max_so_far = 1;\n\t\n\tforeach(i; 0 .. arr.length) \n\t{\n\t\tif (arr[i] > 0) \n\t\t{\n\t\t\tmax_ending_here = max_ending_here * arr[i];\n\t\t\tmin_ending_here = min(min_ending_here * arr[i], 1);\n\t\t}\n\t\telse if (arr[i] == 0) \n\t\t{\n\t\t\tmax_ending_here = 1;\n\t\t\tmin_ending_here = 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlong temp = max_ending_here;\n\t\t\tmax_ending_here = max(min_ending_here * arr[i], 1);\n\t\t\tmin_ending_here = temp * arr[i];\n\t\t}\n\t\t\n\t\tif (max_so_far < max_ending_here)\n\t\t\tmax_so_far = max_ending_here;\n\t}\n\t\n\treturn max_so_far;\n}",
    "{\n\tlong max_ending_here = 1;\n\tlong min_ending_here = 1;\n\tlong max_so_far = 1;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] > 0)\n\t\t{\n\t\t\tmax_ending_here = max_ending_here * arr[i];\n\t\t\tmin_ending_here = min(min_ending_here * arr[i], 1);\n\t\t}\n\t\telse if(arr[i] == 0)\n\t\t{\n\t\t\tmax_ending_here = 1;\n\t\t\tmin_ending_here = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlong temp = max_ending_here;\n\t\t\tmax_ending_here = max(min_ending_here * arr[i], 1);\n\t\t\tmin_ending_here = temp * arr[i];\n\t\t}\n\t\t\n\t\tif(max_so_far < max_ending_here)\n\t\t\tmax_so_far = max_ending_here;\n\t}\n\t\n\treturn max_so_far;\n}",
    "{ \n    long max_ending_here = 1; \n    long min_ending_here = 1; \n    long max_so_far = 1; \n    long flag = 0; \n    foreach(elem; arr) \n    { \n        if (elem > 0) \n        { \n            max_ending_here = max_ending_here * elem; \n            min_ending_here = min(min_ending_here * elem, 1); \n            flag = 1; \n        } \n        else if (elem == 0) \n        { \n            max_ending_here = 1; \n            min_ending_here = 1; \n        } \n        else\n        { \n            long temp = max_ending_here; \n            max_ending_here = max(min_ending_here * elem, 1); \n            min_ending_here = temp * elem; \n        } \n        if (max_so_far < max_ending_here) \n            max_so_far = max_ending_here; \n    } \n    if (flag == 0 && max_so_far == 1) \n        return 0; \n    return max_so_far; \n} ",
    "{\n\tlong max_ending_here = 1;\n\tlong min_ending_here = 1;\n\tlong max_so_far = 1;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] > 0)\n\t\t{\n\t\t\tmax_ending_here = max_ending_here * arr[i];\n\t\t\tmin_ending_here = min(min_ending_here * arr[i], 1);\n\t\t}\n\t\telse if(arr[i] == 0)\n\t\t{\n\t\t\tmax_ending_here = 1;\n\t\t\tmin_ending_here = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlong temp = max_ending_here;\n\t\t\tmax_ending_here = max(min_ending_here * arr[i], 1);\n\t\t\tmin_ending_here = temp * arr[i];\n\t\t}\n\t\t\n\t\tif(max_so_far < max_ending_here)\n\t\t{\n\t\t\tmax_so_far = max_ending_here;\n\t\t}\n\t}\n\treturn max_so_far;\n}",
    "{\n\tlong max_ending_here = 1;\n\tlong min_ending_here = 1;\n\tlong max_so_far = 1;\n\t\n\tforeach(i; 0..arr.length)\n\t{\n\t\tif(arr[i] > 0)\n\t\t{\n\t\t\tmax_ending_here = max_ending_here*arr[i];\n\t\t\tmin_ending_here = min(min_ending_here*arr[i], 1);\n\t\t}\n\t\telse if(arr[i] == 0)\n\t\t{\n\t\t\tmax_ending_here = 1;\n\t\t\tmin_ending_here = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tauto temp = max_ending_here;\n\t\t\tmax_ending_here = max(min_ending_here*arr[i], 1);\n\t\t\tmin_ending_here = temp*arr[i];\n\t\t}\n\t\t\n\t\tif(max_so_far < max_ending_here)\n\t\t\tmax_so_far = max_ending_here;\n\t}\n\t\n\treturn max_so_far;\n}",
    "{\n\tlong max_so_far = 1;\n\tlong min_so_far = 1;\n\tlong max_ending_here = 1;\n\tlong min_ending_here = 1;\n\tlong result = 1;\n\t\n\tforeach(elem; arr) \n\t{\n\t\tif(elem > 0) \n\t\t{\n\t\t\tmax_ending_here = max_ending_here * elem;\n\t\t\tmin_ending_here = min(min_ending_here * elem, 1);\n\t\t}\n\t\telse if(elem == 0) \n\t\t{\n\t\t\tmax_ending_here = 1;\n\t\t\tmin_ending_here = 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlong temp = max_ending_here;\n\t\t\tmax_ending_here = max(min_ending_here * elem, 1);\n\t\t\tmin_ending_here = temp * elem;\n\t\t}\n\t\t\n\t\tif(max_so_far < max_ending_here)\n\t\t\tmax_so_far = max_ending_here;\n\t\t\n\t\tif(min_so_far > min_ending_here)\n\t\t\tmin_so_far = min_ending_here;\n\t}\n\t\n\treturn max_so_far;\n}",
    "{\n\tlong max_ending_here = 1;\n\tlong min_ending_here = 1;\n\tlong max_so_far = 1;\n\t\n\tforeach(i; 0 .. arr.length) \n\t{\n\t\tif(arr[i] > 0) \n\t\t{\n\t\t\tmax_ending_here = max_ending_here * arr[i];\n\t\t\tmin_ending_here = min(min_ending_here * arr[i], 1);\n\t\t}\n\t\telse if(arr[i] == 0) \n\t\t{\n\t\t\tmax_ending_here = 1;\n\t\t\tmin_ending_here = 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlong temp = max_ending_here;\n\t\t\tmax_ending_here = max(min_ending_here * arr[i], 1);\n\t\t\tmin_ending_here = temp * arr[i];\n\t\t}\n\t\t\n\t\tif(max_so_far < max_ending_here) \n\t\t{\n\t\t\tmax_so_far = max_ending_here;\n\t\t}\n\t}\n\t\n\treturn max_so_far;\n}"
  ]
}
{
  "name": "mbpp_479_first_Digit",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_479_first_Digit.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\twhile(n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\twhile (n >= 10) \n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\twhile (n >= 10)\n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn (n < 0) ? -first_Digit(-n) : n / pow(10, floor(log10(n)));\n}",
    "{\n\twhile (n >= 10)\n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}",
    "{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} ",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string()[0].to!long();\n}",
    "{\n\tif (n < 0)\n\t\tn *= -1;\n\treturn n / (long)pow(10, floor(log10(n)));\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n / pow(10, floor(log10(n)));\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif(n < 0)\n\t\tn = -n;\n\twhile(n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tlong first = 0;\n\tif (n < 0)\n\t{\n\t\tn = abs(n);\n\t}\n\twhile (n > 0)\n\t{\n\t\tfirst = n % 10;\n\t\tn /= 10;\n\t}\n\treturn first;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} ",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n > 9)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\tif (n < 0)\n\t\tn = -n;\n\t\n\twhile (n > 9)\n\t\tn /= 10;\n\t\n\treturn n;\n}",
    "{\n\treturn n / pow(10, floor(log10(n)));\n}",
    "{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\twhile (n >= 10) \n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}",
    "{\n\treturn n.to!string()[0].to!long();\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.abs.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif(n < 0)\n\t\tn = -n;\n\twhile(n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif (n < 0)\n\t\tn *= -1;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif (n < 0)\n\t\tn = -n;\n\t\n\twhile (n >= 10)\n\t\tn /= 10;\n\t\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif(n < 0)\n\t\tn = -n;\n\t\n\twhile(n > 9)\n\t\tn /= 10;\n\t\n\treturn n;\n}",
    "{\n\tif (n < 0)\n\t\tn *= -1;\n\t\n\twhile (n > 9)\n\t\tn /= 10;\n\t\n\treturn n;\n}",
    "{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.abs.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif(n < 0)\n\t\tn *= -1;\n\twhile(n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\tif (n < 0) \n\t{\n\t\tn *= -1;\n\t}\n\tif (n < 10) \n\t{\n\t\treturn n;\n\t}\n\treturn first_Digit(n / 10);\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n / pow(10, floor(log10(n)));\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} ",
    "{\n\treturn n / pow(10, floor(log10(n)));\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\twhile(n >= 10) \n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} ",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string().front.to!long;\n}",
    "{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n > 9)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\twhile (n >= 10) \n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}",
    "{\n\tif(n<0)\n\t\tn*=-1;\n\twhile(n>=10)\n\t\tn/=10;\n\treturn n;\n}",
    "{\n\tlong first_digit = 0;\n\twhile(n > 0)\n\t{\n\t\tfirst_digit = n % 10;\n\t\tn = n / 10;\n\t}\n\treturn first_digit;\n}",
    "{\n\twhile(n >= 10) \n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}",
    "{\n\tif(n < 0)\n\t\tn = -n;\n\t\n\tif(n < 10)\n\t\treturn n;\n\t\n\treturn first_Digit(n / 10);\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string()[0].to!long();\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif (n < 0)\n\t\tn = -n;\n\t\n\twhile (n > 9)\n\t\tn /= 10;\n\t\n\treturn n;\n}",
    "{\n\tif (n < 0)\n\t\tn *= -1;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} ",
    "{\n\tlong first_digit = n;\n\twhile (first_digit >= 10) \n\t{\n\t\tfirst_digit /= 10;\n\t}\n\treturn first_digit;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n < 0 ? first_Digit(-n) : n < 10 ? n : first_Digit(n / 10);\n}",
    "{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\twhile (n >= 10) \n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n / pow(10, floor(log10(n)));\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} ",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string()[0].to!long();\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n    long first = 0;\n    if (n < 0) \n    {\n        n = -n;\n    }\n    while (n > 0) \n    {\n        first = n % 10;\n        n = n / 10;\n    }\n    return first;\n}",
    "{\n\treturn n < 0 ? -first_Digit(-n) : n < 10 ? n : first_Digit(n / 10);\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif (n < 0)\n\t\tn *= -1;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif (n < 0)\n\t\tn *= -1;\n\treturn n / pow(10, floor(log10(n)));\n}",
    "{\n\tif(n < 0)\n\t\tn = -n;\n\twhile(n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} ",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\t//return n.to!string[0].to!long;\n\treturn n.to!string[0].to!long;\n}",
    "{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} ",
    "{\n\twhile (n > 9) \n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}",
    "{\n\tif(n < 0)\n\t\tn = -n;\n\twhile(n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} ",
    "{\n\treturn n.to!string()[0].to!long();\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string()[0].to!long();\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n    return n < 0 ? first_Digit(-n) : n < 10 ? n : first_Digit(n / 10);\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif(n < 0)\n\t\tn = -n;\n\twhile(n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\treturn n / pow(10, floor(log10(n)));\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string()[0].to!long();\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string()[0].to!long();\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n < 0 ? first_Digit(-n) : n < 10 ? n : first_Digit(n / 10);\n}",
    "{\n\tlong digit = 0;\n\twhile (n > 0)\n\t{\n\t\tdigit = n % 10;\n\t\tn /= 10;\n\t}\n\treturn digit;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string()[0].to!long();\n}",
    "{\n\tif (n < 0)\n\t\tn = -n;\n\t\n\twhile (n >= 10)\n\t\tn /= 10;\n\t\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif(n < 0)\n\t\tn = -n;\n\twhile(n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tlong first_digit = 0;\n\t\n\twhile(n > 0)\n\t{\n\t\tfirst_digit = n % 10;\n\t\tn = n / 10;\n\t}\n\t\n\treturn first_digit;\n}",
    "{\n\twhile (n >= 10)\n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} ",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tlong first = n;\n\twhile(first >= 10)\n\t{\n\t\tfirst /= 10;\n\t}\n\treturn first;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} ",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n / pow(10, floor(log10(n)));\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif (n < 0) \n\t{\n\t\tn *= -1;\n\t}\n\twhile (n >= 10) \n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}",
    "{\n\treturn n / pow(10, floor(log10(n)));\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n    long digit = 0;\n    while (n > 0) \n    {\n        digit = n % 10;\n        n /= 10;\n    }\n    return digit;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tlong first_digit = 0;\n\twhile(n > 0)\n\t{\n\t\tfirst_digit = n % 10;\n\t\tn /= 10;\n\t}\n\treturn first_digit;\n}",
    "{\n\tif(n < 0)\n\t\tn *= -1;\n\t\n\twhile(n >= 10)\n\t\tn /= 10;\n\t\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n / pow(10, floor(log10(n)));\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} ",
    "{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} ",
    "{\n\treturn n.to!string[0].to!long;\n}",
    "{\n\treturn n.to!string[0].to!long;\n}"
  ]
}
{
  "name": "mbpp_732_replace_specialchar",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_732_replace_specialchar.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \",\":\").replace(\",\",\":\").replace(\".\",\":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmpwp1ryc5h.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwp1ryc5h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(char c; text) {\n\t\tif(c == ' ' || c == ',' || c == '.') {\n\t\t\tresult ~= ':';\n\t\t} else {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(ch; text)\n\t{\n\t\tif(ch == ' ' || ch == ',' || ch == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= ch;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(i, c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\",\", \":\").replace(\" \", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124255,
      "stdout": "",
      "stderr": "/tmp/tmptpsxyxzu.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptpsxyxzu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(ch; text)\n\t{\n\t\tif(ch == ' ' || ch == ',' || ch == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= ch;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(char c; text)\n\t{\n\t\tif (c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text) \n\t{\n\t\tif(c == ' ' || c == ',' || c == '.') \n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124255,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif (c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124255,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text) {\n\t\tif(c == ' ' || c == ',' || c == '.') {\n\t\t\tresult ~= ':';\n\t\t} else {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach (c; text)\n\t{\n\t\tif (c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif (c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124255,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif (c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124255,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(char c; text) \n\t{\n\t\tif(c == ' ' || c == ',' || c == '.') \n\t\t{\n\t\t\tresult ~= ':';\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text) {\n\t\tif(c == ' ' || c == ',' || c == '.') {\n\t\t\tresult ~= \":\";\n\t\t} else {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(char c; text)\n\t{\n\t\tif (c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text) {\n\t\tif (c == ' ' || c == ',' || c == '.') {\n\t\t\tresult ~= ':';\n\t\t} else {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(char c; text) \n\t{\n\t\tif (c == ' ' || c == ',' || c == '.') \n\t\t{\n\t\t\tresult ~= ':';\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif (c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= \":\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(char c; text) \n\t{\n\t\tif(c == ' ' || c == ',' || c == '.') \n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= \":\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text) \n\t{\n\t\tif (c == ' ' || c == ',' || c == '.') \n\t\t{\n\t\t\tresult ~= ':';\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(ch; text)\n\t{\n\t\tif(ch == ' ' || ch == ',' || ch == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= ch;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= \":\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif (c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(char c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t\tresult ~= ':';\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result = \"\";\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif (c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1666124256,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\tstring result;\n\tforeach(c; text)\n\t{\n\t\tif(c == ' ' || c == ',' || c == '.')\n\t\t{\n\t\t\tresult ~= ':';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to replace all occurrences of spaces, commas, or dots with a colon.\n\t\n*/\nstring replace_specialchar(string text) \n{\n\treturn text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\");\n}\nunittest\n{\n    alias candidate = replace_specialchar;\n\n    assert(candidate(\"Python language, Programming language.\") == \"Python:language::Programming:language:\");\n    assert(candidate(\"a b c,d e f\") == \"a:b:c:d:e:f\");\n    assert(candidate(\"ram reshma,ram rahim\") == \"ram:reshma:ram:rahim\");\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "/tmp/tmp5e4lvah4.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5e4lvah4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
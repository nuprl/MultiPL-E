{
  "name": "mbpp_283_validate",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n\t\n*/\nbool validate(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_283_validate.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = validate;\n\n    assert(candidate(1234L) == true);\n    assert(candidate(51241L) == false);\n    assert(candidate(321L) == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tint[] freq = new int[10];\n\t\n\twhile(n > 0)\n\t{\n\t\tfreq[n % 10]++;\n\t\tn /= 10;\n\t}\n\t\n\tforeach(i; 0 .. 10)\n\t{\n\t\tif(freq[i] > i)\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tint[] freq = new int[10];\n\twhile (n > 0)\n\t{\n\t\tint digit = n % 10;\n\t\tfreq[digit]++;\n\t\tif (freq[digit] > digit)\n\t\t\treturn false;\n\t\tn /= 10;\n\t}\n\treturn true;\n}",
    "{\n\tint[] digits = new int[10];\n\twhile (n > 0) \n\t{\n\t\tint d = n % 10;\n\t\tdigits[d]++;\n\t\tn /= 10;\n\t}\n\tfor (int i = 0; i < 10; i++) \n\t{\n\t\tif (digits[i] > i) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint[] freq = new int[10];\n\twhile (n > 0) {\n\t\tint digit = n % 10;\n\t\tfreq[digit]++;\n\t\tif (freq[digit] > digit) {\n\t\t\treturn false;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn true;\n}",
    "{\n\tint[] digits = new int[10];\n\twhile (n > 0)\n\t{\n\t\tint digit = n % 10;\n\t\tdigits[digit]++;\n\t\tn /= 10;\n\t}\n\t\n\tforeach (i; 0 .. 10)\n\t{\n\t\tif (digits[i] > i)\n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint[] digits = new int[10];\n\twhile(n > 0)\n\t{\n\t\tint digit = n % 10;\n\t\tdigits[digit]++;\n\t\tn /= 10;\n\t}\n\t\n\tfor(int i = 0; i < digits.length; i++)\n\t{\n\t\tif(digits[i] > i)\n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint[] freq = new int[10];\n\twhile (n > 0) \n\t{\n\t\tint digit = n % 10;\n\t\tfreq[digit]++;\n\t\tn /= 10;\n\t}\n\tfor (int i = 0; i < 10; i++) \n\t{\n\t\tif (freq[i] > i) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint[] freq = new int[10];\n\twhile(n > 0)\n\t{\n\t\tint digit = n % 10;\n\t\tfreq[digit]++;\n\t\tif(freq[digit] > digit)\n\t\t\treturn false;\n\t\tn /= 10;\n\t}\n\treturn true;\n}",
    "{\n\tint[] freq = new int[10];\n\t\n\twhile(n > 0)\n\t{\n\t\tint digit = n % 10;\n\t\tfreq[digit]++;\n\t\tn /= 10;\n\t}\n\t\n\tfor(int i = 0; i < 10; i++)\n\t{\n\t\tif(freq[i] > i)\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tint[] freq = new int[10];\n\twhile(n > 0)\n\t{\n\t\tfreq[n % 10]++;\n\t\tn /= 10;\n\t}\n\tfor(int i = 0; i < 10; i++)\n\t{\n\t\tif(freq[i] > i)\n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint[] freq = new int[10];\n\twhile (n > 0) \n\t{\n\t\tint d = n % 10;\n\t\tfreq[d]++;\n\t\tn /= 10;\n\t}\n\tfor (int i = 0; i < 10; i++) \n\t{\n\t\tif (freq[i] > i) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint[] freq = new int[10];\n\twhile (n > 0) \n\t{\n\t\tint digit = n % 10;\n\t\tfreq[digit]++;\n\t\tn /= 10;\n\t}\n\tfor (int i = 0; i < 10; i++) \n\t{\n\t\tif (freq[i] > i) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\t// Write your code here\n\tint[] arr = new int[10];\n\twhile(n > 0)\n\t{\n\t\tint digit = n % 10;\n\t\tarr[digit]++;\n\t\tn /= 10;\n\t}\n\tfor(int i = 0; i < 10; i++)\n\t{\n\t\tif(arr[i] > i)\n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint[] freq = new int[10];\n\twhile(n != 0)\n\t{\n\t\tint digit = n % 10;\n\t\tfreq[digit]++;\n\t\tn /= 10;\n\t}\n\tfor(int i = 0; i < 10; i++)\n\t{\n\t\tif(freq[i] > i)\n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tauto s = to!string(n);\n\tint[] freq = new int[10];\n\tforeach(c; s)\n\t{\n\t\tfreq[c - '0']++;\n\t}\n\tforeach(i; 0 .. 10)\n\t{\n\t\tif(freq[i] > i)\n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint[] freq = new int[10];\n\twhile(n > 0)\n\t{\n\t\tint digit = n % 10;\n\t\tfreq[digit]++;\n\t\tif(freq[digit] > digit)\n\t\t\treturn false;\n\t\tn /= 10;\n\t}\n\treturn true;\n}",
    "{\n\tint[] freq = new int[10];\n\twhile (n > 0) \n\t{\n\t\tint digit = n % 10;\n\t\tfreq[digit]++;\n\t\tn /= 10;\n\t}\n\tfor (int i = 0; i < 10; i++) \n\t{\n\t\tif (freq[i] > i) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint[] digits = new int[10];\n\twhile (n > 0) \n\t{\n\t\tdigits[n % 10]++;\n\t\tn /= 10;\n\t}\n\tforeach (i; 0 .. 10) \n\t{\n\t\tif (digits[i] > i) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint[] freq = new int[10];\n\twhile (n > 0) {\n\t\tint digit = n % 10;\n\t\tif (++freq[digit] > digit)\n\t\t\treturn false;\n\t\tn /= 10;\n\t}\n\treturn true;\n}",
    "{\n\tint[] digits = new int[10];\n\twhile(n > 0)\n\t{\n\t\tint digit = n % 10;\n\t\tdigits[digit]++;\n\t\tn /= 10;\n\t}\n\t\n\tfor(int i = 0; i < 10; i++)\n\t{\n\t\tif(digits[i] > i)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}"
  ]
}
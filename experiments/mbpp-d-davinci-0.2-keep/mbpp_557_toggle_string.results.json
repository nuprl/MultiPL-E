{
  "name": "mbpp_557_toggle_string",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_557_toggle_string.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c >= 'A' && c <= 'Z')\n\t\t{\n\t\t\tresult ~= toLower(c);\n\t\t}\n\t\telse if(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tresult ~= toUpper(c);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp63qmlovg.d(10): Error: `string` is used as a type\n/tmp/tmp63qmlovg.d(15): Error: undefined identifier `toLower`\n/tmp/tmp63qmlovg.d(19): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63qmlovg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpezopmutd.d(10): Error: `string` is used as a type\n/tmp/tmpezopmutd.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpezopmutd.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpezopmutd.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpezopmutd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpxtbjlssm.d(10): Error: `string` is used as a type\n/tmp/tmpxtbjlssm.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpxtbjlssm.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpxtbjlssm.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtbjlssm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse if(c.isLower) \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpsn9fyvne.d(10): Error: `string` is used as a type\n/tmp/tmpsn9fyvne.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpsn9fyvne.d(15): Error: no property `toLower` for type `char`\n/tmp/tmpsn9fyvne.d(17): Error: no property `isLower` for type `char`\n/tmp/tmpsn9fyvne.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsn9fyvne.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpte2yzido.d(10): Error: `string` is used as a type\n/tmp/tmpte2yzido.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpte2yzido.d(15): Error: no property `toLower` for type `char`\n/tmp/tmpte2yzido.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpte2yzido.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpr97wk8nc.d(10): Error: `string` is used as a type\n/tmp/tmpr97wk8nc.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr97wk8nc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tresult ~= uppercase(c);\n\t\telse if(c >= 'A' && c <= 'Z')\n\t\t\tresult ~= lowercase(c);\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpb9uz2y7z.d(10): Error: `string` is used as a type\n/tmp/tmpb9uz2y7z.d(14): Error: undefined identifier `uppercase`\n/tmp/tmpb9uz2y7z.d(16): Error: undefined identifier `lowercase`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb9uz2y7z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpr97wk8nc.d(10): Error: `string` is used as a type\n/tmp/tmpr97wk8nc.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr97wk8nc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp82snu_le.d(10): Error: `string` is used as a type\n/tmp/tmp82snu_le.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp82snu_le.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp82snu_le.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp82snu_le.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string) \n\t{\n\t\tif(c >= 'a' && c <= 'z') \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t\telse if(c >= 'A' && c <= 'Z') \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmplwa1_fii.d(10): Error: `string` is used as a type\n/tmp/tmplwa1_fii.d(15): Error: no property `toUpper` for type `char`\n/tmp/tmplwa1_fii.d(19): Error: no property `toLower` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplwa1_fii.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpezopmutd.d(10): Error: `string` is used as a type\n/tmp/tmpezopmutd.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpezopmutd.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpezopmutd.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpezopmutd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpzys9ypk1.d(10): Error: `string` is used as a type\n/tmp/tmpzys9ypk1.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzys9ypk1.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpzys9ypk1.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzys9ypk1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(isAlpha(c))\n\t\t{\n\t\t\tif(isLower(c))\n\t\t\t{\n\t\t\t\tresult ~= toUpper(c);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= toLower(c);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp857vo9a5.d(10): Error: `string` is used as a type\n/tmp/tmp857vo9a5.d(13): Error: undefined identifier `isAlpha`\n/tmp/tmp857vo9a5.d(15): Error: undefined identifier `isLower`\n/tmp/tmp857vo9a5.d(17): Error: undefined identifier `toUpper`\n/tmp/tmp857vo9a5.d(21): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp857vo9a5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpfdbqcvjn.d(10): Error: `string` is used as a type\n/tmp/tmpfdbqcvjn.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpfdbqcvjn.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpfdbqcvjn.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfdbqcvjn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpezopmutd.d(10): Error: `string` is used as a type\n/tmp/tmpezopmutd.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpezopmutd.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpezopmutd.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpezopmutd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(isAlpha(c)) \n\t\t{\n\t\t\tif(isUpper(c)) \n\t\t\t{\n\t\t\t\tresult ~= toLower(c);\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= toUpper(c);\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpd1fjn4p6.d(10): Error: `string` is used as a type\n/tmp/tmpd1fjn4p6.d(13): Error: undefined identifier `isAlpha`\n/tmp/tmpd1fjn4p6.d(15): Error: undefined identifier `isUpper`\n/tmp/tmpd1fjn4p6.d(17): Error: undefined identifier `toLower`\n/tmp/tmpd1fjn4p6.d(21): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd1fjn4p6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(isUpper(c)) \n\t\t{\n\t\t\tresult ~= toLower(c);\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= toUpper(c);\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp66x459zf.d(10): Error: `string` is used as a type\n/tmp/tmp66x459zf.d(13): Error: undefined identifier `isUpper`\n/tmp/tmp66x459zf.d(15): Error: undefined identifier `toLower`\n/tmp/tmp66x459zf.d(19): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp66x459zf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpzc00q6b_.d(10): Error: `string` is used as a type\n/tmp/tmpzc00q6b_.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzc00q6b_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpq5_65bvi.d(10): Error: `string` is used as a type\n/tmp/tmpq5_65bvi.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpq5_65bvi.d(15): Error: no property `toLower` for type `char`\n/tmp/tmpq5_65bvi.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq5_65bvi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpzys9ypk1.d(10): Error: `string` is used as a type\n/tmp/tmpzys9ypk1.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzys9ypk1.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpzys9ypk1.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzys9ypk1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string) \n\t{\n\t\tif(isAlpha(c)) \n\t\t{\n\t\t\tif(isLower(c)) \n\t\t\t{\n\t\t\t\tresult ~= toUpper(c);\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= toLower(c);\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpkwrszhps.d(10): Error: `string` is used as a type\n/tmp/tmpkwrszhps.d(13): Error: undefined identifier `isAlpha`\n/tmp/tmpkwrszhps.d(15): Error: undefined identifier `isLower`\n/tmp/tmpkwrszhps.d(17): Error: undefined identifier `toUpper`\n/tmp/tmpkwrszhps.d(21): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkwrszhps.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(isUpper(c))\n\t\t\tresult ~= toLower(c);\n\t\telse\n\t\t\tresult ~= toUpper(c);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpp6xmhu4d.d(10): Error: `string` is used as a type\n/tmp/tmpp6xmhu4d.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpp6xmhu4d.d(14): Error: undefined identifier `toLower`\n/tmp/tmpp6xmhu4d.d(16): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp6xmhu4d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpxtbjlssm.d(10): Error: `string` is used as a type\n/tmp/tmpxtbjlssm.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpxtbjlssm.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpxtbjlssm.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtbjlssm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpfdbqcvjn.d(10): Error: `string` is used as a type\n/tmp/tmpfdbqcvjn.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpfdbqcvjn.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpfdbqcvjn.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfdbqcvjn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpzc00q6b_.d(10): Error: `string` is used as a type\n/tmp/tmpzc00q6b_.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzc00q6b_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpzc00q6b_.d(10): Error: `string` is used as a type\n/tmp/tmpzc00q6b_.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzc00q6b_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(isAlpha(c))\n\t\t{\n\t\t\tif(isUpper(c))\n\t\t\t{\n\t\t\t\tresult ~= toLower(c);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= toUpper(c);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpaeistvc0.d(10): Error: `string` is used as a type\n/tmp/tmpaeistvc0.d(13): Error: undefined identifier `isAlpha`\n/tmp/tmpaeistvc0.d(15): Error: undefined identifier `isUpper`\n/tmp/tmpaeistvc0.d(17): Error: undefined identifier `toLower`\n/tmp/tmpaeistvc0.d(21): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaeistvc0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpq5_65bvi.d(10): Error: `string` is used as a type\n/tmp/tmpq5_65bvi.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpq5_65bvi.d(15): Error: no property `toLower` for type `char`\n/tmp/tmpq5_65bvi.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq5_65bvi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(isUpper(c))\n\t\t\tresult ~= toLower(c);\n\t\telse\n\t\t\tresult ~= toUpper(c);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp3m8qv1xr.d(10): Error: `string` is used as a type\n/tmp/tmp3m8qv1xr.d(13): Error: undefined identifier `isUpper`\n/tmp/tmp3m8qv1xr.d(14): Error: undefined identifier `toLower`\n/tmp/tmp3m8qv1xr.d(16): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3m8qv1xr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpr97wk8nc.d(10): Error: `string` is used as a type\n/tmp/tmpr97wk8nc.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr97wk8nc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp82snu_le.d(10): Error: `string` is used as a type\n/tmp/tmp82snu_le.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp82snu_le.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp82snu_le.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp82snu_le.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(isAlpha(c))\n\t\t{\n\t\t\tif(isUpper(c))\n\t\t\t{\n\t\t\t\tresult ~= toLower(c);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= toUpper(c);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp13v0kaae.d(10): Error: `string` is used as a type\n/tmp/tmp13v0kaae.d(13): Error: undefined identifier `isAlpha`\n/tmp/tmp13v0kaae.d(15): Error: undefined identifier `isUpper`\n/tmp/tmp13v0kaae.d(17): Error: undefined identifier `toLower`\n/tmp/tmp13v0kaae.d(21): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp13v0kaae.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse if(c.isLower)\n\t\t\tresult ~= c.toUpper;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmplkm03u6d.d(10): Error: `string` is used as a type\n/tmp/tmplkm03u6d.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmplkm03u6d.d(14): Error: no property `toLower` for type `char`\n/tmp/tmplkm03u6d.d(15): Error: no property `isLower` for type `char`\n/tmp/tmplkm03u6d.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplkm03u6d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpxtbjlssm.d(10): Error: `string` is used as a type\n/tmp/tmpxtbjlssm.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpxtbjlssm.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpxtbjlssm.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtbjlssm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string) \n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpv38y9nq_.d(10): Error: `string` is used as a type\n/tmp/tmpv38y9nq_.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpv38y9nq_.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpv38y9nq_.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv38y9nq_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmplyk9cwwz.d(10): Error: `string` is used as a type\n/tmp/tmplyk9cwwz.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmplyk9cwwz.d(15): Error: no property `toLower` for type `char`\n/tmp/tmplyk9cwwz.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplyk9cwwz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp82snu_le.d(10): Error: `string` is used as a type\n/tmp/tmp82snu_le.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp82snu_le.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp82snu_le.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp82snu_le.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(isUpper(c))\n\t\t{\n\t\t\tresult ~= toLower(c);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= toUpper(c);\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpjj8fi6wx.d(10): Error: `string` is used as a type\n/tmp/tmpjj8fi6wx.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpjj8fi6wx.d(15): Error: undefined identifier `toLower`\n/tmp/tmpjj8fi6wx.d(19): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjj8fi6wx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(isUpper(c))\n\t\t\tresult ~= toLower(c);\n\t\telse\n\t\t\tresult ~= toUpper(c);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpbzp8yxnj.d(10): Error: `string` is used as a type\n/tmp/tmpbzp8yxnj.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpbzp8yxnj.d(14): Error: undefined identifier `toLower`\n/tmp/tmpbzp8yxnj.d(16): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbzp8yxnj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tresult ~= c.toUpper;\n\t\telse if(c >= 'A' && c <= 'Z')\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp1eg_eykg.d(10): Error: `string` is used as a type\n/tmp/tmp1eg_eykg.d(14): Error: no property `toUpper` for type `char`\n/tmp/tmp1eg_eykg.d(16): Error: no property `toLower` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1eg_eykg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(isUpper(c))\n\t\t{\n\t\t\tresult ~= toLower(c);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= toUpper(c);\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpvqynzc_h.d(10): Error: `string` is used as a type\n/tmp/tmpvqynzc_h.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpvqynzc_h.d(15): Error: undefined identifier `toLower`\n/tmp/tmpvqynzc_h.d(19): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvqynzc_h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpzc00q6b_.d(10): Error: `string` is used as a type\n/tmp/tmpzc00q6b_.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzc00q6b_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpxtbjlssm.d(10): Error: `string` is used as a type\n/tmp/tmpxtbjlssm.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpxtbjlssm.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpxtbjlssm.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtbjlssm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse if(c.isLower)\n\t\t\tresult ~= c.toUpper;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmppkfk42cg.d(10): Error: `string` is used as a type\n/tmp/tmppkfk42cg.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmppkfk42cg.d(14): Error: no property `toLower` for type `char`\n/tmp/tmppkfk42cg.d(15): Error: no property `isLower` for type `char`\n/tmp/tmppkfk42cg.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppkfk42cg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c >= 'a' && c <= 'z') \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t\telse if(c >= 'A' && c <= 'Z') \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpn5x2_q5s.d(10): Error: `string` is used as a type\n/tmp/tmpn5x2_q5s.d(15): Error: no property `toUpper` for type `char`\n/tmp/tmpn5x2_q5s.d(19): Error: no property `toLower` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5x2_q5s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach (c; string) \n\t{\n\t\tif (c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp2_1qw76s.d(10): Error: `string` is used as a type\n/tmp/tmp2_1qw76s.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp2_1qw76s.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp2_1qw76s.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2_1qw76s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpq5_65bvi.d(10): Error: `string` is used as a type\n/tmp/tmpq5_65bvi.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpq5_65bvi.d(15): Error: no property `toLower` for type `char`\n/tmp/tmpq5_65bvi.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq5_65bvi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(isUpper(c))\n\t\t\tresult ~= toLower(c);\n\t\telse\n\t\t\tresult ~= toUpper(c);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpp6xmhu4d.d(10): Error: `string` is used as a type\n/tmp/tmpp6xmhu4d.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpp6xmhu4d.d(14): Error: undefined identifier `toLower`\n/tmp/tmpp6xmhu4d.d(16): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp6xmhu4d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse if(c.isLower) \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmplpaap6a2.d(10): Error: `string` is used as a type\n/tmp/tmplpaap6a2.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmplpaap6a2.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmplpaap6a2.d(17): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmplpaap6a2.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplpaap6a2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tresult ~= c.toUpper;\n\t\telse if(c >= 'A' && c <= 'Z')\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp1eg_eykg.d(10): Error: `string` is used as a type\n/tmp/tmp1eg_eykg.d(14): Error: no property `toUpper` for type `char`\n/tmp/tmp1eg_eykg.d(16): Error: no property `toLower` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1eg_eykg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpzc00q6b_.d(10): Error: `string` is used as a type\n/tmp/tmpzc00q6b_.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzc00q6b_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tresult ~= c.to!string.toUpper;\n\t\telse if(c >= 'A' && c <= 'Z')\n\t\t\tresult ~= c.to!string.toLower;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpsfzhy9kg.d(10): Error: `string` is used as a type\n/tmp/tmpsfzhy9kg.d(14): Error: no property `to` for type `immutable(char)`\n/tmp/tmpsfzhy9kg.d(16): Error: no property `to` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsfzhy9kg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string) \n\t{\n\t\tif(isUpper(c)) \n\t\t{\n\t\t\tresult ~= toLower(c);\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= toUpper(c);\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp0nblemcy.d(10): Error: `string` is used as a type\n/tmp/tmp0nblemcy.d(13): Error: undefined identifier `isUpper`\n/tmp/tmp0nblemcy.d(15): Error: undefined identifier `toLower`\n/tmp/tmp0nblemcy.d(19): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0nblemcy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(isUpper(c)) \n\t\t{\n\t\t\tresult ~= toLower(c);\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= toUpper(c);\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpqutjc3mt.d(10): Error: `string` is used as a type\n/tmp/tmpqutjc3mt.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpqutjc3mt.d(15): Error: undefined identifier `toLower`\n/tmp/tmpqutjc3mt.d(19): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqutjc3mt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpxtbjlssm.d(10): Error: `string` is used as a type\n/tmp/tmpxtbjlssm.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpxtbjlssm.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpxtbjlssm.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtbjlssm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string) \n\t{\n\t\tif (c >= 'a' && c <= 'z') \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t\telse if (c >= 'A' && c <= 'Z') \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp3cxdrsmj.d(10): Error: `string` is used as a type\n/tmp/tmp3cxdrsmj.d(15): Error: no property `toUpper` for type `char`\n/tmp/tmp3cxdrsmj.d(19): Error: no property `toLower` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3cxdrsmj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(isAlpha(c))\n\t\t{\n\t\t\tif(isUpper(c))\n\t\t\t{\n\t\t\t\tresult ~= toLower(c);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= toUpper(c);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpaeistvc0.d(10): Error: `string` is used as a type\n/tmp/tmpaeistvc0.d(13): Error: undefined identifier `isAlpha`\n/tmp/tmpaeistvc0.d(15): Error: undefined identifier `isUpper`\n/tmp/tmpaeistvc0.d(17): Error: undefined identifier `toLower`\n/tmp/tmpaeistvc0.d(21): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaeistvc0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(isUpper(c))\n\t\t\tresult ~= toLower(c);\n\t\telse if(isLower(c))\n\t\t\tresult ~= toUpper(c);\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpnrryegvk.d(10): Error: `string` is used as a type\n/tmp/tmpnrryegvk.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpnrryegvk.d(14): Error: undefined identifier `toLower`\n/tmp/tmpnrryegvk.d(15): Error: undefined identifier `isLower`\n/tmp/tmpnrryegvk.d(16): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnrryegvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp82snu_le.d(10): Error: `string` is used as a type\n/tmp/tmp82snu_le.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp82snu_le.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp82snu_le.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp82snu_le.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpxtbjlssm.d(10): Error: `string` is used as a type\n/tmp/tmpxtbjlssm.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpxtbjlssm.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpxtbjlssm.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtbjlssm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tresult ~= isUpper(c) ? toLower(c) : toUpper(c);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpwk0x13zb.d(10): Error: `string` is used as a type\n/tmp/tmpwk0x13zb.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpwk0x13zb.d(13): Error: undefined identifier `toLower`\n/tmp/tmpwk0x13zb.d(13): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwk0x13zb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(isAlpha(c)) \n\t\t{\n\t\t\tif(isUpper(c)) \n\t\t\t{\n\t\t\t\tresult ~= toLower(c);\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= toUpper(c);\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpd1fjn4p6.d(10): Error: `string` is used as a type\n/tmp/tmpd1fjn4p6.d(13): Error: undefined identifier `isAlpha`\n/tmp/tmpd1fjn4p6.d(15): Error: undefined identifier `isUpper`\n/tmp/tmpd1fjn4p6.d(17): Error: undefined identifier `toLower`\n/tmp/tmpd1fjn4p6.d(21): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd1fjn4p6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(isUpper(c))\n\t\t\tresult ~= toLower(c);\n\t\telse\n\t\t\tresult ~= toUpper(c);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpbzp8yxnj.d(10): Error: `string` is used as a type\n/tmp/tmpbzp8yxnj.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpbzp8yxnj.d(14): Error: undefined identifier `toLower`\n/tmp/tmpbzp8yxnj.d(16): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbzp8yxnj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp82snu_le.d(10): Error: `string` is used as a type\n/tmp/tmp82snu_le.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp82snu_le.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp82snu_le.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp82snu_le.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif (c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp_2fwa50w.d(10): Error: `string` is used as a type\n/tmp/tmp_2fwa50w.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_2fwa50w.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_2fwa50w.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_2fwa50w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse if(c.isLower)\n\t\t\tresult ~= c.toUpper;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmplkm03u6d.d(10): Error: `string` is used as a type\n/tmp/tmplkm03u6d.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmplkm03u6d.d(14): Error: no property `toLower` for type `char`\n/tmp/tmplkm03u6d.d(15): Error: no property `isLower` for type `char`\n/tmp/tmplkm03u6d.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplkm03u6d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpq5_65bvi.d(10): Error: `string` is used as a type\n/tmp/tmpq5_65bvi.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpq5_65bvi.d(15): Error: no property `toLower` for type `char`\n/tmp/tmpq5_65bvi.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq5_65bvi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpxtbjlssm.d(10): Error: `string` is used as a type\n/tmp/tmpxtbjlssm.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpxtbjlssm.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpxtbjlssm.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtbjlssm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(isAlpha(c))\n\t\t{\n\t\t\tif(isUpper(c))\n\t\t\t{\n\t\t\t\tresult ~= toLower(c);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= toUpper(c);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpaeistvc0.d(10): Error: `string` is used as a type\n/tmp/tmpaeistvc0.d(13): Error: undefined identifier `isAlpha`\n/tmp/tmpaeistvc0.d(15): Error: undefined identifier `isUpper`\n/tmp/tmpaeistvc0.d(17): Error: undefined identifier `toLower`\n/tmp/tmpaeistvc0.d(21): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaeistvc0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpxtbjlssm.d(10): Error: `string` is used as a type\n/tmp/tmpxtbjlssm.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpxtbjlssm.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpxtbjlssm.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtbjlssm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(isUpper(c))\n\t\t{\n\t\t\tresult ~= toLower(c);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= toUpper(c);\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpf8kuzla2.d(10): Error: `string` is used as a type\n/tmp/tmpf8kuzla2.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpf8kuzla2.d(15): Error: undefined identifier `toLower`\n/tmp/tmpf8kuzla2.d(19): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf8kuzla2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(isAlpha(c)) \n\t\t{\n\t\t\tif(isLower(c)) \n\t\t\t{\n\t\t\t\tresult ~= toUpper(c);\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= toLower(c);\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp53qmlzgm.d(10): Error: `string` is used as a type\n/tmp/tmp53qmlzgm.d(13): Error: undefined identifier `isAlpha`\n/tmp/tmp53qmlzgm.d(15): Error: undefined identifier `isLower`\n/tmp/tmp53qmlzgm.d(17): Error: undefined identifier `toUpper`\n/tmp/tmp53qmlzgm.d(21): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp53qmlzgm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c >= 'A' && c <= 'Z')\n\t\t\tresult ~= toLower(c);\n\t\telse if(c >= 'a' && c <= 'z')\n\t\t\tresult ~= toUpper(c);\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmphcr7c587.d(10): Error: `string` is used as a type\n/tmp/tmphcr7c587.d(14): Error: undefined identifier `toLower`\n/tmp/tmphcr7c587.d(16): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphcr7c587.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpezopmutd.d(10): Error: `string` is used as a type\n/tmp/tmpezopmutd.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpezopmutd.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpezopmutd.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpezopmutd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isLower)\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpwemphhft.d(10): Error: `string` is used as a type\n/tmp/tmpwemphhft.d(13): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpwemphhft.d(15): Error: no property `toUpper` for type `immutable(char)`\n/tmp/tmpwemphhft.d(19): Error: no property `toLower` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwemphhft.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isLower)\n\t\t\tresult ~= c.toUpper;\n\t\telse\n\t\t\tresult ~= c.toLower;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpxktpxv2p.d(10): Error: `string` is used as a type\n/tmp/tmpxktpxv2p.d(13): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpxktpxv2p.d(14): Error: no property `toUpper` for type `immutable(char)`\n/tmp/tmpxktpxv2p.d(16): Error: no property `toLower` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxktpxv2p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(isUpper(c))\n\t\t\tresult ~= toLower(c);\n\t\telse if(isLower(c))\n\t\t\tresult ~= toUpper(c);\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpnrryegvk.d(10): Error: `string` is used as a type\n/tmp/tmpnrryegvk.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpnrryegvk.d(14): Error: undefined identifier `toLower`\n/tmp/tmpnrryegvk.d(15): Error: undefined identifier `isLower`\n/tmp/tmpnrryegvk.d(16): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnrryegvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(isUpper(c)) \n\t\t{\n\t\t\tresult ~= toLower(c);\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= toUpper(c);\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpqutjc3mt.d(10): Error: `string` is used as a type\n/tmp/tmpqutjc3mt.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpqutjc3mt.d(15): Error: undefined identifier `toLower`\n/tmp/tmpqutjc3mt.d(19): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqutjc3mt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp___yfviy.d(10): Error: `string` is used as a type\n/tmp/tmp___yfviy.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmp___yfviy.d(15): Error: no property `toLower` for type `char`\n/tmp/tmp___yfviy.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp___yfviy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c >= 'A' && c <= 'Z') \n\t\t{\n\t\t\tresult ~= tolower(c);\n\t\t}\n\t\telse if(c >= 'a' && c <= 'z') \n\t\t{\n\t\t\tresult ~= toupper(c);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp9p50r216.d(10): Error: `string` is used as a type\n/tmp/tmp9p50r216.d(15): Error: undefined identifier `tolower`\n/tmp/tmp9p50r216.d(19): Error: undefined identifier `toupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9p50r216.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach (c; string) \n\t{\n\t\tif (c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp6qqoulu5.d(10): Error: `string` is used as a type\n/tmp/tmp6qqoulu5.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp6qqoulu5.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp6qqoulu5.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6qqoulu5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach (i, c; string) \n\t{\n\t\tif (c >= 'a' && c <= 'z') \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t} \n\t\telse if (c >= 'A' && c <= 'Z') \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpu706o55e.d(10): Error: `string` is used as a type\n/tmp/tmpu706o55e.d(15): Error: no property `toUpper` for type `immutable(char)`\n/tmp/tmpu706o55e.d(19): Error: no property `toLower` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu706o55e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmplyk9cwwz.d(10): Error: `string` is used as a type\n/tmp/tmplyk9cwwz.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmplyk9cwwz.d(15): Error: no property `toLower` for type `char`\n/tmp/tmplyk9cwwz.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplyk9cwwz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpezopmutd.d(10): Error: `string` is used as a type\n/tmp/tmpezopmutd.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpezopmutd.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpezopmutd.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpezopmutd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpa958yd04.d(10): Error: `string` is used as a type\n/tmp/tmpa958yd04.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpa958yd04.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpa958yd04.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa958yd04.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse if(c.isLower)\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpsoqcpupw.d(10): Error: `string` is used as a type\n/tmp/tmpsoqcpupw.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpsoqcpupw.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpsoqcpupw.d(17): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpsoqcpupw.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsoqcpupw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp___yfviy.d(10): Error: `string` is used as a type\n/tmp/tmp___yfviy.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmp___yfviy.d(15): Error: no property `toLower` for type `char`\n/tmp/tmp___yfviy.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp___yfviy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c >= 'a' && c <= 'z') \n\t\t{\n\t\t\tresult ~= to!string(c - 'a' + 'A');\n\t\t}\n\t\telse if(c >= 'A' && c <= 'Z') \n\t\t{\n\t\t\tresult ~= to!string(c - 'A' + 'a');\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpwjkiyug3.d(10): Error: `string` is used as a type\n/tmp/tmpwjkiyug3.d(15): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpwjkiyug3.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwjkiyug3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(isUpper(c)) \n\t\t{\n\t\t\tresult ~= toLower(c);\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= toUpper(c);\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpodwwigtg.d(10): Error: `string` is used as a type\n/tmp/tmpodwwigtg.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpodwwigtg.d(15): Error: undefined identifier `toLower`\n/tmp/tmpodwwigtg.d(19): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpodwwigtg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\n/*\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpty2zvs7k.d(24): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpty2zvs7k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(isAlpha(c)) \n\t\t{\n\t\t\tif(isUpper(c)) \n\t\t\t{\n\t\t\t\tresult ~= toLower(c);\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= toUpper(c);\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpd1fjn4p6.d(10): Error: `string` is used as a type\n/tmp/tmpd1fjn4p6.d(13): Error: undefined identifier `isAlpha`\n/tmp/tmpd1fjn4p6.d(15): Error: undefined identifier `isUpper`\n/tmp/tmpd1fjn4p6.d(17): Error: undefined identifier `toLower`\n/tmp/tmpd1fjn4p6.d(21): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd1fjn4p6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c >= 'a' && c <= 'z') \n\t\t{\n\t\t\tresult ~= (c - 'a' + 'A');\n\t\t}\n\t\telse if(c >= 'A' && c <= 'Z') \n\t\t{\n\t\t\tresult ~= (c - 'A' + 'a');\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpb3m2unq2.d(10): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb3m2unq2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach (c; string) \n\t{\n\t\tif (isAlpha(c)) \n\t\t{\n\t\t\tresult ~= toLower(c);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= toUpper(c);\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpkh8x62c5.d(10): Error: `string` is used as a type\n/tmp/tmpkh8x62c5.d(13): Error: undefined identifier `isAlpha`\n/tmp/tmpkh8x62c5.d(15): Error: undefined identifier `toLower`\n/tmp/tmpkh8x62c5.d(19): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkh8x62c5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach (c; string) \n\t{\n\t\tif (c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse if (c.isLower) \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp6xq07ytz.d(10): Error: `string` is used as a type\n/tmp/tmp6xq07ytz.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp6xq07ytz.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp6xq07ytz.d(17): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp6xq07ytz.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6xq07ytz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpxtbjlssm.d(10): Error: `string` is used as a type\n/tmp/tmpxtbjlssm.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpxtbjlssm.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpxtbjlssm.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtbjlssm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpaygicd5y.d(10): Error: `string` is used as a type\n/tmp/tmpaygicd5y.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpaygicd5y.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpaygicd5y.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaygicd5y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpzc00q6b_.d(10): Error: `string` is used as a type\n/tmp/tmpzc00q6b_.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzc00q6b_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp82snu_le.d(10): Error: `string` is used as a type\n/tmp/tmp82snu_le.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp82snu_le.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp82snu_le.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp82snu_le.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpzys9ypk1.d(10): Error: `string` is used as a type\n/tmp/tmpzys9ypk1.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzys9ypk1.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpzys9ypk1.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzys9ypk1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpfdbqcvjn.d(10): Error: `string` is used as a type\n/tmp/tmpfdbqcvjn.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpfdbqcvjn.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpfdbqcvjn.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfdbqcvjn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpezopmutd.d(10): Error: `string` is used as a type\n/tmp/tmpezopmutd.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpezopmutd.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpezopmutd.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpezopmutd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpezopmutd.d(10): Error: `string` is used as a type\n/tmp/tmpezopmutd.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpezopmutd.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpezopmutd.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpezopmutd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp82snu_le.d(10): Error: `string` is used as a type\n/tmp/tmp82snu_le.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp82snu_le.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp82snu_le.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp82snu_le.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpfdbqcvjn.d(10): Error: `string` is used as a type\n/tmp/tmpfdbqcvjn.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpfdbqcvjn.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpfdbqcvjn.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfdbqcvjn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif (c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp08apdyy9.d(10): Error: `string` is used as a type\n/tmp/tmp08apdyy9.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp08apdyy9.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp08apdyy9.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp08apdyy9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse if(c.isLower) \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpvokfaazc.d(10): Error: `string` is used as a type\n/tmp/tmpvokfaazc.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpvokfaazc.d(15): Error: no property `toLower` for type `char`\n/tmp/tmpvokfaazc.d(17): Error: no property `isLower` for type `char`\n/tmp/tmpvokfaazc.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvokfaazc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpaygicd5y.d(10): Error: `string` is used as a type\n/tmp/tmpaygicd5y.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpaygicd5y.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpaygicd5y.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaygicd5y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpr97wk8nc.d(10): Error: `string` is used as a type\n/tmp/tmpr97wk8nc.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr97wk8nc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(isAlpha(c))\n\t\t{\n\t\t\tif(isLower(c))\n\t\t\t\tresult ~= toUpper(c);\n\t\t\telse\n\t\t\t\tresult ~= toLower(c);\n\t\t}\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpf3zzinjv.d(10): Error: `string` is used as a type\n/tmp/tmpf3zzinjv.d(13): Error: undefined identifier `isAlpha`\n/tmp/tmpf3zzinjv.d(15): Error: undefined identifier `isLower`\n/tmp/tmpf3zzinjv.d(16): Error: undefined identifier `toUpper`\n/tmp/tmpf3zzinjv.d(18): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3zzinjv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp9ywmwa2g.d(10): Error: `string` is used as a type\n/tmp/tmp9ywmwa2g.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmp9ywmwa2g.d(15): Error: no property `toLower` for type `char`\n/tmp/tmp9ywmwa2g.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9ywmwa2g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c >= 'a' && c <= 'z') \n\t\t{\n\t\t\tresult ~= c.to!string.toUpper;\n\t\t} \n\t\telse if(c >= 'A' && c <= 'Z') \n\t\t{\n\t\t\tresult ~= c.to!string.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpcqn609fq.d(10): Error: `string` is used as a type\n/tmp/tmpcqn609fq.d(15): Error: no property `to` for type `immutable(char)`\n/tmp/tmpcqn609fq.d(19): Error: no property `to` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcqn609fq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c >= 'a' && c <= 'z') \n\t\t{\n\t\t\tresult ~= (c - 'a' + 'A');\n\t\t} \n\t\telse if(c >= 'A' && c <= 'Z') \n\t\t{\n\t\t\tresult ~= (c - 'A' + 'a');\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmppb_huami.d(10): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppb_huami.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpzc00q6b_.d(10): Error: `string` is used as a type\n/tmp/tmpzc00q6b_.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzc00q6b_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpr97wk8nc.d(10): Error: `string` is used as a type\n/tmp/tmpr97wk8nc.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr97wk8nc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpfdbqcvjn.d(10): Error: `string` is used as a type\n/tmp/tmpfdbqcvjn.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpfdbqcvjn.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpfdbqcvjn.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfdbqcvjn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse if(c.isLower)\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpstortl_6.d(10): Error: `string` is used as a type\n/tmp/tmpstortl_6.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpstortl_6.d(15): Error: no property `toLower` for type `char`\n/tmp/tmpstortl_6.d(17): Error: no property `isLower` for type `char`\n/tmp/tmpstortl_6.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpstortl_6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(isUpper(c))\n\t\t{\n\t\t\tresult ~= toLower(c);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= toUpper(c);\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpvqynzc_h.d(10): Error: `string` is used as a type\n/tmp/tmpvqynzc_h.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpvqynzc_h.d(15): Error: undefined identifier `toLower`\n/tmp/tmpvqynzc_h.d(19): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvqynzc_h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c >= 'A' && c <= 'Z') \n\t\t{\n\t\t\tresult ~= tolower(c);\n\t\t} \n\t\telse if(c >= 'a' && c <= 'z') \n\t\t{\n\t\t\tresult ~= toupper(c);\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpli5ey9lk.d(10): Error: `string` is used as a type\n/tmp/tmpli5ey9lk.d(15): Error: undefined identifier `tolower`\n/tmp/tmpli5ey9lk.d(19): Error: undefined identifier `toupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpli5ey9lk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpxtbjlssm.d(10): Error: `string` is used as a type\n/tmp/tmpxtbjlssm.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpxtbjlssm.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpxtbjlssm.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtbjlssm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif (c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp_2fwa50w.d(10): Error: `string` is used as a type\n/tmp/tmp_2fwa50w.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_2fwa50w.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_2fwa50w.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_2fwa50w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(isUpper(c)) \n\t\t{\n\t\t\tresult ~= toLower(c);\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= toUpper(c);\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp66x459zf.d(10): Error: `string` is used as a type\n/tmp/tmp66x459zf.d(13): Error: undefined identifier `isUpper`\n/tmp/tmp66x459zf.d(15): Error: undefined identifier `toLower`\n/tmp/tmp66x459zf.d(19): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp66x459zf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(isUpper(c))\n\t\t\tresult ~= toLower(c);\n\t\telse\n\t\t\tresult ~= toUpper(c);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpoy2fl98w.d(10): Error: `string` is used as a type\n/tmp/tmpoy2fl98w.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpoy2fl98w.d(14): Error: undefined identifier `toLower`\n/tmp/tmpoy2fl98w.d(16): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoy2fl98w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp___yfviy.d(10): Error: `string` is used as a type\n/tmp/tmp___yfviy.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmp___yfviy.d(15): Error: no property `toLower` for type `char`\n/tmp/tmp___yfviy.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp___yfviy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpxtbjlssm.d(10): Error: `string` is used as a type\n/tmp/tmpxtbjlssm.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpxtbjlssm.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpxtbjlssm.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtbjlssm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(isAlpha(c))\n\t\t{\n\t\t\tif(isUpper(c))\n\t\t\t{\n\t\t\t\tresult ~= toLower(c);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= toUpper(c);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp_1myo4p1.d(10): Error: `string` is used as a type\n/tmp/tmp_1myo4p1.d(13): Error: undefined identifier `isAlpha`\n/tmp/tmp_1myo4p1.d(15): Error: undefined identifier `isUpper`\n/tmp/tmp_1myo4p1.d(17): Error: undefined identifier `toLower`\n/tmp/tmp_1myo4p1.d(21): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_1myo4p1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpfzwqd9pu.d(10): Error: `string` is used as a type\n/tmp/tmpfzwqd9pu.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpfzwqd9pu.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpfzwqd9pu.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfzwqd9pu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c >= 'a' && c <= 'z') \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t} \n\t\telse if(c >= 'A' && c <= 'Z') \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmplszlbruo.d(10): Error: `string` is used as a type\n/tmp/tmplszlbruo.d(15): Error: no property `toUpper` for type `char`\n/tmp/tmplszlbruo.d(19): Error: no property `toLower` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplszlbruo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpte2yzido.d(10): Error: `string` is used as a type\n/tmp/tmpte2yzido.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpte2yzido.d(15): Error: no property `toLower` for type `char`\n/tmp/tmpte2yzido.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpte2yzido.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(ch; string)\n\t{\n\t\tif(ch.isUpper)\n\t\t\tresult ~= ch.toLower;\n\t\telse if(ch.isLower)\n\t\t\tresult ~= ch.toUpper;\n\t\telse\n\t\t\tresult ~= ch;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp57nwytn4.d(10): Error: `string` is used as a type\n/tmp/tmp57nwytn4.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp57nwytn4.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp57nwytn4.d(15): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp57nwytn4.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp57nwytn4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpr97wk8nc.d(10): Error: `string` is used as a type\n/tmp/tmpr97wk8nc.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr97wk8nc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isLower)\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpct2xhi3_.d(10): Error: `string` is used as a type\n/tmp/tmpct2xhi3_.d(13): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpct2xhi3_.d(15): Error: no property `toUpper` for type `immutable(char)`\n/tmp/tmpct2xhi3_.d(19): Error: no property `toLower` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpct2xhi3_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpte2yzido.d(10): Error: `string` is used as a type\n/tmp/tmpte2yzido.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpte2yzido.d(15): Error: no property `toLower` for type `char`\n/tmp/tmpte2yzido.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpte2yzido.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpzc00q6b_.d(10): Error: `string` is used as a type\n/tmp/tmpzc00q6b_.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzc00q6b_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string) \n\t{\n\t\tif(isAlpha(c)) \n\t\t{\n\t\t\tif(isUpper(c)) \n\t\t\t{\n\t\t\t\tresult ~= toLower(c);\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= toUpper(c);\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpppfzjf31.d(10): Error: `string` is used as a type\n/tmp/tmpppfzjf31.d(13): Error: undefined identifier `isAlpha`\n/tmp/tmpppfzjf31.d(15): Error: undefined identifier `isUpper`\n/tmp/tmpppfzjf31.d(17): Error: undefined identifier `toLower`\n/tmp/tmpppfzjf31.d(21): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpppfzjf31.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpezopmutd.d(10): Error: `string` is used as a type\n/tmp/tmpezopmutd.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpezopmutd.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpezopmutd.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpezopmutd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpxtbjlssm.d(10): Error: `string` is used as a type\n/tmp/tmpxtbjlssm.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpxtbjlssm.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpxtbjlssm.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtbjlssm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach (c; string)\n\t{\n\t\tif (c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmptctiyyiu.d(10): Error: `string` is used as a type\n/tmp/tmptctiyyiu.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmptctiyyiu.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmptctiyyiu.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptctiyyiu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(isAlpha(c))\n\t\t{\n\t\t\tif(isUpper(c))\n\t\t\t{\n\t\t\t\tresult ~= toLower(c);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= toUpper(c);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp13v0kaae.d(10): Error: `string` is used as a type\n/tmp/tmp13v0kaae.d(13): Error: undefined identifier `isAlpha`\n/tmp/tmp13v0kaae.d(15): Error: undefined identifier `isUpper`\n/tmp/tmp13v0kaae.d(17): Error: undefined identifier `toLower`\n/tmp/tmp13v0kaae.d(21): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp13v0kaae.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse if(c.isLower)\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpy8ptunom.d(10): Error: `string` is used as a type\n/tmp/tmpy8ptunom.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpy8ptunom.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpy8ptunom.d(17): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpy8ptunom.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy8ptunom.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tresult ~= to!string(c - 'a' + 'A');\n\t\telse if(c >= 'A' && c <= 'Z')\n\t\t\tresult ~= to!string(c - 'A' + 'a');\n\t\telse\n\t\t\tresult ~= to!string(c);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp4bz58lf1.d(10): Error: `string` is used as a type\n/tmp/tmp4bz58lf1.d(14): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmp4bz58lf1.d(16): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmp4bz58lf1.d(18): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4bz58lf1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse if(c.isLower)\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpsoqcpupw.d(10): Error: `string` is used as a type\n/tmp/tmpsoqcpupw.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpsoqcpupw.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpsoqcpupw.d(17): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpsoqcpupw.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsoqcpupw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach (c; string)\n\t{\n\t\tif (c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpxmkukmz8.d(10): Error: `string` is used as a type\n/tmp/tmpxmkukmz8.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpxmkukmz8.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpxmkukmz8.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxmkukmz8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpfdbqcvjn.d(10): Error: `string` is used as a type\n/tmp/tmpfdbqcvjn.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpfdbqcvjn.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpfdbqcvjn.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfdbqcvjn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpa958yd04.d(10): Error: `string` is used as a type\n/tmp/tmpa958yd04.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpa958yd04.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpa958yd04.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa958yd04.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpzc00q6b_.d(10): Error: `string` is used as a type\n/tmp/tmpzc00q6b_.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpzc00q6b_.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzc00q6b_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(isUpper(c))\n\t\t{\n\t\t\tresult ~= toLower(c);\n\t\t}\n\t\telse if(isLower(c))\n\t\t{\n\t\t\tresult ~= toUpper(c);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "/tmp/tmp2ruasqu_.d(10): Error: `string` is used as a type\n/tmp/tmp2ruasqu_.d(13): Error: undefined identifier `isUpper`\n/tmp/tmp2ruasqu_.d(15): Error: undefined identifier `toLower`\n/tmp/tmp2ruasqu_.d(17): Error: undefined identifier `isLower`\n/tmp/tmp2ruasqu_.d(19): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2ruasqu_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c >= 'a' && c <= 'z') \n\t\t{\n\t\t\tresult ~= (c - 'a' + 'A');\n\t\t}\n\t\telse if(c >= 'A' && c <= 'Z') \n\t\t{\n\t\t\tresult ~= (c - 'A' + 'a');\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpb3m2unq2.d(10): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb3m2unq2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpxtbjlssm.d(10): Error: `string` is used as a type\n/tmp/tmpxtbjlssm.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpxtbjlssm.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpxtbjlssm.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtbjlssm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tresult ~= (c - 'a' + 'A');\n\t\t}\n\t\telse if(c >= 'A' && c <= 'Z')\n\t\t{\n\t\t\tresult ~= (c - 'A' + 'a');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmptcn9v_3b.d(10): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptcn9v_3b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpxtbjlssm.d(10): Error: `string` is used as a type\n/tmp/tmpxtbjlssm.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpxtbjlssm.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpxtbjlssm.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtbjlssm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp82snu_le.d(10): Error: `string` is used as a type\n/tmp/tmp82snu_le.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp82snu_le.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp82snu_le.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp82snu_le.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpzys9ypk1.d(10): Error: `string` is used as a type\n/tmp/tmpzys9ypk1.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzys9ypk1.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpzys9ypk1.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzys9ypk1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string) \n\t{\n\t\tif(c >= 'a' && c <= 'z') \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t\telse if(c >= 'A' && c <= 'Z') \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmplwa1_fii.d(10): Error: `string` is used as a type\n/tmp/tmplwa1_fii.d(15): Error: no property `toUpper` for type `char`\n/tmp/tmplwa1_fii.d(19): Error: no property `toLower` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplwa1_fii.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp___yfviy.d(10): Error: `string` is used as a type\n/tmp/tmp___yfviy.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmp___yfviy.d(15): Error: no property `toLower` for type `char`\n/tmp/tmp___yfviy.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp___yfviy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpq5_65bvi.d(10): Error: `string` is used as a type\n/tmp/tmpq5_65bvi.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpq5_65bvi.d(15): Error: no property `toLower` for type `char`\n/tmp/tmpq5_65bvi.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq5_65bvi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tresult ~= c.toUpper;\n\t\telse if(c >= 'A' && c <= 'Z')\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp1eg_eykg.d(10): Error: `string` is used as a type\n/tmp/tmp1eg_eykg.d(14): Error: no property `toUpper` for type `char`\n/tmp/tmp1eg_eykg.d(16): Error: no property `toLower` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1eg_eykg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpzys9ypk1.d(10): Error: `string` is used as a type\n/tmp/tmpzys9ypk1.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzys9ypk1.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpzys9ypk1.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzys9ypk1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse if(c.isLower) \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmplpaap6a2.d(10): Error: `string` is used as a type\n/tmp/tmplpaap6a2.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmplpaap6a2.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmplpaap6a2.d(17): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmplpaap6a2.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplpaap6a2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpfdbqcvjn.d(10): Error: `string` is used as a type\n/tmp/tmpfdbqcvjn.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpfdbqcvjn.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpfdbqcvjn.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfdbqcvjn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(isUpper(c)) \n\t\t{\n\t\t\tresult ~= toLower(c);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= toUpper(c);\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "/tmp/tmp7mszwjkf.d(10): Error: `string` is used as a type\n/tmp/tmp7mszwjkf.d(13): Error: undefined identifier `isUpper`\n/tmp/tmp7mszwjkf.d(15): Error: undefined identifier `toLower`\n/tmp/tmp7mszwjkf.d(19): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mszwjkf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse if(c.isLower) \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpsn9fyvne.d(10): Error: `string` is used as a type\n/tmp/tmpsn9fyvne.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpsn9fyvne.d(15): Error: no property `toLower` for type `char`\n/tmp/tmpsn9fyvne.d(17): Error: no property `isLower` for type `char`\n/tmp/tmpsn9fyvne.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsn9fyvne.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpfdbqcvjn.d(10): Error: `string` is used as a type\n/tmp/tmpfdbqcvjn.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpfdbqcvjn.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpfdbqcvjn.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfdbqcvjn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp7bk44q1x.d(10): Error: `string` is used as a type\n/tmp/tmp7bk44q1x.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp7bk44q1x.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bk44q1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpr97wk8nc.d(10): Error: `string` is used as a type\n/tmp/tmpr97wk8nc.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr97wk8nc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) {\n\t\tif(c.isUpper) {\n\t\t\tresult ~= c.toLower;\n\t\t} else if(c.isLower) {\n\t\t\tresult ~= c.toUpper;\n\t\t} else {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpwwsbs1hs.d(10): Error: `string` is used as a type\n/tmp/tmpwwsbs1hs.d(12): Error: no property `isUpper` for type `char`\n/tmp/tmpwwsbs1hs.d(13): Error: no property `toLower` for type `char`\n/tmp/tmpwwsbs1hs.d(14): Error: no property `isLower` for type `char`\n/tmp/tmpwwsbs1hs.d(15): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwwsbs1hs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tresult ~= isUpper(c) ? toLower(c) : toUpper(c);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpwk0x13zb.d(10): Error: `string` is used as a type\n/tmp/tmpwk0x13zb.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpwk0x13zb.d(13): Error: undefined identifier `toLower`\n/tmp/tmpwk0x13zb.d(13): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwk0x13zb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif (c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpnhd14wph.d(10): Error: `string` is used as a type\n/tmp/tmpnhd14wph.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpnhd14wph.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpnhd14wph.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnhd14wph.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpezopmutd.d(10): Error: `string` is used as a type\n/tmp/tmpezopmutd.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpezopmutd.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpezopmutd.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpezopmutd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmplyk9cwwz.d(10): Error: `string` is used as a type\n/tmp/tmplyk9cwwz.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmplyk9cwwz.d(15): Error: no property `toLower` for type `char`\n/tmp/tmplyk9cwwz.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplyk9cwwz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse if(c.isLower)\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpstortl_6.d(10): Error: `string` is used as a type\n/tmp/tmpstortl_6.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpstortl_6.d(15): Error: no property `toLower` for type `char`\n/tmp/tmpstortl_6.d(17): Error: no property `isLower` for type `char`\n/tmp/tmpstortl_6.d(19): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpstortl_6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse if(c.isLower)\n\t\t\tresult ~= c.toUpper;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpv0vyzm2_.d(10): Error: `string` is used as a type\n/tmp/tmpv0vyzm2_.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpv0vyzm2_.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpv0vyzm2_.d(15): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpv0vyzm2_.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv0vyzm2_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpr97wk8nc.d(10): Error: `string` is used as a type\n/tmp/tmpr97wk8nc.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr97wk8nc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpezopmutd.d(10): Error: `string` is used as a type\n/tmp/tmpezopmutd.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpezopmutd.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpezopmutd.d(16): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpezopmutd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c >= 'A' && c <= 'Z')\n\t\t\tresult ~= to!char(c + 32);\n\t\telse if(c >= 'a' && c <= 'z')\n\t\t\tresult ~= to!char(c - 32);\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpy9uvxq61.d(10): Error: `string` is used as a type\n/tmp/tmpy9uvxq61.d(14): Error: template instance `to!char` template `to` is not defined, did you mean No?\n/tmp/tmpy9uvxq61.d(16): Error: template instance `to!char` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy9uvxq61.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c.toLower;\n\t\telse\n\t\t\tresult ~= c.toUpper;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpfdbqcvjn.d(10): Error: `string` is used as a type\n/tmp/tmpfdbqcvjn.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpfdbqcvjn.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpfdbqcvjn.d(16): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfdbqcvjn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpr97wk8nc.d(10): Error: `string` is used as a type\n/tmp/tmpr97wk8nc.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpr97wk8nc.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr97wk8nc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(isUpper(c)) \n\t\t{\n\t\t\tresult ~= toLower(c);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= toUpper(c);\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmpfdlc5oc4.d(10): Error: `string` is used as a type\n/tmp/tmpfdlc5oc4.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpfdlc5oc4.d(15): Error: undefined identifier `toLower`\n/tmp/tmpfdlc5oc4.d(19): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfdlc5oc4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to toggle the case of all characters in a string.\n\t\n*/\nstring toggle_string(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif (c.isUpper) \n\t\t{\n\t\t\tresult ~= c.toLower;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = toggle_string;\n\n    assert(candidate(\"Python\") == \"pYTHON\");\n    assert(candidate(\"Pangram\") == \"pANGRAM\");\n    assert(candidate(\"LIttLE\") == \"liTTle\");\n}\nvoid main(){}",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "/tmp/tmp08apdyy9.d(10): Error: `string` is used as a type\n/tmp/tmp08apdyy9.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp08apdyy9.d(15): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp08apdyy9.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp08apdyy9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to sum all amicable numbers from 1 to a specified number.\n\t\n*/\nlong amicable_numbers_sum(long limit) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = amicable_numbers_sum;\n\n    assert(candidate(999L) == 504L);\n    assert(candidate(9999L) == 31626L);\n    assert(candidate(99L) == 0L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i < limit; i++)\n\t{\n\t\tlong sum_of_divisors = 0;\n\t\tfor (long j = 1; j < i; j++)\n\t\t{\n\t\t\tif (i % j == 0)\n\t\t\t{\n\t\t\t\tsum_of_divisors += j;\n\t\t\t}\n\t\t}\n\t\tlong sum_of_divisors_of_sum_of_divisors = 0;\n\t\tfor (long j = 1; j < sum_of_divisors; j++)\n\t\t{\n\t\t\tif (sum_of_divisors % j == 0)\n\t\t\t{\n\t\t\t\tsum_of_divisors_of_sum_of_divisors += j;\n\t\t\t}\n\t\t}\n\t\tif (sum_of_divisors_of_sum_of_divisors == i && sum_of_divisors != i)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i < limit; i++)\n\t{\n\t\tlong a = sum_of_divisors(i);\n\t\tif (a != i && sum_of_divisors(a) == i)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i < limit; i++) \n\t{\n\t\tlong a = sum_of_divisors(i);\n\t\tif (a > i && sum_of_divisors(a) == i) \n\t\t{\n\t\t\tsum += i + a;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i < limit; i++) \n\t{\n\t\tlong sum_divisors_i = 0;\n\t\tfor (long j = 1; j < i; j++) \n\t\t{\n\t\t\tif (i % j == 0) \n\t\t\t{\n\t\t\t\tsum_divisors_i += j;\n\t\t\t}\n\t\t}\n\t\tlong sum_divisors_j = 0;\n\t\tfor (long j = 1; j < sum_divisors_i; j++) \n\t\t{\n\t\t\tif (sum_divisors_i % j == 0) \n\t\t\t{\n\t\t\t\tsum_divisors_j += j;\n\t\t\t}\n\t\t}\n\t\tif (sum_divisors_j == i && i != sum_divisors_i) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i < limit; i++) \n\t{\n\t\tlong a = i;\n\t\tlong b = sum_of_divisors(a);\n\t\tif (b > a && sum_of_divisors(b) == a) \n\t\t{\n\t\t\tsum += a + b;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i < limit; i++) \n\t{\n\t\tlong a = sum_of_divisors(i);\n\t\tif (a > i && i == sum_of_divisors(a)) \n\t\t{\n\t\t\tsum += i;\n\t\t\tsum += a;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i < limit; i++) \n\t{\n\t\tlong sum_of_divisors = 0;\n\t\tfor (long j = 1; j < i; j++) \n\t\t{\n\t\t\tif (i % j == 0) \n\t\t\t{\n\t\t\t\tsum_of_divisors += j;\n\t\t\t}\n\t\t}\n\t\tlong sum_of_divisors_of_sum_of_divisors = 0;\n\t\tfor (long j = 1; j < sum_of_divisors; j++) \n\t\t{\n\t\t\tif (sum_of_divisors % j == 0) \n\t\t\t{\n\t\t\t\tsum_of_divisors_of_sum_of_divisors += j;\n\t\t\t}\n\t\t}\n\t\tif (sum_of_divisors_of_sum_of_divisors == i && i != sum_of_divisors) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i < limit; i++) \n\t{\n\t\tlong a = sum_of_divisors(i);\n\t\tif (a > i && sum_of_divisors(a) == i) \n\t\t{\n\t\t\tsum += i + a;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i < limit; i++)\n\t{\n\t\tlong a = sum_of_divisors(i);\n\t\tif (a > i && sum_of_divisors(a) == i)\n\t\t{\n\t\t\tsum += i + a;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong a, b;\n\t\n\tfor (long i = 1; i < limit; i++) \n\t{\n\t\ta = sum_of_divisors(i);\n\t\tb = sum_of_divisors(a);\n\t\t\n\t\tif (i == b && i != a) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong a, b;\n\tfor (long i = 1; i < limit; i++) \n\t{\n\t\ta = sum_of_proper_divisors(i);\n\t\tif (a > i) \n\t\t{\n\t\t\tb = sum_of_proper_divisors(a);\n\t\t\tif (b == i) \n\t\t\t{\n\t\t\t\tsum += a + b;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i < limit; i++) \n\t{\n\t\tlong a = sum_of_divisors(i);\n\t\tif (a > i && sum_of_divisors(a) == i) \n\t\t{\n\t\t\tsum += i + a;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i < limit; i++) {\n\t\tlong a = sum_divisors(i);\n\t\tif (a > i && sum_divisors(a) == i) {\n\t\t\tsum += a + i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i < limit; i++)\n\t{\n\t\tlong sum_of_divisors = 0;\n\t\tfor (long j = 1; j < i; j++)\n\t\t{\n\t\t\tif (i % j == 0)\n\t\t\t{\n\t\t\t\tsum_of_divisors += j;\n\t\t\t}\n\t\t}\n\t\tlong sum_of_divisors_of_sum_of_divisors = 0;\n\t\tfor (long j = 1; j < sum_of_divisors; j++)\n\t\t{\n\t\t\tif (sum_of_divisors % j == 0)\n\t\t\t{\n\t\t\t\tsum_of_divisors_of_sum_of_divisors += j;\n\t\t\t}\n\t\t}\n\t\tif (sum_of_divisors_of_sum_of_divisors == i && i != sum_of_divisors)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i < limit; i++) \n\t{\n\t\tlong a = sum_of_divisors(i);\n\t\tif (a > i && sum_of_divisors(a) == i) \n\t\t{\n\t\t\tsum += i + a;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tfor(long i = 1; i <= limit; i++)\n\t{\n\t\tlong sum_of_divisors = 0;\n\t\tfor(long j = 1; j < i; j++)\n\t\t{\n\t\t\tif(i % j == 0)\n\t\t\t{\n\t\t\t\tsum_of_divisors += j;\n\t\t\t}\n\t\t}\n\t\t\n\t\tlong sum_of_divisors_of_sum_of_divisors = 0;\n\t\tfor(long j = 1; j < sum_of_divisors; j++)\n\t\t{\n\t\t\tif(sum_of_divisors % j == 0)\n\t\t\t{\n\t\t\t\tsum_of_divisors_of_sum_of_divisors += j;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(sum_of_divisors_of_sum_of_divisors == i && sum_of_divisors != i)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i <= limit; i++) \n\t{\n\t\tlong a = sum_of_divisors(i);\n\t\tif (a > i && sum_of_divisors(a) == i) \n\t\t{\n\t\t\tsum += i + a;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; 1..limit)\n\t{\n\t\tlong sum_of_divisors = 0;\n\t\tforeach(j; 1..i)\n\t\t{\n\t\t\tif(i % j == 0)\n\t\t\t{\n\t\t\t\tsum_of_divisors += j;\n\t\t\t}\n\t\t}\n\t\tif(sum_of_divisors > i)\n\t\t{\n\t\t\tlong sum_of_divisors_of_sum_of_divisors = 0;\n\t\t\tforeach(j; 1..sum_of_divisors)\n\t\t\t{\n\t\t\t\tif(sum_of_divisors % j == 0)\n\t\t\t\t{\n\t\t\t\t\tsum_of_divisors_of_sum_of_divisors += j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sum_of_divisors_of_sum_of_divisors == i)\n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; 1..limit)\n\t{\n\t\tlong sum_of_divisors_i = sum_of_divisors(i);\n\t\tif(sum_of_divisors_i > i)\n\t\t{\n\t\t\tlong sum_of_divisors_sum_of_divisors_i = sum_of_divisors(sum_of_divisors_i);\n\t\t\tif(sum_of_divisors_sum_of_divisors_i == i)\n\t\t\t{\n\t\t\t\tsum += i + sum_of_divisors_i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; 1..limit)\n\t{\n\t\tauto a = i;\n\t\tauto b = sum_divisors(a);\n\t\tif (b > a && sum_divisors(b) == a)\n\t\t{\n\t\t\tsum += a + b;\n\t\t}\n\t}\n\treturn sum;\n}"
  ]
}
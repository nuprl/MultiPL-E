{
  "name": "mbpp_249_intersection_array",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the intersection of two arrays.\n\t\n*/\nlong[] intersection_array(long[] array_nums1, long[] array_nums2) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_249_intersection_array.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = intersection_array;\n\n    assert(candidate([1L, 2L, 3L, 5L, 7L, 8L, 9L, 10L], [1L, 2L, 4L, 8L, 9L]) == [1L, 2L, 8L, 9L]);\n    assert(candidate([1L, 2L, 3L, 5L, 7L, 8L, 9L, 10L], [3L, 5L, 7L, 9L]) == [3L, 5L, 7L, 9L]);\n    assert(candidate([1L, 2L, 3L, 5L, 7L, 8L, 9L, 10L], [10L, 20L, 30L, 40L]) == [10L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] result;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(num in array_nums2)\n\t\t{\n\t\t\tresult ~= num;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] array_result;\n\tlong[] array_temp;\n\tlong[] array_temp2;\n\tlong[] array_temp3;\n\tlong[] array_temp4;\n\tlong[] array_temp5;\n\tlong[] array_temp6;\n\tlong[] array_temp7;\n\tlong[] array_temp8;\n\tlong[] array_temp9;\n\tlong[] array_temp10;\n\tlong[] array_temp11;\n\tlong[] array_temp12;\n\tlong[] array_temp13;\n\tlong[] array_temp14;\n\tlong[] array_temp15;\n\tlong[] array_temp16;\n\tlong[] array_temp17;\n\tlong[] array_temp18;\n\tlong[] array_temp19;\n\tlong[] array_temp20;\n\tlong[] array_temp21;\n\tlong[] array_temp22;\n\tlong[] array_temp23;\n\tlong[] array_temp24;\n\tlong[] array_temp25;\n\tlong[] array_temp26;\n\tlong[] array_temp27;\n\tlong[] array_temp28;\n\tlong[] array_temp29;\n\tlong[] array_temp30;\n\tlong[] array_temp31;\n\tlong[] array_temp32;\n\tlong[] array_temp33;\n\tlong[] array_temp34;\n\tlong[] array_temp35;\n\tlong[] array_temp36;\n\tlong[] array_temp37;\n\tlong[] array_temp38;\n\tlong[] array_temp39;\n\tlong[] array_temp40;\n\tlong[] array_temp41;\n\tlong[] array_temp42;\n\tlong[] array_temp43;\n\tlong[] array_temp44;\n\tlong[] array_temp45;\n\tlong[] array_temp46;\n\tlong[] array_temp47;\n\tlong[] array_temp48;\n\tlong[] array_temp49;\n\tlong[] array_temp50;\n\tlong[] array_temp51;\n\tlong[] array_temp52;\n\tlong[] array_temp53;\n\tlong[] array_temp54;\n\tlong[] array_temp55;\n\tlong[] array_temp56",
    "{\n\tlong[] array_nums_intersection = new long[array_nums1.length];\n\tint index = 0;\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tarray_nums_intersection[index] = num;\n\t\t\tindex++;\n\t\t}\n\t}\n\treturn array_nums_intersection[0..index];\n}",
    "{\n\tlong[] array_result = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tarray_result ~= num;\n\t\t}\n\t}\n\treturn array_result;\n}",
    "{\n\tlong[] array_result = new long[array_nums1.length];\n\tlong[] array_result2 = new long[array_nums2.length];\n\tlong[] array_result3 = new long[array_nums1.length];\n\tlong[] array_result4 = new long[array_nums2.length];\n\tlong[] array_result5 = new long[array_nums1.length];\n\tlong[] array_result6 = new long[array_nums2.length];\n\tlong[] array_result7 = new long[array_nums1.length];\n\tlong[] array_result8 = new long[array_nums2.length];\n\tlong[] array_result9 = new long[array_nums1.length];\n\tlong[] array_result10 = new long[array_nums2.length];\n\tlong[] array_result11 = new long[array_nums1.length];\n\tlong[] array_result12 = new long[array_nums2.length];\n\tlong[] array_result13 = new long[array_nums1.length];\n\tlong[] array_result14 = new long[array_nums2.length];\n\tlong[] array_result15 = new long[array_nums1.length];\n\tlong[] array_result16 = new long[array_nums2.length];\n\tlong[] array_result17 = new long[array_nums1.length];\n\tlong[] array_result18 = new long[array_nums2.length];\n\tlong[] array_result19 = new long[array_nums1.length];\n\tlong[] array_result20 = new long[array_nums2.length];\n\tlong[] array_result21 = new long[array_nums1.length];\n\tlong[] array_result22 = new long[array_nums2.length];\n\tlong[] array_result23 = new long[array_nums1.length];\n\tlong[] array_result24 = new long[array_nums2.length];\n\tlong[] array_result25 = new long[array_nums1.length];\n\tlong[] array_result26 = new long",
    "{\n\tlong[] result;\n\tlong[] array_nums1_copy;\n\tlong[] array_nums2_copy;\n\tlong[] array_nums1_copy_sorted;\n\tlong[] array_nums2_copy_sorted;\n\tlong[] array_nums1_copy_sorted_unique;\n\tlong[] array_nums2_copy_sorted_unique;\n\tlong[] array_nums1_copy_sorted_unique_copy;\n\tlong[] array_nums2_copy_sorted_unique_copy;\n\tlong[] array_nums1_copy_sorted_unique_copy_sorted;\n\tlong[] array_nums2_copy_sorted_unique_copy_sorted;\n\tlong[] array_nums1_copy_sorted_unique_copy_sorted_unique;\n\tlong[] array_nums2_copy_sorted_unique_copy_sorted_unique;\n\tlong[] array_nums1_copy_sorted_unique_copy_sorted_unique_copy;\n\tlong[] array_nums2_copy_sorted_unique_copy_sorted_unique_copy;\n\tlong[] array_nums1_copy_sorted_unique_copy_sorted_unique_copy_sorted;\n\tlong[] array_nums2_copy_sorted_unique_copy_sorted_unique_copy_sorted;\n\tlong[] array_nums1_copy_sorted_unique_copy_sorted_unique_copy_sorted_unique;\n\tlong[] array_nums2_copy_sorted_unique_copy_sorted_unique_copy_sorted_unique;\n\tlong[] array_nums1_copy_sorted_unique_copy_sorted_unique_copy_sorted_unique_copy;\n\tlong[] array_nums2_copy_sorted_unique_copy_sorted_unique_copy_sorted_unique_copy;\n\tlong[] array_nums1_copy_sorted_unique_copy_sorted_unique_copy_sorted_unique_copy_sorted;\n\tlong[] array_nums2_copy_",
    "{\n\tlong[] array_result;\n\tlong[] array_temp;\n\tlong[] array_temp2;\n\tlong[] array_temp3;\n\tlong[] array_temp4;\n\tlong[] array_temp5;\n\tlong[] array_temp6;\n\tlong[] array_temp7;\n\tlong[] array_temp8;\n\tlong[] array_temp9;\n\tlong[] array_temp10;\n\tlong[] array_temp11;\n\tlong[] array_temp12;\n\tlong[] array_temp13;\n\tlong[] array_temp14;\n\tlong[] array_temp15;\n\tlong[] array_temp16;\n\tlong[] array_temp17;\n\tlong[] array_temp18;\n\tlong[] array_temp19;\n\tlong[] array_temp20;\n\tlong[] array_temp21;\n\tlong[] array_temp22;\n\tlong[] array_temp23;\n\tlong[] array_temp24;\n\tlong[] array_temp25;\n\tlong[] array_temp26;\n\tlong[] array_temp27;\n\tlong[] array_temp28;\n\tlong[] array_temp29;\n\tlong[] array_temp30;\n\tlong[] array_temp31;\n\tlong[] array_temp32;\n\tlong[] array_temp33;\n\tlong[] array_temp34;\n\tlong[] array_temp35;\n\tlong[] array_temp36;\n\tlong[] array_temp37;\n\tlong[] array_temp38;\n\tlong[] array_temp39;\n\tlong[] array_temp40;\n\tlong[] array_temp41;\n\tlong[] array_temp42;\n\tlong[] array_temp43;\n\tlong[] array_temp44;\n\tlong[] array_temp45;\n\tlong[] array_temp46;\n\tlong[] array_temp47;\n\tlong[] array_temp48;\n\tlong[] array_temp49;\n\tlong[] array_temp50;\n\tlong[] array_temp51;\n\tlong[] array_temp52;\n\tlong[] array_temp53;\n\tlong[] array_temp54;\n\tlong[] array_temp55;\n\tlong[] array_temp56",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile (i < array_nums1.length && j < array_nums2.length) \n\t{\n\t\tif (array_nums1[i] < array_nums2[j]) \n\t\t{\n\t\t\ti++;\n\t\t} \n\t\telse if (array_nums2[j] < array_nums1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tarray_intersection[k] = array_nums2[j];\n\t\t\tj++;\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\treturn array_intersection[0..k];\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_intersection = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\treturn array_intersection;\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_nums3 = new long[array_nums1.length];\n\tlong[] array_nums4 = new long[array_nums2.length];\n\tlong[] array_nums5 = new long[array_nums1.length];\n\tlong[] array_nums6 = new long[array_nums2.length];\n\tlong[] array_nums7 = new long[array_nums1.length];\n\tlong[] array_nums8 = new long[array_nums2.length];\n\tlong[] array_nums9 = new long[array_nums1.length];\n\tlong[] array_nums10 = new long[array_nums2.length];\n\tlong[] array_nums11 = new long[array_nums1.length];\n\tlong[] array_nums12 = new long[array_nums2.length];\n\tlong[] array_nums13 = new long[array_nums1.length];\n\tlong[] array_nums14 = new long[array_nums2.length];\n\tlong[] array_nums15 = new long[array_nums1.length];\n\tlong[] array_nums16 = new long[array_nums2.length];\n\tlong[] array_nums17 = new long[array_nums1.length];\n\tlong[] array_nums18 = new long[array_nums2.length];\n\tlong[] array_nums19 = new long[array_nums1.length];\n\tlong[] array_nums20 = new long[array_nums2.length];\n\tlong[] array_nums21 = new long[array_nums1.length];\n\tlong[] array_nums22 = new long[array_nums2.length];\n\tlong[] array_nums23 = new long[array_nums1.length];\n\tlong[] array_nums24 = new long[array_nums2.length];\n\tlong[] array_nums25 = new long[array_nums1.length];\n\tlong[] array_nums26 = new long[array_nums2.length];\n\tlong[] array_",
    "{\n\tlong[] array_intersection = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\treturn array_intersection;\n}",
    "{\n\tlong[] intersection = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tintersection ~= num;\n\t\t}\n\t}\n\treturn intersection;\n}",
    "{\n\tlong[] intersection_array = new long[0];\n\tforeach(long num1; array_nums1)\n\t{\n\t\tforeach(long num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tintersection_array ~= num1;\n\t\t\t}\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tint index = 0;\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tintersection_array[index] = num;\n\t\t\tindex++;\n\t\t}\n\t}\n\treturn intersection_array[0..index];\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_nums3 = new long[array_nums1.length];\n\tint j = 0;\n\tfor (int i = 0; i < array_nums1.length; i++) {\n\t\tif (array_nums1[i] == array_nums2[i]) {\n\t\t\tarray_nums3[j] = array_nums1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn array_nums3;\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tlong[] array_intersection_temp = new long[array_nums1.length];\n\tlong[] array_intersection_final = new long[array_nums1.length];\n\tlong[] array_nums1_temp = new long[array_nums1.length];\n\tlong[] array_nums2_temp = new long[array_nums2.length];\n\tlong[] array_nums1_final = new long[array_nums1.length];\n\tlong[] array_nums2_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_temp = new long[array_nums1.length];\n\tlong[] array_nums2_final_temp = new long[array_nums2.length];\n\tlong[] array_nums1_final_temp2 = new long[array_nums1.length];\n\tlong[] array_nums2_final_temp2 = new long[array_nums2.length];\n\tlong[] array_nums1_final_temp3 = new long[array_nums1.length];\n\tlong[] array_nums2_final_temp3 = new long[array_nums2.length];\n\tlong[] array_nums1_final_temp4 = new long[array_nums1.length];\n\tlong[] array_nums2_final_temp4 = new long[array_nums2.length];\n\tlong[] array_nums1_final_temp5 = new long[array_nums1.length];\n\tlong[] array_nums2_final_temp5 = new long[array_nums2.length];\n\tlong[] array_nums1_final_temp6 = new long[array_nums1.length];\n\tlong[] array_nums2_final_temp6 = new long[array_nums2.length];\n\tlong[] array_nums1_final_temp7 = new long[array_nums1.length];\n\tlong[] array_nums2_final_temp7 = new long[",
    "{\n\tlong[] array_result;\n\tlong[] array_temp;\n\tlong[] array_temp2;\n\tlong[] array_temp3;\n\tlong[] array_temp4;\n\tlong[] array_temp5;\n\tlong[] array_temp6;\n\tlong[] array_temp7;\n\tlong[] array_temp8;\n\tlong[] array_temp9;\n\tlong[] array_temp10;\n\tlong[] array_temp11;\n\tlong[] array_temp12;\n\tlong[] array_temp13;\n\tlong[] array_temp14;\n\tlong[] array_temp15;\n\tlong[] array_temp16;\n\tlong[] array_temp17;\n\tlong[] array_temp18;\n\tlong[] array_temp19;\n\tlong[] array_temp20;\n\tlong[] array_temp21;\n\tlong[] array_temp22;\n\tlong[] array_temp23;\n\tlong[] array_temp24;\n\tlong[] array_temp25;\n\tlong[] array_temp26;\n\tlong[] array_temp27;\n\tlong[] array_temp28;\n\tlong[] array_temp29;\n\tlong[] array_temp30;\n\tlong[] array_temp31;\n\tlong[] array_temp32;\n\tlong[] array_temp33;\n\tlong[] array_temp34;\n\tlong[] array_temp35;\n\tlong[] array_temp36;\n\tlong[] array_temp37;\n\tlong[] array_temp38;\n\tlong[] array_temp39;\n\tlong[] array_temp40;\n\tlong[] array_temp41;\n\tlong[] array_temp42;\n\tlong[] array_temp43;\n\tlong[] array_temp44;\n\tlong[] array_temp45;\n\tlong[] array_temp46;\n\tlong[] array_temp47;\n\tlong[] array_temp48;\n\tlong[] array_temp49;\n\tlong[] array_temp50;\n\tlong[] array_temp51;\n\tlong[] array_temp52;\n\tlong[] array_temp53;\n\tlong[] array_temp54;\n\tlong[] array_temp55;\n\tlong[] array_temp56",
    "{\n\tlong[] array_intersection = new long[0];\n\t\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\t\n\treturn array_intersection;\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tlong[] intersection_array_final = new long[array_nums1.length];\n\tlong[] array_nums1_final = new long[array_nums1.length];\n\tlong[] array_nums2_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_sorted = new long[array_nums1.length];\n\tlong[] array_nums2_final_sorted = new long[array_nums2.length];\n\tlong[] array_nums1_final_sorted_unique = new long[array_nums1.length];\n\tlong[] array_nums2_final_sorted_unique = new long[array_nums2.length];\n\tlong[] array_nums1_final_sorted_unique_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_sorted_unique_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_sorted_unique_final_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_sorted_unique_final_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_sorted_unique_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_sorted_unique_final_final_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_sorted_unique_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_sorted_unique_final_final_final_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_sorted_unique_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_sorted",
    "{\n\tlong[] array_nums3 = new long[array_nums1.length];\n\tlong[] array_nums4 = new long[array_nums2.length];\n\tlong[] array_nums5 = new long[array_nums1.length];\n\tlong[] array_nums6 = new long[array_nums2.length];\n\tlong[] array_nums7 = new long[array_nums1.length];\n\tlong[] array_nums8 = new long[array_nums2.length];\n\tlong[] array_nums9 = new long[array_nums1.length];\n\tlong[] array_nums10 = new long[array_nums2.length];\n\tlong[] array_nums11 = new long[array_nums1.length];\n\tlong[] array_nums12 = new long[array_nums2.length];\n\tlong[] array_nums13 = new long[array_nums1.length];\n\tlong[] array_nums14 = new long[array_nums2.length];\n\tlong[] array_nums15 = new long[array_nums1.length];\n\tlong[] array_nums16 = new long[array_nums2.length];\n\tlong[] array_nums17 = new long[array_nums1.length];\n\tlong[] array_nums18 = new long[array_nums2.length];\n\tlong[] array_nums19 = new long[array_nums1.length];\n\tlong[] array_nums20 = new long[array_nums2.length];\n\tlong[] array_nums21 = new long[array_nums1.length];\n\tlong[] array_nums22 = new long[array_nums2.length];\n\tlong[] array_nums23 = new long[array_nums1.length];\n\tlong[] array_nums24 = new long[array_nums2.length];\n\tlong[] array_nums25 = new long[array_nums1.length];\n\tlong[] array_nums26 = new long[array_nums2.length];\n\tlong[] array_",
    "{\n\tlong[] array_result = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tarray_result ~= num;\n\t\t}\n\t}\n\treturn array_result;\n}",
    "{\n\tlong[] array_intersection = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\treturn array_intersection;\n}",
    "{\n\tlong[] array_nums3;\n\tforeach(num1; array_nums1)\n\t{\n\t\tforeach(num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tarray_nums3 ~= num1;\n\t\t\t}\n\t\t}\n\t}\n\treturn array_nums3;\n}",
    "{\n\tlong[] array_intersection = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\treturn array_intersection;\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tlong[] intersection_array_final = new long[array_nums1.length];\n\tlong[] intersection_array_final_final = new long[array_nums1.length];\n\tlong[] array_nums1_final = new long[array_nums1.length];\n\tlong[] array_nums2_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_final_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_final_final_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_final_final_final_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_final_final_final_final_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_final_final_final_final_final_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[]",
    "{\n\tlong[] result = new long[array_nums1.length];\n\tlong[] result2 = new long[array_nums2.length];\n\tlong[] result3 = new long[array_nums1.length];\n\tlong[] result4 = new long[array_nums2.length];\n\tlong[] result5 = new long[array_nums1.length];\n\tlong[] result6 = new long[array_nums2.length];\n\tlong[] result7 = new long[array_nums1.length];\n\tlong[] result8 = new long[array_nums2.length];\n\tlong[] result9 = new long[array_nums1.length];\n\tlong[] result10 = new long[array_nums2.length];\n\tlong[] result11 = new long[array_nums1.length];\n\tlong[] result12 = new long[array_nums2.length];\n\tlong[] result13 = new long[array_nums1.length];\n\tlong[] result14 = new long[array_nums2.length];\n\tlong[] result15 = new long[array_nums1.length];\n\tlong[] result16 = new long[array_nums2.length];\n\tlong[] result17 = new long[array_nums1.length];\n\tlong[] result18 = new long[array_nums2.length];\n\tlong[] result19 = new long[array_nums1.length];\n\tlong[] result20 = new long[array_nums2.length];\n\tlong[] result21 = new long[array_nums1.length];\n\tlong[] result22 = new long[array_nums2.length];\n\tlong[] result23 = new long[array_nums1.length];\n\tlong[] result24 = new long[array_nums2.length];\n\tlong[] result25 = new long[array_nums1.length];\n\tlong[] result26 = new long[array_nums2.length];\n\tlong[] result27 = new long[array_nums1.length];\n\tlong[] result28 = new long[array_nums2.length];\n\tlong[] result29 =",
    "{\n\tlong[] array_nums3;\n\tforeach(num; array_nums1)\n\t{\n\t\tforeach(num2; array_nums2)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t{\n\t\t\t\tarray_nums3 ~= num;\n\t\t\t}\n\t\t}\n\t}\n\treturn array_nums3;\n}",
    "{\n\tlong[] intersection_array;\n\t\n\tforeach(num; array_nums1)\n\t{\n\t\tif(num in array_nums2)\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\t\n\treturn intersection_array;\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tlong[] array_nums1_sorted = array_nums1.dup;\n\tlong[] array_nums2_sorted = array_nums2.dup;\n\tint index = 0;\n\t\n\tarray_nums1_sorted.sort;\n\tarray_nums2_sorted.sort;\n\t\n\tforeach(long num; array_nums1_sorted)\n\t{\n\t\tif(array_nums2_sorted.canFind(num))\n\t\t{\n\t\t\tintersection_array[index] = num;\n\t\t\tindex++;\n\t\t}\n\t}\n\t\n\treturn intersection_array[0..index];\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tlong[] array_nums1_temp = new long[array_nums1.length];\n\tlong[] array_nums2_temp = new long[array_nums2.length];\n\tlong[] array_nums1_temp_sorted = new long[array_nums1.length];\n\tlong[] array_nums2_temp_sorted = new long[array_nums2.length];\n\tlong[] array_nums1_temp_sorted_unique = new long[array_nums1.length];\n\tlong[] array_nums2_temp_sorted_unique = new long[array_nums2.length];\n\tlong[] array_nums1_temp_sorted_unique_intersection = new long[array_nums1.length];\n\tlong[] array_nums2_temp_sorted_unique_intersection = new long[array_nums2.length];\n\tlong[] array_nums1_temp_sorted_unique_intersection_sorted = new long[array_nums1.length];\n\tlong[] array_nums2_temp_sorted_unique_intersection_sorted = new long[array_nums2.length];\n\tlong[] array_nums1_temp_sorted_unique_intersection_sorted_unique = new long[array_nums1.length];\n\tlong[] array_nums2_temp_sorted_unique_intersection_sorted_unique = new long[array_nums2.length];\n\tlong[] array_nums1_temp_sorted_unique_intersection_sorted_unique_intersection = new long[array_nums1.length];\n\tlong[] array_nums2_temp_sorted_unique_intersection_sorted_unique_intersection = new long[array_nums2.length];\n\tlong[] array_nums1_temp_sorted_unique_intersection_sorted_unique_intersection_sorted = new long[array_nums1.length];\n\tlong[] array_nums2_temp_sorted",
    "{\n\tlong[] result;\n\tforeach(n; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(n))\n\t\t{\n\t\t\tresult ~= n;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tlong[] array_intersection_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];",
    "{\n\tlong[] array_result = new long[];\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.count(num) > 0)\n\t\t{\n\t\t\tarray_result ~= num;\n\t\t}\n\t}\n\treturn array_result;\n}",
    "{\n\tlong[] result;\n\tlong[] array_nums1_copy = array_nums1.dup;\n\tlong[] array_nums2_copy = array_nums2.dup;\n\t\n\tsort(array_nums1_copy);\n\tsort(array_nums2_copy);\n\t\n\tforeach(num; array_nums1_copy)\n\t{\n\t\tif(binarySearch(array_nums2_copy, num) != -1)\n\t\t\tresult ~= num;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(n; array_nums1)\n\t{\n\t\tforeach(m; array_nums2)\n\t\t{\n\t\t\tif(n == m)\n\t\t\t{\n\t\t\t\tresult ~= n;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tlong[] array_intersection_unique = new long[array_nums1.length];\n\tlong[] array_intersection_unique_sorted = new long[array_nums1.length];\n\tlong[] array_intersection_unique_sorted_final = new long[array_nums1.length];\n\tlong[] array_intersection_unique_sorted_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_unique_sorted_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_unique_sorted_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_unique_sorted_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_unique_sorted_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_unique_sorted_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_unique_sorted_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_unique_sorted_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_unique_sorted_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_unique_sorted_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_unique_sorted_final_final_final_final_final_final_final_final_final_final_final_",
    "{\n\tlong[] intersection_array = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tlong[] intersection_array_final = new long[array_nums1.length];\n\tlong[] array_nums1_sorted = array_nums1.dup;\n\tlong[] array_nums2_sorted = array_nums2.dup;\n\tlong[] array_nums1_sorted_final = array_nums1.dup;\n\tlong[] array_nums2_sorted_final = array_nums2.dup;\n\tlong[] array_nums1_sorted_final_final = array_nums1.dup;\n\tlong[] array_nums2_sorted_final_final = array_nums2.dup;\n\t\n\t// Sort the arrays\n\tarray_nums1_sorted.sort;\n\tarray_nums2_sorted.sort;\n\t\n\t// Remove duplicates from the arrays\n\tarray_nums1_sorted_final = array_nums1_sorted.uniq;\n\tarray_nums2_sorted_final = array_nums2_sorted.uniq;\n\t\n\t// Remove the elements that are not in both arrays\n\tarray_nums1_sorted_final_final = array_nums1_sorted_final.filter!(x => array_nums2_sorted_final.canFind(x));\n\tarray_nums2_sorted_final_final = array_nums2_sorted_final.filter!(x => array_nums1_sorted_final.canFind(x));\n\t\n\t// Return the intersection array\n\treturn array_nums1_sorted_final_final;\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_result = new long[array_nums1.length];\n\tint i = 0;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_result[i] = num;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn array_result[0..i];\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tlong[] array_nums2_copy = array_nums2.dup;\n\tint index = 0;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2_copy.find(num) != -1)\n\t\t{\n\t\t\tintersection_array[index] = num;\n\t\t\tindex++;\n\t\t\tarray_nums2_copy.remove(array_nums2_copy.find(num));\n\t\t}\n\t}\n\treturn intersection_array[0..index];\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < array_nums1.length && j < array_nums2.length) \n\t{\n\t\tif (array_nums1[i] < array_nums2[j]) \n\t\t{\n\t\t\ti++;\n\t\t} \n\t\telse if (array_nums2[j] < array_nums1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tintersection_array[k] = array_nums2[j];\n\t\t\tj++;\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t}\n\treturn intersection_array[0..k];\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tlong[] array_nums1_copy = array_nums1.dup;\n\tlong[] array_nums2_copy = array_nums2.dup;\n\t\n\tarray_nums1_copy.sort;\n\tarray_nums2_copy.sort;\n\t\n\tlong[] array_nums1_copy_unique = array_nums1_copy.unique;\n\tlong[] array_nums2_copy_unique = array_nums2_copy.unique;\n\t\n\tlong[] array_nums1_copy_unique_copy = array_nums1_copy_unique.dup;\n\tlong[] array_nums2_copy_unique_copy = array_nums2_copy_unique.dup;\n\t\n\tlong[] array_nums1_copy_unique_copy_sorted = array_nums1_copy_unique_copy.sort;\n\tlong[] array_nums2_copy_unique_copy_sorted = array_nums2_copy_unique_copy.sort;\n\t\n\tlong[] array_nums1_copy_unique_copy_sorted_copy = array_nums1_copy_unique_copy_sorted.dup;\n\tlong[] array_nums2_copy_unique_copy_sorted_copy = array_nums2_copy_unique_copy_sorted.dup;\n\t\n\tlong[] array_nums1_copy_unique_copy_sorted_copy_unique = array_nums1_copy_unique_copy_sorted_copy.unique;\n\tlong[] array_nums2_copy_unique_copy_sorted_copy_unique = array_nums2_copy_unique_copy_sorted_copy.unique;\n\t\n\tlong[] array_nums1_copy_unique_copy_sorted_copy_unique_copy = array_nums1_copy_unique_copy_sorted_copy_unique.dup;\n\tlong[] array_nums2_copy_unique_copy_sorted_copy_unique_copy = array_nums2",
    "{\n\tlong[] result = new long[array_nums1.length];\n\tlong[] array_nums2_copy = array_nums2.dup;\n\tlong[] array_nums1_copy = array_nums1.dup;\n\tlong[] array_nums2_copy_copy = array_nums2.dup;\n\tlong[] array_nums1_copy_copy = array_nums1.dup;\n\t\n\tlong[] array_nums1_copy_copy_copy = array_nums1.dup;\n\tlong[] array_nums2_copy_copy_copy = array_nums2.dup;\n\t\n\tlong[] array_nums1_copy_copy_copy_copy = array_nums1.dup;\n\tlong[] array_nums2_copy_copy_copy_copy = array_nums2.dup;\n\t\n\tlong[] array_nums1_copy_copy_copy_copy_copy = array_nums1.dup;\n\tlong[] array_nums2_copy_copy_copy_copy_copy = array_nums2.dup;\n\t\n\tlong[] array_nums1_copy_copy_copy_copy_copy_copy = array_nums1.dup;\n\tlong[] array_nums2_copy_copy_copy_copy_copy_copy = array_nums2.dup;\n\t\n\tlong[] array_nums1_copy_copy_copy_copy_copy_copy_copy = array_nums1.dup;\n\tlong[] array_nums2_copy_copy_copy_copy_copy_copy_copy = array_nums2.dup;\n\t\n\tlong[] array_nums1_copy_copy_copy_copy_copy_copy_copy_copy = array_nums1.dup;\n\tlong[] array_nums2_copy_copy_copy_copy_copy_copy_copy_copy = array_nums2.dup;\n\t\n\tlong[] array_nums1_copy_copy_copy_copy_copy_copy_copy_copy_copy = array_n",
    "{\n\tlong[] result = new long[array_nums1.length];\n\tint index = 0;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tresult[index] = num;\n\t\t\tindex++;\n\t\t}\n\t}\n\treturn result[0..index];\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\t\n\tint index = 0;\n\t\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array[index] = num;\n\t\t\tindex++;\n\t\t}\n\t}\n\t\n\treturn intersection_array[0..index];\n}",
    "{\n\tlong[] array_intersection = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\treturn array_intersection;\n}",
    "{\n\tauto set_nums1 = set(array_nums1);\n\tauto set_nums2 = set(array_nums2);\n\t\n\tauto set_intersection = set_nums1 & set_nums2;\n\t\n\treturn set_intersection.array;\n}",
    "{\n\tlong[] array_result;\n\tforeach(n; array_nums1)\n\t{\n\t\tif(n in array_nums2)\n\t\t{\n\t\t\tarray_result ~= n;\n\t\t}\n\t}\n\treturn array_result;\n}",
    "{\n\tlong[] result = new long[array_nums1.length];\n\tint count = 0;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(num in array_nums2)\n\t\t{\n\t\t\tresult[count] = num;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn result[0..count];\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_result = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tarray_result ~= num;\n\t\t}\n\t}\n\treturn array_result;\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tint i = 0;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.count(num))\n\t\t{\n\t\t\tarray_intersection[i] = num;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn array_intersection[0..i];\n}",
    "{\n\tlong[] array_nums3 = new long[array_nums1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile(i < array_nums1.length && j < array_nums2.length)\n\t{\n\t\tif(array_nums1[i] < array_nums2[j])\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if(array_nums1[i] > array_nums2[j])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarray_nums3[k] = array_nums1[i];\n\t\t\ti++;\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t}\n\treturn array_nums3;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tresult ~= num;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tint index = 0;\n\tforeach(num1; array_nums1)\n\t{\n\t\tforeach(num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tarray_intersection[index] = num1;\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\t}\n\treturn array_intersection;\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tint i = 0;\n\tforeach(n; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(n))\n\t\t{\n\t\t\tintersection_array[i] = n;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn intersection_array[0..i];\n}",
    "{\n\tlong[] array_intersection;\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\treturn array_intersection;\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(num1; array_nums1)\n\t{\n\t\tforeach(num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tintersection_array ~= num1;\n\t\t\t}\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_nums_intersection = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_nums_intersection ~= num;\n\t\t}\n\t}\n\treturn array_nums_intersection;\n}",
    "{\n\tlong[] array_result = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tarray_result ~= num;\n\t\t}\n\t}\n\treturn array_result;\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_intersection = new long[0];\n\t\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\t\n\treturn array_intersection;\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tlong[] array_intersection_final = new long[array_nums1.length];\n\tlong[] array_nums1_final = new long[array_nums1.length];\n\tlong[] array_nums2_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_final_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_final_final_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_final_final_final_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_final_final_final_final_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_final_final_final_final_final_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums2_final_final_final_final_final_final_final_final",
    "{\n\tlong[] array_intersection = new long[0];\n\tforeach(num1; array_nums1)\n\t{\n\t\tforeach(num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tarray_intersection ~= num1;\n\t\t\t}\n\t\t}\n\t}\n\treturn array_intersection;\n}",
    "{\n\tlong[] result = new long[array_nums1.length];\n\tint index = 0;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tresult[index] = num;\n\t\t\tindex++;\n\t\t}\n\t}\n\treturn result[0..index];\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tlong[] intersection_array_final = new long[array_nums1.length];\n\tint counter = 0;\n\t\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tintersection_array[counter] = num;\n\t\t\tcounter++;\n\t\t}\n\t}\n\t\n\tintersection_array_final = intersection_array[0..counter];\n\t\n\treturn intersection_array_final;\n}",
    "{\n\tlong[] result;\n\tlong[] array_nums1_sorted = array_nums1.dup;\n\tlong[] array_nums2_sorted = array_nums2.dup;\n\t\n\tarray_nums1_sorted.sort;\n\tarray_nums2_sorted.sort;\n\t\n\tresult = array_nums1_sorted.intersection(array_nums2_sorted);\n\t\n\treturn result;\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] intersection = new long[array_nums1.length];\n\tlong[] array_nums1_copy = array_nums1.dup;\n\tlong[] array_nums2_copy = array_nums2.dup;\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < array_nums1_copy.length && j < array_nums2_copy.length)\n\t{\n\t\tif(array_nums1_copy[i] == array_nums2_copy[j])\n\t\t{\n\t\t\tintersection[k] = array_nums1_copy[i];\n\t\t\ti++;\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t\telse if(array_nums1_copy[i] < array_nums2_copy[j])\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tj++;\n\t\t}\n\t}\n\t\n\treturn intersection[0..k];\n}",
    "{\n\tlong[] intersection_array;\n\tlong[] array_nums1_sorted;\n\tlong[] array_nums2_sorted;\n\tlong[] array_nums1_sorted_unique;\n\tlong[] array_nums2_sorted_unique;\n\tlong[] array_nums1_sorted_unique_intersect;\n\tlong[] array_nums2_sorted_unique_intersect;\n\tlong[] array_nums1_sorted_unique_intersect_intersect;\n\tlong[] array_nums2_sorted_unique_intersect_intersect;\n\tlong[] array_nums1_sorted_unique_intersect_intersect_intersect;\n\tlong[] array_nums2_sorted_unique_intersect_intersect_intersect;\n\tlong[] array_nums1_sorted_unique_intersect_intersect_intersect_intersect;\n\tlong[] array_nums2_sorted_unique_intersect_intersect_intersect_intersect;\n\tlong[] array_nums1_sorted_unique_intersect_intersect_intersect_intersect_intersect;\n\tlong[] array_nums2_sorted_unique_intersect_intersect_intersect_intersect_intersect;\n\tlong[] array_nums1_sorted_unique_intersect_intersect_intersect_intersect_intersect_intersect;\n\tlong[] array_nums2_sorted_unique_intersect_intersect_intersect_intersect_intersect_intersect;\n\tlong[] array_nums1_sorted_unique_intersect_intersect_intersect_intersect_intersect_intersect_intersect;\n\tlong[] array_nums2_sorted_unique_intersect_intersect_intersect_intersect_intersect_intersect_intersect;\n\tlong[] array_nums1_sorted_unique_intersect_intersect_intersect_intersect_intersect_intersect_intersect_intersect;\n\tlong[] array_nums2_sorted_unique_intersect_intersect_intersect_intersect_intersect",
    "{\n\tlong[] array_result = new long[0];\n\tforeach(num; array_nums1)\n\t{\n\t\tif(num in array_nums2)\n\t\t{\n\t\t\tarray_result ~= num;\n\t\t}\n\t}\n\treturn array_result;\n}",
    "{\n\tauto result = new long[](0);\n\t\n\tforeach(nums1; array_nums1)\n\t{\n\t\tforeach(nums2; array_nums2)\n\t\t{\n\t\t\tif(nums1 == nums2)\n\t\t\t{\n\t\t\t\tresult ~= nums1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] array_nums3 = new long[array_nums1.length];\n\tint j = 0;\n\tfor (int i = 0; i < array_nums1.length; i++)\n\t{\n\t\tfor (int k = 0; k < array_nums2.length; k++)\n\t\t{\n\t\t\tif (array_nums1[i] == array_nums2[k])\n\t\t\t{\n\t\t\t\tarray_nums3[j] = array_nums1[i];\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t}\n\treturn array_nums3;\n}",
    "{\n\tlong[] array_intersection = new long[0];\n\t\n\tforeach(num1; array_nums1)\n\t{\n\t\tforeach(num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tarray_intersection ~= num1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn array_intersection;\n}",
    "{\n\tlong[] array_intersection = new long[0];\n\tforeach(num1; array_nums1)\n\t{\n\t\tforeach(num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tarray_intersection ~= num1;\n\t\t\t}\n\t\t}\n\t}\n\treturn array_intersection;\n}",
    "{\n\tlong[] intersection = new long[0];\n\tforeach(long num1; array_nums1)\n\t{\n\t\tforeach(long num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tintersection ~= num1;\n\t\t\t}\n\t\t}\n\t}\n\treturn intersection;\n}",
    "{\n\tlong[] intersection_array = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tforeach(long num2; array_nums2)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t{\n\t\t\t\tintersection_array ~= num;\n\t\t\t}\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tlong[] array_intersection_final = new long[array_nums1.length];\n\tint count = 0;\n\t\n\tfor (int i = 0; i < array_nums1.length; i++)\n\t{\n\t\tfor (int j = 0; j < array_nums2.length; j++)\n\t\t{\n\t\t\tif (array_nums1[i] == array_nums2[j])\n\t\t\t{\n\t\t\t\tarray_intersection[count] = array_nums1[i];\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tarray_intersection_final = array_intersection[0..count];\n\treturn array_intersection_final;\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tlong[] array_intersection_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tlong[] array_nums1_copy = array_nums1.dup;\n\tlong[] array_nums2_copy = array_nums2.dup;\n\t\n\tarray_nums1_copy.sort;\n\tarray_nums2_copy.sort;\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < array_nums1_copy.length && j < array_nums2_copy.length)\n\t{\n\t\tif(array_nums1_copy[i] < array_nums2_copy[j])\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if(array_nums1_copy[i] > array_nums2_copy[j])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tintersection_array[k] = array_nums1_copy[i];\n\t\t\ti++;\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\treturn intersection_array[0..k];\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tint index = 0;\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tarray_intersection[index] = num;\n\t\t\tindex++;\n\t\t}\n\t}\n\treturn array_intersection[0..index];\n}",
    "{\n\tlong[] array_intersection = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\treturn array_intersection;\n}",
    "{\n\tlong[] array_nums_intersection = new long[0];\n\tforeach(long num1; array_nums1)\n\t{\n\t\tforeach(long num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tarray_nums_intersection ~= num1;\n\t\t\t}\n\t\t}\n\t}\n\treturn array_nums_intersection;\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tint index = 0;\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tarray_intersection[index] = num;\n\t\t\tindex++;\n\t\t}\n\t}\n\treturn array_intersection[0..index];\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tlong[] array_intersection_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];",
    "{\n\tlong[] result;\n\tforeach(num1; array_nums1)\n\t{\n\t\tforeach(num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tresult ~= num1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] intersection_array;\n\tlong[] array_nums1_sorted;\n\tlong[] array_nums2_sorted;\n\tlong[] array_nums1_unique;\n\tlong[] array_nums2_unique;\n\tlong[] array_nums1_unique_sorted;\n\tlong[] array_nums2_unique_sorted;\n\tlong[] array_nums1_unique_sorted_intersection;\n\tlong[] array_nums2_unique_sorted_intersection;\n\tlong[] array_nums1_unique_sorted_intersection_unique;\n\tlong[] array_nums2_unique_sorted_intersection_unique;\n\tlong[] array_nums1_unique_sorted_intersection_unique_sorted;\n\tlong[] array_nums2_unique_sorted_intersection_unique_sorted;\n\tlong[] array_nums1_unique_sorted_intersection_unique_sorted_intersection;\n\tlong[] array_nums2_unique_sorted_intersection_unique_sorted_intersection;\n\tlong[] array_nums1_unique_sorted_intersection_unique_sorted_intersection_unique;\n\tlong[] array_nums2_unique_sorted_intersection_unique_sorted_intersection_unique;\n\tlong[] array_nums1_unique_sorted_intersection_unique_sorted_intersection_unique_sorted;\n\tlong[] array_nums2_unique_sorted_intersection_unique_sorted_intersection_unique_sorted;\n\tlong[] array_nums1_unique_sorted_intersection_unique_sorted_intersection_unique_sorted_intersection;\n\tlong[] array_nums2_unique_sorted_intersection_unique_sorted_intersection_unique_sorted_intersection;\n\tlong[] array_nums1_unique_sorted_intersection_unique_sorted_intersection_unique_sorted_intersection_unique;\n\tlong[] array_nums2_unique_sorted_intersection_unique_sorted_intersection_",
    "{\n\tlong[] result = [];\n\tforeach(n; array_nums1)\n\t{\n\t\tif(n in array_nums2)\n\t\t{\n\t\t\tresult ~= n;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tlong[] intersection_array_final = new long[array_nums1.length];\n\tlong[] array_nums1_final = new long[array_nums1.length];\n\tlong[] array_nums2_final = new long[array_nums2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\t\n\t// Remove duplicates from array_nums1\n\tfor (i = 0; i < array_nums1.length; i++) \n\t{\n\t\tif (array_nums1[i] != 0) \n\t\t{\n\t\t\tfor (j = i + 1; j < array_nums1.length; j++) \n\t\t\t{\n\t\t\t\tif (array_nums1[i] == array_nums1[j]) \n\t\t\t\t{\n\t\t\t\t\tarray_nums1[j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Remove duplicates from array_nums2\n\tfor (k = 0; k < array_nums2.length; k++) \n\t{\n\t\tif (array_nums2[k] != 0) \n\t\t{\n\t\t\tfor (l = k + 1; l < array_nums2.length; l++) \n\t\t\t{\n\t\t\t\tif (array_nums2[k] == array_nums2[l]) \n\t\t\t\t{\n\t\t\t\t\tarray_nums2[l] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Remove zeros from array_nums1\n\tfor (m = 0; m < array_nums1.length; m++) \n\t{\n\t\tif (array_nums1[m] != 0) \n",
    "{\n\tlong[] array_intersection = new long[0];\n\t\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\t\n\treturn array_intersection;\n}",
    "{\n\tlong[] result;\n\tforeach(num; array_nums1)\n\t{\n\t\tforeach(num2; array_nums2)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t{\n\t\t\t\tresult ~= num;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(n; array_nums1)\n\t{\n\t\tif(array_nums2.count(n) > 0)\n\t\t{\n\t\t\tintersection_array ~= n;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_result = new long[array_nums1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile(i < array_nums1.length && j < array_nums2.length)\n\t{\n\t\tif(array_nums1[i] < array_nums2[j])\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if(array_nums1[i] > array_nums2[j])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarray_result[k] = array_nums1[i];\n\t\t\ti++;\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t}\n\treturn array_result[0 .. k];\n}",
    "{\n\tlong[] array_result = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != array_nums2.length)\n\t\t{\n\t\t\tarray_result ~= num;\n\t\t}\n\t}\n\treturn array_result;\n}",
    "{\n\tlong[] array_nums_intersection = new long[array_nums1.length];\n\tint index = 0;\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != array_nums2.length)\n\t\t{\n\t\t\tarray_nums_intersection[index] = num;\n\t\t\tindex++;\n\t\t}\n\t}\n\treturn array_nums_intersection[0..index];\n}",
    "{\n\tlong[] result;\n\tlong[] array_nums1_copy;\n\tlong[] array_nums2_copy;\n\tlong[] array_nums1_copy_sorted;\n\tlong[] array_nums2_copy_sorted;\n\tlong[] array_nums1_copy_sorted_unique;\n\tlong[] array_nums2_copy_sorted_unique;\n\tlong[] array_nums1_copy_sorted_unique_intersection;\n\tlong[] array_nums2_copy_sorted_unique_intersection;\n\tlong[] array_nums1_copy_sorted_unique_intersection_sorted;\n\tlong[] array_nums2_copy_sorted_unique_intersection_sorted;\n\tlong[] array_nums1_copy_sorted_unique_intersection_sorted_unique;\n\tlong[] array_nums2_copy_sorted_unique_intersection_sorted_unique;\n\tlong[] array_nums1_copy_sorted_unique_intersection_sorted_unique_intersection;\n\tlong[] array_nums2_copy_sorted_unique_intersection_sorted_unique_intersection;\n\tlong[] array_nums1_copy_sorted_unique_intersection_sorted_unique_intersection_sorted;\n\tlong[] array_nums2_copy_sorted_unique_intersection_sorted_unique_intersection_sorted;\n\tlong[] array_nums1_copy_sorted_unique_intersection_sorted_unique_intersection_sorted_unique;\n\tlong[] array_nums2_copy_sorted_unique_intersection_sorted_unique_intersection_sorted_unique;\n\tlong[] array_nums1_copy_sorted_unique_intersection_sorted_unique_intersection_sorted_unique_intersection;\n\tlong[] array_nums2_copy_sorted_unique_intersection_sorted_unique_intersection_sorted_unique_intersection;\n\tlong[] array_nums1_copy_sorted_unique_intersection_sorted_unique",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tlong[] array_intersection_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_unique = new long[array_nums1.length];\n\t\n\tlong[] array_intersection_final_unique_final = new long[array_nums1.length];\n\t\n\tlong[] array_intersection_final_unique_final_final = new long[array_nums1.length];\n\t\n\tlong[] array_intersection_final_unique_final_final_final = new long[array_nums1.length];\n\t\n\tlong[] array_intersection_final_unique_final_final_final_final = new long[array_nums1.length];\n\t\n\tlong[] array_intersection_final_unique_final_final_final_final_final = new long[array_nums1.length];\n\t\n\tlong[] array_intersection_final_unique_final_final_final_final_final_final = new long[array_nums1.length];\n\t\n\tlong[] array_intersection_final_unique_final_final_final_final_final_final_final = new long[array_nums1.length];\n\t\n\tlong[] array_intersection_final_unique_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\t\n\tlong[] array_intersection_final_unique_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\t\n\tlong[] array_intersection_final_unique_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\t\n\tlong[] array_intersection_final_unique_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\t\n\tlong[] array_intersection_final_unique_final_final_final_final_final_final",
    "{\n\tlong[] array_intersection;\n\tlong[] array_nums1_unique;\n\tlong[] array_nums2_unique;\n\tlong[] array_nums1_unique_sorted;\n\tlong[] array_nums2_unique_sorted;\n\tlong[] array_nums1_unique_sorted_intersection;\n\tlong[] array_nums2_unique_sorted_intersection;\n\tlong[] array_nums1_unique_sorted_intersection_unique;\n\tlong[] array_nums2_unique_sorted_intersection_unique;\n\tlong[] array_nums1_unique_sorted_intersection_unique_sorted;\n\tlong[] array_nums2_unique_sorted_intersection_unique_sorted;\n\tlong[] array_nums1_unique_sorted_intersection_unique_sorted_intersection;\n\tlong[] array_nums2_unique_sorted_intersection_unique_sorted_intersection;\n\tlong[] array_nums1_unique_sorted_intersection_unique_sorted_intersection_unique;\n\tlong[] array_nums2_unique_sorted_intersection_unique_sorted_intersection_unique;\n\tlong[] array_nums1_unique_sorted_intersection_unique_sorted_intersection_unique_sorted;\n\tlong[] array_nums2_unique_sorted_intersection_unique_sorted_intersection_unique_sorted;\n\tlong[] array_nums1_unique_sorted_intersection_unique_sorted_intersection_unique_sorted_intersection;\n\tlong[] array_nums2_unique_sorted_intersection_unique_sorted_intersection_unique_sorted_intersection;\n\tlong[] array_nums1_unique_sorted_intersection_unique_sorted_intersection_unique_sorted_intersection_unique;\n\tlong[] array_nums2_unique_sorted_intersection_unique_sorted_intersection_unique_sorted_intersection_unique;\n\tlong[] array_nums1_unique_sorted_",
    "{\n\tlong[] result = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tresult ~= num;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tint i = 0;\n\tforeach(num1; array_nums1)\n\t{\n\t\tforeach(num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tarray_intersection[i] = num1;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn array_intersection;\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tint index = 0;\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tintersection_array[index] = num;\n\t\t\tindex++;\n\t\t}\n\t}\n\treturn intersection_array[0..index];\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tint index = 0;\n\t\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_intersection[index] = num;\n\t\t\tindex++;\n\t\t}\n\t}\n\t\n\treturn array_intersection[0..index];\n}",
    "{\n\tlong[] array_intersection = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\treturn array_intersection;\n}",
    "{\n\tlong[] array_intersection;\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\treturn array_intersection;\n}",
    "{\n\tlong[] intersection_array = new long[];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_nums1_sorted = array_nums1.dup;\n\tlong[] array_nums2_sorted = array_nums2.dup;\n\t\n\tarray_nums1_sorted.sort;\n\tarray_nums2_sorted.sort;\n\t\n\tlong[] intersection_array = new long[];\n\t\n\tforeach(long num1; array_nums1_sorted)\n\t{\n\t\tforeach(long num2; array_nums2_sorted)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tintersection_array ~= num1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn intersection_array;\n}",
    "{\n\tlong[] result;\n\tforeach(num1; array_nums1)\n\t{\n\t\tforeach(num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tresult ~= num1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tint n = 0;\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tarray_intersection[n] = num;\n\t\t\tn++;\n\t\t}\n\t}\n\treturn array_intersection[0..n];\n}",
    "{\n\tlong[] array_result = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != array_nums2.length)\n\t\t{\n\t\t\tarray_result ~= num;\n\t\t}\n\t}\n\treturn array_result;\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tlong[] intersection_array_final = new long[array_nums1.length];\n\tlong[] array_nums1_final = new long[array_nums1.length];\n\tlong[] array_nums2_final = new long[array_nums2.length];\n\tlong[] array_nums1_final_sorted = new long[array_nums1.length];\n\tlong[] array_nums2_final_sorted = new long[array_nums2.length];\n\tlong[] intersection_array_final_sorted = new long[array_nums1.length];\n\tlong[] array_nums1_final_sorted_unique = new long[array_nums1.length];\n\tlong[] array_nums2_final_sorted_unique = new long[array_nums2.length];\n\tlong[] intersection_array_final_sorted_unique = new long[array_nums1.length];\n\tlong[] intersection_array_final_sorted_unique_final = new long[array_nums1.length];\n\tlong[] intersection_array_final_sorted_unique_final_final = new long[array_nums1.length];\n\tlong[] intersection_array_final_sorted_unique_final_final_final = new long[array_nums1.length];\n\tlong[] intersection_array_final_sorted_unique_final_final_final_final = new long[array_nums1.length];\n\tlong[] intersection_array_final_sorted_unique_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] intersection_array_final_sorted_unique_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] intersection_array_final_sorted_unique_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] intersection_array_final_sorted_unique_final_final_final_final_final_final_final",
    "{\n\tlong[] array_nums_intersection = new long[array_nums1.length];\n\tint j = 0;\n\tfor(int i = 0; i < array_nums1.length; i++) \n\t{\n\t\tif(array_nums2.find(array_nums1[i]) != -1) \n\t\t{\n\t\t\tarray_nums_intersection[j] = array_nums1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn array_nums_intersection[0..j];\n}",
    "{\n\tlong[] array_nums_intersection = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_",
    "{\n\tlong[] array_intersection = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(num in array_nums2)\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\treturn array_intersection;\n}",
    "{\n\tlong[] result = new long[array_nums1.length];\n\tint index = 0;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tresult[index] = num;\n\t\t\tindex++;\n\t\t}\n\t}\n\treturn result[0..index];\n}",
    "{\n\tlong[] result;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tresult ~= num;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] intersection_array = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t\tintersection_array ~= num;\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tint index = 0;\n\tforeach(num1; array_nums1)\n\t{\n\t\tforeach(num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tintersection_array[index] = num1;\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\t}\n\treturn intersection_array[0..index];\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tint count = 0;\n\t\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tintersection_array[count] = num;\n\t\t\tcount++;\n\t\t}\n\t}\n\t\n\treturn intersection_array[0..count];\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tlong[] array_intersection_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];",
    "{\n\tlong[] array_result;\n\tlong[] array_temp;\n\tlong[] array_temp2;\n\tlong[] array_temp3;\n\tlong[] array_temp4;\n\tlong[] array_temp5;\n\tlong[] array_temp6;\n\tlong[] array_temp7;\n\tlong[] array_temp8;\n\tlong[] array_temp9;\n\tlong[] array_temp10;\n\tlong[] array_temp11;\n\tlong[] array_temp12;\n\tlong[] array_temp13;\n\tlong[] array_temp14;\n\tlong[] array_temp15;\n\tlong[] array_temp16;\n\tlong[] array_temp17;\n\tlong[] array_temp18;\n\tlong[] array_temp19;\n\tlong[] array_temp20;\n\tlong[] array_temp21;\n\tlong[] array_temp22;\n\tlong[] array_temp23;\n\tlong[] array_temp24;\n\tlong[] array_temp25;\n\tlong[] array_temp26;\n\tlong[] array_temp27;\n\tlong[] array_temp28;\n\tlong[] array_temp29;\n\tlong[] array_temp30;\n\tlong[] array_temp31;\n\tlong[] array_temp32;\n\tlong[] array_temp33;\n\tlong[] array_temp34;\n\tlong[] array_temp35;\n\tlong[] array_temp36;\n\tlong[] array_temp37;\n\tlong[] array_temp38;\n\tlong[] array_temp39;\n\tlong[] array_temp40;\n\tlong[] array_temp41;\n\tlong[] array_temp42;\n\tlong[] array_temp43;\n\tlong[] array_temp44;\n\tlong[] array_temp45;\n\tlong[] array_temp46;\n\tlong[] array_temp47;\n\tlong[] array_temp48;\n\tlong[] array_temp49;\n\tlong[] array_temp50;\n\tlong[] array_temp51;\n\tlong[] array_temp52;\n\tlong[] array_temp53;\n\tlong[] array_temp54;\n\tlong[] array_temp55;\n\tlong[] array_temp56",
    "{\n\tlong[] intersection_array;\n\tforeach(n; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(n))\n\t\t{\n\t\t\tintersection_array ~= n;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_result;\n\tlong[] array_temp;\n\tlong[] array_temp2;\n\tlong[] array_temp3;\n\tlong[] array_temp4;\n\tlong[] array_temp5;\n\tlong[] array_temp6;\n\tlong[] array_temp7;\n\tlong[] array_temp8;\n\tlong[] array_temp9;\n\tlong[] array_temp10;\n\tlong[] array_temp11;\n\tlong[] array_temp12;\n\tlong[] array_temp13;\n\tlong[] array_temp14;\n\tlong[] array_temp15;\n\tlong[] array_temp16;\n\tlong[] array_temp17;\n\tlong[] array_temp18;\n\tlong[] array_temp19;\n\tlong[] array_temp20;\n\tlong[] array_temp21;\n\tlong[] array_temp22;\n\tlong[] array_temp23;\n\tlong[] array_temp24;\n\tlong[] array_temp25;\n\tlong[] array_temp26;\n\tlong[] array_temp27;\n\tlong[] array_temp28;\n\tlong[] array_temp29;\n\tlong[] array_temp30;\n\tlong[] array_temp31;\n\tlong[] array_temp32;\n\tlong[] array_temp33;\n\tlong[] array_temp34;\n\tlong[] array_temp35;\n\tlong[] array_temp36;\n\tlong[] array_temp37;\n\tlong[] array_temp38;\n\tlong[] array_temp39;\n\tlong[] array_temp40;\n\tlong[] array_temp41;\n\tlong[] array_temp42;\n\tlong[] array_temp43;\n\tlong[] array_temp44;\n\tlong[] array_temp45;\n\tlong[] array_temp46;\n\tlong[] array_temp47;\n\tlong[] array_temp48;\n\tlong[] array_temp49;\n\tlong[] array_temp50;\n\tlong[] array_temp51;\n\tlong[] array_temp52;\n\tlong[] array_temp53;\n\tlong[] array_temp54;\n\tlong[] array_temp55;\n\tlong[] array_temp56",
    "{\n\tlong[] array_intersection = new long[0];\n\tforeach(long num1; array_nums1)\n\t{\n\t\tforeach(long num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tarray_intersection ~= num1;\n\t\t\t}\n\t\t}\n\t}\n\treturn array_intersection;\n}",
    "{\n\tlong[] array_result = [];\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_result ~= num;\n\t\t}\n\t}\n\treturn array_result;\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_result = new long[array_nums1.length];\n\tint index = 0;\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tarray_result[index] = num;\n\t\t\tindex++;\n\t\t}\n\t}\n\treturn array_result[0..index];\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tlong[] array_intersection_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tint index = 0;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array[index] = num;\n\t\t\tindex++;\n\t\t}\n\t}\n\treturn intersection_array[0..index];\n}",
    "{\n\tlong[] array_result = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_result ~= num;\n\t\t}\n\t}\n\treturn array_result;\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tint index = 0;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array[index] = num;\n\t\t\tindex++;\n\t\t}\n\t}\n\treturn intersection_array[0..index];\n}",
    "{\n\tlong[] intersection_array = new long[];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_intersection = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\treturn array_intersection;\n}",
    "{\n\tlong[] array_intersection = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\treturn array_intersection;\n}",
    "{\n\tlong[] array_result = new long[array_nums1.length];\n\tlong[] array_result2 = new long[array_nums2.length];\n\tlong[] array_result3 = new long[array_nums1.length];\n\tlong[] array_result4 = new long[array_nums2.length];\n\tlong[] array_result5 = new long[array_nums1.length];\n\tlong[] array_result6 = new long[array_nums2.length];\n\tlong[] array_result7 = new long[array_nums1.length];\n\tlong[] array_result8 = new long[array_nums2.length];\n\tlong[] array_result9 = new long[array_nums1.length];\n\tlong[] array_result10 = new long[array_nums2.length];\n\tlong[] array_result11 = new long[array_nums1.length];\n\tlong[] array_result12 = new long[array_nums2.length];\n\tlong[] array_result13 = new long[array_nums1.length];\n\tlong[] array_result14 = new long[array_nums2.length];\n\tlong[] array_result15 = new long[array_nums1.length];\n\tlong[] array_result16 = new long[array_nums2.length];\n\tlong[] array_result17 = new long[array_nums1.length];\n\tlong[] array_result18 = new long[array_nums2.length];\n\tlong[] array_result19 = new long[array_nums1.length];\n\tlong[] array_result20 = new long[array_nums2.length];\n\tlong[] array_result21 = new long[array_nums1.length];\n\tlong[] array_result22 = new long[array_nums2.length];\n\tlong[] array_result23 = new long[array_nums1.length];\n\tlong[] array_result24 = new long[array_nums2.length];\n\tlong[] array_result25 = new long[array_nums1.length];\n\tlong[] array_result26 = new long",
    "{\n\tlong[] intersection_array = new long[0];\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tlong[] intersection_array_final = new long[array_nums1.length];\n\tint index = 0;\n\t\n\tforeach(long num; array_nums1)\n\t{\n\t\tforeach(long num2; array_nums2)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t{\n\t\t\t\tintersection_array[index] = num;\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tint index2 = 0;\n\tforeach(long num; intersection_array)\n\t{\n\t\tif(num != 0)\n\t\t{\n\t\t\tintersection_array_final[index2] = num;\n\t\t\tindex2++;\n\t\t}\n\t}\n\t\n\treturn intersection_array_final;\n}",
    "{\n\tlong[] array_intersection = new long[0];\n\t\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(num in array_nums2)\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\t\n\treturn array_intersection;\n}",
    "{\n\tlong[] array_nums_intersection;\n\t\n\tforeach(num1; array_nums1)\n\t{\n\t\tforeach(num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tarray_nums_intersection ~= num1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn array_nums_intersection;\n}",
    "{\n\tlong[] array_nums3 = new long[array_nums1.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < array_nums1.length && j < array_nums2.length)\n\t{\n\t\tif(array_nums1[i] < array_nums2[j])\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if(array_nums2[j] < array_nums1[i])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarray_nums3[k] = array_nums1[i];\n\t\t\ti++;\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\treturn array_nums3[0..k];\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tint i = 0;\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tintersection_array[i] = num;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn intersection_array[0..i];\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tint i = 0;\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array[i] = num;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn intersection_array[0..i];\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(n; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(n))\n\t\t{\n\t\t\tintersection_array ~= n;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] result;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tresult ~= num;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] array_nums_intersection = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_nums_intersection ~= num;\n\t\t}\n\t}\n\treturn array_nums_intersection;\n}",
    "{\n\tlong[] result;\n\tforeach(num1; array_nums1)\n\t{\n\t\tforeach(num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tresult ~= num1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_result = new long[0];\n\tforeach(num1; array_nums1)\n\t{\n\t\tforeach(num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tarray_result ~= num1;\n\t\t\t}\n\t\t}\n\t}\n\treturn array_result;\n}",
    "{\n\tlong[] result;\n\tforeach(n; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(n))\n\t\t{\n\t\t\tresult ~= n;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[array_nums1.length];\n\tlong[] array_nums1_copy = array_nums1.dup;\n\tlong[] array_nums2_copy = array_nums2.dup;\n\t\n\tarray_nums1_copy.sort;\n\tarray_nums2_copy.sort;\n\t\n\tlong[] array_nums1_copy_unique = array_nums1_copy.unique;\n\tlong[] array_nums2_copy_unique = array_nums2_copy.unique;\n\t\n\tlong[] array_nums1_copy_unique_copy = array_nums1_copy_unique.dup;\n\tlong[] array_nums2_copy_unique_copy = array_nums2_copy_unique.dup;\n\t\n\tlong[] array_nums1_copy_unique_copy_copy = array_nums1_copy_unique_copy.dup;\n\tlong[] array_nums2_copy_unique_copy_copy = array_nums2_copy_unique_copy.dup;\n\t\n\tlong[] array_nums1_copy_unique_copy_copy_copy = array_nums1_copy_unique_copy_copy.dup;\n\tlong[] array_nums2_copy_unique_copy_copy_copy = array_nums2_copy_unique_copy_copy.dup;\n\t\n\tlong[] array_nums1_copy_unique_copy_copy_copy_copy = array_nums1_copy_unique_copy_copy_copy.dup;\n\tlong[] array_nums2_copy_unique_copy_copy_copy_copy = array_nums2_copy_unique_copy_copy_copy.dup;\n\t\n\tlong[] array_nums1_copy_unique_copy_copy_copy_copy_copy = array_nums1_copy_unique_copy_copy_copy_copy.dup;\n\tlong[] array_nums2_copy_unique_copy_copy_copy_copy_copy = array_nums2_copy_unique_copy_copy_copy_",
    "{\n\tlong[] result;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(num in array_nums2)\n\t\t{\n\t\t\tresult ~= num;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] array_nums1_sorted = array_nums1.dup;\n\tlong[] array_nums2_sorted = array_nums2.dup;\n\t\n\tarray_nums1_sorted.sort;\n\tarray_nums2_sorted.sort;\n\t\n\tlong[] intersection_array = new long[];\n\t\n\tforeach(num1; array_nums1_sorted)\n\t{\n\t\tif(array_nums2_sorted.canFind(num1))\n\t\t{\n\t\t\tintersection_array ~= num1;\n\t\t}\n\t}\n\t\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_intersection = new long[0];\n\t\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\t\n\treturn array_intersection;\n}",
    "{\n\tlong[] array_intersection = new long[0];\n\t\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tarray_intersection ~= num;\n\t\t}\n\t}\n\t\n\treturn array_intersection;\n}",
    "{\n\tlong[] result = new long[array_nums1.length];\n\tlong[] result2 = new long[array_nums2.length];\n\tlong[] result3 = new long[array_nums1.length];\n\tlong[] result4 = new long[array_nums2.length];\n\tlong[] result5 = new long[array_nums1.length];\n\tlong[] result6 = new long[array_nums2.length];\n\tlong[] result7 = new long[array_nums1.length];\n\tlong[] result8 = new long[array_nums2.length];\n\tlong[] result9 = new long[array_nums1.length];\n\tlong[] result10 = new long[array_nums2.length];\n\tlong[] result11 = new long[array_nums1.length];\n\tlong[] result12 = new long[array_nums2.length];\n\tlong[] result13 = new long[array_nums1.length];\n\tlong[] result14 = new long[array_nums2.length];\n\tlong[] result15 = new long[array_nums1.length];\n\tlong[] result16 = new long[array_nums2.length];\n\tlong[] result17 = new long[array_nums1.length];\n\tlong[] result18 = new long[array_nums2.length];\n\tlong[] result19 = new long[array_nums1.length];\n\tlong[] result20 = new long[array_nums2.length];\n\tlong[] result21 = new long[array_nums1.length];\n\tlong[] result22 = new long[array_nums2.length];\n\tlong[] result23 = new long[array_nums1.length];\n\tlong[] result24 = new long[array_nums2.length];\n\tlong[] result25 = new long[array_nums1.length];\n\tlong[] result26 = new long[array_nums2.length];\n\tlong[] result27 = new long[array_nums1.length];\n\tlong[] result28 = new long[array_nums2.length];\n\tlong[] result29 =",
    "{\n\tlong[] intersection_array = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] result;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tresult ~= num;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] array_nums_intersection = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_nums_intersection_final_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_",
    "{\n\tlong[] array_nums_intersection = new long[0];\n\tlong[] array_nums_temp = new long[0];\n\t\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tarray_nums_temp ~= num;\n\t\t}\n\t}\n\t\n\tforeach(long num; array_nums_temp)\n\t{\n\t\tif(!array_nums_intersection.canFind(num))\n\t\t{\n\t\t\tarray_nums_intersection ~= num;\n\t\t}\n\t}\n\t\n\treturn array_nums_intersection;\n}",
    "{\n\tlong[] intersection = new long[array_nums1.length];\n\tint index = 0;\n\tforeach(num1; array_nums1) {\n\t\tforeach(num2; array_nums2) {\n\t\t\tif(num1 == num2) {\n\t\t\t\tintersection[index] = num1;\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\t}\n\treturn intersection[0..index];\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < array_nums1.length && j < array_nums2.length) \n\t{\n\t\tif (array_nums1[i] < array_nums2[j]) \n\t\t{\n\t\t\ti++;\n\t\t} \n\t\telse if (array_nums2[j] < array_nums1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tarray_intersection[k] = array_nums2[j];\n\t\t\ti++;\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t}\n\treturn array_intersection[0..k];\n}",
    "{\n\tlong[] intersection_array = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_nums3 = new long[array_nums1.length];\n\tint count = 0;\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tarray_nums3[count] = num;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn array_nums3[0..count];\n}",
    "{\n\tlong[] result;\n\t\n\tforeach(n; array_nums1)\n\t{\n\t\tif(n in array_nums2)\n\t\t{\n\t\t\tresult ~= n;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] array_nums3 = new long[array_nums1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < array_nums1.length && j < array_nums2.length) \n\t{\n\t\tif (array_nums1[i] < array_nums2[j]) \n\t\t{\n\t\t\ti++;\n\t\t} \n\t\telse if (array_nums2[j] < array_nums1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tarray_nums3[k] = array_nums2[j];\n\t\t\ti++;\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t}\n\treturn array_nums3[0..k];\n}",
    "{\n\tlong[] result;\n\tlong[] array_nums1_copy = array_nums1.dup;\n\tlong[] array_nums2_copy = array_nums2.dup;\n\t\n\tsort(array_nums1_copy);\n\tsort(array_nums2_copy);\n\t\n\tforeach(num; array_nums1_copy)\n\t{\n\t\tif(binarySearch(array_nums2_copy, num) != -1)\n\t\t{\n\t\t\tresult ~= num;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tresult ~= num;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(num1; array_nums1)\n\t{\n\t\tforeach(num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tresult ~= num1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[array_nums1.length];\n\tlong[] array_nums1_copy = array_nums1.dup;\n\tlong[] array_nums2_copy = array_nums2.dup;\n\tlong[] array_nums1_copy_sorted = array_nums1_copy.dup;\n\tlong[] array_nums2_copy_sorted = array_nums2_copy.dup;\n\tarray_nums1_copy_sorted.sort;\n\tarray_nums2_copy_sorted.sort;\n\tlong[] array_nums1_copy_sorted_unique = array_nums1_copy_sorted.dup;\n\tlong[] array_nums2_copy_sorted_unique = array_nums2_copy_sorted.dup;\n\tarray_nums1_copy_sorted_unique.unique;\n\tarray_nums2_copy_sorted_unique.unique;\n\tlong[] array_nums1_copy_sorted_unique_copy = array_nums1_copy_sorted_unique.dup;\n\tlong[] array_nums2_copy_sorted_unique_copy = array_nums2_copy_sorted_unique.dup;\n\tlong[] array_nums1_copy_sorted_unique_copy_sorted = array_nums1_copy_sorted_unique_copy.dup;\n\tlong[] array_nums2_copy_sorted_unique_copy_sorted = array_nums2_copy_sorted_unique_copy.dup;\n\tarray_nums1_copy_sorted_unique_copy_sorted.sort;\n\tarray_nums2_copy_sorted_unique_copy_sorted.sort;\n\tlong[] array_nums1_copy_sorted_unique_copy_sorted_copy = array_nums1_copy_sorted_unique_copy_sorted.dup;\n\tlong[] array_nums2_copy_sorted_unique_copy_sorted_copy = array_nums2_copy_sorted",
    "{\n\tlong[] intersection_array;\n\tforeach(n; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(n))\n\t\t{\n\t\t\tintersection_array ~= n;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tint i = 0;\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tintersection_array[i] = num;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn intersection_array[0..i];\n}",
    "{\n\tlong[] intersection_array;\n\tlong[] array_nums1_sorted;\n\tlong[] array_nums2_sorted;\n\tlong[] array_nums1_unique;\n\tlong[] array_nums2_unique;\n\tlong[] array_nums1_unique_sorted;\n\tlong[] array_nums2_unique_sorted;\n\tlong[] array_nums1_unique_sorted_and_array_nums2_unique_sorted;\n\tlong[] array_nums1_unique_sorted_and_array_nums2_unique_sorted_sorted;\n\tlong[] array_nums1_unique_sorted_and_array_nums2_unique_sorted_sorted_unique;\n\tlong[] array_nums1_unique_sorted_and_array_nums2_unique_sorted_sorted_unique_sorted;\n\tlong[] array_nums1_unique_sorted_and_array_nums2_unique_sorted_sorted_unique_sorted_unique;\n\tlong[] array_nums1_unique_sorted_and_array_nums2_unique_sorted_sorted_unique_sorted_unique_sorted;\n\tlong[] array_nums1_unique_sorted_and_array_nums2_unique_sorted_sorted_unique_sorted_unique_sorted_unique;\n\tlong[] array_nums1_unique_sorted_and_array_nums2_unique_sorted_sorted_unique_sorted_unique_sorted_unique_sorted;\n\tlong[] array_nums1_unique_sorted_and_array_nums2_unique_sorted_sorted_unique_sorted_unique_sorted_unique_sorted_unique;\n\tlong[] array_nums1_unique_sorted_and_array_nums2_unique_sorted_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted;\n\tlong[] array_nums1_unique_sorted_and_array_nums2_unique_sorted",
    "{\n\tlong[] result = [];\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tresult ~= num;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] array_result = new long[0];\n\tforeach(num1; array_nums1)\n\t{\n\t\tforeach(num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tarray_result ~= num1;\n\t\t\t}\n\t\t}\n\t}\n\treturn array_result;\n}",
    "{\n\tlong[] array_result;\n\tlong[] array_nums1_sorted = array_nums1.dup;\n\tlong[] array_nums2_sorted = array_nums2.dup;\n\tarray_nums1_sorted.sort;\n\tarray_nums2_sorted.sort;\n\t\n\tarray_result = array_nums1_sorted.intersect(array_nums2_sorted);\n\treturn array_result;\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] result;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tresult ~= num;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(num in array_nums2)\n\t\t{\n\t\t\tresult ~= num;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tlong[] array_intersection_final = new long[array_nums1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;",
    "{\n\tlong[] result = new long[array_nums1.length];\n\tint index = 0;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tresult[index] = num;\n\t\t\tindex++;\n\t\t}\n\t}\n\treturn result[0..index];\n}",
    "{\n\tlong[] intersection_array;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tintersection_array ~= num;\n\t\t}\n\t}\n\treturn intersection_array;\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tlong[] array_intersection_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_unique = new long[array_nums1.length];\n\tlong[] array_intersection_final_unique_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_unique_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_unique_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_unique_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_unique_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_unique_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_unique_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_unique_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_unique_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_unique_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_unique_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_unique_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];",
    "{\n\tlong[] intersection_array = new long[array_nums1.length];\n\tint intersection_array_index = 0;\n\t\n\tfor (int i = 0; i < array_nums1.length; i++) \n\t{\n\t\tfor (int j = 0; j < array_nums2.length; j++) \n\t\t{\n\t\t\tif (array_nums1[i] == array_nums2[j]) \n\t\t\t{\n\t\t\t\tintersection_array[intersection_array_index] = array_nums1[i];\n\t\t\t\tintersection_array_index++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn intersection_array[0 .. intersection_array_index];\n}",
    "{\n\tlong[] result;\n\tforeach(n1; array_nums1)\n\t{\n\t\tforeach(n2; array_nums2)\n\t\t{\n\t\t\tif(n1 == n2)\n\t\t\t{\n\t\t\t\tresult ~= n1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[array_nums1.length];\n\tint i = 0;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tresult[i] = num;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result[0..i];\n}",
    "{\n\tlong[] result;\n\tforeach(num; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(num))\n\t\t{\n\t\t\tresult ~= num;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\t\n\tforeach(n; array_nums1)\n\t{\n\t\tif(array_nums2.canFind(n))\n\t\t{\n\t\t\tresult ~= n;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] array_result = new long[0];\n\tforeach(long num1; array_nums1)\n\t{\n\t\tforeach(long num2; array_nums2)\n\t\t{\n\t\t\tif(num1 == num2)\n\t\t\t{\n\t\t\t\tarray_result ~= num1;\n\t\t\t}\n\t\t}\n\t}\n\treturn array_result;\n}",
    "{\n\tlong[] array_nums_intersection = new long[0];\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(array_nums2.find(num) != -1)\n\t\t{\n\t\t\tarray_nums_intersection ~= num;\n\t\t}\n\t}\n\treturn array_nums_intersection;\n}",
    "{\n\tlong[] array_intersection = new long[array_nums1.length];\n\tlong[] array_intersection_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];\n\tlong[] array_intersection_final_final_final_final_final_final_final_final_final_final_final_final_final_final = new long[array_nums1.length];",
    "{\n\tlong[] array_result = new long[0];\n\t\n\tforeach(long num; array_nums1)\n\t{\n\t\tif(num in array_nums2)\n\t\t{\n\t\t\tarray_result ~= num;\n\t\t}\n\t}\n\t\n\treturn array_result;\n}"
  ]
}
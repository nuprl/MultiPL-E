{
  "name": "mbpp_759_is_decimal",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_759_is_decimal.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\t\n\tif(num[0] == '-')\n\t\ti = 1;\n\t\n\tfor(; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\telse\n\t\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv9i6ukoq.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e7d]\n??:? void tmpv9i6ukoq.__unittest_L35_C1() [0x427b42]\n??:? void tmpv9i6ukoq.__modtest() [0x427bfc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc17]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaaa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc3d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbc9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa81]\n??:? runModuleUnitTests [0x42b9ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428340]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(digit_count <= 2)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5wjkb_aj.d(48): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp5wjkb_aj.__unittest_L44_C1() [0x427ade]\n??:? void tmp5wjkb_aj.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1 && digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp39hmcdj.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpp39hmcdj.__unittest_L40_C1() [0x427ada]\n??:? void tmpp39hmcdj.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 2) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpezle9c11.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpezle9c11.__unittest_L37_C1() [0x427b0e]\n??:? void tmpezle9c11.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint len = num.length;\n\tfor(int i = 0; i < len; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot++;\n\t\t\tif(dot > 1)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if(num[i] < '0' || num[i] > '9')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif(dot == 0)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\tint dot_pos = num.find('.');\n\t\tif(len - dot_pos - 1 > 2)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpe45kgqlm.d(10): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\n/tmp/tmpe45kgqlm.d(32): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe45kgqlm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpltanvhht.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpltanvhht.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1)\n\t{\n\t\tif(digit_count > 3)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(digit_count > 2)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyloqtric.d(54): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpyloqtric.__unittest_L50_C1() [0x427ae6]\n??:? void tmpyloqtric.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpltanvhht.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpltanvhht.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 3) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoycolcnr.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpoycolcnr.__unittest_L37_C1() [0x427b0e]\n??:? void tmpoycolcnr.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length(); i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\tif (digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp0meutxn0.d(11): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0meutxn0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint num_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tnum_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && num_count == 3) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdzi9f19e.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpdzi9f19e.__unittest_L37_C1() [0x427b0e]\n??:? void tmpdzi9f19e.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tauto dot_pos = num.find('.');\n\tif (dot_pos == -1)\n\t\treturn false;\n\t\n\tauto dot_pos_after = num.find('.', dot_pos + 1);\n\tif (dot_pos_after != -1)\n\t\treturn false;\n\t\n\tauto after_dot = num.length - dot_pos - 1;\n\tif (after_dot > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpa9e_1cj9.d(9): Error: no property `find` for type `string`\n/tmp/tmpa9e_1cj9.d(13): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa9e_1cj9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1) return false;\n\t\t}\n\t\telse if(!isdigit(c)) return false;\n\t\telse digit_count++;\n\t}\n\t\n\tif(dot_count == 0) return false;\n\t\n\tint dot_index = num.indexOf('.');\n\t\n\treturn digit_count - dot_index <= 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpai5btya8.d(19): Error: undefined identifier `isdigit`\n/tmp/tmpai5btya8.d(25): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpai5btya8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprslm9st7.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmprslm9st7.__unittest_L40_C1() [0x427b16]\n??:? void tmprslm9st7.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbe7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa7a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa51]\n??:? runModuleUnitTests [0x42b9bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428310]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint num_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tnum_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && num_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5sjkf9sm.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp5sjkf9sm.__unittest_L35_C1() [0x427b0e]\n??:? void tmp5sjkf9sm.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif (num.length == 0) return false;\n\t\n\tbool is_decimal = false;\n\tbool is_negative = false;\n\t\n\tif (num[0] == '-') {\n\t\tis_negative = true;\n\t\tnum = num[1..$];\n\t}\n\t\n\tforeach (char c; num) {\n\t\tif (c == '.') {\n\t\t\tif (is_decimal) return false;\n\t\t\tis_decimal = true;\n\t\t} else if (c < '0' || c > '9') {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (is_decimal) {\n\t\tint dot_index = num.indexOf('.');\n\t\tif (num.length - dot_index - 1 > 2) return false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpnhx317tc.d(29): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnhx317tc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint num_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tnum_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && num_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvvql_t33.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpvvql_t33.__unittest_L37_C1() [0x427aca]\n??:? void tmpvvql_t33.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tbool result = true;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t{\n\t\t\t\tresult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if(c == '0' || c == '1' || c == '2' || c == '3' || c == '4' || c == '5' || c == '6' || c == '7' || c == '8' || c == '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif(result && digit_count > 2)\n\t{\n\t\tresult = false;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn1js0spd.d(46): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpn1js0spd.__unittest_L42_C1() [0x427b12]\n??:? void tmpn1js0spd.__modtest() [0x427bcc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint len = num.length();\n\tfor (int i = 0; i < len; i++) {\n\t\tif (num[i] == '.') {\n\t\t\tdot++;\n\t\t\tif (dot > 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (num[i] < '0' || num[i] > '9') {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot == 0) {\n\t\treturn false;\n\t}\n\tint dot_pos = num.find('.');\n\tif (dot_pos == len - 1) {\n\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp7ucp1dw7.d(10): Error: no property `length` for type `string`\n/tmp/tmp7ucp1dw7.d(24): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7ucp1dw7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpltanvhht.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpltanvhht.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmbfc7oj7.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpmbfc7oj7.__unittest_L32_C1() [0x427b0e]\n??:? void tmpmbfc7oj7.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint num_count = 0;\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tnum_count++;\n\t\t\tif(num_count > 3)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwych8hh.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpcwych8hh.__unittest_L30_C1() [0x427ace]\n??:? void tmpcwych8hh.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif (num.length == 0) return false;\n\t\n\tbool is_decimal = false;\n\t\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tif (is_decimal) return false;\n\t\t\tis_decimal = true;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9') return false;\n\t}\n\t\n\tif (is_decimal) \n\t{\n\t\tint dot_index = num.indexOf('.');\n\t\tif (dot_index + 3 < num.length) return false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmpl72qz85o.d(25): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl72qz85o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif (dot_count == 0)\n\t\treturn false;\n\t\n\treturn digit_count <= 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb3sap021.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpb3sap021.__unittest_L31_C1() [0x427b16]\n??:? void tmpb3sap021.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbe7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa7a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa51]\n??:? runModuleUnitTests [0x42b9bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428310]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint len = num.length;\n\tfor (int i = 0; i < len; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == len - 1)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmpjeyp5bur.d(11): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjeyp5bur.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(!isdigit(c))\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\n\tif(digit_count - dot_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmpgd_4bbzb.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgd_4bbzb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoft0ykhm.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpoft0ykhm.__unittest_L35_C1() [0x427b0e]\n??:? void tmpoft0ykhm.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\telse\n\t\treturn digit_count - dot_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmpe8xmdr8g.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe8xmdr8g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_0cabb1u.d(49): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmp_0cabb1u.__unittest_L45_C1() [0x427ae2]\n??:? void tmp_0cabb1u.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint i = 0;\n\tint dot = 0;\n\tint len = num.length;\n\t\n\tif(num[0] == '-')\n\t\ti = 1;\n\t\n\tfor(; i < len; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot++;\n\t\t\tif(dot > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t}\n\t\n\tif(dot == 0)\n\t\treturn false;\n\t\n\tif(num[i-3] == '.')\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmpmg013ks1.d(11): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmg013ks1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmbfc7oj7.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpmbfc7oj7.__unittest_L32_C1() [0x427b0e]\n??:? void tmpmbfc7oj7.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint digit = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot == 1 && digit == num.length - 1)\n\t{\n\t\treturn true;\n\t}\n\telse if (dot == 0 && digit == num.length)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0lvrybas.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x427e6d]\n??:? void tmp0lvrybas.__unittest_L39_C1() [0x427b84]\n??:? void tmp0lvrybas.__modtest() [0x427bec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa9a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]\n??:? runModuleUnitTests [0x42b9dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428330]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tif (num.length == 0)\n\t\treturn false;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif (digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg52lne4j.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpg52lne4j.__unittest_L35_C1() [0x427b22]\n??:? void tmpg52lne4j.__modtest() [0x427bdc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa61]\n??:? runModuleUnitTests [0x42b9cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428320]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint len = num.length;\n\tif(len == 0) return false;\n\tif(num[0] == '.') return false;\n\tif(num[len-1] == '.') return false;\n\tfor(int i = 0; i < len; i++) {\n\t\tif(num[i] == '.') {\n\t\t\tdot++;\n\t\t\tif(dot > 1) return false;\n\t\t}\n\t\telse if(num[i] < '0' || num[i] > '9') return false;\n\t}\n\tif(dot == 0) return false;\n\tif(num.find('.') + 3 < len) return false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmpbtx9zubz.d(10): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\n/tmp/tmpbtx9zubz.d(22): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbtx9zubz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot++;\n\t\t\tif(dot > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse if(dot == 1)\n\t\t\tcount++;\n\t}\n\t\n\treturn count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmpbw0s1lsq.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbw0s1lsq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\tif (digit_count > 2)\n\t\treturn false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_7ru5f9z.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp_7ru5f9z.__unittest_L28_C1() [0x427b12]\n??:? void tmp_7ru5f9z.__modtest() [0x427bcc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbe7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa7a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa51]\n??:? runModuleUnitTests [0x42b9bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428310]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tbool is_decimal = true;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif (c == '.')\n\t\t{\n\t\t\t++dot_count;\n\t\t\tif (dot_count > 1)\n\t\t\t{\n\t\t\t\tis_decimal = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if (c >= '0' && c <= '9')\n\t\t{\n\t\t\t++digit_count;\n\t\t\tif (digit_count > 2)\n\t\t\t{\n\t\t\t\tis_decimal = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tis_decimal = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn is_decimal;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvg7xstsh.d(46): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpvg7xstsh.__unittest_L42_C1() [0x427ace]\n??:? void tmpvg7xstsh.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\treturn digit_count <= 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmpozsppnj5.d(19): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpozsppnj5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tif(num.length == 0)\n\t\treturn false;\n\t\t\n\tfor(int i = 0; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5xqbey36.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp5xqbey36.__unittest_L35_C1() [0x427b22]\n??:? void tmp5xqbey36.__modtest() [0x427bdc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa61]\n??:? runModuleUnitTests [0x42b9cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428320]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprslm9st7.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmprslm9st7.__unittest_L40_C1() [0x427b16]\n??:? void tmprslm9st7.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbe7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa7a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa51]\n??:? runModuleUnitTests [0x42b9bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428310]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t}\n\t\n\tif (digit_count == 0)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7u5s5z1a.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp7u5s5z1a.__unittest_L39_C1() [0x427b64]\n??:? void tmp7u5s5z1a.__modtest() [0x427bcc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbe7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa7a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa51]\n??:? runModuleUnitTests [0x42b9bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428310]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\treturn digit_count > 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpd9z4ft9x.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd9z4ft9x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 3)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoyydpjnw.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpoyydpjnw.__unittest_L32_C1() [0x427ace]\n??:? void tmpoyydpjnw.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tauto dot_pos = num.find('.');\n\tif (dot_pos == -1)\n\t\treturn false;\n\t\n\tauto dot_count = num.count('.');\n\tif (dot_count > 1)\n\t\treturn false;\n\t\n\tauto dot_index = num.indexOf('.');\n\tauto dot_rindex = num.rindexOf('.');\n\tif (dot_index != dot_rindex)\n\t\treturn false;\n\t\n\tauto dot_index_plus_2 = dot_index + 2;\n\tif (dot_index_plus_2 < num.length)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmp83kboe5f.d(9): Error: no property `find` for type `string`\n/tmp/tmp83kboe5f.d(13): Error: no property `count` for type `string`\n/tmp/tmp83kboe5f.d(17): Error: no property `indexOf` for type `string`\n/tmp/tmp83kboe5f.d(18): Error: no property `rindexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp83kboe5f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr228l9hj.d(43): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpr228l9hj.__unittest_L39_C1() [0x427b16]\n??:? void tmpr228l9hj.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbe7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa7a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa51]\n??:? runModuleUnitTests [0x42b9bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428310]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse if(dot_count == 1)\n\t\t\tdigit_count++;\n\t}\n\t\n\treturn digit_count == 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmp5dmu786f.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5dmu786f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (isDigit(num[i])) \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3) \n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmp_jiauqav.d(17): Error: undefined identifier `isDigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_jiauqav.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\t\n\tif (num.length == 0) return false;\n\t\n\tif (num[0] == '-') i = 1;\n\t\n\tfor (; i < num.length; i++) {\n\t\tif (num[i] == '.') {\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1) return false;\n\t\t} else if (num[i] < '0' || num[i] > '9') {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tdigit_count++;\n\t\t}\n\t}\n\t\n\tif (digit_count > 2) return false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1zc5p662.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e85]\n??:? void tmp1zc5p662.__unittest_L32_C1() [0x427b4e]\n??:? void tmp1zc5p662.__modtest() [0x427c08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc1f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aab2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc45]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300f4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbd1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa89]\n??:? runModuleUnitTests [0x42b9f5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428348]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpo6uxe9rw.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6uxe9rw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoft0ykhm.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpoft0ykhm.__unittest_L35_C1() [0x427b0e]\n??:? void tmpoft0ykhm.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprurvsejq.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmprurvsejq.__unittest_L37_C1() [0x427aca]\n??:? void tmprurvsejq.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++) {\n\t\tif (num[i] == '.') {\n\t\t\tdot_count++;\n\t\t} else if (num[i] >= '0' && num[i] <= '9') {\n\t\t\tdigit_count++;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3) {\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpblep_826.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpblep_826.__unittest_L25_C1() [0x427b0e]\n??:? void tmpblep_826.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\treturn digit_count - dot_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmp2dkjb6uc.d(19): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2dkjb6uc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp59eft7qd.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp59eft7qd.__unittest_L36_C1() [0x427b0e]\n??:? void tmp59eft7qd.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 3) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoycolcnr.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpoycolcnr.__unittest_L37_C1() [0x427b0e]\n??:? void tmpoycolcnr.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpo6uxe9rw.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6uxe9rw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 3)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpari_3v4o.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpari_3v4o.__unittest_L32_C1() [0x427ace]\n??:? void tmpari_3v4o.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint i = 0;\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tif (num[0] == '-')\n\t\ti++;\n\t\n\tfor (; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif (digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz2p_twn7.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e75]\n??:? void tmpz2p_twn7.__unittest_L35_C1() [0x427b3e]\n??:? void tmpz2p_twn7.__modtest() [0x427bf8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaa2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc35]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa79]\n??:? runModuleUnitTests [0x42b9e5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428338]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++) {\n\t\tif (num[i] == '.') {\n\t\t\tdot_count++;\n\t\t} else if (num[i] < '0' || num[i] > '9') {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tdigit_count++;\n\t\t}\n\t}\n\t\n\tif (dot_count > 1 || digit_count > 2) {\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph7o1l4aa.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmph7o1l4aa.__unittest_L28_C1() [0x427b0e]\n??:? void tmph7o1l4aa.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tif (num.length == 0)\n\t\treturn false;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif (digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9errp_hg.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp9errp_hg.__unittest_L34_C1() [0x427b1e]\n??:? void tmp9errp_hg.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbef]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa82]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc15]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa59]\n??:? runModuleUnitTests [0x42b9c5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428318]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor(int i = 0; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(num[i] < '0' || num[i] > '9')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 2)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz1_6s25r.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpz1_6s25r.__unittest_L35_C1() [0x427b0e]\n??:? void tmpz1_6s25r.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\t\n\tif(num[0] == '-')\n\t\ti = 1;\n\t\t\n\tfor(; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\treturn digit_count == 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp9od0oym.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e6d]\n??:? void tmpp9od0oym.__unittest_L32_C1() [0x427b36]\n??:? void tmpp9od0oym.__modtest() [0x427bf0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa9a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]\n??:? runModuleUnitTests [0x42b9dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428330]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\treturn digit_count - dot_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmpor6bjogc.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpor6bjogc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint len = num.length();\n\t\n\tif(len == 0)\n\t\treturn false;\n\t\n\tfor(int i = 0; i < len; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot++;\n\t\t\tif(dot > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t}\n\t\n\tif(dot == 0)\n\t\treturn false;\n\t\n\tif(num[len-1] == '.')\n\t\treturn false;\n\t\n\tif(num[0] == '.')\n\t\treturn false;\n\t\n\tif(num[0] == '0' && num[1] != '.')\n\t\treturn false;\n\t\n\tif(num[0] == '0' && num[1] == '.' && num[2] == '0')\n\t\treturn false;\n\t\n\tif(num[0] == '0' && num[1] == '.' && num[2] == '0' && num[3] == '0')\n\t\treturn false;\n\t\n\tif(num[len-1] == '0' && num[len-2] == '0')\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpknd_xvo6.d(10): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpknd_xvo6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint digit = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot == 1 && digit == num.length - 1)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdgntwqu2.d(43): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmpdgntwqu2.__unittest_L37_C1() [0x427b6c]\n??:? void tmpdgntwqu2.__modtest() [0x427bd4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbef]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa82]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc15]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa59]\n??:? runModuleUnitTests [0x42b9c5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428318]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 3)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoyydpjnw.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpoyydpjnw.__unittest_L32_C1() [0x427ace]\n??:? void tmpoyydpjnw.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1)\n\t{\n\t\tif(digit_count > 3)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(digit_count > 2)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyloqtric.d(54): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpyloqtric.__unittest_L50_C1() [0x427ae6]\n??:? void tmpyloqtric.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t\tdot_count++;\n\t\telse if(c >= '0' && c <= '9')\n\t\t\tdigit_count++;\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\n\tif(digit_count <= 2)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9_3z819e.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmp9_3z819e.__unittest_L33_C1() [0x427ae2]\n??:? void tmp9_3z819e.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count > 1) \n\t{\n\t\treturn false;\n\t}\n\tif (dot_count == 0) \n\t{\n\t\treturn true;\n\t}\n\tif (digit_count > 2) \n\t{\n\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3niwrb8i.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp3niwrb8i.__unittest_L40_C1() [0x427b26]\n??:? void tmp3niwrb8i.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa61]\n??:? runModuleUnitTests [0x42b9cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428320]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif(num.length == 0) return false;\n\t\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor(int i = 0; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1) return false;\n\t\t}\n\t\telse if(num[i] < '0' || num[i] > '9')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t}\n\t\n\treturn digit_count == 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpazpap9nb.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmpazpap9nb.__unittest_L33_C1() [0x427b1a]\n??:? void tmpazpap9nb.__modtest() [0x427bd4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbef]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa82]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc15]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa59]\n??:? runModuleUnitTests [0x42b9c5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428318]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (dot_count == 1)\n\t{\n\t\tif (digit_count > 3)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (digit_count > 2)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphs49zcp8.d(54): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmphs49zcp8.__unittest_L50_C1() [0x427b2a]\n??:? void tmphs49zcp8.__modtest() [0x427be4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa92]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc25]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa69]\n??:? runModuleUnitTests [0x42b9d5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428328]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count < 3)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpmnwbshfb.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmnwbshfb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num) \n\t{\n\t\tif(c == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpta2q6q8v.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpta2q6q8v.__unittest_L37_C1() [0x427aca]\n??:? void tmpta2q6q8v.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf4u7c8k1.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpf4u7c8k1.__unittest_L37_C1() [0x427aca]\n??:? void tmpf4u7c8k1.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1)\n\t{\n\t\treturn digit_count <= 2;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpl7v47h3f.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpl7v47h3f.__unittest_L40_C1() [0x427ada]\n??:? void tmpl7v47h3f.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoft0ykhm.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpoft0ykhm.__unittest_L35_C1() [0x427b0e]\n??:? void tmpoft0ykhm.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\tif(dot_count == 1 && digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcptmdl4b.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpcptmdl4b.__unittest_L36_C1() [0x427ada]\n??:? void tmpcptmdl4b.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjokqtrly.d(49): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpjokqtrly.__unittest_L45_C1() [0x427ae2]\n??:? void tmpjokqtrly.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoft0ykhm.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpoft0ykhm.__unittest_L35_C1() [0x427b0e]\n??:? void tmpoft0ykhm.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(isdigit(c))\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\telse if(dot_count == 1)\n\t{\n\t\tif(digit_count > 2)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpyvshf0xk.d(18): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyvshf0xk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif (c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif (digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8e5fzrf9.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmp8e5fzrf9.__unittest_L32_C1() [0x427ace]\n??:? void tmp8e5fzrf9.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif(num.length == 0) return false;\n\t\n\tint dot_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1) return false;\n\t\t}\n\t\telse if(c < '0' || c > '9') return false;\n\t}\n\t\n\tif(dot_count == 0) return true;\n\t\n\tint dot_index = num.indexOf('.');\n\t\n\tif(dot_index == num.length - 1) return false;\n\t\n\tif(num.length - dot_index - 1 > 2) return false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmplq79yekv.d(25): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplq79yekv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppsuj8pn6.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmppsuj8pn6.__unittest_L37_C1() [0x427b0e]\n??:? void tmppsuj8pn6.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0 && digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1 && digit_count > 4)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4yb5pix4.d(49): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp4yb5pix4.__unittest_L45_C1() [0x427aee]\n??:? void tmp4yb5pix4.__modtest() [0x427ba8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tauto dot = num.find('.');\n\tif (dot == -1) \n\t{\n\t\treturn false;\n\t}\n\tif (num.length - dot - 1 > 2) \n\t{\n\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpfguqvcc9.d(9): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfguqvcc9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\t// Check if the string is empty\n\tif (num.empty())\n\t\treturn false;\n\t\n\t// Check if the string contains any non-digit characters\n\tif (num.find_first_not_of(\"0123456789.\") != string::npos)\n\t\treturn false;\n\t\n\t// Check if the string contains more than one decimal point\n\tif (num.find_first_of(\".\") != num.find_last_of(\".\"))\n\t\treturn false;\n\t\n\t// Check if the string contains more than two digits after the decimal point\n\tif (num.find_first_of(\".\") != string::npos && num.substr(num.find_first_of(\".\") + 1).length() > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmp4ludhxe8.d(14): Error: found `:` when expecting `)`\n/tmp/tmp4ludhxe8.d(14): Error: found `:` instead of statement\n/tmp/tmp4ludhxe8.d(22): Error: found `:` when expecting `)`\n/tmp/tmp4ludhxe8.d(22): Error: found `:` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ludhxe8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif(num.length == 0) return false;\n\t\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1) return false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2) return false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpb20_j0v7.d(21): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb20_j0v7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpo6uxe9rw.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6uxe9rw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(!isdigit(c))\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\n\tif(digit_count - dot_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmpgd_4bbzb.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgd_4bbzb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(!isdigit(c))\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\n\treturn digit_count - dot_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpfka5mx49.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfka5mx49.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppsuj8pn6.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmppsuj8pn6.__unittest_L37_C1() [0x427b0e]\n??:? void tmppsuj8pn6.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\treturn digit_count == 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpia__oycd.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpia__oycd.__unittest_L26_C1() [0x427b0a]\n??:? void tmpia__oycd.__modtest() [0x427bc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num) \n\t{\n\t\tif(c == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(isdigit(c)) \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 2) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpczht_njd.d(18): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpczht_njd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tbool is_decimal = true;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tis_decimal = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\tis_decimal = false;\n\t}\n\telse if(dot_count == 1)\n\t{\n\t\tif(digit_count > 2)\n\t\t{\n\t\t\tis_decimal = false;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(digit_count > 2)\n\t\t{\n\t\t\tis_decimal = false;\n\t\t}\n\t}\n\t\n\treturn is_decimal;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe02zfz8n.d(55): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpe02zfz8n.__unittest_L51_C1() [0x427ae2]\n??:? void tmpe02zfz8n.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor(int i = 0; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7uwt2sn6.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp7uwt2sn6.__unittest_L37_C1() [0x427b0e]\n??:? void tmp7uwt2sn6.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\tif (num[0] == '-')\n\t{\n\t\ti++;\n\t}\n\t\n\tfor (; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tj = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfor (; j < num.length; j++)\n\t{\n\t\tif (num[j] == '.')\n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse if (num[j] < '0' || num[j] > '9')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (k > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (k == 1)\n\t{\n\t\tl = j - i - 1;\n\t\tif (l > 2)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptjftpj95.d(61): unittest failure\n----------------\n??:? _d_unittestp [0x427ec5]\n??:? void tmptjftpj95.__unittest_L56_C1() [0x427bb3]\n??:? void tmptjftpj95.__modtest() [0x427c44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaf2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430134]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aac9]\n??:? runModuleUnitTests [0x42ba35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428388]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\telse\n\t\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmp4oqrgr57.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4oqrgr57.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tauto dot_pos = num.find('.');\n\tif(dot_pos == string.npos)\n\t\treturn false;\n\t\n\tauto dot_count = num.count('.');\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tauto dot_right = num.length - dot_pos - 1;\n\tif(dot_right > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmphipbzye5.d(9): Error: no property `find` for type `string`\n/tmp/tmphipbzye5.d(10): Error: no property `npos` for type `string`\n/tmp/tmphipbzye5.d(13): Error: no property `count` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphipbzye5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint count = 0;\n\tforeach(i; num)\n\t{\n\t\tif(i == '.')\n\t\t{\n\t\t\tdot++;\n\t\t}\n\t\telse if(i >= '0' && i <= '9')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif(dot == 1 && count == num.length - 1)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6t41rus1.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmp6t41rus1.__unittest_L35_C1() [0x427b28]\n??:? void tmp6t41rus1.__modtest() [0x427b90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]\n??:? runModuleUnitTests [0x42b909]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42825c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\telse if(dot_count == 1)\n\t{\n\t\treturn digit_count <= 2;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprxgwzih0.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmprxgwzih0.__unittest_L41_C1() [0x427ada]\n??:? void tmprxgwzih0.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num) {\n\t\tif(c == '.') {\n\t\t\tdot_count++;\n\t\t} else if(c >= '0' && c <= '9') {\n\t\t\tdigit_count++;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1) {\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1 && digit_count > 2) {\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpllcd_n0v.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpllcd_n0v.__unittest_L32_C1() [0x427ada]\n??:? void tmpllcd_n0v.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\telse if(dot_count == 1)\n\t{\n\t\tif(digit_count > 3)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(digit_count > 2)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5lmupzf4.d(53): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmp5lmupzf4.__unittest_L49_C1() [0x427ae6]\n??:? void tmp5lmupzf4.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tbool is_decimal = true;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tis_decimal = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif (dot_count > 1)\n\t{\n\t\tis_decimal = false;\n\t}\n\t\n\tif (digit_count > 2)\n\t{\n\t\tis_decimal = false;\n\t}\n\t\n\treturn is_decimal;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp906oumnd.d(46): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp906oumnd.__unittest_L42_C1() [0x427b12]\n??:? void tmp906oumnd.__modtest() [0x427bcc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbe7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa7a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa51]\n??:? runModuleUnitTests [0x42b9bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428310]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1)\n\t{\n\t\tif(digit_count > 3)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(digit_count > 2)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyloqtric.d(54): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpyloqtric.__unittest_L50_C1() [0x427ae6]\n??:? void tmpyloqtric.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint after_dot = 0;\n\tbool is_decimal = true;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t{\n\t\t\t\tis_decimal = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t{\n\t\t\tis_decimal = false;\n\t\t\tbreak;\n\t\t}\n\t\telse if (dot_count == 1)\n\t\t{\n\t\t\tafter_dot++;\n\t\t\tif (after_dot > 2)\n\t\t\t{\n\t\t\t\tis_decimal = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn is_decimal;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint len = num.length;\n\tint i = 0;\n\tif(num[0] == '-')\n\t{\n\t\ti = 1;\n\t}\n\tfor(; i < len; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot++;\n\t\t}\n\t\telse if(!isDigit(num[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif(dot == 1)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpol1i0qiq.d(10): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\n/tmp/tmpol1i0qiq.d(22): Error: undefined identifier `isDigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpol1i0qiq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint digit = 0;\n\tint i = 0;\n\t\n\tif (num[0] == '-')\n\t\ti = 1;\n\t\n\tfor (; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot == 1 && digit == num.length - 1)\n\t\treturn true;\n\telse if (dot == 0 && digit == num.length)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8v68x3rr.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x427e95]\n??:? void tmp8v68x3rr.__unittest_L39_C1() [0x427bb0]\n??:? void tmp8v68x3rr.__modtest() [0x427c18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc2f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aac2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc55]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430104]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa99]\n??:? runModuleUnitTests [0x42ba05]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428358]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoft0ykhm.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpoft0ykhm.__unittest_L35_C1() [0x427b0e]\n??:? void tmpoft0ykhm.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoft0ykhm.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpoft0ykhm.__unittest_L35_C1() [0x427b0e]\n??:? void tmpoft0ykhm.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpo6uxe9rw.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6uxe9rw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tint dot_index = num.indexOf('.');\n\t\n\tif(dot_index == 0 || dot_index == num.length - 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(digit_count - dot_index > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmp94ki69p0.d(38): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp94ki69p0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\tif (num[0] == '-')\n\t\ti++;\n\tfor (; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\treturn digit_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpc1dgh9_y.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e6d]\n??:? void tmpc1dgh9_y.__unittest_L29_C1() [0x427b32]\n??:? void tmpc1dgh9_y.__modtest() [0x427bec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa9a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]\n??:? runModuleUnitTests [0x42b9dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428330]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint num_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnum_count++;\n\t\t}\n\t}\n\tif (dot_count == 1 && num_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_jm3zcyv.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmp_jm3zcyv.__unittest_L31_C1() [0x427aae]\n??:? void tmp_jm3zcyv.__modtest() [0x427b68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa12]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430054]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb31]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e9]\n??:? runModuleUnitTests [0x42b955]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoft0ykhm.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpoft0ykhm.__unittest_L35_C1() [0x427b0e]\n??:? void tmpoft0ykhm.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoft0ykhm.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpoft0ykhm.__unittest_L35_C1() [0x427b0e]\n??:? void tmpoft0ykhm.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\t\n\tif (num[0] == '-')\n\t\ti = 1;\n\t\n\tfor (; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif (digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp58rpb6xe.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e7d]\n??:? void tmp58rpb6xe.__unittest_L35_C1() [0x427b42]\n??:? void tmp58rpb6xe.__modtest() [0x427bfc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc17]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaaa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc3d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbc9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa81]\n??:? runModuleUnitTests [0x42b9ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428340]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tbool is_decimal = false;\n\t\n\tif (num.length > 0)\n\t{\n\t\tint dot_count = 0;\n\t\tint num_count = 0;\n\t\t\n\t\tforeach(c; num)\n\t\t{\n\t\t\tif (c == '.')\n\t\t\t{\n\t\t\t\tdot_count++;\n\t\t\t}\n\t\t\telse if (c >= '0' && c <= '9')\n\t\t\t{\n\t\t\t\tnum_count++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (dot_count == 1 && num_count == num.length - 1)\n\t\t{\n\t\t\tis_decimal = true;\n\t\t}\n\t}\n\t\n\treturn is_decimal;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpocul5moc.d(46): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpocul5moc.__unittest_L40_C1() [0x427b34]\n??:? void tmpocul5moc.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++) {\n\t\tif (num[i] == '.') {\n\t\t\tdot_count++;\n\t\t} else if (num[i] >= '0' && num[i] <= '9') {\n\t\t\tdigit_count++;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count > 1) {\n\t\treturn false;\n\t}\n\tif (dot_count == 0) {\n\t\treturn true;\n\t}\n\tif (digit_count <= 2) {\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzhnezxjj.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpzhnezxjj.__unittest_L31_C1() [0x427b26]\n??:? void tmpzhnezxjj.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa61]\n??:? runModuleUnitTests [0x42b9cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428320]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint len = num.length();\n\tint i = 0;\n\tif (num[0] == '.')\n\t\treturn false;\n\tif (num[len - 1] == '.')\n\t\treturn false;\n\tfor (i = 0; i < len; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t\tdot++;\n\t\tif (dot > 1)\n\t\t\treturn false;\n\t\tif (num[i] != '.' && !(num[i] >= '0' && num[i] <= '9'))\n\t\t\treturn false;\n\t}\n\tif (dot == 0)\n\t\treturn true;\n\tif (len - i > 2)\n\t\treturn false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmp0s8b2u8o.d(10): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0s8b2u8o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn digit_count == 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmo6vdh0x.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpmo6vdh0x.__unittest_L32_C1() [0x427b0a]\n??:? void tmpmo6vdh0x.__modtest() [0x427bc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint num_count = 0;\n\tint i = 0;\n\t\n\tif(num[0] == '-')\n\t{\n\t\ti++;\n\t}\n\t\n\tfor(; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tnum_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && num_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx3xntqxq.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x427e75]\n??:? void tmpx3xntqxq.__unittest_L43_C1() [0x427b3a]\n??:? void tmpx3xntqxq.__modtest() [0x427bf4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaa2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc35]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa79]\n??:? runModuleUnitTests [0x42b9e5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428338]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tforeach(c; num) {\n\t\tif(c == '.') {\n\t\t\tdot_count++;\n\t\t} else if(c >= '0' && c <= '9') {\n\t\t\tdigit_count++;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif(dot_count > 1 || digit_count > 3) {\n\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1nikmh50.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmp1nikmh50.__unittest_L25_C1() [0x427aca]\n??:? void tmp1nikmh50.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\treturn num.match(\"^[0-9]+(\\\\.[0-9]{1,2})?$\");\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmpkct5yeym.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkct5yeym.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num) {\n\t\tif(c == '.') {\n\t\t\tdot_count++;\n\t\t} else if(c >= '0' && c <= '9') {\n\t\t\tdigit_count++;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg3w2wdo1.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpg3w2wdo1.__unittest_L28_C1() [0x427aca]\n??:? void tmpg3w2wdo1.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\t\n\tif(num[0] == '-')\n\t\ti = 1;\n\t\n\tfor(; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpurk5guyj.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e7d]\n??:? void tmpurk5guyj.__unittest_L36_C1() [0x427b46]\n??:? void tmpurk5guyj.__modtest() [0x427c00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc17]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaaa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc3d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbc9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa81]\n??:? runModuleUnitTests [0x42b9ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428340]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint len = num.length;\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < len; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif (digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmp_j7swjki.d(9): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_j7swjki.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num) {\n\t\tif(c == '.') {\n\t\t\tdot_count++;\n\t\t} else if(c >= '0' && c <= '9') {\n\t\t\tdigit_count++;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1) {\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0) {\n\t\treturn true;\n\t}\n\t\n\tif(digit_count <= 2) {\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpalhxk3p4.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpalhxk3p4.__unittest_L36_C1() [0x427ae2]\n??:? void tmpalhxk3p4.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c < '0' || c > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\treturn digit_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprahk9zyk.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmprahk9zyk.__unittest_L28_C1() [0x427ac2]\n??:? void tmprahk9zyk.__modtest() [0x427b7c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb23]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]\n??:? runModuleUnitTests [0x42b8f9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42824c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length(); i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpsn23hwep.d(11): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsn23hwep.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tbool is_decimal = false;\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num) \n\t{\n\t\tif(c == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1) \n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if(c >= '0' && c <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(digit_count > 2) \n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmr1read3.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpmr1read3.__unittest_L40_C1() [0x427ace]\n??:? void tmpmr1read3.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num) \n\t{\n\t\tif(c == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1) \n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if(c >= '0' && c <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tif(digit_count > 2) \n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm_z8aeas.d(48): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpm_z8aeas.__unittest_L44_C1() [0x427ade]\n??:? void tmpm_z8aeas.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tif(++dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\t++digit_count;\n\t}\n\t\n\treturn (digit_count - dot_count) <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpepdicwo6.d(19): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpepdicwo6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 3)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpari_3v4o.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpari_3v4o.__unittest_L32_C1() [0x427ace]\n??:? void tmpari_3v4o.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint i = 0;\n\tint len = num.length;\n\tbool decimal = false;\n\tbool has_decimal = false;\n\tint decimal_count = 0;\n\t\n\twhile(i < len)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tif(decimal)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdecimal = true;\n\t\t\thas_decimal = true;\n\t\t}\n\t\telse if(num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tif(decimal)\n\t\t\t{\n\t\t\t\tdecimal_count++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\ti++;\n\t}\n\t\n\tif(has_decimal && decimal_count == 2)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmptj5191gz.d(10): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptj5191gz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\tif (num[0] == '-')\n\t\ti = 1;\n\tfor (; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\tif (dot_count == 0)\n\t\treturn false;\n\tif (digit_count - dot_count > 2)\n\t\treturn false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5r07cz25.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427e8d]\n??:? void tmp5r07cz25.__unittest_L33_C1() [0x427b52]\n??:? void tmp5r07cz25.__modtest() [0x427c0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc27]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbd9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa91]\n??:? runModuleUnitTests [0x42b9fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428350]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\t\n\tif (num[0] == '-')\n\t\ti++;\n\t\n\tfor (; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\treturn digit_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp03rkj6eu.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e6d]\n??:? void tmp03rkj6eu.__unittest_L32_C1() [0x427b32]\n??:? void tmp03rkj6eu.__modtest() [0x427bec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa9a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]\n??:? runModuleUnitTests [0x42b9dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428330]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1)\n\t{\n\t\tif(digit_count > 2)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8l__vk1x.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp8l__vk1x.__unittest_L43_C1() [0x427ada]\n??:? void tmp8l__vk1x.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\treturn digit_count > 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpd9z4ft9x.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd9z4ft9x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprurvsejq.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmprurvsejq.__unittest_L37_C1() [0x427aca]\n??:? void tmprurvsejq.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 3) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoycolcnr.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpoycolcnr.__unittest_L37_C1() [0x427b0e]\n??:? void tmpoycolcnr.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num) {\n\t\tif(c == '.') {\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(!isdigit(c))\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\n\treturn digit_count - dot_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpvlt169g8.d(18): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvlt169g8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprurvsejq.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmprurvsejq.__unittest_L37_C1() [0x427aca]\n??:? void tmprurvsejq.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num) {\n\t\tif(c == '.') {\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(isDigit(c)) {\n\t\t\tdigit_count++;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn dot_count == 1 && digit_count == 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpyr6fw2uc.d(16): Error: undefined identifier `isDigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyr6fw2uc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjokqtrly.d(49): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpjokqtrly.__unittest_L45_C1() [0x427ae2]\n??:? void tmpjokqtrly.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(!isdigit(c))\n\t\t\t\treturn false;\n\t\t\telse\n\t\t\t\tdigit_count++;\n\t\t}\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpny747_ci.d(22): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpny747_ci.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\treturn digit_count == 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpia__oycd.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpia__oycd.__unittest_L26_C1() [0x427b0a]\n??:? void tmpia__oycd.__modtest() [0x427bc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\twhile(i < num.length)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if(num[i] < '0' || num[i] > '9')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\ti++;\n\t}\n\tif(dot_count == 0)\n\t{\n\t\treturn false;\n\t}\n\tif(digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeoe8i2kt.d(46): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpeoe8i2kt.__unittest_L42_C1() [0x427b22]\n??:? void tmpeoe8i2kt.__modtest() [0x427bdc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa61]\n??:? runModuleUnitTests [0x42b9cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428320]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmbfc7oj7.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpmbfc7oj7.__unittest_L32_C1() [0x427b0e]\n??:? void tmpmbfc7oj7.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpevpf5r3g.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpevpf5r3g.__unittest_L30_C1() [0x427ace]\n??:? void tmpevpf5r3g.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif (num.length == 0) return false;\n\tbool dot = false;\n\tbool digit = false;\n\tint dot_pos = 0;\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tif (dot) return false;\n\t\t\tdot = true;\n\t\t\tdot_pos = i;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit = true;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (!digit) return false;\n\tif (dot) \n\t{\n\t\tif (num.length - dot_pos - 1 > 2) return false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(isdigit(c))\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpfpcwzqyp.d(18): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfpcwzqyp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_index = num.find('.');\n\tif (dot_index == -1)\n\t\treturn false;\n\t\n\tstring before_dot = num[0..dot_index];\n\tstring after_dot = num[dot_index+1..$];\n\t\n\tif (before_dot.length() == 0 || after_dot.length() == 0)\n\t\treturn false;\n\t\n\tif (before_dot.find('-') != -1)\n\t\treturn false;\n\t\n\tif (after_dot.length() > 2)\n\t\treturn false;\n\t\n\tfor (int i = 0; i < before_dot.length(); i++)\n\t{\n\t\tif (before_dot[i] < '0' || before_dot[i] > '9')\n\t\t\treturn false;\n\t}\n\t\n\tfor (int i = 0; i < after_dot.length(); i++)\n\t{\n\t\tif (after_dot[i] < '0' || after_dot[i] > '9')\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmp9by0t8ql.d(9): Error: no property `find` for type `string`\n/tmp/tmp9by0t8ql.d(16): Error: no property `length` for type `string`\n/tmp/tmp9by0t8ql.d(16): Error: no property `length` for type `string`\n/tmp/tmp9by0t8ql.d(19): Error: no property `find` for type `string`\n/tmp/tmp9by0t8ql.d(22): Error: no property `length` for type `string`\n/tmp/tmp9by0t8ql.d(25): Error: no property `length` for type `string`\n/tmp/tmp9by0t8ql.d(31): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9by0t8ql.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\treturn dot_count == 1 && digit_count == 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpq_qlkqmq.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq_qlkqmq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif (num.length == 0) return false;\n\t\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach (c; num)\n\t{\n\t\tif (c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1) return false;\n\t\t}\n\t\telse if (c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 0) return false;\n\t\n\tint dot_index = num.indexOf('.');\n\t\n\tif (dot_index == 0 || dot_index == num.length - 1) return false;\n\t\n\tif (digit_count - dot_index > 2) return false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpsjhlzx7t.d(33): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsjhlzx7t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn (dot_count == 1 && digit_count == 3);\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8rfyv23w.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp8rfyv23w.__unittest_L28_C1() [0x427b0e]\n??:? void tmp8rfyv23w.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif (digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx6w_b6iq.d(49): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpx6w_b6iq.__unittest_L45_C1() [0x427b26]\n??:? void tmpx6w_b6iq.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa61]\n??:? runModuleUnitTests [0x42b9cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428320]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\tif (num[0] == '-')\n\t\ti = 1;\n\tfor (; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\tif (digit_count > 2)\n\t\treturn false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu0hp4it5.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e7d]\n??:? void tmpu0hp4it5.__unittest_L31_C1() [0x427b42]\n??:? void tmpu0hp4it5.__modtest() [0x427bfc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc17]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaaa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc3d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbc9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa81]\n??:? runModuleUnitTests [0x42b9ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428340]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num) {\n\t\tif(c == '.') {\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9') {\n\t\t\tdigit_count++;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1) {\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0) {\n\t\treturn true;\n\t}\n\t\n\tif(digit_count > 2) {\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw73h_243.d(42): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpw73h_243.__unittest_L38_C1() [0x427ae2]\n??:? void tmpw73h_243.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprurvsejq.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmprurvsejq.__unittest_L37_C1() [0x427aca]\n??:? void tmprurvsejq.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\t\n\tif (num[0] == '-')\n\t\ti = 1;\n\t\n\tfor (; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\treturn digit_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdqrulrn0.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e6d]\n??:? void tmpdqrulrn0.__unittest_L32_C1() [0x427b36]\n??:? void tmpdqrulrn0.__modtest() [0x427bf0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa9a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]\n??:? runModuleUnitTests [0x42b9dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428330]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1) \n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} \n\t\telse if (num[i] < '0' || num[i] > '9') \n\t\t{\n\t\t\treturn false;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t}\n\treturn digit_count <= 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_balcnp8.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp_balcnp8.__unittest_L32_C1() [0x427b0a]\n??:? void tmp_balcnp8.__modtest() [0x427bc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif(num.length == 0)\n\t\treturn false;\n\t\n\tbool is_decimal = false;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tif(is_decimal)\n\t\t\t\treturn false;\n\t\t\tis_decimal = true;\n\t\t}\n\t\telse if(!('0' <= c && c <= '9'))\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfht3kne9.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpfht3kne9.__unittest_L28_C1() [0x427b2c]\n??:? void tmpfht3kne9.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 3)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxsv7kh90.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpxsv7kh90.__unittest_L30_C1() [0x427ace]\n??:? void tmpxsv7kh90.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1 && digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0 && digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp75vracrp.d(49): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp75vracrp.__unittest_L45_C1() [0x427aee]\n??:? void tmp75vracrp.__modtest() [0x427ba8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint i = 0;\n\tbool is_decimal = false;\n\tbool is_negative = false;\n\tbool is_positive = false;\n\tbool is_dot = false;\n\tbool is_digit = false;\n\tbool is_precision = false;\n\tbool is_precision_two = false;\n\tbool is_precision_one = false;\n\t\n\tif (num[0] == '-')\n\t{\n\t\tis_negative = true;\n\t\ti++;\n\t}\n\telse if (num[0] == '+')\n\t{\n\t\tis_positive = true;\n\t\ti++;\n\t}\n\t\n\tif (is_negative || is_positive)\n\t{\n\t\tif (num[1] == '.')\n\t\t{\n\t\t\tis_dot = true;\n\t\t\ti++;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (num[0] == '.')\n\t\t{\n\t\t\tis_dot = true;\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\tfor (; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tif (is_dot)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tis_dot = true;\n\t\t\t}\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tif (is_dot)\n\t\t\t{\n\t\t\t\tis_precision = true;\n\t\t\t\tif (is_precision_one)\n\t\t\t\t{\n\t\t\t\t\tis_precision_two = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tis_precision_one = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tis_digit = true;\n\t\t\t}\n\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmp89ja__ig.d(79): Error: found `unittest` instead of statement\n/tmp/tmp89ja__ig.d(89): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp89ja__ig.d(89): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp89ja__ig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(!isdigit(c))\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 1)\n\t{\n\t\tif(digit_count > 3)\n\t\t\treturn false;\n\t\t\n\t\tif(digit_count == 3)\n\t\t{\n\t\t\tif(num[num.length - 1] == '0' && num[num.length - 2] == '0')\n\t\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpxmi03tjy.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxmi03tjy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tif(num.length == 0)\n\t\treturn false;\n\t\n\tfor(int i = 0; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\n\tif(digit_count - dot_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptpa7jz6a.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427e6d]\n??:? void tmptpa7jz6a.__unittest_L40_C1() [0x427b36]\n??:? void tmptpa7jz6a.__modtest() [0x427bf0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa9a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]\n??:? runModuleUnitTests [0x42b9dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428330]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\tif (dot_count == 0 && digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\tif (dot_count == 1 && digit_count > 4)\n\t{\n\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiiyzknbh.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427e6d]\n??:? void tmpiiyzknbh.__unittest_L40_C1() [0x427b32]\n??:? void tmpiiyzknbh.__modtest() [0x427bec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa9a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]\n??:? runModuleUnitTests [0x42b9dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428330]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\treturn digit_count - dot_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmp2dkjb6uc.d(19): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2dkjb6uc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeqo22uc5.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpeqo22uc5.__unittest_L32_C1() [0x427ace]\n??:? void tmpeqo22uc5.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeqo22uc5.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpeqo22uc5.__unittest_L32_C1() [0x427ace]\n??:? void tmpeqo22uc5.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif (num.length == 0) return false;\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1) return false;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif (digit_count > 2) return false;\n\t\t}\n\t\telse return false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnolmt6jm.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpnolmt6jm.__unittest_L28_C1() [0x427b26]\n??:? void tmpnolmt6jm.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa61]\n??:? runModuleUnitTests [0x42b9cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428320]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppsuj8pn6.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmppsuj8pn6.__unittest_L37_C1() [0x427b0e]\n??:? void tmppsuj8pn6.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint pos = num.find('.');\n\tif(pos == -1) return false;\n\tif(pos == 0) return false;\n\tif(pos == num.length() - 1) return false;\n\tif(pos == num.length() - 2) return false;\n\tif(pos == num.length() - 3) return true;\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpiqzst4ke.d(9): Error: no property `find` for type `string`\n/tmp/tmpiqzst4ke.d(12): Error: no property `length` for type `string`\n/tmp/tmpiqzst4ke.d(13): Error: no property `length` for type `string`\n/tmp/tmpiqzst4ke.d(14): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiqzst4ke.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\treturn digit_count > 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9fs0lg6k.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp9fs0lg6k.__unittest_L28_C1() [0x427b5c]\n??:? void tmp9fs0lg6k.__modtest() [0x427bc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 3)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoyydpjnw.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpoyydpjnw.__unittest_L32_C1() [0x427ace]\n??:? void tmpoyydpjnw.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num) \n\t{\n\t\tif(c == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1 || digit_count > 3) \n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbu1ofqor.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpbu1ofqor.__unittest_L35_C1() [0x427aca]\n??:? void tmpbu1ofqor.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(!isdigit(c))\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\n\tif(dot_count == 1 && digit_count > 2)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpp9uv88c4.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp9uv88c4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif(num.length == 0) return false;\n\t\n\tbool is_decimal = false;\n\t\n\tforeach(i, c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tif(is_decimal) return false;\n\t\t\tis_decimal = true;\n\t\t}\n\t\telse if(!isDigit(c))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(is_decimal)\n\t{\n\t\tstring[] parts = num.split(\".\");\n\t\tif(parts.length != 2) return false;\n\t\tif(parts[1].length != 2) return false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmpdvsnb9eh.d(20): Error: undefined identifier `isDigit`\n/tmp/tmpdvsnb9eh.d(28): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdvsnb9eh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprurvsejq.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmprurvsejq.__unittest_L37_C1() [0x427aca]\n??:? void tmprurvsejq.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjokqtrly.d(49): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpjokqtrly.__unittest_L45_C1() [0x427ae2]\n??:? void tmpjokqtrly.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9fyak_rh.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp9fyak_rh.__unittest_L35_C1() [0x427b0e]\n??:? void tmp9fyak_rh.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c < '0' || c > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\telse\n\t\treturn digit_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9hyxktua.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmp9hyxktua.__unittest_L31_C1() [0x427ad2]\n??:? void tmp9hyxktua.__modtest() [0x427b8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]\n??:? runModuleUnitTests [0x42b909]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42825c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(c < '0' || c > '9')\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\n\treturn digit_count - dot_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2x07w70s.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp2x07w70s.__unittest_L34_C1() [0x427ada]\n??:? void tmp2x07w70s.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\treturn num.match(\"^[0-9]*\\\\.[0-9]{2}$\");\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmphy8wmzrw.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphy8wmzrw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count > 1) \n\t{\n\t\treturn false;\n\t}\n\tif (dot_count == 0) \n\t{\n\t\treturn true;\n\t}\n\tif (digit_count > 2) \n\t{\n\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3niwrb8i.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp3niwrb8i.__unittest_L40_C1() [0x427b26]\n??:? void tmp3niwrb8i.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa61]\n??:? runModuleUnitTests [0x42b9cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428320]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (dot_count == 1 && digit_count > 2)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif (dot_count == 0 && digit_count > 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxicc8_8z.d(51): unittest failure\n----------------\n??:? _d_unittestp [0x427e6d]\n??:? void tmpxicc8_8z.__unittest_L45_C1() [0x427b84]\n??:? void tmpxicc8_8z.__modtest() [0x427bec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa9a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]\n??:? runModuleUnitTests [0x42b9dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428330]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint len = num.length;\n\tint i = 0;\n\tif (num[0] == '-')\n\t\ti = 1;\n\tfor (; i < len; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot++;\n\t\t\tif (dot > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (!isDigit(num[i]))\n\t\t\treturn false;\n\t}\n\tif (dot == 0)\n\t\treturn false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpg3zpiid9.d(10): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\n/tmp/tmpg3zpiid9.d(22): Error: undefined identifier `isDigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg3zpiid9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\t\n\tif(num[0] == '-')\n\t\ti++;\n\t\n\tfor(; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(!isdigit(num[i]))\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\treturn (dot_count == 1 && digit_count == 3);\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122997,
      "stdout": "",
      "stderr": "/tmp/tmprw9l_ocq.d(24): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprw9l_ocq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn digit_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6mxeet8r.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp6mxeet8r.__unittest_L40_C1() [0x427ada]\n??:? void tmp6mxeet8r.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\tif (num[0] == '-')\n\t\ti = 1;\n\tfor (; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\tif (digit_count > 2)\n\t\treturn false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu0hp4it5.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e7d]\n??:? void tmpu0hp4it5.__unittest_L31_C1() [0x427b42]\n??:? void tmpu0hp4it5.__modtest() [0x427bfc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc17]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaaa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc3d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbc9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa81]\n??:? runModuleUnitTests [0x42b9ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428340]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tif(num.length == 0)\n\t\treturn false;\n\t\n\tfor(int i = 0; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppnncrs3r.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmppnncrs3r.__unittest_L34_C1() [0x427b1e]\n??:? void tmppnncrs3r.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbef]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa82]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc15]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa59]\n??:? runModuleUnitTests [0x42b9c5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428318]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint len = num.length;\n\tint i = 0;\n\tif(num[0] == '-')\n\t{\n\t\ti = 1;\n\t}\n\tfor(; i < len; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot++;\n\t\t}\n\t\telse if(num[i] < '0' || num[i] > '9')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif(dot == 1)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "/tmp/tmpnvvocjan.d(10): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnvvocjan.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\tif(digit_count > 2)\n\t\treturn false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpfpir_5t8.d(19): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfpir_5t8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t\tdigit_count++;\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpl6xiqdof.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpl6xiqdof.__unittest_L31_C1() [0x427ace]\n??:? void tmpl6xiqdof.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1)\n\t{\n\t\tif(digit_count > 2)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8l__vk1x.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp8l__vk1x.__unittest_L43_C1() [0x427ada]\n??:? void tmp8l__vk1x.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tforeach(c; num) {\n\t\tif(c == '.') {\n\t\t\tdot_count++;\n\t\t} else if(c >= '0' && c <= '9') {\n\t\t\tdigit_count++;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif(dot_count != 1) {\n\t\treturn false;\n\t}\n\tint dot_index = num.indexOf('.');\n\tif(dot_index == 0 || dot_index == num.length - 1) {\n\t\treturn false;\n\t}\n\tif(digit_count > dot_index + 2) {\n\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "/tmp/tmpd00h774z.d(23): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd00h774z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\t\n\tif(num[i] == '-')\n\t\ti++;\n\t\n\tfor(; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\n\tif(digit_count - dot_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122998,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm0luw8sr.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x427e8d]\n??:? void tmpm0luw8sr.__unittest_L41_C1() [0x427b52]\n??:? void tmpm0luw8sr.__modtest() [0x427c0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc27]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbd9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa91]\n??:? runModuleUnitTests [0x42b9fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428350]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\treturn digit_count - dot_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmpor6bjogc.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpor6bjogc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppsuj8pn6.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmppsuj8pn6.__unittest_L37_C1() [0x427b0e]\n??:? void tmppsuj8pn6.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
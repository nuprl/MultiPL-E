{
  "name": "mbpp_777_find_sum",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_777_find_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(long a; arr)\n\t{\n\t\tbool found = false;\n\t\tforeach(long b; arr)\n\t\t{\n\t\t\tif(a == b && a != b)\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t\tsum += a;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(long a; arr)\n\t{\n\t\tif(a != 0)\n\t\t{\n\t\t\tsum += a;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tif (arr[i] != -1) \n\t\t{\n\t\t\tsum += arr[i];\n\t\t\tfor (int j = i + 1; j < arr.length; j++) \n\t\t\t{\n\t\t\t\tif (arr[i] == arr[j]) \n\t\t\t\t{\n\t\t\t\t\tarr[j] = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (arr[i] != 0)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t\tfor (int j = i + 1; j < arr.length; j++)\n\t\t\t{\n\t\t\t\tif (arr[i] == arr[j])\n\t\t\t\t{\n\t\t\t\t\tarr[j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(long a; arr)\n\t{\n\t\tif(arr.count(a) == 1)\n\t\t\tsum += a;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(elem; arr)\n\t{\n\t\tif(elem == 0)\n\t\t\tcontinue;\n\t\tif(arr[elem] == 0)\n\t\t{\n\t\t\tsum += elem;\n\t\t\tarr[elem] = 1;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tsum += i;\n\t}\n\treturn sum;\n}"
  ]
}
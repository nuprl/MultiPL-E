{
  "name": "mbpp_392_get_max_sum",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\n\t\n*/\nlong get_max_sum(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_392_get_max_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = get_max_sum;\n\n    assert(candidate(60L) == 106L);\n    assert(candidate(10L) == 12L);\n    assert(candidate(2L) == 2L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tif (n <= 0)\n\t\treturn 0;\n\t\n\tlong sum = 0;\n\t\n\tif (n % 2 == 0)\n\t\tsum += n / 2;\n\tif (n % 3 == 0)\n\t\tsum += n / 3;\n\tif (n % 4 == 0)\n\t\tsum += n / 4;\n\tif (n % 5 == 0)\n\t\tsum += n / 5;\n\t\n\treturn max(sum, n);\n}",
    "{\n\tif(n<=0)\n\t\treturn 0;\n\tif(n<=5)\n\t\treturn n;\n\t\n\tlong max_sum = n;\n\t\n\tfor(long i=2; i<=5; i++)\n\t{\n\t\tlong sum = get_max_sum(n/i);\n\t\tif(sum > max_sum)\n\t\t\tmax_sum = sum;\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tif(n < 0)\n\t\treturn 0;\n\tif(n == 0)\n\t\treturn 0;\n\tif(n == 1)\n\t\treturn 1;\n\t\n\tlong sum = 0;\n\tlong max_sum = 0;\n\t\n\tfor(int i = 2; i <= 5; i++) \n\t{\n\t\tsum = get_max_sum(n / i);\n\t\tif(sum > max_sum)\n\t\t\tmax_sum = sum;\n\t}\n\t\n\treturn max_sum + n;\n}",
    "{\n\tif (n == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (n == 2)\n\t\treturn 2;\n\tif (n == 3)\n\t\treturn 3;\n\tif (n == 4)\n\t\treturn 4;\n\tif (n == 5)\n\t\treturn 5;\n\t\n\tlong temp = max(n, get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5));\n\treturn temp;\n}",
    "{\n\tif(n <= 0)\n\t\treturn 0;\n\t\n\tif(n == 1)\n\t\treturn 1;\n\t\n\tif(n == 2)\n\t\treturn 2;\n\t\n\tif(n == 3)\n\t\treturn 3;\n\t\n\tif(n == 4)\n\t\treturn 4;\n\t\n\tif(n == 5)\n\t\treturn 5;\n\t\n\treturn max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}",
    "{\n\tif (n == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (n == 2)\n\t\treturn 2;\n\tif (n == 3)\n\t\treturn 3;\n\tif (n == 4)\n\t\treturn 4;\n\tif (n == 5)\n\t\treturn 5;\n\t\n\tlong sum = 0;\n\tlong max_sum = 0;\n\t\n\tsum = get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5);\n\tif (sum > n)\n\t\tmax_sum = sum;\n\telse\n\t\tmax_sum = n;\n\t\n\treturn max_sum;\n}",
    "{\n\tif (n <= 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (n == 2)\n\t\treturn 2;\n\tif (n == 3)\n\t\treturn 3;\n\tif (n == 4)\n\t\treturn 4;\n\tif (n == 5)\n\t\treturn 5;\n\t\n\tlong max_sum = 0;\n\t\n\tlong sum = 0;\n\t\n\tsum = get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5);\n\t\n\tif (sum > n)\n\t\tmax_sum = sum;\n\telse\n\t\tmax_sum = n;\n\t\n\treturn max_sum;\n}",
    "{\n\tif (n < 12) return n;\n\treturn max(n, get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5));\n}",
    "{\n\tif (n <= 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (n == 2)\n\t\treturn 2;\n\tif (n == 3)\n\t\treturn 3;\n\tif (n == 4)\n\t\treturn 4;\n\tif (n == 5)\n\t\treturn 5;\n\t\n\tlong sum = 0;\n\tlong max_sum = n;\n\t\n\tsum = get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5);\n\tif (sum > max_sum)\n\t\tmax_sum = sum;\n\t\n\treturn max_sum;\n}",
    "{\n\tif (n < 0)\n\t\treturn 0;\n\t\n\tif (n == 0)\n\t\treturn 0;\n\t\n\tif (n == 1)\n\t\treturn 1;\n\t\n\treturn max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}",
    "{\n\tif(n <= 0)\n\t\treturn 0;\n\tif(n == 1)\n\t\treturn 1;\n\t\n\tlong sum = 0;\n\t\n\tsum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n\t\n\treturn max(sum, n);\n}",
    "{\n\tif (n <= 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\t\n\tlong sum = 0;\n\tlong temp = 0;\n\tfor (int i = 2; i <= 5; i++)\n\t{\n\t\ttemp = get_max_sum(n / i);\n\t\tif (temp > sum)\n\t\t\tsum = temp;\n\t}\n\t\n\treturn max(sum, n);\n}",
    "{\n\tif (n <= 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\treturn max(n, get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5));\n}",
    "{\n\tif (n <= 0)\n\t\treturn 0;\n\t\n\tauto cache = new long[n + 1];\n\tcache[0] = 0;\n\tcache[1] = 1;\n\t\n\tfor (long i = 2; i <= n; i++) \n\t{\n\t\tcache[i] = max(i, cache[i / 2] + cache[i / 3] + cache[i / 4] + cache[i / 5]);\n\t}\n\t\n\treturn cache[n];\n}",
    "{\n\tif (n == 0)\n\t\treturn 0;\n\t\n\tlong a = get_max_sum(n / 2);\n\tlong b = get_max_sum(n / 3);\n\tlong c = get_max_sum(n / 4);\n\tlong d = get_max_sum(n / 5);\n\t\n\treturn max(n, a + b + c + d);\n}",
    "{\n\tif (n <= 0)\n\t\treturn 0;\n\t\n\tlong sum = n;\n\t\n\tif (n % 2 == 0)\n\t\tsum += get_max_sum(n / 2);\n\t\n\tif (n % 3 == 0)\n\t\tsum += get_max_sum(n / 3);\n\t\n\tif (n % 4 == 0)\n\t\tsum += get_max_sum(n / 4);\n\t\n\tif (n % 5 == 0)\n\t\tsum += get_max_sum(n / 5);\n\t\n\treturn sum;\n}",
    "{\n\tif (n < 12) \n\t{\n\t\treturn n;\n\t}\n\telse \n\t{\n\t\treturn max(n, get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5));\n\t}\n}",
    "{\n\tif(n <= 0) \n\t\treturn 0;\n\t\n\tlong sum = 0;\n\tsum = max(sum, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n\tsum = max(sum, n);\n\treturn sum;\n}",
    "{\n\tif (n <= 0)\n\t\treturn 0;\n\telse\n\t{\n\t\tlong max_sum = n;\n\t\tlong sum = 0;\n\t\tfor (int i = 2; i <= 5; i++)\n\t\t{\n\t\t\tsum = get_max_sum(n / i);\n\t\t\tif (sum > max_sum)\n\t\t\t\tmax_sum = sum;\n\t\t}\n\t\treturn max_sum;\n\t}\n}",
    "{\n\tif(n <= 0)\n\t\treturn 0;\n\t\n\tif(n <= 5)\n\t\treturn n;\n\t\n\tlong sum = 0;\n\t\n\tfor(int i = 2; i <= 5; i++)\n\t\tsum += get_max_sum(n / i);\n\t\n\treturn max(sum, n);\n}"
  ]
}
{
  "name": "mbpp_59_is_octagonal",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth octagonal number.\n\t\n*/\nlong is_octagonal(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_59_is_octagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = is_octagonal;\n\n    assert(candidate(5L) == 65L);\n    assert(candidate(10L) == 280L);\n    assert(candidate(15L) == 645L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong x = (sqrt(1 + 24 * n) + 1) / 6;\n\treturn x * (3 * x - 2) == n;\n}",
    "{\n\tauto t = (sqrt(1 + 24 * n) + 1) / 6;\n\treturn t == (long)t;\n}",
    "{\n\tauto m = (sqrt(1 + 24 * n) + 1) / 6;\n\treturn m == cast(long)m;\n}",
    "{\n\tauto a = (sqrt(24 * n + 1) + 1) / 6;\n\treturn a == (long)a;\n}",
    "{\n\tlong a = (long)sqrt(n);\n\treturn a * a == n && (a & 3) == 3;\n}",
    "{\n\tlong a = (long)sqrt(n);\n\treturn a * a == n && (a & 1) == 1;\n}",
    "{\n\tauto m = (sqrt(1 + 24 * n) + 1) / 6;\n\treturn m == (long)m;\n}",
    "{\n\tauto a = (sqrt(1 + 24 * n) + 1) / 6;\n\treturn a == (long)a;\n}",
    "{\n\tauto m = (sqrt(1 + 24 * n) + 1) / 6;\n\treturn m == (long)m;\n}",
    "{\n\tauto d = (sqrt(1 + 24 * n) + 1) / 6;\n\treturn d == (long)d;\n}",
    "{\n\tauto m = (sqrt(1 + 24 * n) + 1) / 6;\n\treturn m == long(m);\n}",
    "{\n\tauto a = (sqrt(24 * n + 1) + 1) / 6;\n\treturn a == long(a);\n}",
    "{\n\tlong a = (long)sqrt(n);\n\treturn a * a == n && (a & 3) == 3;\n}",
    "{\n\tlong a = (long)((sqrt(1 + 24 * n) + 1.0) / 6);\n\treturn a * (3 * a - 2) == n;\n}",
    "{\n\tauto m = (sqrt(1 + 24 * n) + 1) / 6;\n\treturn m == (long)m;\n}",
    "{\n\tlong a = (long)sqrt(n);\n\treturn a * a == n && (a & 3) == 1;\n}",
    "{\n\tlong a = (sqrt(1 + 24 * n) + 1) / 6;\n\treturn a * (3 * a - 2) == n;\n}",
    "{\n\tauto a = (sqrt(24*n+1)+1)/6;\n\treturn a == long(a);\n}",
    "{\n\tauto m = (sqrt(1 + 24 * n) + 1) / 6;\n\treturn m == (long)m;\n}",
    "{\n\tauto d = (sqrt(1 + 24 * n) + 1) / 6;\n\treturn d == (long)d;\n}"
  ]
}
{
  "name": "mbpp_772_remove_length",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_772_remove_length.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmptme5w5l9.d(10): Error: no property `split` for type `string`\n/tmp/tmptme5w5l9.d(14): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptme5w5l9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp52vljvyt.d(10): Error: no property `split` for type `string`\n/tmp/tmp52vljvyt.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp52vljvyt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring[] new_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tnew_words ~= word;\n\t}\n\treturn new_words.join(\" \");\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmphps2fj8m.d(10): Error: no property `split` for type `string`\n/tmp/tmphps2fj8m.d(17): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphps2fj8m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = split(test_str); \n\tstring result = \"\"; \n\tforeach (string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpzzoddl3w.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzzoddl3w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp52vljvyt.d(10): Error: no property `split` for type `string`\n/tmp/tmp52vljvyt.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp52vljvyt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpu4u5umpv.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu4u5umpv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif(word.length != K) \n\t\t{ \n\t\t\tresult ~= word + \" \"; \n\t\t} \n\t} \n\treturn result.stripRight; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp2h6irp51.d(10): Error: no property `split` for type `string`\n/tmp/tmp2h6irp51.d(16): Error: invalid array operation `word + \" \"` (possible missing [])\n/tmp/tmp2h6irp51.d(19): Error: no property `stripRight` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2h6irp51.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp52vljvyt.d(10): Error: no property `split` for type `string`\n/tmp/tmp52vljvyt.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp52vljvyt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp52vljvyt.d(10): Error: no property `split` for type `string`\n/tmp/tmp52vljvyt.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp52vljvyt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpkrw3v8ck.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkrw3v8ck.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp2veuegz3.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2veuegz3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpqmpznvxm.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqmpznvxm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp52vljvyt.d(10): Error: no property `split` for type `string`\n/tmp/tmp52vljvyt.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp52vljvyt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif(word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpjpb_z7n7.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjpb_z7n7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp2veuegz3.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2veuegz3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp2veuegz3.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2veuegz3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) { \n            result ~= word + \" \"; \n        } \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpq9c9fu70.d(10): Error: no property `split` for type `string`\n/tmp/tmpq9c9fu70.d(14): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq9c9fu70.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpyodw80vv.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyodw80vv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n        { \n            result ~= word ~ \" \"; \n        } \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpd7zo3n5o.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd7zo3n5o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(); \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpn1glie28.d(10): Error: no property `split` for type `string`\n/tmp/tmpn1glie28.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn1glie28.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(); \n    string res = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            res ~= word ~ \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpaxe2419j.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaxe2419j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpofnha9z2.d(10): Error: no property `split` for type `string`\n/tmp/tmpofnha9z2.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofnha9z2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = split(test_str, \" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpsieqgc1b.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsieqgc1b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string[] new_words; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n        { \n            new_words ~= word; \n        } \n    } \n    return new_words.join(\" \"); \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp4egvqiqp.d(10): Error: no property `split` for type `string`\n/tmp/tmp4egvqiqp.d(19): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4egvqiqp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpwkivimx4.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwkivimx4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpqmpznvxm.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqmpznvxm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = split(test_str, \" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpltvw4x4s.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpltvw4x4s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpofnha9z2.d(10): Error: no property `split` for type `string`\n/tmp/tmpofnha9z2.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofnha9z2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) { \n            result += word + \" \"; \n        } \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp79y1ohrl.d(10): Error: no property `split` for type `string`\n/tmp/tmp79y1ohrl.d(14): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp79y1ohrl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpwkivimx4.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwkivimx4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp9d93t1ng.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9d93t1ng.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if(word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpg13c2xx2.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg13c2xx2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpofnha9z2.d(10): Error: no property `split` for type `string`\n/tmp/tmpofnha9z2.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofnha9z2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp52vljvyt.d(10): Error: no property `split` for type `string`\n/tmp/tmp52vljvyt.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp52vljvyt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpb3m54ki0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb3m54ki0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmptme5w5l9.d(10): Error: no property `split` for type `string`\n/tmp/tmptme5w5l9.d(14): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptme5w5l9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = split(test_str);\n\tstring[] new_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tnew_words ~= word;\n\t\t}\n\t}\n\treturn join(new_words);\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp5_qhyjjo.d(10): Error: undefined identifier `split`\n/tmp/tmp5_qhyjjo.d(19): Error: undefined identifier `join`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5_qhyjjo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string[] result = new string[]; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word; \n    } \n    return result.join(\" \"); \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp_q2mdqmr.d(10): Error: no property `split` for type `string`\n/tmp/tmp_q2mdqmr.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\n/tmp/tmp_q2mdqmr.d(17): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_q2mdqmr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach (string word; words) { \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp_07wko73.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_07wko73.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp2veuegz3.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2veuegz3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp51dvbbi6.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp51dvbbi6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(string word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word ~ \" \";\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpo8bt_f6x.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo8bt_f6x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp52vljvyt.d(10): Error: no property `split` for type `string`\n/tmp/tmp52vljvyt.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp52vljvyt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words;\n\tstring result;\n\twords = test_str.split(\" \");\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp7jiwzhjt.d(12): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7jiwzhjt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp2veuegz3.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2veuegz3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result = result + word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpx2_kyfws.d(10): Error: no property `split` for type `string`\n/tmp/tmpx2_kyfws.d(15): Error: invalid array operation `result + word` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx2_kyfws.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpofnha9z2.d(10): Error: no property `split` for type `string`\n/tmp/tmpofnha9z2.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofnha9z2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(string word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp00lpmoo4.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp00lpmoo4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string [] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpj5ryoqtv.d(10): Error: no property `split` for type `string`\n/tmp/tmpj5ryoqtv.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj5ryoqtv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(string word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp4lm8273s.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4lm8273s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp51dvbbi6.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp51dvbbi6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string[] result = new string[]; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word; \n    } \n    return result.join(\" \"); \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpor31eo7p.d(10): Error: no property `split` for type `string`\n/tmp/tmpor31eo7p.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\n/tmp/tmpor31eo7p.d(17): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpor31eo7p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp52vljvyt.d(10): Error: no property `split` for type `string`\n/tmp/tmp52vljvyt.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp52vljvyt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpqmpznvxm.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqmpznvxm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpu4u5umpv.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu4u5umpv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string w; words) \n    { \n        if (w.length != K) \n            res += w + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpqwziw963.d(10): Error: no property `split` for type `string`\n/tmp/tmpqwziw963.d(15): Error: invalid array operation `w + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqwziw963.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result = result + word + \" \"; \n    } \n  \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpj4622j8r.d(10): Error: no property `split` for type `string`\n/tmp/tmpj4622j8r.d(15): Error: invalid array operation `result + word` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj4622j8r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpeux8zo8w.d(10): Error: no property `split` for type `string`\n/tmp/tmpeux8zo8w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeux8zo8w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res ~= word ~ \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpkfylbj8y.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkfylbj8y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(); \n    string result = \"\"; \n  \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n  \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp1yaje5pv.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1yaje5pv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpu4u5umpv.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu4u5umpv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpkrw3v8ck.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkrw3v8ck.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmptme5w5l9.d(10): Error: no property `split` for type `string`\n/tmp/tmptme5w5l9.d(14): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptme5w5l9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words;\n\tstring result = \"\";\n\twords = test_str.split(\" \");\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpn9vatz8w.d(12): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn9vatz8w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring res = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tres += word + \" \"; \n\t} \n\treturn res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp8z9jofyh.d(10): Error: no property `split` for type `string`\n/tmp/tmp8z9jofyh.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8z9jofyh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp64lfwuv1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp64lfwuv1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring res = \"\"; \n\tforeach(word; words) \n\t{ \n\t\tif(word.length != K) \n\t\t\tres ~= word ~ \" \"; \n\t} \n\treturn res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpclupucdc.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpclupucdc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpofnha9z2.d(10): Error: no property `split` for type `string`\n/tmp/tmpofnha9z2.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofnha9z2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp52vljvyt.d(10): Error: no property `split` for type `string`\n/tmp/tmp52vljvyt.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp52vljvyt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpcq6tpstj.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq6tpstj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmptme5w5l9.d(10): Error: no property `split` for type `string`\n/tmp/tmptme5w5l9.d(14): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptme5w5l9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string result = \"\"; \n    string[] words = test_str.split(\" \"); \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpsvnmmwvn.d(11): Error: no property `split` for type `string`\n/tmp/tmpsvnmmwvn.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsvnmmwvn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string res = \"\"; \n    string[] words = test_str.split(\" \"); \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmprp0lem47.d(11): Error: no property `split` for type `string`\n/tmp/tmprp0lem47.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprp0lem47.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach(word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpe4fw_1gt.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe4fw_1gt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp2veuegz3.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2veuegz3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif(word.length != K) \n\t\t{ \n\t\t\tresult ~= word + \" \"; \n\t\t} \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp8ly0y79o.d(10): Error: no property `split` for type `string`\n/tmp/tmp8ly0y79o.d(16): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8ly0y79o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \n/*\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \n/*\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \n/*\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \n/*\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result +=\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpx5vq4bim.d(76): Error: expression expected, not `unittest`\n/tmp/tmpx5vq4bim.d(77): Error: found `{` when expecting `;` following statement\n/tmp/tmpx5vq4bim.d(84): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx5vq4bim.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp2veuegz3.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2veuegz3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpy8ops1zw.d(10): Error: no property `split` for type `string`\n/tmp/tmpy8ops1zw.d(14): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy8ops1zw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp52vljvyt.d(10): Error: no property `split` for type `string`\n/tmp/tmp52vljvyt.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp52vljvyt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp52vljvyt.d(10): Error: no property `split` for type `string`\n/tmp/tmp52vljvyt.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp52vljvyt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp52vljvyt.d(10): Error: no property `split` for type `string`\n/tmp/tmp52vljvyt.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp52vljvyt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = split(test_str); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) { \n            result ~= word ~ \" \"; \n        } \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp4re6qk97.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4re6qk97.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpb3m54ki0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb3m54ki0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(string word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word ~ \" \";\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpp3_qhl5x.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp3_qhl5x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpu4u5umpv.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu4u5umpv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpofnha9z2.d(10): Error: no property `split` for type `string`\n/tmp/tmpofnha9z2.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofnha9z2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpkrw3v8ck.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkrw3v8ck.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = split(test_str); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpqy73gydw.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqy73gydw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split;\n    string res = \"\";\n    foreach(word; words)\n    {\n        if(word.length != K)\n        {\n            res ~= word ~ \" \";\n        }\n    }\n    return res;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpnqkiznzc.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnqkiznzc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp5dnypqo4.d(10): Error: no property `split` for type `string`\n/tmp/tmp5dnypqo4.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5dnypqo4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result = result + word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpb1ayo8qe.d(10): Error: no property `split` for type `string`\n/tmp/tmpb1ayo8qe.d(15): Error: invalid array operation `result + word` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb1ayo8qe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach (string word; words) { \n\t\tif (word.length != K) { \n\t\t\tresult += word + \" \"; \n\t\t} \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpory2jtmy.d(10): Error: no property `split` for type `string`\n/tmp/tmpory2jtmy.d(14): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpory2jtmy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpu4u5umpv.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu4u5umpv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpkrw3v8ck.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkrw3v8ck.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp2veuegz3.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2veuegz3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\t// split the string by space \n\tauto words = test_str.split(\" \"); \n\tstring res = \"\"; \n\tforeach(word; words) \n\t{ \n\t\t// if length of word is not equal to K \n\t\t// then append it to result \n\t\tif (word.length != K) \n\t\t\tres ~= word ~ \" \"; \n\t} \n\treturn res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp5t3b38r0.d(11): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5t3b38r0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpofnha9z2.d(10): Error: no property `split` for type `string`\n/tmp/tmpofnha9z2.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofnha9z2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp2veuegz3.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2veuegz3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp2veuegz3.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2veuegz3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split; \n\tstring res = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tres ~= word ~ \" \"; \n\t} \n\treturn res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmprol4djbs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprol4djbs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpofnha9z2.d(10): Error: no property `split` for type `string`\n/tmp/tmpofnha9z2.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofnha9z2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp2veuegz3.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2veuegz3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result = result + word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpx2_kyfws.d(10): Error: no property `split` for type `string`\n/tmp/tmpx2_kyfws.d(15): Error: invalid array operation `result + word` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx2_kyfws.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult += word + \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp77c2fx5s.d(10): Error: no property `split` for type `string`\n/tmp/tmp77c2fx5s.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp77c2fx5s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpu4u5umpv.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu4u5umpv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = split(test_str, \" \"); \n\tstring res = \"\"; \n\tforeach(word; words) \n\t\tif(word.length != K) \n\t\t\tres ~= word ~ \" \"; \n\treturn res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpqtr_u54h.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqtr_u54h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpcft5royl.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcft5royl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpofnha9z2.d(10): Error: no property `split` for type `string`\n/tmp/tmpofnha9z2.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofnha9z2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string result = \"\"; \n    string[] words = test_str.split(\" \"); \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpvqo3n9a9.d(11): Error: no property `split` for type `string`\n/tmp/tmpvqo3n9a9.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvqo3n9a9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word ~ \" \";\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpboygrp5j.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpboygrp5j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result.join(\" \");\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpiexhxvp3.d(10): Error: no property `split` for type `string`\n/tmp/tmpiexhxvp3.d(19): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiexhxvp3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string res = \"\"; \n    foreach (string w; words) \n    { \n        if (w.length != K) \n            res ~= w ~ \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp944rtpr_.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp944rtpr_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmptme5w5l9.d(10): Error: no property `split` for type `string`\n/tmp/tmptme5w5l9.d(14): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptme5w5l9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpkrw3v8ck.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkrw3v8ck.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpofnha9z2.d(10): Error: no property `split` for type `string`\n/tmp/tmpofnha9z2.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofnha9z2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp52vljvyt.d(10): Error: no property `split` for type `string`\n/tmp/tmp52vljvyt.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp52vljvyt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split;\n    string result = \"\";\n    foreach(string word; words)\n    {\n        if(word.length != K)\n            result ~= word ~ \" \";\n    }\n    return result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp2ddtoc5d.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2ddtoc5d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string result = \"\"; \n    string[] words = test_str.split(\" \"); \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpvqo3n9a9.d(11): Error: no property `split` for type `string`\n/tmp/tmpvqo3n9a9.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvqo3n9a9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpyodw80vv.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyodw80vv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(); \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpn1glie28.d(10): Error: no property `split` for type `string`\n/tmp/tmpn1glie28.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn1glie28.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpj10yi89k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj10yi89k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split();\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp_gqrs9sm.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_gqrs9sm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpkrw3v8ck.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkrw3v8ck.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = split(test_str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn join(result);\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp5kyxneec.d(10): Error: undefined identifier `split`\n/tmp/tmp5kyxneec.d(19): Error: undefined identifier `join`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5kyxneec.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp52vljvyt.d(10): Error: no property `split` for type `string`\n/tmp/tmp52vljvyt.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp52vljvyt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string [] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpiq10txcf.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiq10txcf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp5dnypqo4.d(10): Error: no property `split` for type `string`\n/tmp/tmp5dnypqo4.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5dnypqo4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpofnha9z2.d(10): Error: no property `split` for type `string`\n/tmp/tmpofnha9z2.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofnha9z2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpfu4u2hzl.d(10): Error: no property `split` for type `string`\n/tmp/tmpfu4u2hzl.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfu4u2hzl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpkrw3v8ck.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkrw3v8ck.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpqmpznvxm.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqmpznvxm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp2veuegz3.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2veuegz3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n  \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n  \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp6v4bs2wn.d(10): Error: no property `split` for type `string`\n/tmp/tmp6v4bs2wn.d(16): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6v4bs2wn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring res = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tres += word + \" \"; \n\t} \n\treturn res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmp8z9jofyh.d(10): Error: no property `split` for type `string`\n/tmp/tmp8z9jofyh.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8z9jofyh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(string word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word ~ \" \";\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpo8bt_f6x.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo8bt_f6x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp52vljvyt.d(10): Error: no property `split` for type `string`\n/tmp/tmp52vljvyt.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp52vljvyt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmptme5w5l9.d(10): Error: no property `split` for type `string`\n/tmp/tmptme5w5l9.d(14): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptme5w5l9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result = result + word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpb1ayo8qe.d(10): Error: no property `split` for type `string`\n/tmp/tmpb1ayo8qe.d(15): Error: invalid array operation `result + word` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb1ayo8qe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp2veuegz3.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2veuegz3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpu4u5umpv.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu4u5umpv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpkrw3v8ck.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkrw3v8ck.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp1qlzbz1w.d(10): Error: no property `split` for type `string`\n/tmp/tmp1qlzbz1w.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qlzbz1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpofnha9z2.d(10): Error: no property `split` for type `string`\n/tmp/tmpofnha9z2.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofnha9z2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpofnha9z2.d(10): Error: no property `split` for type `string`\n/tmp/tmpofnha9z2.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofnha9z2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result.trim();\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "/tmp/tmpnzp8le4t.d(10): Error: no property `split` for type `string`\n/tmp/tmpnzp8le4t.d(19): Error: no property `trim` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnzp8le4t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
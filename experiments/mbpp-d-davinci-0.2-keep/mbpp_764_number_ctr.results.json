{
  "name": "mbpp_764_number_ctr",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_764_number_ctr.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str) {\n\t\tif(c.isDigit) {\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp59a4mh9j.d(12): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp59a4mh9j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str) {\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpiyqi72_k.d(12): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiyqi72_k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpleasdkig.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpleasdkig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpleasdkig.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpleasdkig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif (c >= '0' && c <= '9')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpp06en6qx.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp06en6qx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpleasdkig.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpleasdkig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif (c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmp269c8cis.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp269c8cis.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmp269c8cis.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp269c8cis.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmp269c8cis.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp269c8cis.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) \n\t{\n\t\tif (c.isDigit) \n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmp_pnw3gly.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pnw3gly.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmppqlc4tpp.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppqlc4tpp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmp830vhtli.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp830vhtli.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char ch; str)\n\t{\n\t\tif(ch.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpzxn2ehio.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzxn2ehio.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpwgwhg7yk.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwgwhg7yk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpp06en6qx.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp06en6qx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str) {\n\t\tif(c.isDigit) {\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp59a4mh9j.d(12): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp59a4mh9j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tint i = 0;\n\twhile (str[i] != '\\0')\n\t{\n\t\tif (str[i] >= '0' && str[i] <= '9')\n\t\t\tcount++;\n\t\ti++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp8ik2c8_a.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x427eae]\n??:? long tmp8ik2c8_a.number_ctr(immutable(char)[]) [0x427a3d]\n??:? void tmp8ik2c8_a.__unittest_L20_C1() [0x427acb]\n??:? void tmp8ik2c8_a.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43006c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa01]\n??:? runModuleUnitTests [0x42b96d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int f",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) {\n\t\tif(c.isDigit) {\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpvekaw5gh.d(12): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvekaw5gh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char ch; str)\n\t{\n\t\tif(ch.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpzxn2ehio.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzxn2ehio.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str) {\n\t\tif(c.isDigit) {\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp59a4mh9j.d(12): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp59a4mh9j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char ch; str)\n\t{\n\t\tif(ch.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpzxn2ehio.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzxn2ehio.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmp269c8cis.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp269c8cis.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(ch; str)\n\t{\n\t\tif(ch >= '0' && ch <= '9')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char ch; str)\n\t{\n\t\tif(ch.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpzxn2ehio.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzxn2ehio.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpwgwhg7yk.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwgwhg7yk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach (c; str)\n\t{\n\t\tif (c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpsmykjutw.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsmykjutw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str) {\n\t\tif (c >= '0' && c <= '9') {\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpleasdkig.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpleasdkig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmp269c8cis.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp269c8cis.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmp269c8cis.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp269c8cis.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach (c; str) \n\t{\n\t\tif (c >= '0' && c <= '9') \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpoh8j5tb0.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoh8j5tb0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpp06en6qx.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp06en6qx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmppqlc4tpp.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppqlc4tpp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(isdigit(c))\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpcmy7j3e6.d(13): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcmy7j3e6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpleasdkig.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpleasdkig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpp06en6qx.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp06en6qx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpleasdkig.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpleasdkig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) \n\t{\n\t\tif (c.isDigit) \n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmp_pnw3gly.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pnw3gly.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpoh8j5tb0.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoh8j5tb0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif (c >= '0' && c <= '9')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpp06en6qx.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp06en6qx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) \n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpzqhl26sg.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzqhl26sg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach (c; str) \n\t{\n\t\tif (c.isDigit) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpep0lh8n8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpep0lh8n8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpleasdkig.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpleasdkig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(ch; str)\n\t{\n\t\tif(ch.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpo9tobt5m.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo9tobt5m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str) {\n\t\tif(c.isDigit) {\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp59a4mh9j.d(12): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp59a4mh9j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmp269c8cis.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp269c8cis.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpleasdkig.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpleasdkig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str) {\n\t\tif(isdigit(c)) {\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpc446pbbf.d(12): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc446pbbf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpp06en6qx.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp06en6qx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach (c; str)\n\t{\n\t\tif (c.isDigit)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpvpsip7nh.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvpsip7nh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpleasdkig.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpleasdkig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpp06en6qx.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp06en6qx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmp269c8cis.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp269c8cis.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) {\n\t\tif(c.isDigit) {\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpvekaw5gh.d(12): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvekaw5gh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp9xk40ze8.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xk40ze8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpw6cyusim.d(12): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw6cyusim.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp5tklpgmd.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tklpgmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) {\n\t\tif(c.isDigit) {\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpvekaw5gh.d(12): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvekaw5gh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpp06en6qx.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp06en6qx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp3s7qjgx5.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3s7qjgx5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpleasdkig.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpleasdkig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n    long count = 0;\n    foreach(c; str)\n    {\n        if(c.isDigit)\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "/tmp/tmpv7g38uat.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv7g38uat.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpleasdkig.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpleasdkig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpp06en6qx.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp06en6qx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
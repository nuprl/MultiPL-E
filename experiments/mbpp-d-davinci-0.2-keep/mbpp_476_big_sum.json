{
  "name": "mbpp_476_big_sum",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_476_big_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}",
    "{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}",
    "{\n\treturn max(nums) + min(nums);\n}",
    "{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}",
    "{\n\treturn max(nums) + min(nums);\n}",
    "{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums) \n\t{\n\t\tif (num > max) \n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif (num < min) \n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}",
    "{\n\tlong largest = nums[0];\n\tlong smallest = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > largest)\n\t\t\tlargest = num;\n\t\tif(num < smallest)\n\t\t\tsmallest = num;\n\t}\n\treturn largest + smallest;\n}",
    "{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}",
    "{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}",
    "{\n\treturn max(nums) + min(nums);\n}",
    "{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}",
    "{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}",
    "{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}",
    "{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t{\n\t\t\tmin = n;\n\t\t}\n\t\tif(n > max)\n\t\t{\n\t\t\tmax = n;\n\t\t}\n\t}\n\treturn min + max;\n}",
    "{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}",
    "{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t{\n\t\t\tmin = n;\n\t\t}\n\t\tif(n > max)\n\t\t{\n\t\t\tmax = n;\n\t\t}\n\t}\n\treturn min + max;\n}",
    "{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\t\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\t\n\treturn max + min;\n}",
    "{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}",
    "{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}",
    "{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}"
  ]
}
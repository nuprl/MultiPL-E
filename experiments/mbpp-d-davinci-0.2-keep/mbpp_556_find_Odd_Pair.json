{
  "name": "mbpp_556_find_Odd_Pair",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to count the number of pairs whose xor value is odd.\n\t\n*/\nlong find_Odd_Pair(long[] A, long N) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_556_find_Odd_Pair.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = find_Odd_Pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L], 5L) == 6L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L], 7L) == 12L);\n    assert(candidate([1L, 2L, 3L], 3L) == 2L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n    long count = 0;\n    for (long i = 0; i < N; i++) \n    {\n        for (long j = i + 1; j < N; j++) \n        {\n            if ((A[i] ^ A[j]) % 2 == 1) \n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. N)\n\t{\n\t\tforeach(j; i+1 .. N)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tforeach(i; 0 .. N)\n\t{\n\t\tforeach(j; i + 1 .. N)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 1)\n\t\t\t\todd_count++;\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tlong even_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tif (A[i] % 2 == 0) \n\t\t{\n\t\t\teven_count++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd_count++;\n\t\t}\n\t}\n\treturn odd_count * even_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++)\n\t{\n\t\tfor (long j = i + 1; j < N; j++)\n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{ \n    long count = 0; \n    for (long i = 0; i < N; i++) \n        for (long j = i + 1; j < N; j++) \n            if ((A[i] ^ A[j]) % 2 == 1) \n                count++; \n    return count; \n} ",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor(long i = 0; i < N; i++)\n\t{\n\t\tfor(long j = i + 1; j < N; j++)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor(long i = 0; i < N; i++)\n\t{\n\t\tfor(long j = i+1; j < N; j++)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 != 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_pairs = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\todd_pairs++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_pairs;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. N)\n\t{\n\t\tforeach(j; i + 1 .. N)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{ \n    long count = 0; \n    for (long i = 0; i < N; i++) \n        for (long j = i + 1; j < N; j++) \n            if ((A[i] ^ A[j]) % 2 == 1) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < N; i++) \n        for (long j = i + 1; j < N; j++) \n            if ((A[i] ^ A[j]) % 2 == 1) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < N; i++) \n        for (long j = i + 1; j < N; j++) \n            if ((A[i] ^ A[j]) % 2 == 1) \n                count++; \n    return count; \n} ",
    "{ \n    long odd_count = 0; \n    long even_count = 0; \n    for (long i = 0; i < N; i++) { \n        if (A[i] & 1) \n            odd_count++; \n        else\n            even_count++; \n    } \n    return odd_count * even_count; \n} ",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. N)\n\t{\n\t\tforeach(j; i + 1 .. N)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tlong even_count = 0;\n\tforeach(i; 0 .. N)\n\t{\n\t\tif(A[i] % 2 == 0)\n\t\t\teven_count++;\n\t\telse\n\t\t\todd_count++;\n\t}\n\treturn odd_count * even_count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong odd_count = 0;\n\tlong even_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tif (A[i] % 2 == 0) \n\t\t{\n\t\t\teven_count++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd_count++;\n\t\t}\n\t}\n\treturn (odd_count * even_count);\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. N)\n\t{\n\t\tforeach(j; i+1 .. N)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor(long i = 0; i < N; i++)\n\t{\n\t\tfor(long j = i+1; j < N; j++)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 1)\n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tlong even_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tif (A[i] % 2 == 0) \n\t\t{\n\t\t\teven_count++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd_count++;\n\t\t}\n\t}\n\treturn odd_count * even_count;\n}",
    "{ \n    long count = 0; \n    for (long i = 0; i < N; i++) \n        for (long j = i + 1; j < N; j++) \n            if ((A[i] ^ A[j]) % 2 != 0) \n                count++; \n    return count; \n} ",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tlong even_count = 0;\n\t\n\tforeach(a; A)\n\t{\n\t\tif(a % 2 == 0)\n\t\t{\n\t\t\teven_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd_count++;\n\t\t}\n\t}\n\t\n\treturn (odd_count * even_count);\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{ \n    long count = 0; \n    for (long i = 0; i < N; i++) \n        for (long j = i + 1; j < N; j++) \n            if ((A[i] ^ A[j]) % 2 == 1) \n                count++; \n    return count; \n} ",
    "{ \n    long odd_count = 0; \n    for (long i = 0; i < N; i++) \n        for (long j = i + 1; j < N; j++) \n            if ((A[i] ^ A[j]) % 2 == 1) \n                odd_count++; \n    return odd_count; \n} ",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong result = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tresult++;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{ \n    long odd = 0; \n    for (long i = 0; i < N; i++) \n        if ((A[i] & 1) == 1) \n            odd++; \n    return odd * (N - odd); \n} ",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_pairs = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_pairs += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_pairs;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tforeach(i; 0 .. N)\n\t{\n\t\tforeach(j; i+1 .. N)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 != 0)\n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++)\n\t{\n\t\tfor (long j = i + 1; j < N; j++)\n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n    long odd_count = 0;\n    for(long i = 0; i < N; i++) \n    {\n        for(long j = i + 1; j < N; j++) \n        {\n            if((A[i] ^ A[j]) % 2 == 1) \n            {\n                odd_count++;\n            }\n        }\n    }\n    return odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tlong even_count = 0;\n\tlong odd_even_count = 0;\n\tlong even_odd_count = 0;\n\t\n\tforeach(i; 0 .. N)\n\t{\n\t\tif(A[i] % 2 == 0)\n\t\t{\n\t\t\teven_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd_count++;\n\t\t}\n\t}\n\t\n\todd_even_count = odd_count * even_count;\n\teven_odd_count = (N - even_count) * (N - odd_count);\n\t\n\treturn odd_even_count + even_odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. N)\n\t{\n\t\tforeach(j; i + 1 .. N)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{ \n    long odd_count = 0; \n    long even_count = 0; \n    for (long i = 0; i < N; i++) { \n        if (A[i] % 2 == 0) \n            even_count++; \n        else\n            odd_count++; \n    } \n    return odd_count * even_count; \n} ",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{ \n    long odd_count = 0; \n    long even_count = 0; \n    for (long i = 0; i < N; i++) { \n        if (A[i] % 2 == 0) \n            even_count++; \n        else\n            odd_count++; \n    } \n    return odd_count * even_count; \n} ",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++)\n\t{\n\t\tfor (long j = i + 1; j < N; j++)\n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{ \n    long count = 0; \n    for (long i = 0; i < N; i++) \n        for (long j = i + 1; j < N; j++) \n            if ((A[i] ^ A[j]) % 2 == 1) \n                count++; \n    return count; \n} ",
    "{\n\tlong odd_count = 0;\n\tforeach(i; 0 .. N)\n\t{\n\t\tforeach(j; i+1 .. N)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 1)\n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{ \n    long odd_count = 0; \n    long even_count = 0; \n  \n    for (long i = 0; i < N; i++) { \n        if (A[i] % 2 == 0) \n            even_count++; \n        else\n            odd_count++; \n    } \n  \n    long ans = odd_count * even_count; \n  \n    return ans; \n} ",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{ \n\tlong count = 0; \n\tfor (long i = 0; i < N; i++) \n\t\tfor (long j = i + 1; j < N; j++) \n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t\tcount++; \n\treturn count; \n} ",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. N)\n\t{\n\t\tforeach(j; i+1 .. N)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{ \n    long odd_count = 0; \n    long even_count = 0; \n    for (long i = 0; i < N; i++) { \n        if (A[i] % 2 == 0) \n            even_count++; \n        else\n            odd_count++; \n    } \n    return odd_count * even_count; \n} ",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) & 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{ \n    long odd_count = 0; \n    long even_count = 0; \n    for (long i = 0; i < N; i++) { \n        if (A[i] % 2 == 0) \n            even_count++; \n        else\n            odd_count++; \n    } \n  \n    return odd_count * even_count; \n} ",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_pair = 0;\n\tforeach(i; 0 .. N)\n\t{\n\t\tforeach(j; i + 1 .. N)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 1)\n\t\t\t{\n\t\t\t\todd_pair++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_pair;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{ \n    long count = 0; \n    for (long i = 0; i < N; i++) \n        for (long j = i + 1; j < N; j++) \n            if ((A[i] ^ A[j]) % 2 == 1) \n                count++; \n  \n    return count; \n} ",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{ \n    long odd_count = 0; \n    long even_count = 0; \n    for (long i = 0; i < N; i++) { \n        if (A[i] % 2 == 0) \n            even_count++; \n        else\n            odd_count++; \n    } \n    long ans = odd_count * even_count; \n    return ans; \n} ",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{ \n    long count = 0; \n    for (long i = 0; i < N; i++) \n        for (long j = i + 1; j < N; j++) \n            if ((A[i] ^ A[j]) % 2 == 1) \n                count++; \n    return count; \n} ",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{ \n    long count = 0; \n    for (long i = 0; i < N; i++) \n        for (long j = i + 1; j < N; j++) \n            if ((A[i] ^ A[j]) % 2 == 1) \n                count++; \n    return count; \n} ",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n    long count = 0;\n    for (long i = 0; i < N; i++) \n    {\n        for (long j = i + 1; j < N; j++) \n        {\n            if ((A[i] ^ A[j]) % 2 == 1) \n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{ \n    long odd_count = 0; \n    long even_count = 0; \n    foreach (i; 0 .. N) \n    { \n        if ((A[i] & 1) == 0) \n            even_count++; \n        else\n            odd_count++; \n    } \n    return odd_count * even_count; \n} ",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) & 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. N)\n\t{\n\t\tforeach(j; i+1 .. N)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 != 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = 0; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++)\n\t{\n\t\tfor (long j = i + 1; j < N; j++)\n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_pairs = 0;\n\tfor (long i = 0; i < N; i++)\n\t{\n\t\tfor (long j = i + 1; j < N; j++)\n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1)\n\t\t\t{\n\t\t\t\todd_pairs++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_pairs;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. N)\n\t{\n\t\tforeach(j; i+1 .. N)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 1)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_pairs = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_pairs++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_pairs;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_pair = 0;\n\tfor(long i = 0; i < N; i++)\n\t{\n\t\tfor(long j = i + 1; j < N; j++)\n\t\t{\n\t\t\tif(A[i] ^ A[j] % 2 == 1)\n\t\t\t{\n\t\t\t\todd_pair++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_pair;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong odd_count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\todd_count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn odd_count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 != 0) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < N; i++) \n\t{\n\t\tfor (long j = i + 1; j < N; j++) \n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 1) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}"
  ]
}
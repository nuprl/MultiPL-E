{
  "name": "mbpp_639_sample_nam",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_639_sample_nam.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn sample_names.filter!(a => a[0] >= 'A' && a[0] <= 'Z').map!(a => a.length).sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] == toUpper(name[0]))\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach (name; sample_names)\n\t{\n\t\tif (name[0] == toUpper(name[0]))\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names) \n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z') \n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\treturn sample_names.filter!(a => a[0] >= 'A' && a[0] <= 'Z').map!(a => a.length).sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t\tsum += sample_name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names) \n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z') \n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\treturn sample_names.filter!(a => a.length > 0 && a[0] == a[0].toUpper).map!(a => a.length).sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong total_length = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t\ttotal_length += sample_name.length;\n\t}\n\treturn total_length;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\treturn sample_names.filter!(a => a[0] > 'a' && a[0] < 'z').map!(a => a.length).sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names) \n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t\tsum += sample_name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\treturn sample_names.filter!(a => a[0] >= 'A' && a[0] <= 'Z').map!(a => a.length).sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{ \n\treturn sample_names.filter!(a => a[0] >= 'A' && a[0] <= 'Z').map!(a => a.length).sum; \n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] == toUpper(name[0]))\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\n/*",
    "{\n\treturn sample_names.filter!(a => a[0] >= 'A' && a[0] <= 'Z').map!(a => a.length).sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names) \n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z') \n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t\tsum += sample_name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tresult += name.length;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\treturn sample_names.filter!(a => a[0] > 'a' && a[0] < 'z').map!(a => a.length).sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] == toUpper(name[0]))\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\treturn sample_names.filter!(a => a[0] >= 'A' && a[0] <= 'Z').map!(a => a.length).sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach (name; sample_names)\n\t{\n\t\tif (name[0] == toUpper(name[0]))\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] == toUpper(name[0]))\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\n/*\n\tWrite a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\n/*\n\tWrite a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\n/*\n\tWrite a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\n/*\n\tWrite a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; 0 .. sample_names.length)\n\t{\n\t\tif(sample_names[i].length > 0 && sample_names[i][0] >= 'A' && sample_names[i][0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_names[i].length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\treturn sample_names.filter!(a => a.length > 0 && a[0] >= 'A' && a[0] <= 'Z').map!(a => a.length).sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; 0 .. sample_names.length)\n\t{\n\t\tif(sample_names[i][0] >= 'A' && sample_names[i][0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_names[i].length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names) \n\t{\n\t\tif(name.length && name[0] >= 'A' && name[0] <= 'Z') \n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names) \n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z') \n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && isUpper(name[0]))\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\treturn sample_names.filter!(a => a[0] >= 'A' && a[0] <= 'Z').map!(a => a.length).sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i, name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i, name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t\tsum += sample_name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t\tsum += sample_name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t\tsum += sample_name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\treturn sample_names.filter!(a => a[0] >= 'A' && a[0] <= 'Z').map!(a => a.length).sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\treturn sample_names.filter!(a => a[0] < 'a').map!(a => a.length).sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\n/*",
    "{\n\tlong sum = 0;\n\tforeach(i, name; sample_names) \n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z') \n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string s; sample_names)\n\t{\n\t\tif(s[0] >= 'A' && s[0] <= 'Z')\n\t\t{\n\t\t\tsum += s.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i, name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong total = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\ttotal += name.length;\n\t\t}\n\t}\n\treturn total;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tresult += name.length;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\treturn sample_names.filter!(a => a[0] >= 'A' && a[0] <= 'Z').map!(a => a.length).sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; sample_names)\n\t{\n\t\tif(i[0] >= 'A' && i[0] <= 'Z')\n\t\t\tsum += i.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong total = 0;\n\tforeach(sample_name; sample_names) \n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z') \n\t\t{\n\t\t\ttotal += sample_name.length;\n\t\t}\n\t}\n\treturn total;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names) \n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z') \n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\treturn sample_names.filter!(a => a[0] > 'a' && a[0] < 'z').map!(a => a.length).sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i, name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; sample_names)\n\t{\n\t\tif(i[0] >= 'A' && i[0] <= 'Z')\n\t\t{\n\t\t\tsum += i.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names) \n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z') \n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; sample_names)\n\t{\n\t\tif(i[0] >= 'A' && i[0] <= 'Z')\n\t\t{\n\t\t\tsum += i.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\n/*\n\tWrite a function that takes a list of numbers and returns the sum of the numbers that are divisible by 3.\n*/\nlong sum_div_3(long[] numbers)\n{\n\tlong sum = 0;\n\tforeach(number; numbers)\n\t{\n\t\tif(number % 3 == 0)\n\t\t{\n\t\t\tsum += number;\n\t\t}\n\t}\n\treturn sum;\n}\n/*\n\tWrite a function that takes a list of numbers and returns the sum of the numbers that are divisible by 3 or 5.\n*/\nlong sum_div_3_5(long[] numbers)\n{\n\tlong sum = 0;\n\tforeach(number; numbers)\n\t{\n\t\tif(number % 3 == 0 || number % 5 == 0)\n\t\t{\n\t\t\tsum += number;\n\t\t}\n\t}\n\treturn sum;\n}\n/*\n\tWrite a function that takes a list of numbers and returns the sum of the numbers that are divisible by 3 or 5 or 7.\n*/\nlong sum_div_3_5_7(long[] numbers)\n{\n\tlong sum = 0;\n\tforeach(number; numbers)\n\t{\n\t\tif(number % 3 == 0 || number % 5 == 0 || number % 7 == 0)\n\t\t{\n\t\t\tsum += number;\n\t\t}\n\t}\n\treturn sum;\n}\n/*\n\tWrite a function that takes a list of numbers and returns the sum of the numbers that are divisible by 3 or 5 or 7.\n*/\nlong sum_div_3_5_7(long[] numbers)\n{\n\tlong sum = 0;\n\tforeach(number; numbers)\n\t{\n\t\tif(number % 3 == 0 || number % 5 == 0 || number % 7 == 0)\n\t\t{\n\t\t\tsum += number;\n\t\t}\n\t}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\treturn sample_names.filter!(a => a[0] >= 'A' && a[0] <= 'Z').map!(a => a.length).sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum_length = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum_length += name.length;\n\t\t}\n\t}\n\treturn sum_length;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] < 'a')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong total_length = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\ttotal_length += sample_name.length;\n\t\t}\n\t}\n\treturn total_length;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && isUpper(name[0]))\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\treturn sample_names.filter!(a => a[0] >= 'A' && a[0] <= 'Z').map!(a => a.length).sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}"
  ]
}
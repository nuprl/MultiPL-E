{
  "name": "mbpp_769_Diff",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_769_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\t\n\tforeach(i; li1)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; li2)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tforeach(i; li3)\n\t{\n\t\tforeach(j; li4)\n\t\t{\n\t\t\tif(li3[i] == li4[j])\n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; li3)\n\t{\n\t\tif(li3[i] != 0)\n\t\t{\n\t\t\tli5 ~= li3[i];\n\t\t}\n\t}\n\t\n\tforeach(i; li4)\n\t{\n\t\tif(li4[i] != 0)\n\t\t{\n\t\t\tli6 ~= li4[i];\n\t\t}\n\t}\n\t\n\treturn li5 ~ li6;\n}",
    "{\n\tlong[] li = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tif(l in li2)\n\t\t{\n\t\t\tli[i] = l;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li;\n}",
    "{\n\tauto li3 = li1.dup;\n\tforeach(i; li2)\n\t{\n\t\tauto pos = li3.find(i);\n\t\tif(pos != -1)\n\t\t\tli3.remove(pos);\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tauto li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tif(li3.find(i) != -1)\n\t\t{\n\t\t\tli3.remove(i);\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l1; li1)\n\t{\n\t\tif(l1 != li2[i])\n\t\t{\n\t\t\tli3[i] = l1;\n\t\t}\n\t\ti++;\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; 0 .. li2.length)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tlong[] li5 = new long[li3.length + li4.length];\n\t\n\tforeach(i; 0 .. li3.length)\n\t{\n\t\tli5[i] = li3[i];\n\t}\n\t\n\tforeach(i; 0 .. li4.length)\n\t{\n\t\tli5[i + li3.length] = li4[i];\n\t}\n\t\n\tlong[] li6 = new long[li5.length];\n\t\n\tforeach(i; 0 .. li5.length)\n\t{\n\t\tli6[i] = li5[i];\n\t}\n\t\n\tlong[] li7 = new long[li6.length];\n\t\n\tforeach(i; 0 .. li6.length)\n\t{\n\t\tli7[i] = li6[i];\n\t}\n\t\n\tlong[] li8 = new long[li7.length];\n\t\n\tforeach(i; 0 .. li7.length)\n\t{\n\t\tli8[i] = li7[i];\n\t}\n\t\n\tlong[] li9 = new long[li8.length];\n\t\n\tforeach(i; 0 .. li8.length)\n\t{\n\t\tli9[i] = li8[i];\n\t}\n\t\n\tlong[] li10 = new long[li9.length];\n\t\n\tforeach(i; 0 .. li9.length)\n\t{\n\t\tli10[i] = li9[i];\n\t}\n\t\n\tlong[] li11 = new long[li10.length];\n\t\n\tforeach(i; 0 .. li10.length)\n\t{\n\t\tli11[i]",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\t\n\tforeach(i; 0..li1.length)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; 0..li2.length)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tforeach(i; 0..li3.length)\n\t{\n\t\tforeach(j; 0..li4.length)\n\t\t{\n\t\t\tif(li3[i] == li4[j])\n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (!li2.contains(li1[i])) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti += 1;\n\t\t\tk += 1;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj += 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti += 1;\n\t\t\tj += 1;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti += 1;\n\t\tk += 1;\n\t}\n\treturn li3[0 .. k];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n    long[] li3 = new long[li1.length + li2.length];\n    long[] li4 = new long[li1.length + li2.length];\n    long[] li5 = new long[li1.length + li2.length];\n    long[] li6 = new long[li1.length + li2.length];\n    long[] li7 = new long[li1.length + li2.length];\n    long[] li8 = new long[li1.length + li2.length];\n    long[] li9 = new long[li1.length + li2.length];\n    long[] li10 = new long[li1.length + li2.length];\n    long[] li11 = new long[li1.length + li2.length];\n    long[] li12 = new long[li1.length + li2.length];\n    long[] li13 = new long[li1.length + li2.length];\n    long[] li14 = new long[li1.length + li2.length];\n    long[] li15 = new long[li1.length + li2.length];\n    long[] li16 = new long[li1.length + li2.length];\n    long[] li17 = new long[li1.length + li2.length];\n    long[] li18 = new long[li1.length + li2.length];\n    long[] li19 = new long[li1.length + li2.length];\n    long[] li20 = new long[li1.length + li2.length];\n    long[] li21 = new long[li1.length + li2.length];\n    long[] li22 = new long[li1.length + li2.length];\n    long[] li23 = new long[li1.length + li2.length];\n    long[] li24 = new long[li1.length + li2.length];\n    long[] li25 = new long[li1.length + li2.length];\n    long[] li26 = new long[li1.length + li2.length];\n    long[] li27 = new long[li1.length + li2.length];\n    long[] li28 = new long[",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tli3[k] = i;\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\t\n\tfor(int i = 0; i < li1.length; i++)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tfor(int i = 0; i < li2.length; i++)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tlong[] li5 = new long[li3.length + li4.length];\n\t\n\tfor(int i = 0; i < li3.length; i++)\n\t{\n\t\tli5[i] = li3[i];\n\t}\n\t\n\tfor(int i = 0; i < li4.length; i++)\n\t{\n\t\tli5[i + li3.length] = li4[i];\n\t}\n\t\n\tlong[] li6 = new long[li5.length];\n\t\n\tfor(int i = 0; i < li5.length; i++)\n\t{\n\t\tli6[i] = li5[i];\n\t}\n\t\n\tfor(int i = 0; i < li3.length; i++)\n\t{\n\t\tfor(int j = 0; j < li4.length; j++)\n\t\t{\n\t\t\tif(li3[i] == li4[j])\n\t\t\t{\n\t\t\t\tli6[i] = 0;\n\t\t\t\tli6[j + li3.length] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong[] li7 = new long[li6.length];\n\t\n\tfor(int i = 0; i < li6.length; i++)\n\t{\n\t\tli7[i] = li6[i];\n\t}\n\t\n\tfor(int i = 0; i < li6.length; i++)\n\t{\n\t\tif(li6[i] == 0)\n\t\t{\n\t\t\tli7[i] = 0;\n\t\t}\n\t}\n\t\n\tlong[] li8 =",
    "{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tif(li3.find(i) != -1)\n\t\t{\n\t\t\tli3.remove(li3.find(i));\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (!li2.contains(li1[i]))\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tif(l in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[i] = l;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; 0 .. li2.length)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tforeach(j; 0 .. li2.length)\n\t\t{\n\t\t\tif(li3[i] == li4[j])\n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tif(li3[i] != 0)\n\t\t{\n\t\t\tli5 ~= li3[i];\n\t\t}\n\t}\n\t\n\treturn li5;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\t\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tli3[i] = li1[i];\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tfor (int j = 0; j < li2.length; j++) \n\t\t{\n\t\t\tif (li3[i] == li4[j]) \n\t\t\t{\n\t\t\t\tli5[i] = li3[i];\n\t\t\t\tli6[j] = li4[j];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li5[i] != li1[i]) \n\t\t{\n\t\t\tli7[i] = li1[i];\n\t\t}\n\t}\n\t\n\treturn li7;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti += 1;\n\t\t\tk += 1;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj += 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti += 1;\n\t\t\tj += 1;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti += 1;\n\t\tk += 1;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tint j = 0;\n\t\tfor (; j < li2.length; j++) \n\t\t{\n\t\t\tif (li1[i] == li2[j]) \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (j == li2.length) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length + li2.length];\n\tlong[] li6 = new long[li1.length + li2.length];\n\tlong[] li7 = new long[li1.length + li2.length];\n\tlong[] li8 = new long[li1.length + li2.length];\n\tlong[] li9 = new long[li1.length + li2.length];\n\tlong[] li10 = new long[li1.length + li2.length];\n\tlong[] li11 = new long[li1.length + li2.length];\n\tlong[] li12 = new long[li1.length + li2.length];\n\tlong[] li13 = new long[li1.length + li2.length];\n\tlong[] li14 = new long[li1.length + li2.length];\n\tlong[] li15 = new long[li1.length + li2.length];\n\tlong[] li16 = new long[li1.length + li2.length];\n\tlong[] li17 = new long[li1.length + li2.length];\n\tlong[] li18 = new long[li1.length + li2.length];\n\tlong[] li19 = new long[li1.length + li2.length];\n\tlong[] li20 = new long[li1.length + li2.length];\n\tlong[] li21 = new long[li1.length + li2.length];\n\tlong[] li22 = new long[li1.length + li2.length];\n\tlong[] li23 = new long[li1.length + li2.length];\n\tlong[] li24 = new long[li1.length + li2.length];\n\tlong[] li25 = new long[li1.length + li2.length];\n\tlong[] li26 = new long[li1.length + li2.length];\n\tlong[] li27 = new long[li1.length + li2.length];\n\tlong[] li28 = new long[li1.length + li2.length];",
    "{\n\tauto res = li1.dup;\n\tforeach(e; li2)\n\t{\n\t\tres.remove(e);\n\t}\n\treturn res;\n}",
    "{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3[0..i];\n}",
    "{\n\tlong[] diff = new long[];\n\tforeach(long a; li1)\n\t{\n\t\tif(a in li2)\n\t\t{\n\t\t\tdiff ~= a;\n\t\t}\n\t}\n\treturn diff;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (!li2.contains(li1[i])) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tif(l in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tli3[i] = l;\n\t\ti++;\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x;\n\t\ti++;\n\t}\n\t\n\tforeach(long x; li2)\n\t{\n\t\tli4[j] = x;\n\t\tj++;\n\t}\n\t\n\tforeach(long x; li3)\n\t{\n\t\tforeach(long y; li4)\n\t\t{\n\t\t\tif(x == y)\n\t\t\t{\n\t\t\t\tli3[k] = 0;\n\t\t\t}\n\t\t}\n\t\tk++;\n\t}\n\t\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li;\n\tforeach(i; li1)\n\t{\n\t\tif(i notin li2)\n\t\t{\n\t\t\tli ~= i;\n\t\t}\n\t}\n\treturn li;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[k] = i;\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[0];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti += 1;\n\t\t\tk += 1;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tli3[k] = li2[j];\n\t\t\tj += 1;\n\t\t\tk += 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti += 1;\n\t\t\tj += 1;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti += 1;\n\t\tk += 1;\n\t}\n\twhile (j < li2.length) \n\t{\n\t\tli3[k] = li2[j];\n\t\tj += 1;\n\t\tk += 1;\n\t}\n\treturn li3[0 .. k];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tforeach(int i; li1)\n\t{\n\t\tforeach(int j; li2)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tli3[k] = i;\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tlong[] li4 = new long[li1.length + li2.length];\n\tlong[] li5 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp =",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile(i < li1.length && j < li2.length) \n\t{\n\t\tif(li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if(li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile(i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint k = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tint count = 0;\n\t\tfor (int j = 0; j < li2.length; j++) \n\t\t{\n\t\t\tif (li1[i] == li2[j]) \n\t\t\t{\n\t\t\t\tcount = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (count == 0) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint ab = 0;\n\tint ac = 0;\n\tint ad = 0;\n\tint ae = 0;\n\tint af = 0;\n\tint ag = 0;\n\tint ah = 0;\n\tint ai = 0;\n\tint aj = 0;\n\tint ak = 0;\n\tint al = 0;\n\tint am = 0;\n\tint an = 0;\n\tint ao = 0;\n\tint ap = 0;\n\tint aq = 0;\n\tint ar = 0;\n\tint as = 0;\n\tint at = 0;\n\tint au = 0;\n\tint av = 0;\n\tint aw = 0;\n\tint ax = 0;\n\tint ay = 0;\n\tint az = 0;\n\tint ba = 0;\n\tint bb = 0;\n\tint bc = 0;\n\tint bd = 0;\n\tint be = 0;\n\tint bf = 0;\n\tint bg = 0;\n\tint bh = 0;\n\tint bi = 0;\n\tint bj = 0;\n\tint bk = 0;\n\tint bl = 0;\n\tint bm = 0;\n\tint bn = 0;\n\tint bo = 0;\n\tint bp = 0;\n\tint bq = 0;\n\tint br = 0;\n\tint bs = 0;\n\tint bt = 0;\n\tint bu =",
    "{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (!li2.contains(li1[i])) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tlong[] li4 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\t",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l1; li1)\n\t{\n\t\tforeach(long l2; li2)\n\t\t{\n\t\t\tif(l1 == l2)\n\t\t\t{\n\t\t\t\tli3[i] = l1;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(i; li1)\n\t{\n\t\tif(i notin li2)\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x notin li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tforeach(long i; li1)\n\t{\n\t\tint j = 0;\n\t\tforeach(long l; li2)\n\t\t{\n\t\t\tif(i == l)\n\t\t\t{\n\t\t\t\tj = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j == 0)\n\t\t{\n\t\t\tli3[k] = i;\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t\tcontinue;\n\t\tli3 ~= i;\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(i; li1)\n\t{\n\t\tif(i notin li2)\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(!li2.canFind(x))\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\t\n\tli3 = li1.dup;\n\tli4 = li2.dup;\n\t\n\tforeach(i; 0 .. li3.length)\n\t{\n\t\tforeach(j; 0 .. li4.length)\n\t\t{\n\t\t\tif(li3[i] == li4[j])\n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor(int i = 0; i < li1.length; i++) \n\t{\n\t\tif(!li2.contains(li1[i])) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[0];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; 0 .. li2.length)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tforeach(j; 0 .. li2.length)\n\t\t{\n\t\t\tif(li3[i] == li4[j])\n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tif(li3[i] != 0)\n\t\t{\n\t\t\tli5 ~= li3[i];\n\t\t}\n\t}\n\t\n\treturn li5;\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti += 1;\n\t\t\tk += 1;\n\t\t}\n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj += 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti += 1;\n\t\t\tj += 1;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti += 1;\n\t\tk += 1;\n\t}\n\treturn li3[0 .. k];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tif(li3.find(i) != -1)\n\t\t{\n\t\t\tli3.remove(i);\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tint count = 0;\n\t\tfor (int j = 0; j < li2.length; j++) \n\t\t{\n\t\t\tif (li1[i] == li2[j]) \n\t\t\t{\n\t\t\t\tcount = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (count == 0) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tif(l in li2)\n\t\t{\n\t\t\tli3[i] = l;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\t\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tauto li3 = li1.dup;\n\tforeach(i; li2)\n\t\tli3 -= i;\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile(i < li1.length && j < li2.length)\n\t{\n\t\tif(li1[i] < li2[j])\n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if(li1[i] > li2[j])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile(i < li1.length)\n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i notin li2)\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti += 1;\n\t\t\tk += 1;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj += 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti += 1;\n\t\t\tj += 1;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti += 1;\n\t\tk += 1;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tlong[] li4 = new long[li1.length + li2.length];\n\tlong[] li5 = new long[li1.length + li2.length];\n\tlong[] li6 = new long[li1.length + li2.length];\n\tlong[] li7 = new long[li1.length + li2.length];\n\tlong[] li8 = new long[li1.length + li2.length];\n\tlong[] li9 = new long[li1.length + li2.length];\n\tlong[] li10 = new long[li1.length + li2.length];\n\tlong[] li11 = new long[li1.length + li2.length];\n\tlong[] li12 = new long[li1.length + li2.length];\n\tlong[] li13 = new long[li1.length + li2.length];\n\tlong[] li14 = new long[li1.length + li2.length];\n\tlong[] li15 = new long[li1.length + li2.length];\n\tlong[] li16 = new long[li1.length + li2.length];\n\tlong[] li17 = new long[li1.length + li2.length];\n\tlong[] li18 = new long[li1.length + li2.length];\n\tlong[] li19 = new long[li1.length + li2.length];\n\tlong[] li20 = new long[li1.length + li2.length];\n\tlong[] li21 = new long[li1.length + li2.length];\n\tlong[] li22 = new long[li1.length + li2.length];\n\tlong[] li23 = new long[li1.length + li2.length];\n\tlong[] li24 = new long[li1.length + li2.length];\n\tlong[] li25 = new long[li1.length + li2.length];\n\tlong[] li26 = new long[li1.length + li2.length];\n\tlong[] li27 = new long[li1.length + li2.length];\n\tlong[] li28 = new long[",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[k] = i;\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tif(l in li2)\n\t\t{\n\t\t\tli3[i] = l;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tlong[] li4 = new long[li1.length + li2.length];\n\tlong[] li5 = new long[li1.length + li2.length];\n\tlong[] li6 = new long[li1.length + li2.length];\n\t\n\tlong[] li7 = new long[li1.length + li2.length];\n\tlong[] li8 = new long[li1.length + li2.length];\n\tlong[] li9 = new long[li1.length + li2.length];\n\tlong[] li10 = new long[li1.length + li2.length];\n\t\n\tlong[] li11 = new long[li1.length + li2.length];\n\tlong[] li12 = new long[li1.length + li2.length];\n\tlong[] li13 = new long[li1.length + li2.length];\n\tlong[] li14 = new long[li1.length + li2.length];\n\t\n\tlong[] li15 = new long[li1.length + li2.length];\n\tlong[] li16 = new long[li1.length + li2.length];\n\tlong[] li17 = new long[li1.length + li2.length];\n\tlong[] li18 = new long[li1.length + li2.length];\n\t\n\tlong[] li19 = new long[li1.length + li2.length];\n\tlong[] li20 = new long[li1.length + li2.length];\n\tlong[] li21 = new long[li1.length + li2.length];\n\tlong[] li22 = new long[li1.length + li2.length];\n\t\n\tlong[] li23 = new long[li1.length + li2.length];\n\tlong[] li24 = new long[li1.length + li2.length];\n\tlong[] li25 = new long[li1.length + li2.length];\n\tlong[] li26 = new long[li1.length + li2.length];\n\t\n\tlong[] li27 = new long[li1.length + li2.",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x notin li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti += 1;\n\t\t\tk += 1;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj += 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti += 1;\n\t\t\tj += 1;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti += 1;\n\t\tk += 1;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{ \n    long[] li3 = new long[li1.length]; \n    int k = 0; \n    for (int i = 0; i < li1.length; i++) \n    { \n        int j; \n        for (j = 0; j < li2.length; j++) \n            if (li1[i] == li2[j]) \n                break; \n  \n        if (j == li2.length) \n            li3[k++] = li1[i]; \n    } \n    return li3[0..k]; \n} \n/*\n\tWrite a python function to get the frequency of the elements in a list.\n*/\nlong[] Freq(long[] li) \n{ \n    long[] li_new = new long[li.length]; \n    int k = 0; \n    for (int i = 0; i < li.length; i++) \n    { \n        int j; \n        for (j = 0; j < i; j++) \n            if (li[i] == li[j]) \n                break; \n  \n        if (i == j) \n            li_new[k++] = li[i]; \n    } \n    return li_new[0..k]; \n} \n/*\n\tWrite a python function to get the intersection of two lists.\n*/\nlong[] Intersection(long[] li1, long[] li2) \n{ \n    long[] li3 = new long[li1.length]; \n    int k = 0; \n    for (int i = 0; i < li1.length; i++) \n    { \n        for (int j = 0; j < li2.length; j++) \n            if (li1[i] == li2[j]) \n                li3[k++] = li1[i]; \n    } \n    return li3[0..k]; \n} \n/*\n\tWrite a python function to get the union of two lists.\n*/\nlong[] Union(long[] li1, long[] li2) \n{ \n    long[] li3 = new long[li1.length",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti += 1;\n\t\t\tk += 1;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj += 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti += 1;\n\t\t\tj += 1;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti += 1;\n\t\tk += 1;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile(i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(int i; li1)\n\t{\n\t\tif(i notin li2)\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[k] = i;\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach (long l; li1)\n\t{\n\t\tif (l in li2)\n\t\t{\n\t\t\tli3[i] = l;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long a; li1)\n\t{\n\t\tif(a in li2)\n\t\t{\n\t\t\tli3[i] = a;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (!li2.contains(li1[i])) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tlong[] li4 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\t\n\twhile(i < li1.length)\n\t{\n\t\tj = 0;\n\t\twhile(j < li2.length)\n\t\t{\n\t\t\tif(li1[i] == li2[j])\n\t\t\t{\n\t\t\t\tli3[k] = li1[i];\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\t\n\twhile(l < li1.length)\n\t{\n\t\tm = 0;\n\t\twhile(m < li3.length)\n\t\t{\n\t\t\tif(li1[l] == li3[m])\n\t\t\t{\n\t\t\t\tli4[n] = li1[l];\n\t\t\t\tn++;\n\t\t\t}\n\t\t\tm++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\treturn li4;\n}",
    "{\n\tlong[] diff = new long[li1.length];\n\tint i = 0;\n\tforeach(long l1; li1)\n\t{\n\t\tforeach(long l2; li2)\n\t\t{\n\t\t\tif(l1 == l2)\n\t\t\t{\n\t\t\t\tdiff[i] = l1;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn diff;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tli3[k] = i;\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tlong[] li4 = new long[li1.length + li2.length];\n\tlong[] li5 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint ab = 0;\n\tint ac = 0;\n\tint ad = 0;\n\tint ae = 0;\n\tint af = 0;\n\tint ag = 0;\n\tint ah = 0;\n\tint ai = 0;\n\tint aj = 0;\n\tint ak = 0;\n\tint al = 0;\n\tint am = 0;\n\tint an = 0;\n\tint ao = 0;\n\tint ap = 0;\n\tint aq = 0;\n\tint ar = 0;\n\tint as = 0;\n\tint at = 0;\n\tint au = 0;\n\tint av = 0;\n\tint aw = 0;\n\tint ax = 0;\n\tint ay = 0;\n\tint az = 0;\n\tint ba = 0;\n\tint bb = 0;\n\tint bc = 0;\n\tint bd = 0;\n\tint be = 0;\n\tint bf = 0;\n\tint bg = 0;\n\tint bh = 0;\n\tint bi = 0;\n\tint bj = 0;\n\tint bk = 0;\n\tint bl = 0;\n\tint bm = 0;\n\tint bn = 0;\n\tint bo = 0;\n\tint bp = 0;\n\tint bq = 0;\n\tint br = 0",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (!li2.contains(li1[i]))\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tli3[k] = li2[j];\n\t\t\tj++;\n\t\t\tk++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\twhile (j < li2.length) \n\t{\n\t\tli3[k] = li2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti += 1;\n\t\t\tk += 1;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj += 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti += 1;\n\t\t\tj += 1;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti += 1;\n\t\tk += 1;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\t\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1) \n\t{\n\t\tif(x in li2) \n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t\tcontinue;\n\t\telse\n\t\t\tli3[j++] = i;\n\t}\n\treturn li3[0..j];\n}",
    "{\n    long[] li3 = new long[li1.length];\n    int k = 0;\n    foreach(long i; li1)\n    {\n        if(!li2.contains(i))\n        {\n            li3[k++] = i;\n        }\n    }\n    return li3[0..k];\n}",
    "{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(li2.find(i) == -1)\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3[0..i];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tif(li3.find(i) != -1)\n\t\t{\n\t\t\tli3.remove(i);\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tif(li3.find(i) != -1)\n\t\t{\n\t\t\tli3.remove(i);\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t\tli3 ~= i;\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t\tli3 ~= i;\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x notin li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3[0..i];\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[0];\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[0];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tauto li3 = li1.dup;\n\tforeach(i; li2)\n\t{\n\t\tif(li3.length == 0)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\telse if(li3.length == 1)\n\t\t{\n\t\t\tif(li3[0] == i)\n\t\t\t{\n\t\t\t\tli3.length = 0;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(li3.length > 1)\n\t\t\t{\n\t\t\t\tif(li3[0] == i)\n\t\t\t\t{\n\t\t\t\t\tli3 = li3[1..$];\n\t\t\t\t}\n\t\t\t\telse if(li3[$-1] == i)\n\t\t\t\t{\n\t\t\t\t\tli3 = li3[0..$-1];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfor(int j = 1; j < li3.length - 1; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(li3[j] == i)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tli3 = li3[0..j] ~ li3[j+1..$];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i != li2[j])\n\t\t{\n\t\t\tli3[j] = i;\n\t\t}\n\t\tj++;\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}",
    "{\n\tlong[] li3 = new long[];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}"
  ]
}
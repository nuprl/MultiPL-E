{
  "name": "mbpp_454_text_match_wordz",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_454_text_match_wordz.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmp2wqzdsw9.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2wqzdsw9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpz22azvkn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz22azvkn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(r\"\\bz\\w*\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpmt563hhx.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmt563hhx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\tauto m = match(text, \"*z*\");\n\tif (m.empty)\n\t\treturn false;\n\telse\n\t\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpps0wljn5.d(10): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpps0wljn5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpz22azvkn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz22azvkn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\tauto m = match(text, \"\\\\w*z\\\\w*\");\n\treturn m.empty ? false : true;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1666123476,
      "stdout": "",
      "stderr": "/tmp/tmp84aaaqo0.d(10): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp84aaaqo0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpz22azvkn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz22azvkn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn match(text, \"*z*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1666123476,
      "stdout": "",
      "stderr": "/tmp/tmp_ko6h8wc.d(10): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ko6h8wc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpz22azvkn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz22azvkn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn match(text, \"*z*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1666123476,
      "stdout": "",
      "stderr": "/tmp/tmp_ko6h8wc.d(10): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ko6h8wc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpz22azvkn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz22azvkn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpz22azvkn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz22azvkn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1666123476,
      "stdout": "",
      "stderr": "/tmp/tmp280m6dm1.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp280m6dm1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn match(text, \"*z*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1666123476,
      "stdout": "",
      "stderr": "/tmp/tmp_ko6h8wc.d(10): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ko6h8wc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1666123476,
      "stdout": "",
      "stderr": "/tmp/tmp280m6dm1.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp280m6dm1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpz22azvkn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz22azvkn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpz22azvkn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz22azvkn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\tauto m = match(text, \"\\\\w*z\\\\w*\");\n\treturn m.empty() ? false : true;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1666123476,
      "stdout": "",
      "stderr": "/tmp/tmprlv_rqw6.d(10): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprlv_rqw6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpz22azvkn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz22azvkn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn std.regex.match(text, r\"\\w*z\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1666123476,
      "stdout": "",
      "stderr": "/tmp/tmp567z85z6.d(10): Error: undefined identifier `regex` in package `std`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp567z85z6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpfq1rsbsn.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq1rsbsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1666123476,
      "stdout": "",
      "stderr": "/tmp/tmp280m6dm1.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp280m6dm1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpf3mf77xd.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf3mf77xd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcq1pqu20.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq1pqu20.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
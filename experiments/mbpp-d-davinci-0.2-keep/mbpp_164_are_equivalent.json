{
  "name": "mbpp_164_are_equivalent",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to determine if the sum of the divisors of two integers are the same.\n\t\n*/\nbool are_equivalent(long num1, long num2) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_164_are_equivalent.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = are_equivalent;\n\n    assert(candidate(36L, 57L) == false);\n    assert(candidate(2L, 4L) == false);\n    assert(candidate(23L, 47L) == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn divisors(num1) == divisors(num2);\n}",
    "{\n\tauto divisors1 = new long[];\n\tauto divisors2 = new long[];\n\t\n\tfor(long i = 1; i < num1; i++)\n\t{\n\t\tif(num1 % i == 0)\n\t\t{\n\t\t\tdivisors1 ~= i;\n\t\t}\n\t}\n\t\n\tfor(long i = 1; i < num2; i++)\n\t{\n\t\tif(num2 % i == 0)\n\t\t{\n\t\t\tdivisors2 ~= i;\n\t\t}\n\t}\n\t\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\t\n\tforeach(i; divisors1)\n\t{\n\t\tsum1 += i;\n\t}\n\t\n\tforeach(i; divisors2)\n\t{\n\t\tsum2 += i;\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = getDivisors(num1);\n\tauto divisors2 = getDivisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = new int[];\n\tauto divisors2 = new int[];\n\t\n\tforeach(i; 1..num1)\n\t{\n\t\tif(num1 % i == 0)\n\t\t\tdivisors1 ~= i;\n\t}\n\t\n\tforeach(i; 1..num2)\n\t{\n\t\tif(num2 % i == 0)\n\t\t\tdivisors2 ~= i;\n\t}\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\t// get the divisors of num1\n\tauto divisors1 = get_divisors(num1);\n\t// get the divisors of num2\n\tauto divisors2 = get_divisors(num2);\n\t// get the sum of the divisors of num1\n\tlong sum1 = sum(divisors1);\n\t// get the sum of the divisors of num2\n\tlong sum2 = sum(divisors2);\n\t// return true if the sum of the divisors of num1 is equal to the sum of the divisors of num2\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\t\n\tfor (long i = 1; i < num1; i++)\n\t{\n\t\tif (num1 % i == 0)\n\t\t{\n\t\t\tsum1 += i;\n\t\t}\n\t}\n\t\n\tfor (long i = 1; i < num2; i++)\n\t{\n\t\tif (num2 % i == 0)\n\t\t{\n\t\t\tsum2 += i;\n\t\t}\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\t\n\tfor (long i = 1; i < num1; i++)\n\t{\n\t\tif (num1 % i == 0)\n\t\t{\n\t\t\tsum1 += i;\n\t\t}\n\t}\n\t\n\tfor (long i = 1; i < num2; i++)\n\t{\n\t\tif (num2 % i == 0)\n\t\t{\n\t\t\tsum2 += i;\n\t\t}\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto sum1 = 0L;\n\tauto sum2 = 0L;\n\t\n\tfor (auto i = 1L; i <= num1; i++)\n\t{\n\t\tif (num1 % i == 0)\n\t\t{\n\t\t\tsum1 += i;\n\t\t}\n\t}\n\t\n\tfor (auto i = 1L; i <= num2; i++)\n\t{\n\t\tif (num2 % i == 0)\n\t\t{\n\t\t\tsum2 += i;\n\t\t}\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = new long[];\n\tauto divisors2 = new long[];\n\t\n\t// Get the divisors of num1\n\tfor (long i = 1; i <= num1; i++)\n\t{\n\t\tif (num1 % i == 0)\n\t\t{\n\t\t\tdivisors1 ~= i;\n\t\t}\n\t}\n\t\n\t// Get the divisors of num2\n\tfor (long i = 1; i <= num2; i++)\n\t{\n\t\tif (num2 % i == 0)\n\t\t{\n\t\t\tdivisors2 ~= i;\n\t\t}\n\t}\n\t\n\t// Sum the divisors of num1\n\tlong sum1 = 0;\n\tforeach (divisor; divisors1)\n\t{\n\t\tsum1 += divisor;\n\t}\n\t\n\t// Sum the divisors of num2\n\tlong sum2 = 0;\n\tforeach (divisor; divisors2)\n\t{\n\t\tsum2 += divisor;\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\t\n\tfor (long i = 1; i < num1; i++)\n\t{\n\t\tif (num1 % i == 0)\n\t\t{\n\t\t\tsum1 += i;\n\t\t}\n\t}\n\t\n\tfor (long i = 1; i < num2; i++)\n\t{\n\t\tif (num2 % i == 0)\n\t\t{\n\t\t\tsum2 += i;\n\t\t}\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\t// get the divisors of num1\n\tauto divisors1 = divisors(num1);\n\t// get the divisors of num2\n\tauto divisors2 = divisors(num2);\n\t// return the sum of the divisors of num1 == the sum of the divisors of num2\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\t\n\tfor (long i = 1; i <= num1; i++)\n\t{\n\t\tif (num1 % i == 0)\n\t\t{\n\t\t\tsum1 += i;\n\t\t}\n\t}\n\t\n\tfor (long i = 1; i <= num2; i++)\n\t{\n\t\tif (num2 % i == 0)\n\t\t{\n\t\t\tsum2 += i;\n\t\t}\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\t\n\tfor (long i = 1; i < num1; i++)\n\t{\n\t\tif (num1 % i == 0)\n\t\t{\n\t\t\tsum1 += i;\n\t\t}\n\t}\n\t\n\tfor (long i = 1; i < num2; i++)\n\t{\n\t\tif (num2 % i == 0)\n\t\t{\n\t\t\tsum2 += i;\n\t\t}\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\t// get the divisors of num1\n\tauto divisors1 = get_divisors(num1);\n\t// get the divisors of num2\n\tauto divisors2 = get_divisors(num2);\n\t\n\t// get the sum of the divisors of num1\n\tlong sum1 = 0;\n\tforeach(divisor; divisors1)\n\t{\n\t\tsum1 += divisor;\n\t}\n\t\n\t// get the sum of the divisors of num2\n\tlong sum2 = 0;\n\tforeach(divisor; divisors2)\n\t{\n\t\tsum2 += divisor;\n\t}\n\t\n\t// return true if the sums are the same\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto sum1 = 0;\n\tauto sum2 = 0;\n\t\n\tfor (auto i = 1; i <= num1; i++)\n\t{\n\t\tif (num1 % i == 0)\n\t\t{\n\t\t\tsum1 += i;\n\t\t}\n\t}\n\t\n\tfor (auto i = 1; i <= num2; i++)\n\t{\n\t\tif (num2 % i == 0)\n\t\t{\n\t\t\tsum2 += i;\n\t\t}\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\t// get the sum of the divisors of num1\n\tlong sum1 = 0;\n\tforeach(i; 1..num1+1)\n\t{\n\t\tif(num1 % i == 0)\n\t\t{\n\t\t\tsum1 += i;\n\t\t}\n\t}\n\t\n\t// get the sum of the divisors of num2\n\tlong sum2 = 0;\n\tforeach(i; 1..num2+1)\n\t{\n\t\tif(num2 % i == 0)\n\t\t{\n\t\t\tsum2 += i;\n\t\t}\n\t}\n\t\n\t// return true if the sums are the same\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn divisors1.sum == divisors2.sum;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\t\n\tfor(long i = 1; i < num1; i++)\n\t{\n\t\tif(num1 % i == 0)\n\t\t{\n\t\t\tsum1 += i;\n\t\t}\n\t}\n\t\n\tfor(long i = 1; i < num2; i++)\n\t{\n\t\tif(num2 % i == 0)\n\t\t{\n\t\t\tsum2 += i;\n\t\t}\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}"
  ]
}
{
  "name": "mbpp_229_re_arrange_array",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.\n\t\n*/\nlong[] re_arrange_array(long[] arr, long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_229_re_arrange_array.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = re_arrange_array;\n\n    assert(candidate([-1L, 2L, -3L, 4L, 5L, 6L, -7L, 8L, 9L], 9L) == [-1L, -3L, -7L, 4L, 5L, 6L, 2L, 8L, 9L]);\n    assert(candidate([12L, -14L, -26L, 13L, 15L], 5L) == [-14L, -26L, 12L, 13L, 15L]);\n    assert(candidate([10L, 24L, 36L, -42L, -39L, -78L, 85L], 7L) == [-42L, -39L, -78L, 10L, 24L, 36L, 85L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_count = 0;\n\tlong negative_count = 0;\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_count] = arr[i];\n\t\t\tnegative_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_count] = arr[i];\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. negative_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; negative_count .. n)\n\t{\n\t\tresult[i] = positive[i - negative_count];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] result2 = new long[n];\n\tlong[] result3 = new long[n];\n\tlong[] result4 = new long[n];\n\tlong[] result5 = new long[n];\n\tlong[] result6 = new long[n];\n\tlong[] result7 = new long[n];\n\tlong[] result8 = new long[n];\n\tlong[] result9 = new long[n];\n\tlong[] result10 = new long[n];\n\tlong[] result11 = new long[n];\n\tlong[] result12 = new long[n];\n\tlong[] result13 = new long[n];\n\tlong[] result14 = new long[n];\n\tlong[] result15 = new long[n];\n\tlong[] result16 = new long[n];\n\tlong[] result17 = new long[n];\n\tlong[] result18 = new long[n];\n\tlong[] result19 = new long[n];\n\tlong[] result20 = new long[n];\n\tlong[] result21 = new long[n];\n\tlong[] result22 = new long[n];\n\tlong[] result23 = new long[n];\n\tlong[] result24 = new long[n];\n\tlong[] result25 = new long[n];\n\tlong[] result26 = new long[n];\n\tlong[] result27 = new long[n];\n\tlong[] result28 = new long[n];\n\tlong[] result29 = new long[n];\n\tlong[] result30 = new long[n];\n\tlong[] result31 = new long[n];\n\tlong[] result32 = new long[n];\n\tlong[] result33 = new long[n];\n\tlong[] result34 = new long[n];\n\tlong[] result35 = new long[n];\n\tlong[] result36 = new long[n];\n\tlong[] result37 = new long[n];\n\tlong[] result38 = new long[n];\n\tlong[] result39 = new long[n];\n\tlong[] result40 = new long[n];\n\tlong[] result41 = new long[n];\n\tlong[] result42 = new long[n];\n\tlong[] result43 =",
    "{\n\tlong[] temp = new long[n];\n\tlong[] result = new long[n];\n\tlong[] result2 = new long[n];\n\tlong[] result3 = new long[n];\n\tlong[] result4 = new long[n];\n\tlong[] result5 = new long[n];\n\tlong[] result6 = new long[n];\n\tlong[] result7 = new long[n];\n\tlong[] result8 = new long[n];\n\tlong[] result9 = new long[n];\n\tlong[] result10 = new long[n];\n\tlong[] result11 = new long[n];\n\tlong[] result12 = new long[n];\n\tlong[] result13 = new long[n];\n\tlong[] result14 = new long[n];\n\tlong[] result15 = new long[n];\n\tlong[] result16 = new long[n];\n\tlong[] result17 = new long[n];\n\tlong[] result18 = new long[n];\n\tlong[] result19 = new long[n];\n\tlong[] result20 = new long[n];\n\tlong[] result21 = new long[n];\n\tlong[] result22 = new long[n];\n\tlong[] result23 = new long[n];\n\tlong[] result24 = new long[n];\n\tlong[] result25 = new long[n];\n\tlong[] result26 = new long[n];\n\tlong[] result27 = new long[n];\n\tlong[] result28 = new long[n];\n\tlong[] result29 = new long[n];\n\tlong[] result30 = new long[n];\n\tlong[] result31 = new long[n];\n\tlong[] result32 = new long[n];\n\tlong[] result33 = new long[n];\n\tlong[] result34 = new long[n];\n\tlong[] result35 = new long[n];\n\tlong[] result36 = new long[n];\n\tlong[] result37 = new long[n];\n\tlong[] result38 = new long[n];\n\tlong[] result39 = new long[n];\n\tlong[] result40 = new long[n];\n\tlong[] result41 = new long[n];\n\tlong[] result42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[neg_count+i] = positive[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\t\n\tforeach(long i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\t\n\tforeach(long i; 0 .. neg_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(long i; 0 .. pos_index)\n\t{\n\t\tresult[neg_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[neg_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{ \n    long[] temp = new long[n]; \n    long j = 0; \n  \n    // Traverse the array and store positive elements in temp \n    for (long i = 0; i < n; i++) { \n        if (arr[i] < 0) { \n            temp[j] = arr[i]; \n            j++; \n        } \n    } \n  \n    // Traverse the array and store negative elements in temp \n    for (long i = 0; i < n; i++) { \n        if (arr[i] >= 0) { \n            temp[j] = arr[i]; \n            j++; \n        } \n    } \n  \n    // Copy contents of temp[] to arr[] \n    for (long i = 0; i < n; i++) \n        arr[i] = temp[i]; \n  \n    return arr; \n} ",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\tforeach(long i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\t\n\tforeach(long i; 0 .. neg_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(long i; 0 .. pos_index)\n\t{\n\t\tresult[neg_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong j = 0;\n\tlong k = 0;\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (arr[i] < 0)\n\t\t{\n\t\t\tresult[j] = arr[i];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = arr[i];\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[j] = temp[i];\n\t\tj++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\tfor (long i = 0; i < neg_index; i++) \n\t{\n\t\tresult[i] = negative[i];\n\t}\n\tfor (long i = 0; i < pos_index; i++) \n\t{\n\t\tresult[i + neg_index] = positive[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_count = 0;\n\tlong negative_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_count] = arr[i];\n\t\t\tnegative_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_count] = arr[i];\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_count)\n\t{\n\t\tresult[negative_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] positive = new long[n];\n\tlong negative_count = 0;\n\tlong positive_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_count] = arr[i];\n\t\t\tnegative_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_count] = arr[i];\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_count)\n\t{\n\t\tresult[negative_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0 .. positive_index)\n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[neg_count + i] = positive[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] neg = new long[n];\n\tlong[] pos = new long[n];\n\tlong neg_index = 0;\n\tlong pos_index = 0;\n\tforeach(long i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\tlong index = 0;\n\tforeach(long i; 0 .. neg_index)\n\t{\n\t\tres[index] = neg[i];\n\t\tindex++;\n\t}\n\tforeach(long i; 0 .. pos_index)\n\t{\n\t\tres[index] = pos[i];\n\t\tindex++;\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; negative_index..n)\n\t{\n\t\tresult[i] = positive[i - negative_index];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[neg_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n    long[] res = new long[n];\n    long[] neg = new long[n];\n    long[] pos = new long[n];\n    long neg_count = 0;\n    long pos_count = 0;\n    foreach(i; 0..n)\n    {\n        if(arr[i] < 0)\n        {\n            neg[neg_count] = arr[i];\n            neg_count++;\n        }\n        else\n        {\n            pos[pos_count] = arr[i];\n            pos_count++;\n        }\n    }\n    foreach(i; 0..neg_count)\n    {\n        res[i] = neg[i];\n    }\n    foreach(i; 0..pos_count)\n    {\n        res[neg_count + i] = pos[i];\n    }\n    return res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_index)\n\t{\n\t\tresult[i + negative_index] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong j = 0;\n\tlong k = 0;\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tresult[j] = arr[i];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = arr[i];\n\t\t\tk++;\n\t\t}\n\t}\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[j] = temp[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\tforeach(long i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\t\n\tforeach(long i; 0..neg_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(long i; 0..pos_index)\n\t{\n\t\tresult[neg_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] neg = new long[n];\n\tlong[] pos = new long[n];\n\tlong neg_count = 0;\n\tlong pos_count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\tforeach(i; 0..neg_count)\n\t{\n\t\tres[i] = neg[i];\n\t}\n\tforeach(i; 0..pos_count)\n\t{\n\t\tres[neg_count + i] = pos[i];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < negative_index; i++)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tfor (long i = 0; i < positive_index; i++)\n\t{\n\t\tresult[i + negative_index] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_index)\n\t{\n\t\tresult[i + negative_index] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] positive = new long[n];\n\tlong negative_index = 0;\n\tlong positive_index = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\tlong index = 0;\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[index] = negative[i];\n\t\tindex++;\n\t}\n\tforeach(i; 0..positive_index)\n\t{\n\t\tresult[index] = positive[i];\n\t\tindex++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] >= 0)\n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t}\n\tlong index = 0;\n\tforeach(i; 0..neg_index)\n\t{\n\t\tresult[index] = negative[i];\n\t\tindex++;\n\t}\n\tforeach(i; 0..pos_index)\n\t{\n\t\tresult[index] = positive[i];\n\t\tindex++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] neg = new long[n];\n\tlong[] pos = new long[n];\n\tlong neg_count = 0;\n\tlong pos_count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\tforeach(i; 0..neg_count)\n\t{\n\t\tres[i] = neg[i];\n\t}\n\tforeach(i; 0..pos_count)\n\t{\n\t\tres[neg_count + i] = pos[i];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong j = 0;\n\tlong k = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\tresult[j] = arr[i];\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ttemp[k] = arr[i];\n\t\t\tk++;\n\t\t}\n\t}\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[j] = temp[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < negative_index; i++)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tfor (long i = 0; i < positive_index; i++)\n\t{\n\t\tresult[i + negative_index] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(long i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(long i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(long i; 0..pos_count)\n\t{\n\t\tresult[neg_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong j = 0;\n\tlong k = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\ttemp[j] = arr[i];\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ttemp2[k] = arr[i];\n\t\t\tk++;\n\t\t}\n\t}\n\tfor (long i = 0; i < j; i++) \n\t{\n\t\tresult[i] = temp[i];\n\t}\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[j + i] = temp2[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] neg = new long[n];\n\tlong[] pos = new long[n];\n\tlong neg_index = 0;\n\tlong pos_index = 0;\n\tforeach(long i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\tlong[] neg_pos = neg ~ pos;\n\tforeach(long i; 0..n)\n\t{\n\t\tres[i] = neg_pos[i];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_index)\n\t{\n\t\tresult[neg_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n    long[] result = new long[n];\n    long[] positive = new long[n];\n    long[] negative = new long[n];\n    long positive_index = 0;\n    long negative_index = 0;\n    foreach(elem; arr)\n    {\n        if(elem < 0)\n        {\n            negative[negative_index] = elem;\n            negative_index++;\n        }\n        else\n        {\n            positive[positive_index] = elem;\n            positive_index++;\n        }\n    }\n    long index = 0;\n    foreach(elem; negative)\n    {\n        result[index] = elem;\n        index++;\n    }\n    foreach(elem; positive)\n    {\n        result[index] = elem;\n        index++;\n    }\n    return result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong i = 0, j = n - 1;\n\tforeach(x; arr)\n\t{\n\t\tif(x < 0)\n\t\t{\n\t\t\tresult[i] = x;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[j] = x;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] pos = new long[n];\n\tlong[] neg = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\tlong count = 0;\n\tforeach(i; 0..neg_count)\n\t{\n\t\tres[count] = neg[i];\n\t\tcount++;\n\t}\n\tforeach(i; 0..pos_count)\n\t{\n\t\tres[count] = pos[i];\n\t\tcount++;\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_count = 0;\n\tlong negative_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_count] = arr[i];\n\t\t\tnegative_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_count] = arr[i];\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_count)\n\t{\n\t\tresult[negative_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < neg_index; i++)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tfor (long i = neg_index; i < n; i++)\n\t{\n\t\tresult[i] = positive[i - neg_index];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] neg = new long[n];\n\tlong[] pos = new long[n];\n\tlong neg_count = 0;\n\tlong pos_count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\tforeach(i; 0..neg_count)\n\t{\n\t\tres[i] = neg[i];\n\t}\n\tforeach(i; 0..pos_count)\n\t{\n\t\tres[neg_count + i] = pos[i];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[i + neg_count] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_count = 0;\n\tlong negative_count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_count] = arr[i];\n\t\t\tnegative_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_count] = arr[i];\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\tforeach(i; 0..negative_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\tforeach(i; 0..positive_count)\n\t{\n\t\tresult[negative_count + i] = positive[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_index)\n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; negative_index..n)\n\t{\n\t\tresult[i] = positive[i - negative_index];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (arr[i] > 0)\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t}\n\tfor (long i = 0; i < neg_count; i++)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\tfor (long i = neg_count; i < neg_count + pos_count; i++)\n\t{\n\t\tresult[i] = positive[i - neg_count];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] zero = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\tlong zero_index = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] > 0)\n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t\telse if(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tzero[zero_index] = arr[i];\n\t\t\tzero_index++;\n\t\t}\n\t}\n\tlong index = 0;\n\tforeach(i; 0..neg_index)\n\t{\n\t\tresult[index] = negative[i];\n\t\tindex++;\n\t}\n\tforeach(i; 0..zero_index)\n\t{\n\t\tresult[index] = zero[i];\n\t\tindex++;\n\t}\n\tforeach(i; 0..pos_index)\n\t{\n\t\tresult[index] = positive[i];\n\t\tindex++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\tlong index = 0;\n\tfor (long i = 0; i < neg_index; i++) \n\t{\n\t\tresult[index] = negative[i];\n\t\tindex++;\n\t}\n\tfor (long i = 0; i < pos_index; i++) \n\t{\n\t\tresult[index] = positive[i];\n\t\tindex++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] pos = new long[n];\n\tlong[] neg = new long[n];\n\tlong pos_cnt = 0;\n\tlong neg_cnt = 0;\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_cnt] = arr[i];\n\t\t\tneg_cnt++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_cnt] = arr[i];\n\t\t\tpos_cnt++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. neg_cnt)\n\t{\n\t\tres[i] = neg[i];\n\t}\n\t\n\tforeach(i; 0 .. pos_cnt)\n\t{\n\t\tres[neg_cnt + i] = pos[i];\n\t}\n\t\n\treturn res;\n}",
    "{\n\tlong[] result = new long[arr.length];\n\tlong[] negative = new long[arr.length];\n\tlong[] positive = new long[arr.length];\n\tlong negative_index = 0;\n\tlong positive_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_index)\n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[arr.length];\n\tlong[] positive = new long[arr.length];\n\tlong[] negative = new long[arr.length];\n\tlong[] zero = new long[arr.length];\n\tlong[] temp = new long[arr.length];\n\tlong[] temp2 = new long[arr.length];\n\tlong[] temp3 = new long[arr.length];\n\tlong[] temp4 = new long[arr.length];\n\tlong[] temp5 = new long[arr.length];\n\tlong[] temp6 = new long[arr.length];\n\tlong[] temp7 = new long[arr.length];\n\tlong[] temp8 = new long[arr.length];\n\tlong[] temp9 = new long[arr.length];\n\tlong[] temp10 = new long[arr.length];\n\tlong[] temp11 = new long[arr.length];\n\tlong[] temp12 = new long[arr.length];\n\tlong[] temp13 = new long[arr.length];\n\tlong[] temp14 = new long[arr.length];\n\tlong[] temp15 = new long[arr.length];\n\tlong[] temp16 = new long[arr.length];\n\tlong[] temp17 = new long[arr.length];\n\tlong[] temp18 = new long[arr.length];\n\tlong[] temp19 = new long[arr.length];\n\tlong[] temp20 = new long[arr.length];\n\tlong[] temp21 = new long[arr.length];\n\tlong[] temp22 = new long[arr.length];\n\tlong[] temp23 = new long[arr.length];\n\tlong[] temp24 = new long[arr.length];\n\tlong[] temp25 = new long[arr.length];\n\tlong[] temp26 = new long[arr.length];\n\tlong[] temp27 = new long[arr.length];\n\tlong[] temp28 = new long[arr.length];\n\tlong[] temp29 = new long[arr.length];\n\tlong[] temp30 = new long[arr.length];\n\tlong[] temp31 = new long[arr.length];\n\tlong[] temp32 = new long[arr.length];\n\tlong[] temp33 = new long[arr",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] positive = new long[n];\n\tlong negative_count = 0;\n\tlong positive_count = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\tnegative[negative_count] = arr[i];\n\t\t\tnegative_count++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tpositive[positive_count] = arr[i];\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\tfor (long i = 0; i < negative_count; i++) \n\t{\n\t\tresult[i] = negative[i];\n\t}\n\tfor (long i = 0; i < positive_count; i++) \n\t{\n\t\tresult[i + negative_count] = positive[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_index)\n\t{\n\t\tresult[i+neg_index] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[i+neg_count] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_index)\n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_index)\n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\tlong index = 0;\n\tfor (long i = 0; i < negative_index; i++) \n\t{\n\t\tresult[index] = negative[i];\n\t\tindex++;\n\t}\n\tfor (long i = 0; i < positive_index; i++) \n\t{\n\t\tresult[index] = positive[i];\n\t\tindex++;\n\t}\n\treturn result;\n}",
    "{\n\tauto result = arr[0 .. n];\n\tlong i = 0;\n\tlong j = n - 1;\n\twhile (i < j)\n\t{\n\t\twhile (i < j && result[i] < 0)\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\twhile (i < j && result[j] >= 0)\n\t\t{\n\t\t\tj--;\n\t\t}\n\t\tif (i < j)\n\t\t{\n\t\t\tauto temp = result[i];\n\t\t\tresult[i] = result[j];\n\t\t\tresult[j] = temp;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] neg = new long[n];\n\tlong[] pos = new long[n];\n\tlong neg_count = 0;\n\tlong pos_count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\tlong count = 0;\n\tforeach(i; 0..neg_count)\n\t{\n\t\tres[count] = neg[i];\n\t\tcount++;\n\t}\n\tforeach(i; 0..pos_count)\n\t{\n\t\tres[count] = pos[i];\n\t\tcount++;\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[neg_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] neg = new long[n];\n\tlong[] pos = new long[n];\n\tlong neg_count = 0;\n\tlong pos_count = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\tfor (long i = 0; i < neg_count; i++) \n\t{\n\t\tresult[i] = neg[i];\n\t}\n\tfor (long i = 0; i < pos_count; i++) \n\t{\n\t\tresult[neg_count + i] = pos[i];\n\t}\n\treturn result;\n}",
    "{\n    long[] res = new long[arr.length];\n    long[] neg = new long[arr.length];\n    long[] pos = new long[arr.length];\n    long neg_count = 0;\n    long pos_count = 0;\n    foreach(long i; 0..n)\n    {\n        if(arr[i] < 0)\n        {\n            neg[neg_count] = arr[i];\n            neg_count++;\n        }\n        else\n        {\n            pos[pos_count] = arr[i];\n            pos_count++;\n        }\n    }\n    foreach(long i; 0..neg_count)\n    {\n        res[i] = neg[i];\n    }\n    foreach(long i; 0..pos_count)\n    {\n        res[neg_count+i] = pos[i];\n    }\n    return res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] zero = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\tlong zero_index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] > 0) \n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t} \n\t\telse if (arr[i] < 0) \n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tzero[zero_index] = arr[i];\n\t\t\tzero_index++;\n\t\t}\n\t}\n\tlong index = 0;\n\tfor (long i = 0; i < neg_index; i++) \n\t{\n\t\tresult[index] = negative[i];\n\t\tindex++;\n\t}\n\tfor (long i = 0; i < zero_index; i++) \n\t{\n\t\tresult[index] = zero[i];\n\t\tindex++;\n\t}\n\tfor (long i = 0; i < pos_index; i++) \n\t{\n\t\tresult[index] = positive[i];\n\t\tindex++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] positive = new long[n];\n\tlong neg_count = 0;\n\tlong pos_count = 0;\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0 .. pos_count)\n\t{\n\t\tresult[neg_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\tforeach(long i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\tforeach(long i; 0..negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\tforeach(long i; 0..positive_index)\n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tforeach(long i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(long i; 0..negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(long i; 0..positive_index)\n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tif(arr[i] >= 0)\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t}\n\t\n\tfor(long i = 0; i < negative_index; i++)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tfor(long i = negative_index; i < n; i++)\n\t{\n\t\tresult[i] = positive[i - negative_index];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[neg_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; neg_count..n)\n\t{\n\t\tresult[i] = positive[i - neg_count];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_count = 0;\n\tlong negative_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_count] = arr[i];\n\t\t\tnegative_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_count] = arr[i];\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_count)\n\t{\n\t\tresult[negative_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] zero = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\tlong zero_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] > 0)\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t\telse if(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tzero[zero_count] = arr[i];\n\t\t\tzero_count++;\n\t\t}\n\t}\n\t\n\tlong count = 0;\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[count] = negative[i];\n\t\tcount++;\n\t}\n\t\n\tforeach(i; 0..zero_count)\n\t{\n\t\tresult[count] = zero[i];\n\t\tcount++;\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[count] = positive[i];\n\t\tcount++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\tfor(long i = 0; i < negative_index; i++)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\tfor(long i = negative_index; i < n; i++)\n\t{\n\t\tresult[i] = positive[i - negative_index];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong j = 0;\n\tlong k = n - 1;\n\tforeach (i; 0 .. n)\n\t{\n\t\tif (arr[i] < 0)\n\t\t{\n\t\t\tres[j] = arr[i];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tres[k] = arr[i];\n\t\t\tk--;\n\t\t}\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] zero = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\tlong zero_index = 0;\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] > 0)\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t\telse if(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tzero[zero_index] = arr[i];\n\t\t\tzero_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; negative_index .. positive_index + negative_index)\n\t{\n\t\tresult[i] = positive[i - negative_index];\n\t}\n\t\n\tforeach(i; positive_index + negative_index .. positive_index + negative_index + zero_index)\n\t{\n\t\tresult[i] = zero[i - positive_index - negative_index];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] positive = new long[n];\n\tlong negative_index = 0;\n\tlong positive_index = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\tlong index = 0;\n\tforeach(i; 0 .. negative_index)\n\t{\n\t\tresult[index] = negative[i];\n\t\tindex++;\n\t}\n\tforeach(i; 0 .. positive_index)\n\t{\n\t\tresult[index] = positive[i];\n\t\tindex++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\tforeach(i; 0..positive_index)\n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\t\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\t\n\tforeach(long x; arr)\n\t{\n\t\tif(x < 0)\n\t\t{\n\t\t\ttemp[i] = x;\n\t\t\ti++;\n\t\t}\n\t\telse if(x == 0)\n\t\t{\n\t\t\ttemp2[j] = x;\n\t\t\tj++;\n\t\t}\n\t\telse if(x > 0)\n\t\t{\n\t\t\ttemp3[k] = x;\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\tforeach(long x; temp)\n\t{\n\t\tresult[l] = x;\n\t\tl++;\n\t}\n\t\n\tforeach(long x; temp2)\n\t{\n\t\tresult[l] = x;\n\t\tl++;\n\t}\n\t\n\tforeach(long x; temp3)\n\t{\n\t\tresult[l] = x;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_index)\n\t{\n\t\tresult[neg_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < negative_index; i++)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tfor (long i = negative_index; i < n; i++)\n\t{\n\t\tresult[i] = positive[i - negative_index];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\tlong index = 0;\n\tforeach(i; 0 .. negative_index)\n\t{\n\t\tresult[index] = negative[i];\n\t\tindex++;\n\t}\n\tforeach(i; 0 .. positive_index)\n\t{\n\t\tresult[index] = positive[i];\n\t\tindex++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\tlong index = 0;\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[index] = negative[i];\n\t\tindex++;\n\t}\n\tforeach(i; 0..positive_index)\n\t{\n\t\tresult[index] = positive[i];\n\t\tindex++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] neg_arr = new long[n];\n\tlong[] pos_arr = new long[n];\n\tlong[] result = new long[n];\n\tlong neg_count = 0;\n\tlong pos_count = 0;\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg_arr[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos_arr[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. neg_count)\n\t{\n\t\tresult[i] = neg_arr[i];\n\t}\n\t\n\tforeach(i; 0 .. pos_count)\n\t{\n\t\tresult[neg_count + i] = pos_arr[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] result_pos = new long[n];\n\tlong[] result_neg = new long[n];\n\tlong j = 0;\n\tlong k = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tresult_neg[j] = arr[i];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult_pos[k] = arr[i];\n\t\t\tk++;\n\t\t}\n\t}\n\tj = 0;\n\tk = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(j < k)\n\t\t{\n\t\t\tresult[i] = result_neg[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = result_pos[k];\n\t\t\tk++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] pos = new long[n];\n\tlong[] neg = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tres[i] = neg[i];\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tres[neg_count + i] = pos[i];\n\t}\n\t\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_index)\n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[neg_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_index)\n\t{\n\t\tresult[neg_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] zero = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\tlong zero_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] > 0)\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t\telse if(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tzero[zero_count] = arr[i];\n\t\t\tzero_count++;\n\t\t}\n\t}\n\t\n\tlong count = 0;\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[count] = negative[i];\n\t\tcount++;\n\t}\n\t\n\tforeach(i; 0..zero_count)\n\t{\n\t\tresult[count] = zero[i];\n\t\tcount++;\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[count] = positive[i];\n\t\tcount++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] zero = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\tlong zero_index = 0;\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tif(arr[i] > 0)\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t\telse if(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tzero[zero_index] = arr[i];\n\t\t\tzero_index++;\n\t\t}\n\t}\n\t\n\tlong index = 0;\n\tfor(long i = 0; i < negative_index; i++)\n\t{\n\t\tresult[index] = negative[i];\n\t\tindex++;\n\t}\n\t\n\tfor(long i = 0; i < zero_index; i++)\n\t{\n\t\tresult[index] = zero[i];\n\t\tindex++;\n\t}\n\t\n\tfor(long i = 0; i < positive_index; i++)\n\t{\n\t\tresult[index] = positive[i];\n\t\tindex++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] neg = new long[n];\n\tlong[] pos = new long[n];\n\tlong neg_idx = 0;\n\tlong pos_idx = 0;\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_idx] = arr[i];\n\t\t\tneg_idx++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_idx] = arr[i];\n\t\t\tpos_idx++;\n\t\t}\n\t}\n\tfor (long i = 0; i < neg_idx; i++)\n\t{\n\t\tres[i] = neg[i];\n\t}\n\tfor (long i = 0; i < pos_idx; i++)\n\t{\n\t\tres[neg_idx + i] = pos[i];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < negative_index; i++)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tfor (long i = negative_index; i < n; i++)\n\t{\n\t\tresult[i] = positive[i - negative_index];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0 .. positive_index)\n\t{\n\t\tresult[i + negative_index] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] pos = new long[n];\n\tlong[] neg = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = neg[i];\n\t}\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[neg_count + i] = pos[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] neg = new long[n];\n\tlong[] pos = new long[n];\n\tlong neg_count = 0;\n\tlong pos_count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\tforeach(i; 0..neg_count)\n\t{\n\t\tres[i] = neg[i];\n\t}\n\tforeach(i; 0..pos_count)\n\t{\n\t\tres[neg_count + i] = pos[i];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < negative_index; i++)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tfor (long i = 0; i < positive_index; i++)\n\t{\n\t\tresult[i + negative_index] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[neg_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\tforeach(long i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\tlong index = 0;\n\tforeach(long i; 0..neg_index)\n\t{\n\t\tresult[index] = negative[i];\n\t\tindex++;\n\t}\n\tforeach(long i; 0..pos_index)\n\t{\n\t\tresult[index] = positive[i];\n\t\tindex++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] zero = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\tlong zero_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] > 0)\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t\telse if(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tzero[zero_count] = arr[i];\n\t\t\tzero_count++;\n\t\t}\n\t}\n\t\n\tlong count = 0;\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[count] = negative[i];\n\t\tcount++;\n\t}\n\t\n\tforeach(i; 0..zero_count)\n\t{\n\t\tresult[count] = zero[i];\n\t\tcount++;\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[count] = positive[i];\n\t\tcount++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_idx = 0;\n\tlong neg_idx = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_idx] = arr[i];\n\t\t\tneg_idx++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_idx] = arr[i];\n\t\t\tpos_idx++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_idx)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_idx)\n\t{\n\t\tresult[neg_idx + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] pos = new long[n];\n\tlong[] neg = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] < 0) \n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\tlong i = 0;\n\tforeach(j; 0 .. neg_count) \n\t{\n\t\tres[i] = neg[j];\n\t\ti++;\n\t}\n\tforeach(j; 0 .. pos_count) \n\t{\n\t\tres[i] = pos[j];\n\t\ti++;\n\t}\n\treturn res;\n}",
    "{\n    long[] result = new long[n];\n    long[] positive = new long[n];\n    long[] negative = new long[n];\n    long positive_index = 0;\n    long negative_index = 0;\n    foreach(i; 0..n)\n    {\n        if(arr[i] < 0)\n        {\n            negative[negative_index] = arr[i];\n            negative_index++;\n        }\n        else\n        {\n            positive[positive_index] = arr[i];\n            positive_index++;\n        }\n    }\n    foreach(i; 0..negative_index)\n    {\n        result[i] = negative[i];\n    }\n    foreach(i; 0..positive_index)\n    {\n        result[negative_index + i] = positive[i];\n    }\n    return result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] neg = new long[n];\n\tlong[] pos = new long[n];\n\tlong neg_count = 0;\n\tlong pos_count = 0;\n\t\n\tforeach(long i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(long i; 0..neg_count)\n\t{\n\t\tres[i] = neg[i];\n\t}\n\t\n\tforeach(long i; 0..pos_count)\n\t{\n\t\tres[i + neg_count] = pos[i];\n\t}\n\t\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] positive = new long[n];\n\tlong negative_index = 0;\n\tlong positive_index = 0;\n\tfor (long i = 0; i < n; i++) {\n\t\tif (arr[i] < 0) {\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t} else {\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\tlong index = 0;\n\tfor (long i = 0; i < negative_index; i++) {\n\t\tresult[index] = negative[i];\n\t\tindex++;\n\t}\n\tfor (long i = 0; i < positive_index; i++) {\n\t\tresult[index] = positive[i];\n\t\tindex++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] temp = new long[n];\n\tlong[] result = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] result2 = new long[n];\n\tlong[] result3 = new long[n];\n\tlong[] result4 = new long[n];\n\tlong[] result5 = new long[n];\n\tlong[] result6 = new long[n];\n\tlong[] result7 = new long[n];\n\tlong[] result8 = new long[n];\n\tlong[] result9 = new long[n];\n\tlong[] result10 = new long[n];\n\tlong[] result11 = new long[n];\n\tlong[] result12 = new long[n];\n\tlong[] result13 = new long[n];\n\tlong[] result14 = new long[n];\n\tlong[] result15 = new long[n];\n\tlong[] result16 = new long[n];\n\tlong[] result17 = new long[n];\n\tlong[] result18 = new long[n];\n\tlong[] result19 = new long[n];\n\tlong[] result20 = new long[n];\n\tlong[] result21 = new long[n];\n\tlong[] result22 = new long[n];\n\tlong[] result23 = new long[n];\n\tlong[] result24 = new long[n];\n\tlong[] result25 = new long[n];\n\tlong[] result26 = new long[n];\n\tlong[] result27 = new long[n];\n\tlong[] result28 = new long[n];\n\tlong[] result29 = new long[n];\n\tlong[] result30 = new long[n];\n\tlong[] result31 = new long[n];\n\tlong[] result32 = new long[n];\n\tlong[] result33 = new long[n];\n\tlong[] result34 = new long[n];\n\tlong[] result35 = new long[n];\n\tlong[] result36 = new long[n];\n\tlong[] result37 = new long[n];\n\tlong[] result38 = new long[n];\n\tlong[] result39 = new long[n];\n\tlong[] result40 = new long[n];\n\tlong[] result41 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_index)\n\t{\n\t\tresult[neg_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_count = 0;\n\tlong negative_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_count] = arr[i];\n\t\t\tnegative_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_count] = arr[i];\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_count)\n\t{\n\t\tresult[negative_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] pos = new long[n];\n\tlong[] neg = new long[n];\n\tlong pos_i = 0;\n\tlong neg_i = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\tneg[neg_i] = arr[i];\n\t\t\tneg_i++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tpos[pos_i] = arr[i];\n\t\t\tpos_i++;\n\t\t}\n\t}\n\tlong i = 0;\n\twhile (neg_i > 0) \n\t{\n\t\tres[i] = neg[neg_i - 1];\n\t\tneg_i--;\n\t\ti++;\n\t}\n\twhile (pos_i > 0) \n\t{\n\t\tres[i] = pos[pos_i - 1];\n\t\tpos_i--;\n\t\ti++;\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_count = 0;\n\tlong negative_count = 0;\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_count] = arr[i];\n\t\t\tnegative_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_count] = arr[i];\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < negative_count; i++)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tfor (long i = 0; i < positive_count; i++)\n\t{\n\t\tresult[negative_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\tforeach(index, value; arr)\n\t{\n\t\tif(value < 0)\n\t\t{\n\t\t\tnegative[neg_index] = value;\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_index] = value;\n\t\t\tpos_index++;\n\t\t}\n\t}\n\t\n\tneg_index = 0;\n\tpos_index = 0;\n\tforeach(index, value; result)\n\t{\n\t\tif(neg_index < negative.length)\n\t\t{\n\t\t\tresult[index] = negative[neg_index];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[index] = positive[pos_index];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] ret = new long[n];\n\tlong[] pos = new long[n];\n\tlong[] neg = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_index)\n\t{\n\t\tret[i] = neg[i];\n\t}\n\t\n\tforeach(i; 0..pos_index)\n\t{\n\t\tret[neg_index + i] = pos[i];\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\tforeach(i;0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\tforeach(i;0..neg_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\tforeach(i;0..pos_index)\n\t{\n\t\tresult[neg_index+i] = positive[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] negative_array = new long[n];\n\tlong[] positive_array = new long[n];\n\tlong negative_index = 0;\n\tlong positive_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative_array[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive_array[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[i] = negative_array[i];\n\t}\n\t\n\tforeach(i; 0..positive_index)\n\t{\n\t\tresult[negative_index + i] = positive_array[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] pos = new long[n];\n\tlong[] neg = new long[n];\n\tlong pos_i = 0;\n\tlong neg_i = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_i] = arr[i];\n\t\t\tneg_i++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_i] = arr[i];\n\t\t\tpos_i++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_i)\n\t{\n\t\tres[i] = neg[i];\n\t}\n\t\n\tforeach(i; 0..pos_i)\n\t{\n\t\tres[neg_i + i] = pos[i];\n\t}\n\t\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; neg_count..n)\n\t{\n\t\tresult[i] = positive[i - neg_count];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] pos = new long[n];\n\tlong[] neg = new long[n];\n\tlong pos_i = 0;\n\tlong neg_i = 0;\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_i] = arr[i];\n\t\t\tneg_i++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_i] = arr[i];\n\t\t\tpos_i++;\n\t\t}\n\t}\n\tfor (long i = 0; i < neg_i; i++)\n\t{\n\t\tres[i] = neg[i];\n\t}\n\tfor (long i = 0; i < pos_i; i++)\n\t{\n\t\tres[neg_i + i] = pos[i];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tlong index = 0;\n\tfor (long i = 0; i < negative_index; i++) \n\t{\n\t\tresult[index] = negative[i];\n\t\tindex++;\n\t}\n\t\n\tfor (long i = 0; i < positive_index; i++) \n\t{\n\t\tresult[index] = positive[i];\n\t\tindex++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < negative_index; i++) \n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tfor (long i = 0; i < positive_index; i++) \n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[i+neg_count] = positive[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_count = 0;\n\tlong negative_count = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\tnegative[negative_count] = arr[i];\n\t\t\tnegative_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tpositive[positive_count] = arr[i];\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\tfor (long i = 0; i < negative_count; i++) \n\t{\n\t\tresult[i] = negative[i];\n\t}\n\tfor (long i = negative_count; i < n; i++) \n\t{\n\t\tresult[i] = positive[i - negative_count];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] neg = new long[n];\n\tlong[] pos = new long[n];\n\tlong neg_count = 0;\n\tlong pos_count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\tforeach(i; 0 .. neg_count)\n\t{\n\t\tres[i] = neg[i];\n\t}\n\tforeach(i; 0 .. pos_count)\n\t{\n\t\tres[neg_count + i] = pos[i];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tfor(long i = 0; i < negative_index; i++)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tfor(long i = 0; i < positive_index; i++)\n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\tlong index = 0;\n\tfor (long i = 0; i < neg_index; i++) \n\t{\n\t\tresult[index] = negative[i];\n\t\tindex++;\n\t}\n\tfor (long i = 0; i < pos_index; i++) \n\t{\n\t\tresult[index] = positive[i];\n\t\tindex++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] pos = new long[n];\n\tlong[] neg = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] >= 0)\n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t}\n\tforeach(i; 0 .. neg_count)\n\t{\n\t\tres[i] = neg[i];\n\t}\n\tforeach(i; neg_count .. n)\n\t{\n\t\tres[i] = pos[i - neg_count];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_count = 0;\n\tlong negative_count = 0;\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tif(arr[i] >= 0)\n\t\t{\n\t\t\tpositive[positive_count] = arr[i];\n\t\t\tpositive_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnegative[negative_count] = arr[i];\n\t\t\tnegative_count++;\n\t\t}\n\t}\n\t\n\tfor(long i = 0; i < negative_count; i++)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tfor(long i = negative_count; i < n; i++)\n\t{\n\t\tresult[i] = positive[i - negative_count];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_count = 0;\n\tlong negative_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_count] = arr[i];\n\t\t\tnegative_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_count] = arr[i];\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_count)\n\t{\n\t\tresult[i + negative_count] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_index)\n\t{\n\t\tresult[negative_index+i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\tfor (long i = 0; i < negative_index; i++) \n\t{\n\t\tresult[i] = negative[i];\n\t}\n\tfor (long i = negative_index; i < n; i++) \n\t{\n\t\tresult[i] = positive[i - negative_index];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0 .. positive_index)\n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_index)\n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[neg_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_index)\n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n    long[] result = new long[n];\n    long[] positive = new long[n];\n    long[] negative = new long[n];\n    long pos_index = 0;\n    long neg_index = 0;\n    foreach(i; 0..n)\n    {\n        if(arr[i] < 0)\n        {\n            negative[neg_index] = arr[i];\n            neg_index++;\n        }\n        else\n        {\n            positive[pos_index] = arr[i];\n            pos_index++;\n        }\n    }\n    long index = 0;\n    foreach(i; 0..neg_index)\n    {\n        result[index] = negative[i];\n        index++;\n    }\n    foreach(i; 0..pos_index)\n    {\n        result[index] = positive[i];\n        index++;\n    }\n    return result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] positive = new long[n];\n\tlong neg_index = 0;\n\tlong pos_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_index)\n\t{\n\t\tresult[neg_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] pos = new long[n];\n\tlong[] neg = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(long i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(long i; 0 .. neg_count)\n\t{\n\t\tres[i] = neg[i];\n\t}\n\t\n\tforeach(long i; 0 .. pos_count)\n\t{\n\t\tres[neg_count + i] = pos[i];\n\t}\n\t\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\tforeach(i; 0..n) \n\t{\n\t\tif(arr[i] < 0) \n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_index) \n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_index) \n\t{\n\t\tresult[neg_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\tforeach(long i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\tforeach(long i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\tforeach(long i; 0..pos_count)\n\t{\n\t\tresult[neg_count + i] = positive[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_count = 0;\n\tlong negative_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_count] = arr[i];\n\t\t\tnegative_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_count] = arr[i];\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_count)\n\t{\n\t\tresult[negative_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < negative_index; i++)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tfor (long i = 0; i < positive_index; i++)\n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_count = 0;\n\tlong negative_count = 0;\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_count] = arr[i];\n\t\t\tnegative_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_count] = arr[i];\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\tfor (long i = 0; i < negative_count; i++)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\tfor (long i = negative_count; i < n; i++)\n\t{\n\t\tresult[i] = positive[i - negative_count];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] >= 0)\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[neg_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n    long[] res = new long[n];\n    long i = 0;\n    long j = n - 1;\n    foreach (e; arr[0 .. n]) \n    {\n        if (e < 0) \n        {\n            res[i] = e;\n            i++;\n        } \n        else \n        {\n            res[j] = e;\n            j--;\n        }\n    }\n    return res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\tlong index = 0;\n\tfor (long i = 0; i < neg_index; i++) \n\t{\n\t\tresult[index] = negative[i];\n\t\tindex++;\n\t}\n\tfor (long i = 0; i < pos_index; i++) \n\t{\n\t\tresult[index] = positive[i];\n\t\tindex++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] positive = new long[n];\n\tlong negative_index = 0;\n\tlong positive_index = 0;\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < negative_index; i++)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tfor (long i = 0; i < positive_index; i++)\n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] neg = new long[n];\n\tlong[] pos = new long[n];\n\tlong neg_count = 0;\n\tlong pos_count = 0;\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < neg_count; i++)\n\t{\n\t\tres[i] = neg[i];\n\t}\n\t\n\tfor (long i = neg_count; i < neg_count + pos_count; i++)\n\t{\n\t\tres[i] = pos[i - neg_count];\n\t}\n\t\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. neg_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0 .. pos_index)\n\t{\n\t\tresult[neg_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\tlong[] temp = negative[0..negative_index] ~ positive[0..positive_index];\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tresult[i] = temp[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] pos = new long[n];\n\tlong[] neg = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < neg_count; i++)\n\t{\n\t\tres[i] = neg[i];\n\t}\n\t\n\tfor (long i = neg_count; i < n; i++)\n\t{\n\t\tres[i] = pos[i - neg_count];\n\t}\n\t\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive_arr = new long[n];\n\tlong[] negative_arr = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative_arr[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive_arr[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[i] = negative_arr[i];\n\t}\n\t\n\tforeach(i; 0..positive_index)\n\t{\n\t\tresult[negative_index + i] = positive_arr[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[neg_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] neg = new long[n];\n\tlong[] pos = new long[n];\n\tlong neg_count = 0;\n\tlong pos_count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = neg[i];\n\t}\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[neg_count + i] = pos[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < negative_index; i++)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tfor (long i = 0; i < positive_index; i++)\n\t{\n\t\tresult[i + negative_index] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_index)\n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[arr.length];\n\tlong j = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\tresult[j] = arr[i];\n\t\t\tj++;\n\t\t}\n\t}\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] >= 0) \n\t\t{\n\t\t\tresult[j] = arr[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[neg_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] pos_arr = new long[n];\n\tlong[] neg_arr = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg_arr[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos_arr[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = neg_arr[i];\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[neg_count + i] = pos_arr[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[arr.length];\n\tlong[] temp = new long[n];\n\tlong j = 0;\n\tlong k = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\ttemp[j] = arr[i];\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[k] = arr[i];\n\t\t\tk++;\n\t\t}\n\t}\n\tfor (long i = 0; i < j; i++) \n\t{\n\t\tresult[k] = temp[i];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] result_pos = new long[n];\n\tlong[] result_neg = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tresult_neg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult_pos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = result_neg[i];\n\t}\n\t\n\tforeach(i; 0..pos_count)\n\t{\n\t\tresult[neg_count + i] = result_pos[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong j = 0;\n\tlong k = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (arr[i] < 0) \n\t\t{\n\t\t\tresult[j] = arr[i];\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp[k] = arr[i];\n\t\t\tk++;\n\t\t}\n\t}\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[j] = temp[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_count = 0;\n\tlong negative_count = 0;\n\t\n\tfor (long i = 0; i < n; i++) {\n\t\tif (arr[i] < 0) {\n\t\t\tnegative[negative_count] = arr[i];\n\t\t\tnegative_count++;\n\t\t} else {\n\t\t\tpositive[positive_count] = arr[i];\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < negative_count; i++) {\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tfor (long i = 0; i < positive_count; i++) {\n\t\tresult[i + negative_count] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] res = new long[n];\n\tlong[] pos = new long[n];\n\tlong[] neg = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. neg_count)\n\t{\n\t\tres[i] = neg[i];\n\t}\n\t\n\tforeach(i; 0 .. pos_count)\n\t{\n\t\tres[i + neg_count] = pos[i];\n\t}\n\t\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] positive = new long[n];\n\tlong neg_index = 0;\n\tlong pos_index = 0;\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. neg_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0 .. pos_index)\n\t{\n\t\tresult[neg_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] res = new long[n];\n\tlong[] pos = new long[n];\n\tlong[] neg = new long[n];\n\tlong pos_counter = 0;\n\tlong neg_counter = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tneg[neg_counter] = arr[i];\n\t\t\tneg_counter++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos[pos_counter] = arr[i];\n\t\t\tpos_counter++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_counter)\n\t{\n\t\tres[i] = neg[i];\n\t}\n\t\n\tforeach(i; neg_counter..n)\n\t{\n\t\tres[i] = pos[i - neg_counter];\n\t}\n\t\n\treturn res;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong positive_count = 0;\n\tlong negative_count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_count] = arr[i];\n\t\t\tnegative_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_count] = arr[i];\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\tlong i = 0;\n\tforeach(j; 0..negative_count)\n\t{\n\t\tresult[i] = negative[j];\n\t\ti++;\n\t}\n\tforeach(j; 0..positive_count)\n\t{\n\t\tresult[i] = positive[j];\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] positive = new long[n];\n\tlong negative_index = 0;\n\tlong positive_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..negative_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..positive_index)\n\t{\n\t\tresult[negative_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong[] zero = new long[n];\n\tlong positive_index = 0;\n\tlong negative_index = 0;\n\tlong zero_index = 0;\n\t\n\tforeach(long i; 0..n)\n\t{\n\t\tif(arr[i] > 0)\n\t\t{\n\t\t\tpositive[positive_index] = arr[i];\n\t\t\tpositive_index++;\n\t\t}\n\t\telse if(arr[i] < 0)\n\t\t{\n\t\t\tnegative[negative_index] = arr[i];\n\t\t\tnegative_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tzero[zero_index] = arr[i];\n\t\t\tzero_index++;\n\t\t}\n\t}\n\t\n\tlong index = 0;\n\tforeach(long i; 0..negative_index)\n\t{\n\t\tresult[index] = negative[i];\n\t\tindex++;\n\t}\n\t\n\tforeach(long i; 0..zero_index)\n\t{\n\t\tresult[index] = zero[i];\n\t\tindex++;\n\t}\n\t\n\tforeach(long i; 0..positive_index)\n\t{\n\t\tresult[index] = positive[i];\n\t\tindex++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. neg_count)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0 .. pos_count)\n\t{\n\t\tresult[neg_count + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong pos_index = 0;\n\tlong neg_index = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[neg_index] = arr[i];\n\t\t\tneg_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[pos_index] = arr[i];\n\t\t\tpos_index++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_index)\n\t{\n\t\tresult[i] = negative[i];\n\t}\n\t\n\tforeach(i; 0..pos_index)\n\t{\n\t\tresult[neg_index + i] = positive[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] pos = new long[n];\n\tlong[] neg = new long[n];\n\tlong pos_count = 0;\n\tlong neg_count = 0;\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] >= 0)\n\t\t{\n\t\t\tpos[pos_count] = arr[i];\n\t\t\tpos_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tneg[neg_count] = arr[i];\n\t\t\tneg_count++;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..neg_count)\n\t{\n\t\tresult[i] = neg[i];\n\t}\n\t\n\tforeach(i; neg_count..n)\n\t{\n\t\tresult[i] = pos[i - neg_count];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new",
    "{\n\tlong[] result = new long[n];\n\tlong[] positive = new long[n];\n\tlong[] negative = new long[n];\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\twhile(i < n)\n\t{\n\t\tif(arr[i] < 0)\n\t\t{\n\t\t\tnegative[j] = arr[i];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpositive[k] = arr[i];\n\t\t\tk++;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\tj = 0;\n\twhile(i < n)\n\t{\n\t\tif(j < k)\n\t\t{\n\t\t\tresult[i] = negative[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = positive[k];\n\t\t\tk++;\n\t\t}\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[n];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[n];\n\tlong[] temp3 = new long[n];\n\tlong[] temp4 = new long[n];\n\tlong[] temp5 = new long[n];\n\tlong[] temp6 = new long[n];\n\tlong[] temp7 = new long[n];\n\tlong[] temp8 = new long[n];\n\tlong[] temp9 = new long[n];\n\tlong[] temp10 = new long[n];\n\tlong[] temp11 = new long[n];\n\tlong[] temp12 = new long[n];\n\tlong[] temp13 = new long[n];\n\tlong[] temp14 = new long[n];\n\tlong[] temp15 = new long[n];\n\tlong[] temp16 = new long[n];\n\tlong[] temp17 = new long[n];\n\tlong[] temp18 = new long[n];\n\tlong[] temp19 = new long[n];\n\tlong[] temp20 = new long[n];\n\tlong[] temp21 = new long[n];\n\tlong[] temp22 = new long[n];\n\tlong[] temp23 = new long[n];\n\tlong[] temp24 = new long[n];\n\tlong[] temp25 = new long[n];\n\tlong[] temp26 = new long[n];\n\tlong[] temp27 = new long[n];\n\tlong[] temp28 = new long[n];\n\tlong[] temp29 = new long[n];\n\tlong[] temp30 = new long[n];\n\tlong[] temp31 = new long[n];\n\tlong[] temp32 = new long[n];\n\tlong[] temp33 = new long[n];\n\tlong[] temp34 = new long[n];\n\tlong[] temp35 = new long[n];\n\tlong[] temp36 = new long[n];\n\tlong[] temp37 = new long[n];\n\tlong[] temp38 = new long[n];\n\tlong[] temp39 = new long[n];\n\tlong[] temp40 = new long[n];\n\tlong[] temp41 = new long[n];\n\tlong[] temp42 = new"
  ]
}
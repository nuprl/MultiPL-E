{
  "name": "mbpp_3_is_not_prime",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a python function to identify non-prime numbers.\n\t\n*/\nbool is_not_prime(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_3_is_not_prime.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = is_not_prime;\n\n    assert(candidate(2L) == false);\n    assert(candidate(10L) == true);\n    assert(candidate(35L) == true);\n    assert(candidate(37L) == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tif (n <= 1) return true;\n\tif (n == 2) return false;\n\tif (n % 2 == 0) return true;\n\t\n\tlong m = (long)sqrt(n);\n\t\n\tfor (long i = 3; i <= m; i += 2) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}",
    "{\n\tif (n <= 1) return true;\n\tif (n == 2) return false;\n\tif (n % 2 == 0) return true;\n\t\n\tfor (long i = 3; i <= sqrt(n); i += 2) \n\t{\n\t\tif (n % i == 0) return true;\n\t}\n\t\n\treturn false;\n}",
    "{\n\tif (n <= 1) return true;\n\tif (n == 2) return false;\n\tif (n % 2 == 0) return true;\n\t\n\tfor (long i = 3; i <= sqrt(n); i += 2) \n\t{\n\t\tif (n % i == 0) return true;\n\t}\n\t\n\treturn false;\n}",
    "{\n\tif (n <= 1)\n\t\treturn true;\n\telse if (n <= 3)\n\t\treturn false;\n\telse if (n % 2 == 0 || n % 3 == 0)\n\t\treturn true;\n\tlong i = 5;\n\twhile (i * i <= n) {\n\t\tif (n % i == 0 || n % (i + 2) == 0)\n\t\t\treturn true;\n\t\ti = i + 6;\n\t}\n\treturn false;\n}",
    "{\n\tif (n <= 1) \n\t{\n\t\treturn true;\n\t}\n\telse if (n <= 3) \n\t{\n\t\treturn false;\n\t}\n\telse if (n % 2 == 0 || n % 3 == 0) \n\t{\n\t\treturn true;\n\t}\n\tlong i = 5;\n\twhile (i * i <= n) \n\t{\n\t\tif (n % i == 0 || n % (i + 2) == 0) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\ti += 6;\n\t}\n\treturn false;\n}",
    "{\n\tif (n < 2) return true;\n\tfor (long i = 2; i < n; i++)\n\t{\n\t\tif (n % i == 0) return true;\n\t}\n\treturn false;\n}",
    "{\n\tif(n < 2) return true;\n\tif(n == 2) return false;\n\tif(n % 2 == 0) return true;\n\tlong m = cast(long)sqrt(n);\n\tfor(long i = 3; i <= m; i += 2)\n\t{\n\t\tif(n % i == 0) return true;\n\t}\n\treturn false;\n}",
    "{\n\tif (n <= 1)\n\t\treturn true;\n\telse if (n <= 3)\n\t\treturn false;\n\telse if (n % 2 == 0 || n % 3 == 0)\n\t\treturn true;\n\tlong i = 5;\n\twhile (i * i <= n) \n\t{\n\t\tif (n % i == 0 || n % (i + 2) == 0)\n\t\t\treturn true;\n\t\ti = i + 6;\n\t}\n\treturn false;\n}",
    "{\n\tif (n <= 1) return true;\n\tif (n == 2) return false;\n\tif (n % 2 == 0) return true;\n\t\n\tfor (long i = 3; i <= sqrt(n); i += 2)\n\t{\n\t\tif (n % i == 0)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}",
    "{\n\tif (n <= 1) return true;\n\tif (n == 2) return false;\n\tif (n % 2 == 0) return true;\n\t\n\tfor (long i = 3; i <= sqrt(n); i += 2) \n\t{\n\t\tif (n % i == 0) return true;\n\t}\n\t\n\treturn false;\n}",
    "{\n\tif (n < 2) return true;\n\tif (n == 2) return false;\n\tif (n % 2 == 0) return true;\n\t\n\tfor (long i = 3; i <= sqrt(n); i += 2) \n\t{\n\t\tif (n % i == 0) return true;\n\t}\n\t\n\treturn false;\n}",
    "{\n\tif (n <= 1) return true;\n\tif (n == 2) return false;\n\tif (n % 2 == 0) return true;\n\t\n\tfor (long i = 3; i <= sqrt(n); i += 2)\n\t{\n\t\tif (n % i == 0) return true;\n\t}\n\treturn false;\n}",
    "{\n\tif (n < 2) return true;\n\tif (n == 2) return false;\n\tif (n % 2 == 0) return true;\n\t\n\tlong m = cast(long)sqrt(n);\n\tfor (long i = 3; i <= m; i += 2)\n\t\tif (n % i == 0)\n\t\t\treturn true;\n\treturn false;\n}",
    "{\n\tif (n <= 1)\n\t\treturn true;\n\tif (n <= 3)\n\t\treturn false;\n\tif (n % 2 == 0 || n % 3 == 0)\n\t\treturn true;\n\tfor (long i = 5; i * i <= n; i += 6)\n\t\tif (n % i == 0 || n % (i + 2) == 0)\n\t\t\treturn true;\n\treturn false;\n}",
    "{\n\tif (n <= 1) return true;\n\tif (n <= 3) return false;\n\tif (n % 2 == 0 || n % 3 == 0) return true;\n\t\n\tfor (long i = 5; i * i <= n; i += 6)\n\t{\n\t\tif (n % i == 0 || n % (i + 2) == 0) return true;\n\t}\n\treturn false;\n}",
    "{\n\tif (n <= 1) return true;\n\tif (n == 2) return false;\n\tif (n % 2 == 0) return true;\n\t\n\tlong m = cast(long)sqrt(n);\n\t\n\tfor (long i = 3; i <= m; i += 2) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}",
    "{\n\tif (n <= 1) return true;\n\tif (n == 2) return false;\n\tif (n % 2 == 0) return true;\n\t\n\tfor (long i = 3; i <= sqrt(n); i += 2) \n\t{\n\t\tif (n % i == 0) return true;\n\t}\n\treturn false;\n}",
    "{\n\tif (n <= 1) return true;\n\tif (n == 2) return false;\n\tif (n % 2 == 0) return true;\n\t\n\tfor (long i = 3; i <= sqrt(n); i += 2) \n\t{\n\t\tif (n % i == 0) return true;\n\t}\n\treturn false;\n}",
    "{\n\tif (n <= 1)\n\t\treturn true;\n\telse if (n <= 3)\n\t\treturn false;\n\telse if (n % 2 == 0 || n % 3 == 0)\n\t\treturn true;\n\tlong i = 5;\n\twhile (i * i <= n)\n\t{\n\t\tif (n % i == 0 || n % (i + 2) == 0)\n\t\t\treturn true;\n\t\ti += 6;\n\t}\n\treturn false;\n}",
    "{\n\tif (n <= 1) \n\t{\n\t\treturn true;\n\t}\n\telse if (n <= 3) \n\t{\n\t\treturn false;\n\t}\n\telse if (n % 2 == 0 || n % 3 == 0) \n\t{\n\t\treturn true;\n\t}\n\tlong i = 5;\n\twhile (i * i <= n) \n\t{\n\t\tif (n % i == 0 || n % (i + 2) == 0) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\ti = i + 6;\n\t}\n\treturn false;\n}"
  ]
}
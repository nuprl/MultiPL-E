{
  "name": "mbpp_279_is_num_decagonal",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to find the nth decagonal number.\n\t\n*/\nlong is_num_decagonal(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = is_num_decagonal;\n\n    assert(candidate(3L) == 27L);\n    assert(candidate(7L) == 175L);\n    assert(candidate(10L) == 370L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong nth_decagonal = 0;\n\t\n\tif (n > 0) {\n\t\tnth_decagonal = n * (3 * n - 2);\n\t}\n\t\n\treturn nth_decagonal;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tlong t = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn t * (t + 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong nth_decagonal = 0;\n\tlong nth_decagonal_test = 0;\n\tlong nth_decagonal_test_2 = 0;\n\t\n\tnth_decagonal = n * (3 * n - 2);\n\tnth_decagonal_test = sqrt(nth_decagonal);\n\tnth_decagonal_test_2 = nth_decagonal_test * nth_decagonal_test;\n\t\n\tif (nth_decagonal_test_2 == nth_decagonal)\n\t{\n\t\treturn 1;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tlong nth_decagonal = 0;\n\t\n\tif (n <= 0)\n\t\treturn 0;\n\t\n\tnth_decagonal = n * (3 * n - 2);\n\t\n\treturn nth_decagonal;\n}",
    "{\n\tlong num = n;\n\tlong x = (sqrt(1 + 4 * 2 * num) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == num;\n}",
    "{\n\t//n = (3*n*n - n)/2;\n\t//return n;\n\treturn (3*n*n - n)/2;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong num = n;\n\tlong num_decagonal = 0;\n\tlong num_decagonal_check = 0;\n\tlong num_decagonal_check_2 = 0;\n\tlong num_decagonal_check_3 = 0;\n\tlong num_decagonal_check_4 = 0;\n\tlong num_decagonal_check_5 = 0;\n\tlong num_decagonal_check_6 = 0;\n\tlong num_decagonal_check_7 = 0;\n\tlong num_decagonal_check_8 = 0;\n\tlong num_decagonal_check_9 = 0;\n\tlong num_decagonal_check_10 = 0;\n\tlong num_decagonal_check_11 = 0;\n\tlong num_decagonal_check_12 = 0;\n\tlong num_decagonal_check_13 = 0;\n\tlong num_decagonal_check_14 = 0;\n\tlong num_decagonal_check_15 = 0;\n\tlong num_decagonal_check_16 = 0;\n\tlong num_decagonal_check_17 = 0;\n\tlong num_decagonal_check_18 = 0;\n\tlong num_decagonal_check_19 = 0;\n\tlong num_decagonal_check_20 = 0;\n\tlong num_decagonal_check_21 = 0;\n\tlong num_decagonal_check_22 = 0;\n\tlong num_decagonal_check_23 = 0;\n\tlong num_decagonal_check_24 = 0;\n\tlong num_decagonal_check_25 = 0;\n\tlong num_decagonal_check_26 = 0;\n\tlong num_decagonal_check_27 = 0;\n\tlong num_decagonal_check_28 = 0;\n\tlong num_decagonal_check_29 = 0;\n\tlong num_decagonal_check_30 = 0;\n\tlong num_decagonal_check_31 = 0;\n\tlong num_decagonal_check_32 = 0;\n\tlong num_decagonal_check_33 = 0;\n\tlong num_decagonal_check_34 = 0;\n\tlong num_decagonal_check_35 = 0;\n\tlong num_",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\t// n = (3*n^2 - n)/2\n\t// n^2 - 3n + 2n = 0\n\t// n(n - 3) + 2(n - 3) = 0\n\t// (n + 2)(n - 3) = 0\n\t// n = -2 or n = 3\n\t// n = 3\n\treturn (n == 3);\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}"
  ]
}
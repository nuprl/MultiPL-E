{
  "name": "mbpp_279_is_num_decagonal",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to find the nth decagonal number.\n\t\n*/\nlong is_num_decagonal(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = is_num_decagonal;\n\n    assert(candidate(3L) == 27L);\n    assert(candidate(7L) == 175L);\n    assert(candidate(10L) == 370L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong nth_decagonal = 0;\n\t\n\tif (n > 0) {\n\t\tnth_decagonal = n * (3 * n - 2);\n\t}\n\t\n\treturn nth_decagonal;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tlong t = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn t * (t + 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong nth_decagonal = 0;\n\tlong nth_decagonal_test = 0;\n\tlong nth_decagonal_test_2 = 0;\n\t\n\tnth_decagonal = n * (3 * n - 2);\n\tnth_decagonal_test = sqrt(nth_decagonal);\n\tnth_decagonal_test_2 = nth_decagonal_test * nth_decagonal_test;\n\t\n\tif (nth_decagonal_test_2 == nth_decagonal)\n\t{\n\t\treturn 1;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tlong nth_decagonal = 0;\n\t\n\tif (n <= 0)\n\t\treturn 0;\n\t\n\tnth_decagonal = n * (3 * n - 2);\n\t\n\treturn nth_decagonal;\n}",
    "{\n\tlong num = n;\n\tlong x = (sqrt(1 + 4 * 2 * num) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == num;\n}",
    "{\n\t//n = (3*n*n - n)/2;\n\t//return n;\n\treturn (3*n*n - n)/2;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong num = n;\n\tlong num_decagonal = 0;\n\tlong num_decagonal_check = 0;\n\tlong num_decagonal_check_2 = 0;\n\tlong num_decagonal_check_3 = 0;\n\tlong num_decagonal_check_4 = 0;\n\tlong num_decagonal_check_5 = 0;\n\tlong num_decagonal_check_6 = 0;\n\tlong num_decagonal_check_7 = 0;\n\tlong num_decagonal_check_8 = 0;\n\tlong num_decagonal_check_9 = 0;\n\tlong num_decagonal_check_10 = 0;\n\tlong num_decagonal_check_11 = 0;\n\tlong num_decagonal_check_12 = 0;\n\tlong num_decagonal_check_13 = 0;\n\tlong num_decagonal_check_14 = 0;\n\tlong num_decagonal_check_15 = 0;\n\tlong num_decagonal_check_16 = 0;\n\tlong num_decagonal_check_17 = 0;\n\tlong num_decagonal_check_18 = 0;\n\tlong num_decagonal_check_19 = 0;\n\tlong num_decagonal_check_20 = 0;\n\tlong num_decagonal_check_21 = 0;\n\tlong num_decagonal_check_22 = 0;\n\tlong num_decagonal_check_23 = 0;\n\tlong num_decagonal_check_24 = 0;\n\tlong num_decagonal_check_25 = 0;\n\tlong num_decagonal_check_26 = 0;\n\tlong num_decagonal_check_27 = 0;\n\tlong num_decagonal_check_28 = 0;\n\tlong num_decagonal_check_29 = 0;\n\tlong num_decagonal_check_30 = 0;\n\tlong num_decagonal_check_31 = 0;\n\tlong num_decagonal_check_32 = 0;\n\tlong num_decagonal_check_33 = 0;\n\tlong num_decagonal_check_34 = 0;\n\tlong num_decagonal_check_35 = 0;\n\tlong num_",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\t// n = (3*n^2 - n)/2\n\t// n^2 - 3n + 2n = 0\n\t// n(n - 3) + 2(n - 3) = 0\n\t// (n + 2)(n - 3) = 0\n\t// n = -2 or n = 3\n\t// n = 3\n\treturn (n == 3);\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong nth_decagonal = 0;\n\tlong nth_decagonal_num = 0;\n\tlong nth_decagonal_num_sqr = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num_div_2 = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num_div_2_plus_nth_decagonal_num = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num_div_2_plus_nth_decagonal_num_div_2 = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num_div_2_plus_nth_decagonal_num_div_2_plus_nth_decagonal_num = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num_div_2_plus_nth_decagonal_num_div_2_plus_nth_decagonal_num_div_2 = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num_div_2_plus_nth_decagonal_num_div_2_plus_nth_decagonal_num_div_2_plus_nth_decagonal_num = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num_div_2_plus_nth_decagonal_num_div_2_plus_nth_decagonal_num_div_2_plus_nth_decagonal_num_div_2 = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num_div_2_plus_nth_decagonal_num_div_2_plus_nth_decagonal_num_div_2_plus_nth_decagonal_num_div_2_plus_nth_decagonal_",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\treturn (sqrt(1 + 4 * 2 * n) - 1) % 4 == 0;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\treturn (sqrt(1 + 4 * 2 * n) - 1) % 4 == 0;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn (x == (long)x && x % 2 != 0);\n}",
    "{\n\treturn n == floor(sqrt(2*n + 0.25) + 0.5);\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1+4*2*n) - 1) / 2;\n\treturn a * (3*a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble root = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn root == (long)root;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4*2*n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = 3*n*n - n;\n\tlong b = 2*n;\n\t\n\tif(a % b == 0)\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tauto a = sqrt(1 + 4 * 2 * n);\n\treturn a == (long)a && (long)a % 4 == 1;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x && x % 2 != 0;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a == (long)a;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong x = (sqrt(1 + 4*2*n) - 1) / 2;\n\treturn x * (3*x - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tdouble test = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn test == (long)test;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\treturn (sqrt(1 + 4 * 2 * n) - 1) % 4 == 0;\n}",
    "{\n\tlong nth_decagonal_num = 0;\n\tlong nth_decagonal_num_sqr = 0;\n\tlong nth_decagonal_num_sqr_plus_1 = 0;\n\tlong nth_decagonal_num_sqr_minus_1 = 0;\n\tlong nth_decagonal_num_sqr_plus_1_div_10 = 0;\n\tlong nth_decagonal_num_sqr_minus_1_div_10 = 0;\n\tlong nth_decagonal_num_sqr_plus_1_mod_10 = 0;\n\tlong nth_decagonal_num_sqr_minus_1_mod_10 = 0;\n\t\n\tnth_decagonal_num = n * (3 * n - 2);\n\tnth_decagonal_num_sqr = nth_decagonal_num * nth_decagonal_num;\n\tnth_decagonal_num_sqr_plus_1 = nth_decagonal_num_sqr + 1;\n\tnth_decagonal_num_sqr_minus_1 = nth_decagonal_num_sqr - 1;\n\tnth_decagonal_num_sqr_plus_1_div_10 = nth_decagonal_num_sqr_plus_1 / 10;\n\tnth_decagonal_num_sqr_minus_1_div_10 = nth_decagonal_num_sqr_minus_1 / 10;\n\tnth_decagonal_num_sqr_plus_1_mod_10 = nth_decagonal_num_sqr_plus_1 % 10;\n\tnth_decagonal_num_sqr_minus_1_mod_10 = nth_decagonal_num_sqr_minus_1 % 10;\n\t\n\tif (nth_decagonal_num_sqr_plus_1_div_10 == nth_decagonal_num_sqr_minus_1_div_10) {\n\t\tif (nth_decagonal_num_sqr_plus_1_mod_10 == 0) {\n\t\t\tif (nth_decagonal",
    "{\n\tlong a = sqrt(2*n);\n\treturn (a*(a+1))/2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong nth_decagonal = 0;\n\tlong nth_decagonal_sqr = 0;\n\tlong nth_decagonal_sqr_plus_1 = 0;\n\tlong nth_decagonal_sqr_minus_1 = 0;\n\t\n\tnth_decagonal_sqr = n * n;\n\tnth_decagonal_sqr_plus_1 = nth_decagonal_sqr + 1;\n\tnth_decagonal_sqr_minus_1 = nth_decagonal_sqr - 1;\n\t\n\tif (nth_decagonal_sqr_plus_1 % 3 == 0)\n\t{\n\t\tnth_decagonal = nth_decagonal_sqr_plus_1 / 3;\n\t}\n\telse if (nth_decagonal_sqr_minus_1 % 3 == 0)\n\t{\n\t\tnth_decagonal = nth_decagonal_sqr_minus_1 / 3;\n\t}\n\telse\n\t{\n\t\tnth_decagonal = 0;\n\t}\n\t\n\treturn nth_decagonal;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x && x > 0;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tdouble a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a == (long)a;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong d = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn d * (3 * d - 1) / 2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tlong d = n * (3 * n - 1) / 2;\n\tlong r = sqrt(1 + 4 * 3 * 2 * d);\n\treturn r * r == 1 + 4 * 3 * 2 * d && (r - 1) % 6 == 0;\n}",
    "{\n\tlong k = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn k * (3 * k - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1+4*2*n) - 1)/2;\n\treturn a*(3*a - 1)/2 == n;\n}",
    "{\n\tlong d = sqrt(2 * n);\n\treturn d * (d + 1) == 2 * n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\treturn n == (long) (sqrt(1 + 4 * 2 * n) - 1) / 2;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn (x == (long)x);\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n    long n_sqrt = (long)sqrt(n);\n    return n_sqrt * n_sqrt == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong num = n;\n\tlong num_decagonal = 0;\n\tlong num_decagonal_prev = 0;\n\tlong num_decagonal_prev_prev = 0;\n\tlong i = 0;\n\t\n\tfor (i = 0; i < num; i++) {\n\t\tnum_decagonal_prev_prev = num_decagonal_prev;\n\t\tnum_decagonal_prev = num_decagonal;\n\t\tnum_decagonal = i * (3 * i - 1) / 2;\n\t\tif (num_decagonal == num) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (num_decagonal > num) {\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x && x % 2 != 0;\n}",
    "{\n\tfloat x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong d = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\tif (d * (3 * d - 1) / 2 == n)\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a,b,c;\n\ta = (sqrt(1 + 4*2*n) - 1)/2;\n\tb = (sqrt(1 + 4*2*n) + 1)/2;\n\tc = a*a + a;\n\tif(c == n)\n\t\treturn 1;\n\tc = b*b + b;\n\tif(c == n)\n\t\treturn 1;\n\treturn 0;\n}",
    "{\n\tdouble x = (sqrt(1+4*2*n)+1)/2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (3.0 + sqrt(9.0 + 40.0 * (n - 1))) / 10.0;\n\treturn (x == (long)x);\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = sqrt(1 + 4 * 2 * n);\n\treturn (x == floor(x) && x % 4 == 1);\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong nth_decagonal = n * (3 * n - 2);\n\tlong nth_decagonal_sqrt = sqrt(nth_decagonal);\n\tif (nth_decagonal_sqrt * nth_decagonal_sqrt == nth_decagonal) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong n2 = n*2;\n\tlong n3 = n*3;\n\tlong n4 = n*4;\n\tlong n5 = n*5;\n\tlong n6 = n*6;\n\tlong n7 = n*7;\n\tlong n8 = n*8;\n\tlong n9 = n*9;\n\tlong n10 = n*10;\n\t\n\tlong n2_sqrt = sqrt(n2);\n\tlong n3_sqrt = sqrt(n3);\n\tlong n4_sqrt = sqrt(n4);\n\tlong n5_sqrt = sqrt(n5);\n\tlong n6_sqrt = sqrt(n6);\n\tlong n7_sqrt = sqrt(n7);\n\tlong n8_sqrt = sqrt(n8);\n\tlong n9_sqrt = sqrt(n9);\n\tlong n10_sqrt = sqrt(n10);\n\t\n\tif (n2_sqrt*n2_sqrt == n2)\n\t{\n\t\tif (n3_sqrt*n3_sqrt == n3)\n\t\t{\n\t\t\tif (n4_sqrt*n4_sqrt == n4)\n\t\t\t{\n\t\t\t\tif (n5_sqrt*n5_sqrt == n5)\n\t\t\t\t{\n\t\t\t\t\tif (n6_sqrt*n6_sqrt == n6)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (n7_sqrt*n7_sqrt == n7)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (n8_sqrt*n8_sqrt == n8)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (n9_sqrt*n9_sqrt == n9)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (n10_sqrt*n10_sqrt == n10)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn (x == (long)x && x % 2 == 0);\n}",
    "{\n\tlong num = n;\n\tlong nth = 0;\n\tlong i = 1;\n\twhile (nth < num) \n\t{\n\t\tnth = i * (3 * i - 1) / 2;\n\t\ti++;\n\t}\n\tif (nth == num) \n\t{\n\t\treturn 1;\n\t}\n\treturn 0;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong x = sqrt(1 + 4 * 2 * n);\n\treturn x * x == 1 + 4 * 2 * n && (x - 1) % 4 == 0;\n}",
    "{\n\tlong m = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn m * (3 * m - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong m = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn m * (3 * m - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\tdouble root = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn root == (long)root;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong nth_decagonal = 0;\n\t\n\tnth_decagonal = (n * (3 * n - 2)) / 2;\n\t\n\treturn nth_decagonal;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tauto num = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn num == (long)num;\n}",
    "{\n\tlong d = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn d * (3 * d - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x && x % 2 == 0;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong i = 1;\n\twhile (true) \n\t{\n\t\tif (i * (3 * i - 1) / 2 == n) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\tif (i * (3 * i - 1) / 2 > n) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ti++;\n\t}\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong num = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn num * (3 * num - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong nth_decagonal = n * (3 * n - 2);\n\tlong nth_decagonal_sqrt = sqrt(nth_decagonal);\n\tif (nth_decagonal_sqrt * nth_decagonal_sqrt == nth_decagonal)\n\t\treturn nth_decagonal;\n\treturn 0;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\t// n = (3x^2 - x) / 2\n\t// x = (sqrt(24n + 1) + 1) / 6\n\treturn (modf((sqrt(24 * n + 1) + 1) / 6, 0) == 0);\n}",
    "{\n\tlong nth_decagonal = 0;\n\t\n\tnth_decagonal = (n * (3 * n - 2)) / 2;\n\t\n\treturn nth_decagonal;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong d = sqrt(n);\n\tif (d * d == n) \n\t{\n\t\tlong x = (sqrt(1 + 4 * n) - 1) / 2;\n\t\tif (x * (3 * x - 1) / 2 == n) \n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x && x % 1 == 0;\n}",
    "{\n\tlong nth_decagonal = 0;\n\tlong nth_decagonal_test = 0;\n\t\n\tfor (long i = 1; i < n; i++) {\n\t\tnth_decagonal = i * (3 * i - 1) / 2;\n\t\tnth_decagonal_test = nth_decagonal + n;\n\t\t\n\t\tif (nth_decagonal_test == n) {\n\t\t\treturn nth_decagonal;\n\t\t}\n\t}\n\t\n\treturn 0;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn (x == (long)x);\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn (x == (long)x && x % 2 != 0);\n}",
    "{\n\tlong a = 3 * n * n - n;\n\tif (a % 2 == 0)\n\t{\n\t\treturn a / 2;\n\t}\n\treturn 0;\n}",
    "{\n\tdouble x = sqrt(1 + 4 * 2 * n);\n\treturn (x == (long)x && (long)x % 4 == 3);\n}",
    "{\n\tlong nth_decagonal_number = 0;\n\tlong nth_decagonal_number_test = 0;\n\tlong nth_decagonal_number_test_sqrt = 0;\n\tlong nth_decagonal_number_test_sqrt_test = 0;\n\t\n\tnth_decagonal_number = n * (3 * n - 2);\n\tnth_decagonal_number_test = nth_decagonal_number + 1;\n\tnth_decagonal_number_test_sqrt = sqrt(nth_decagonal_number_test);\n\tnth_decagonal_number_test_sqrt_test = nth_decagonal_number_test_sqrt * nth_decagonal_number_test_sqrt;\n\t\n\tif (nth_decagonal_number_test_sqrt_test == nth_decagonal_number_test)\n\t{\n\t\treturn nth_decagonal_number;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n^2 - n) / 2\n\t// 2 * n = 3 * n^2 - n\n\t// 2 * n + n = 3 * n^2\n\t// n^2 + 2 * n + 1 = 3 * n^2\n\t// n^2 - 3 * n^2 + 2 * n + 1 = 0\n\t// n^2 - n^2 + 2 * n + 1 = 0\n\t// n^2 + 2 * n + 1 = 0\n\t// n = (-2 +/- sqrt(4 - 4 * 1)) / 2\n\t// n = (-2 +/- sqrt(4 - 4)) / 2\n\t// n = (-2 +/- sqrt(0)) / 2\n\t// n = (-2 +/- 0) / 2\n\t// n = -2 / 2\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1\n\t// n = -1",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tlong nth_decagonal_number = n * (3 * n - 2);\n\tlong nth_decagonal_number_sqrt = sqrt(nth_decagonal_number);\n\t\n\treturn (nth_decagonal_number_sqrt * nth_decagonal_number_sqrt == nth_decagonal_number);\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tlong nth_decagonal = 0;\n\t\n\tif (n > 0) {\n\t\tnth_decagonal = n * (3 * n - 2);\n\t}\n\t\n\treturn nth_decagonal;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = 3 * n * n - n;\n\tlong b = 2 * n;\n\treturn (a % b == 0);\n}",
    "{\n\tlong d = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn d * (3 * d - 1) / 2 == n;\n}",
    "{\n\t// n = (3*n^2 - n)/2\n\t// n = (3*n^2 - n - 2*k)/2\n\t// n^2 - n - 2*k = 0\n\t// n = (1 + sqrt(1 + 8*k))/3\n\t// n = (1 - sqrt(1 + 8*k))/3\n\t// n = (1 + sqrt(1 + 8*k))/3\n\t// n = (1 - sqrt(1 + 8*k))/3\n\t// n = (1 + sqrt(1 + 8*k))/3\n\t// n = (1 - sqrt(1 + 8*k))/3\n\t// n = (1 + sqrt(1 + 8*k))/3\n\t// n = (1 - sqrt(1 + 8*k))/3\n\t// n = (1 + sqrt(1 + 8*k))/3\n\t// n = (1 - sqrt(1 + 8*k))/3\n\t// n = (1 + sqrt(1 + 8*k))/3\n\t// n = (1 - sqrt(1 + 8*k))/3\n\t// n = (1 + sqrt(1 + 8*k))/3\n\t// n = (1 - sqrt(1 + 8*k))/3\n\t// n = (1 + sqrt(1 + 8*k))/3\n\t// n = (1 - sqrt(1 + 8*k))/3\n\t// n = (1 + sqrt(1 + 8*k))/3\n\t// n = (1 - sqrt(1 + 8*k))/3\n\t// n = (1 + sqrt(1 + 8*k))/3\n\t// n = (1 - sqrt(1 + 8*k))/3\n\t// n = (1 + sqrt(1 + 8*k))/3\n\t// n = (1 - sqrt(1 + 8*k))/3\n\t// n = (1 + sqrt(1 + 8*k))/3\n\t// n = (1 - sqrt(1 + 8*k))/3\n\t// n = (",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a == (long)a;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x && x % 3 == 1;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong d = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn d * (3 * d - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn (x == (long)x && x % 2 != 0);\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}"
  ]
}
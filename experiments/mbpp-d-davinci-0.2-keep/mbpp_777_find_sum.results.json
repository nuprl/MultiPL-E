{
  "name": "mbpp_777_find_sum",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_777_find_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpyf3zlke1.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf3zlke1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long a; arr)\n\t{\n\t\tbool found = false;\n\t\tforeach(long b; arr)\n\t\t{\n\t\t\tif(a == b && a != b)\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t\tsum += a;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpptwx6yr9.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x4281f5]\n??:? void tmpptwx6yr9.__unittest_L26_C1() [0x427e51]\n??:? void tmpptwx6yr9.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c203]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b096]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430229]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b06d]\n??:? runModuleUnitTests [0x42bfd9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428644]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long a; arr)\n\t{\n\t\tif(a != 0)\n\t\t{\n\t\t\tsum += a;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_9nzs3kn.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x42819d]\n??:? void tmp_9nzs3kn.__unittest_L19_C1() [0x427df5]\n??:? void tmp_9nzs3kn.__modtest() [0x427f1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b03e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301d1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430680]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43015d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b015]\n??:? runModuleUnitTests [0x42bf81]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tif (arr[i] != -1) \n\t\t{\n\t\t\tsum += arr[i];\n\t\t\tfor (int j = i + 1; j < arr.length; j++) \n\t\t\t{\n\t\t\t\tif (arr[i] == arr[j]) \n\t\t\t\t{\n\t\t\t\t\tarr[j] = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwhxze9o2.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwhxze9o2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (arr[i] != 0)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t\tfor (int j = i + 1; j < arr.length; j++)\n\t\t\t{\n\t\t\t\tif (arr[i] == arr[j])\n\t\t\t\t{\n\t\t\t\t\tarr[j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpbn2a7n4x.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn2a7n4x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long a; arr)\n\t{\n\t\tif(arr.count(a) == 1)\n\t\t\tsum += a;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp1awzbvzr.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1awzbvzr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(elem; arr)\n\t{\n\t\tif(elem == 0)\n\t\t\tcontinue;\n\t\tif(arr[elem] == 0)\n\t\t{\n\t\t\tsum += elem;\n\t\t\tarr[elem] = 1;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb2jnxpcs.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x4281fd]\n??:? void tmpb2jnxpcs.__unittest_L22_C1() [0x427e55]\n??:? void tmpb2jnxpcs.__modtest() [0x427f7c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c27f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b112]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302a5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430754]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430231]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e9]\n??:? runModuleUnitTests [0x42c055]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwhxze9o2.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwhxze9o2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpbn2a7n4x.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn2a7n4x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpbn2a7n4x.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn2a7n4x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwvvtl00z.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x42818d]\n??:? void tmpwvvtl00z.__unittest_L16_C1() [0x427de9]\n??:? void tmpwvvtl00z.__modtest() [0x427f10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c19b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b02e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430670]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43014d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b005]\n??:? runModuleUnitTests [0x42bf71]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(elem; arr)\n\t{\n\t\tbool found = false;\n\t\tforeach(elem2; arr)\n\t\t{\n\t\t\tif(elem == elem2 && elem != arr[0])\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tsum += elem;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp90te75kj.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp90te75kj.__unittest_L28_C1() [0x427e75]\n??:? void tmp90te75kj.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c29f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b132]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430774]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430251]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b109]\n??:? runModuleUnitTests [0x42c075]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(item; arr)\n\t{\n\t\tif(count(arr, item) == 1)\n\t\t{\n\t\t\tsum += item;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmpwvnc1up_.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwvnc1up_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpyf3zlke1.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf3zlke1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(elem; arr)\n\t{\n\t\tif(count(arr, elem) == 1)\n\t\t\tsum += elem;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmp8ffnkcbh.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8ffnkcbh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpbn2a7n4x.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn2a7n4x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmpgt9ym1af.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgt9ym1af.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwhxze9o2.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwhxze9o2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tint count = 0;\n\t\tforeach(long j; arr)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3el6vrlk.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x4281ed]\n??:? void tmp3el6vrlk.__unittest_L27_C1() [0x427e49]\n??:? void tmp3el6vrlk.__modtest() [0x427f70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1fb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b08e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430221]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301ad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b065]\n??:? runModuleUnitTests [0x42bfd1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42863c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] temp = new long[arr.length];\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (temp[arr[i]] == 0)\n\t\t{\n\t\t\ttemp[arr[i]] = 1;\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp8egfk8sk.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282fe]\n??:? long tmp8egfk8sk.find_sum(long[]) [0x427d85]\n??:? void tmp8egfk8sk.__unittest_L21_C1() [0x427f1a]\n??:? void tmp8egfk8sk.__modtest() [0x427fd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c32b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430449]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4308f8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4303d5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b195]\n??:? runModuleUnitTests [0x42c101]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] in temp)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum += arr[i];\n\t\t\ttemp ~= arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmp3bw92ak7.d(13): Error: incompatible types for `(arr[i]) in (temp)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3bw92ak7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tbool found = false;\n\t\tforeach(j; arr)\n\t\t{\n\t\t\tif(i == j && i != arr[$-1])\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdz_tm5bi.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x428225]\n??:? void tmpdz_tm5bi.__unittest_L26_C1() [0x427e7d]\n??:? void tmpdz_tm5bi.__modtest() [0x427fa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b13a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43077c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430259]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b111]\n??:? runModuleUnitTests [0x42c07d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tbool found = false;\n\t\tforeach(long j; arr)\n\t\t{\n\t\t\tif(i == j && i != j)\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpll5o3omv.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x4281f5]\n??:? void tmpll5o3omv.__unittest_L26_C1() [0x427e51]\n??:? void tmpll5o3omv.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c203]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b096]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430229]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b06d]\n??:? runModuleUnitTests [0x42bfd9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428644]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] arr_copy = arr.dup;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr_copy.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmp7u2j2sx9.d(13): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7u2j2sx9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tbool flag = true;\n\t\tfor (int j = 0; j < arr.length; j++) \n\t\t{\n\t\t\tif (i != j) \n\t\t\t{\n\t\t\t\tif (arr[i] == arr[j]) \n\t\t\t\t{\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (flag) \n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvgtj5rs2.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmpvgtj5rs2.__unittest_L31_C1() [0x427e6d]\n??:? void tmpvgtj5rs2.__modtest() [0x427f94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c297]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b12a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302bd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43076c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430249]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b101]\n??:? runModuleUnitTests [0x42c06d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(a;arr)\n\t{\n\t\tsum += a;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpez6lseh1.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x42818d]\n??:? void tmpez6lseh1.__unittest_L16_C1() [0x427de9]\n??:? void tmpez6lseh1.__modtest() [0x427f10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c19b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b02e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430670]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43014d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b005]\n??:? runModuleUnitTests [0x42bf71]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long a; arr)\n\t{\n\t\tif(arr.count(a) == 1)\n\t\t\tsum += a;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp1awzbvzr.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1awzbvzr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tbool found = false;\n\t\tforeach(j; arr)\n\t\t{\n\t\t\tif(i == j && i != arr[$-1])\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpigmsixzk.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428225]\n??:? void tmpigmsixzk.__unittest_L28_C1() [0x427e7d]\n??:? void tmpigmsixzk.__modtest() [0x427fa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b13a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43077c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430259]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b111]\n??:? runModuleUnitTests [0x42c07d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] unique = new long[arr.length];\n\tlong[] count = new long[arr.length];\n\tlong unique_count = 0;\n\t\n\tfor (long i = 0; i < arr.length; i++)\n\t{\n\t\tlong j;\n\t\tfor (j = 0; j < unique_count; j++)\n\t\t{\n\t\t\tif (arr[i] == unique[j])\n\t\t\t{\n\t\t\t\tcount[j]++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (j == unique_count)\n\t\t{\n\t\t\tunique[unique_count] = arr[i];\n\t\t\tcount[unique_count] = 1;\n\t\t\tunique_count++;\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < unique_count; i++)\n\t{\n\t\tif (count[i] == 1)\n\t\t{\n\t\t\tsum += unique[i];\n\t\t}\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp35320apr.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x42834d]\n??:? void tmp35320apr.__unittest_L43_C1() [0x427fa5]\n??:? void tmp35320apr.__modtest() [0x4280cc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c42b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b2be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430549]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4309f8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4304d5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b295]\n??:? runModuleUnitTests [0x42c201]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428810]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpbn2a7n4x.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn2a7n4x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpyf3zlke1.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf3zlke1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n    long sum = 0;\n    foreach(long i; arr)\n    {\n        if(arr.count(i) == 1)\n        {\n            sum += i;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmpcjs0ia2f.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcjs0ia2f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{ \n\tlong sum = 0; \n\tfor (int i = 0; i < arr.length; i++) \n\t{ \n\t\tint j; \n\t\tfor (j = 0; j < i; j++) \n\t\t\tif (arr[i] == arr[j]) \n\t\t\t\tbreak; \n\t\tif (i == j) \n\t\t\tsum += arr[i]; \n\t} \n\treturn sum; \n} \nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(!arr.count(i))\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmpfibvullt.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfibvullt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwhxze9o2.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwhxze9o2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tbool is_repeated = false;\n\t\tforeach(long j; arr)\n\t\t{\n\t\t\tif(i == j && i != j)\n\t\t\t{\n\t\t\t\tis_repeated = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!is_repeated)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt30382yz.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x4281f5]\n??:? void tmpt30382yz.__unittest_L28_C1() [0x427e51]\n??:? void tmpt30382yz.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c203]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b096]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430229]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b06d]\n??:? runModuleUnitTests [0x42bfd9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428644]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(num; arr)\n\t{\n\t\tif(arr.count(num) == 1)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmps14n853d.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps14n853d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tif (arr[i] != 0) \n\t\t{\n\t\t\tsum += arr[i];\n\t\t\tfor (int j = i + 1; j < arr.length; j++) \n\t\t\t{\n\t\t\t\tif (arr[i] == arr[j]) \n\t\t\t\t{\n\t\t\t\t\tarr[j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpbn2a7n4x.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn2a7n4x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmp35viiys6.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp35viiys6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tif(arr[i] != 0)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t\tfor(int j = i + 1; j < arr.length; j++)\n\t\t\t{\n\t\t\t\tif(arr[i] == arr[j])\n\t\t\t\t{\n\t\t\t\t\tarr[j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpyf3zlke1.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf3zlke1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpyf3zlke1.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf3zlke1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tbool flag = true;\n\t\tforeach(j; arr)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxc4p949d.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x4281f5]\n??:? void tmpxc4p949d.__unittest_L32_C1() [0x427e51]\n??:? void tmpxc4p949d.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c203]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b096]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430229]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b06d]\n??:? runModuleUnitTests [0x42bfd9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428644]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmpgt9ym1af.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgt9ym1af.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tbool flag = true;\n\t\tforeach(long j; arr)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpphqqpw9w.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x4281ed]\n??:? void tmpphqqpw9w.__unittest_L26_C1() [0x427e49]\n??:? void tmpphqqpw9w.__modtest() [0x427f70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1fb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b08e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430221]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301ad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b065]\n??:? runModuleUnitTests [0x42bfd1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42863c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(elem; arr)\n\t{\n\t\tif(count(arr, elem) == 1)\n\t\t{\n\t\t\tsum += elem;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmp0oep2wd6.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0oep2wd6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(a; arr)\n\t{\n\t\tif(a != 0)\n\t\t{\n\t\t\tsum += a;\n\t\t\ta = 0;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoeq_eng4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281a5]\n??:? void tmpoeq_eng4.__unittest_L20_C1() [0x427dfd]\n??:? void tmpoeq_eng4.__modtest() [0x427f24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b046]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301d9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430688]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430165]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b01d]\n??:? runModuleUnitTests [0x42bf89]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tbool flag = true;\n\t\tforeach(j; arr)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxc4p949d.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x4281f5]\n??:? void tmpxc4p949d.__unittest_L32_C1() [0x427e51]\n??:? void tmpxc4p949d.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c203]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b096]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430229]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b06d]\n??:? runModuleUnitTests [0x42bfd9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428644]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tbool found = false;\n\t\tfor(int j = 0; j < arr.length; j++)\n\t\t{\n\t\t\tif(i != j && arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t\tsum += arr[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2ex5yyhe.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp2ex5yyhe.__unittest_L26_C1() [0x427e6d]\n??:? void tmp2ex5yyhe.__modtest() [0x427f94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c297]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b12a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302bd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43076c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430249]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b101]\n??:? runModuleUnitTests [0x42c06d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] unique = new long[arr.length];\n\tint unique_count = 0;\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tbool is_unique = true;\n\t\tfor (int j = 0; j < unique_count; j++)\n\t\t{\n\t\t\tif (arr[i] == unique[j])\n\t\t\t{\n\t\t\t\tis_unique = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (is_unique)\n\t\t{\n\t\t\tunique[unique_count] = arr[i];\n\t\t\tunique_count++;\n\t\t}\n\t}\n\tfor (int i = 0; i < unique_count; i++)\n\t{\n\t\tsum += unique[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tlong count = 0;\n\t\tfor(int j = 0; j < arr.length; j++)\n\t\t{\n\t\t\tif(arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count == 1)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsmtahiij.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x42820d]\n??:? void tmpsmtahiij.__unittest_L27_C1() [0x427e69]\n??:? void tmpsmtahiij.__modtest() [0x427f90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c28f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b122]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430764]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430241]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0f9]\n??:? runModuleUnitTests [0x42c065]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpbn2a7n4x.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn2a7n4x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong[] arr_copy = arr.dup;\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr_copy.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "/tmp/tmpof2k234_.d(13): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpof2k234_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmpgt9ym1af.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgt9ym1af.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpyf3zlke1.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf3zlke1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwhxze9o2.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwhxze9o2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(a; arr)\n\t{\n\t\tif(a != 0)\n\t\t{\n\t\t\tsum += a;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwdzuom4n.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x42819d]\n??:? void tmpwdzuom4n.__unittest_L19_C1() [0x427df5]\n??:? void tmpwdzuom4n.__modtest() [0x427f1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b03e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301d1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430680]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43015d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b015]\n??:? runModuleUnitTests [0x42bf81]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwvvtl00z.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x42818d]\n??:? void tmpwvvtl00z.__unittest_L16_C1() [0x427de9]\n??:? void tmpwvvtl00z.__modtest() [0x427f10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c19b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b02e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430670]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43014d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b005]\n??:? runModuleUnitTests [0x42bf71]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmpgt9ym1af.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgt9ym1af.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmpgt9ym1af.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgt9ym1af.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpyf3zlke1.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf3zlke1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tbool found = false;\n\t\tforeach(j; arr)\n\t\t{\n\t\t\tif(i == j && i != arr[$-1])\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpigmsixzk.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428225]\n??:? void tmpigmsixzk.__unittest_L28_C1() [0x427e7d]\n??:? void tmpigmsixzk.__modtest() [0x427fa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b13a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43077c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430259]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b111]\n??:? runModuleUnitTests [0x42c07d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmp35viiys6.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp35viiys6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpbn2a7n4x.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn2a7n4x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tbool flag = true;\n\t\tforeach(long j; arr)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx0aecbx0.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x4281ed]\n??:? void tmpx0aecbx0.__unittest_L28_C1() [0x427e49]\n??:? void tmpx0aecbx0.__modtest() [0x427f70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1fb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b08e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430221]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301ad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b065]\n??:? runModuleUnitTests [0x42bfd1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42863c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmp35viiys6.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp35viiys6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(!arr.count(i))\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "/tmp/tmpib_6kvrb.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpib_6kvrb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmpgt9ym1af.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgt9ym1af.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwhxze9o2.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwhxze9o2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpbn2a7n4x.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn2a7n4x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach (i; arr)\n\t{\n\t\tbool flag = false;\n\t\tforeach (j; arr)\n\t\t{\n\t\t\tif (i == j)\n\t\t\t{\n\t\t\t\tflag = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (flag == false)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpps4vjhum.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x4281ed]\n??:? void tmpps4vjhum.__unittest_L26_C1() [0x427e49]\n??:? void tmpps4vjhum.__modtest() [0x427f70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1fb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b08e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430221]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301ad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b065]\n??:? runModuleUnitTests [0x42bfd1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42863c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] temp = new long[arr.length];\n\tint count = 0;\n\t\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tif(!temp.contains(arr[i]))\n\t\t{\n\t\t\ttemp[count] = arr[i];\n\t\t\tcount++;\n\t\t}\n\t}\n\t\n\tfor(int i = 0; i < count; i++)\n\t{\n\t\tsum += temp[i];\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "/tmp/tmpheaqzmrj.d(15): Error: no property `contains` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpheaqzmrj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpyf3zlke1.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf3zlke1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpbn2a7n4x.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn2a7n4x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(!(i in arr[0..$-1]))\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "/tmp/tmpgg_eqg1j.d(12): Error: incompatible types for `(i) in (arr[0..__dollar - 1LU])`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgg_eqg1j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpbn2a7n4x.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn2a7n4x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tbool found = false;\n\t\tforeach(long j; arr)\n\t\t{\n\t\t\tif(i == j && i != arr[$-1])\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx8k6tkxs.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428225]\n??:? void tmpx8k6tkxs.__unittest_L28_C1() [0x427e7d]\n??:? void tmpx8k6tkxs.__modtest() [0x427fa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b13a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43077c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430259]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b111]\n??:? runModuleUnitTests [0x42c07d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] temp = new long[arr.length];\n\tint i = 0;\n\tint j = 0;\n\twhile (i < arr.length)\n\t{\n\t\tif (arr[i] != arr[j])\n\t\t{\n\t\t\ttemp[j] = arr[i];\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\twhile (i < j)\n\t{\n\t\tsum += temp[i];\n\t\ti++;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxrqpz7q9.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpxrqpz7q9.__unittest_L30_C1() [0x427f49]\n??:? void tmpxrqpz7q9.__modtest() [0x427fe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c343]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430461]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430910]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4303ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b1ad]\n??:? runModuleUnitTests [0x42c119]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpyf3zlke1.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf3zlke1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tbool found = false;\n\t\tforeach(long j; arr)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzfq_zizj.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x4281f5]\n??:? void tmpzfq_zizj.__unittest_L28_C1() [0x427e4d]\n??:? void tmpzfq_zizj.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c203]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b096]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430229]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b06d]\n??:? runModuleUnitTests [0x42bfd9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428644]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n    long sum = 0;\n    foreach(i; arr) \n    {\n        if(arr.count(i) == 1) \n        {\n            sum += i;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "/tmp/tmpxjtrrqof.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxjtrrqof.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(elem; arr)\n\t{\n\t\tif(count(arr, elem) == 1)\n\t\t\tsum += elem;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmp8ffnkcbh.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8ffnkcbh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpyf3zlke1.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf3zlke1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmpgt9ym1af.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgt9ym1af.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpbn2a7n4x.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn2a7n4x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(elem; arr)\n\t{\n\t\tif(count(arr, elem) == 1)\n\t\t{\n\t\t\tsum += elem;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmp0oep2wd6.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0oep2wd6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwvvtl00z.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x42818d]\n??:? void tmpwvvtl00z.__unittest_L16_C1() [0x427de9]\n??:? void tmpwvvtl00z.__modtest() [0x427f10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c19b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b02e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430670]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43014d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b005]\n??:? runModuleUnitTests [0x42bf71]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(elem; arr)\n\t{\n\t\tif(count(arr, elem) == 1)\n\t\t\tsum += elem;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmp8ffnkcbh.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8ffnkcbh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] temp = new long[arr.length];\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\ttemp[i] = 0;\n\t}\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (temp[i] == 0)\n\t\t{\n\t\t\tfor (int j = i + 1; j < arr.length; j++)\n\t\t\t{\n\t\t\t\tif (arr[i] == arr[j])\n\t\t\t\t{\n\t\t\t\t\ttemp[i] = 1;\n\t\t\t\t\ttemp[j] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (temp[i] == 0)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2ygs8p3d.d(42): unittest failure\n----------------\n??:? _d_unittestp [0x42831d]\n??:? void tmp2ygs8p3d.__unittest_L38_C1() [0x427f79]\n??:? void tmp2ygs8p3d.__modtest() [0x4280a0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3fb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b28e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430519]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4309c8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4304a5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b265]\n??:? runModuleUnitTests [0x42c1d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4287e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tbool flag = true;\n\t\tforeach(j; arr)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse if(i == j)\n\t\t\t{\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn7aayigk.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x4281f5]\n??:? void tmpn7aayigk.__unittest_L32_C1() [0x427e51]\n??:? void tmpn7aayigk.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c203]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b096]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430229]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b06d]\n??:? runModuleUnitTests [0x42bfd9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428644]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpyf3zlke1.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf3zlke1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpyf3zlke1.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf3zlke1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tbool found = false;\n\t\tforeach(long j; arr)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzfq_zizj.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x4281f5]\n??:? void tmpzfq_zizj.__unittest_L28_C1() [0x427e4d]\n??:? void tmpzfq_zizj.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c203]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b096]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430229]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b06d]\n??:? runModuleUnitTests [0x42bfd9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428644]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpbn2a7n4x.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn2a7n4x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpyf3zlke1.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf3zlke1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tif (arr[i] != 0) \n\t\t{\n\t\t\tsum += arr[i];\n\t\t\tfor (int j = i + 1; j < arr.length; j++) \n\t\t\t{\n\t\t\t\tif (arr[i] == arr[j]) \n\t\t\t\t{\n\t\t\t\t\tarr[j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(elem; arr)\n\t{\n\t\tif(count(arr, elem) == 1)\n\t\t\tsum += elem;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmp8ffnkcbh.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8ffnkcbh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpbn2a7n4x.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn2a7n4x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwhxze9o2.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwhxze9o2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpbn2a7n4x.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn2a7n4x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(a; arr)\n\t{\n\t\tif(a != 0)\n\t\t{\n\t\t\tsum += a;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwdzuom4n.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x42819d]\n??:? void tmpwdzuom4n.__unittest_L19_C1() [0x427df5]\n??:? void tmpwdzuom4n.__modtest() [0x427f1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b03e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301d1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430680]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43015d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b015]\n??:? runModuleUnitTests [0x42bf81]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tbool found = false;\n\t\tforeach(long j; arr)\n\t\t{\n\t\t\tif(i == j && i != j)\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbv7e685v.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x4281f5]\n??:? void tmpbv7e685v.__unittest_L28_C1() [0x427e51]\n??:? void tmpbv7e685v.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c203]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b096]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430229]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b06d]\n??:? runModuleUnitTests [0x42bfd9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428644]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpbn2a7n4x.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn2a7n4x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(elem; arr)\n\t{\n\t\tif(arr.count(elem) == 1)\n\t\t\tsum += elem;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "/tmp/tmpn1v5uz_a.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn1v5uz_a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(elem; arr)\n\t{\n\t\tif(count(arr, elem) == 1)\n\t\t{\n\t\t\tsum += elem;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmp0oep2wd6.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0oep2wd6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmpgt9ym1af.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgt9ym1af.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tbool found = false;\n\t\tforeach(long j; arr)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzfq_zizj.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x4281f5]\n??:? void tmpzfq_zizj.__unittest_L28_C1() [0x427e4d]\n??:? void tmpzfq_zizj.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c203]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b096]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430229]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b06d]\n??:? runModuleUnitTests [0x42bfd9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428644]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwvvtl00z.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x42818d]\n??:? void tmpwvvtl00z.__unittest_L16_C1() [0x427de9]\n??:? void tmpwvvtl00z.__modtest() [0x427f10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c19b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b02e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430670]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43014d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b005]\n??:? runModuleUnitTests [0x42bf71]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpbn2a7n4x.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbn2a7n4x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] temp = new long[arr.length];\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\ttemp[i] = arr[i];\n\t}\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i + 1; j < arr.length; j++) \n\t\t{\n\t\t\tif (arr[i] == arr[j]) \n\t\t\t{\n\t\t\t\ttemp[i] = 0;\n\t\t\t\ttemp[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < temp.length; i++) \n\t{\n\t\tsum += temp[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph4nqgs4v.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x4282ed]\n??:? void tmph4nqgs4v.__unittest_L32_C1() [0x427f49]\n??:? void tmph4nqgs4v.__modtest() [0x428070]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3cb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430998]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430475]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b235]\n??:? runModuleUnitTests [0x42c1a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4287b0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n    long sum = 0;\n    foreach(long i; arr)\n    {\n        if(arr.count(i) == 1)\n        {\n            sum += i;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmpcjs0ia2f.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcjs0ia2f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwhxze9o2.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwhxze9o2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(temp[i] == 0)\n\t\t{\n\t\t\ttemp[i] = 1;\n\t\t\tsum += arr[i];\n\t\t\tforeach(j; i+1 .. arr.length)\n\t\t\t{\n\t\t\t\tif(arr[i] == arr[j])\n\t\t\t\t{\n\t\t\t\t\ttemp[j] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkympqw6j.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkympqw6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpzketnvnv.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzketnvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpwbqcjn21.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbqcjn21.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] temp = new long[arr.length];\n\tint i = 0;\n\tfor (; i < arr.length; i++)\n\t{\n\t\tif (temp[i] == 0)\n\t\t{\n\t\t\ttemp[i] = arr[i];\n\t\t\tsum += arr[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum -= arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpix0i4e5g.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x428265]\n??:? void tmpix0i4e5g.__unittest_L26_C1() [0x427ebd]\n??:? void tmpix0i4e5g.__modtest() [0x427fe4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c343]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430461]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430910]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4303ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b1ad]\n??:? runModuleUnitTests [0x42c119]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428728]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "/tmp/tmpgt9ym1af.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgt9ym1af.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpyf3zlke1.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf3zlke1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(elem; arr)\n\t{\n\t\tif(arr.count(elem) == 1)\n\t\t{\n\t\t\tsum += elem;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123856,
      "stdout": "",
      "stderr": "/tmp/tmpg6eyr4cv.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg6eyr4cv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpyf3zlke1.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf3zlke1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
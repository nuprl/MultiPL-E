{
  "name": "mbpp_172_count_occurance",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_172_count_occurance.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517499,
      "stdout": "",
      "stderr": "/tmp/tmp081u1dj1.d(14): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp081u1dj1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong i = 0;\n\twhile (i < s.length) \n\t{\n\t\tif (s[i..i+3] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t\ti += 3;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpmfn0ce0p.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427fce]\n??:? long tmpmfn0ce0p.count_occurance(immutable(char)[]) [0x427ab0]\n??:? void tmpmfn0ce0p.__unittest_L26_C1() [0x427b52]\n??:? void tmpmfn0ce0p.__modtest() [0x427c9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab4a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430110]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab21]\n??:? runModuleUnitTests [0x42ba11]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn0untoby.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpn0untoby.__unittest_L18_C1() [0x427b3a]\n??:? void tmpn0untoby.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\",pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos += 3;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517499,
      "stdout": "",
      "stderr": "/tmp/tmptzpqk28g.d(14): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptzpqk28g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile((pos = s.find(\"std\", pos)) != -1)\n\t{\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517499,
      "stdout": "",
      "stderr": "/tmp/tmp5cal3edj.d(12): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5cal3edj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\twhile(true) \n\t{\n\t\tauto pos = s.find(\"std\");\n\t\tif(pos == string.npos)\n\t\t\tbreak;\n\t\ts = s[pos + 3 .. $];\n\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517499,
      "stdout": "",
      "stderr": "/tmp/tmptsvwpju7.d(13): Error: no property `find` for type `string`\n/tmp/tmptsvwpju7.d(14): Error: no property `npos` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptsvwpju7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmwoqwh_0.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpmwoqwh_0.__unittest_L20_C1() [0x427b3a]\n??:? void tmpmwoqwh_0.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tint pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != -1) \n\t{\n\t\tcount++;\n\t\tpos += 3;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517499,
      "stdout": "",
      "stderr": "/tmp/tmpd4fmw2kk.d(12): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd4fmw2kk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile (true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif (pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos += 3;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517499,
      "stdout": "",
      "stderr": "/tmp/tmp5vo9ia55.d(14): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5vo9ia55.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != string.npos) {\n\t\t++count;\n\t\t++pos;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123565,
      "stdout": "",
      "stderr": "/tmp/tmp04k9jszf.d(12): Error: no property `find` for type `string`\n/tmp/tmp04k9jszf.d(12): Error: no property `npos` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp04k9jszf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tint i = 0;\n\twhile (i < s.length)\n\t{\n\t\tif (s.substr(i, 3) == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t\ti += 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123565,
      "stdout": "",
      "stderr": "/tmp/tmpe8p16ado.d(14): Error: no property `substr` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe8p16ado.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tfor(int i = 0; i < s.length - 2; i++)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt7uiykzr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpt7uiykzr.__unittest_L18_C1() [0x427b3e]\n??:? void tmpt7uiykzr.__modtest() [0x427c9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab4a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430110]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab21]\n??:? runModuleUnitTests [0x42ba11]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\twhile(s.length > 0)\n\t{\n\t\tauto pos = s.find(\"std\");\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\telse\n\t\t{\n\t\t\tcount++;\n\t\t\ts = s[pos+3..$];\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123565,
      "stdout": "",
      "stderr": "/tmp/tmprl19pbv_.d(13): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprl19pbv_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmwoqwh_0.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpmwoqwh_0.__unittest_L20_C1() [0x427b3a]\n??:? void tmpmwoqwh_0.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\t\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\t\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0s4rey5t.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp0s4rey5t.__unittest_L20_C1() [0x427b3a]\n??:? void tmp0s4rey5t.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != -1) {\n\t\tcount++;\n\t\tpos += 3;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123565,
      "stdout": "",
      "stderr": "/tmp/tmptsuownfv.d(12): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptsuownfv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517499,
      "stdout": "",
      "stderr": "/tmp/tmp081u1dj1.d(14): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp081u1dj1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcf4gepkt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpcf4gepkt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpcf4gepkt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i;0..s.length-2)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpih9jlctq.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpih9jlctq.__unittest_L18_C1() [0x427b3a]\n??:? void tmpih9jlctq.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9i38f33p.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp9i38f33p.__unittest_L18_C1() [0x427b3a]\n??:? void tmp9i38f33p.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\t\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\t\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkh4wqabu.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpkh4wqabu.__unittest_L22_C1() [0x427b3a]\n??:? void tmpkh4wqabu.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tsize_t pos = 0;\n\twhile (true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif (pos == string.npos)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123565,
      "stdout": "",
      "stderr": "/tmp/tmptprm0myn.d(14): Error: no property `find` for type `string`\n/tmp/tmptprm0myn.d(15): Error: no property `npos` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptprm0myn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tint i = 0;\n\twhile(i < s.length)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t\ti += 2;\n\t\t}\n\t\ti++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpvs13x08v.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427fc6]\n??:? long tmpvs13x08v.count_occurance(immutable(char)[]) [0x427ab3]\n??:? void tmpvs13x08v.__unittest_L23_C1() [0x427b1f]\n??:? void tmpvs13x08v.__modtest() [0x427c94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tfor (int i = 0; i < s.length - 2; i++) \n\t{\n\t\tif (s[i..i+2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzjvy1_yz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpzjvy1_yz.__unittest_L20_C1() [0x427b3e]\n??:? void tmpzjvy1_yz.__modtest() [0x427c9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab4a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430110]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab21]\n??:? runModuleUnitTests [0x42ba11]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile ((pos = s.indexOf(\"std\", pos)) != -1) {\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123565,
      "stdout": "",
      "stderr": "/tmp/tmprgh7l97m.d(12): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprgh7l97m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9i38f33p.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp9i38f33p.__unittest_L18_C1() [0x427b3a]\n??:? void tmp9i38f33p.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\telse\n\t\t{\n\t\t\tcount++;\n\t\t\tpos += 3;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123565,
      "stdout": "",
      "stderr": "/tmp/tmp9wfvjppi.d(14): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9wfvjppi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i+2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy5g9_2i9.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy5g9_2i9.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy5g9_2i9.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcf4gepkt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpcf4gepkt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpcf4gepkt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile((pos = s.find(\"std\", pos)) != -1)\n\t{\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517499,
      "stdout": "",
      "stderr": "/tmp/tmp5cal3edj.d(12): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5cal3edj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\t\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\t\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0s4rey5t.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp0s4rey5t.__unittest_L20_C1() [0x427b3a]\n??:? void tmp0s4rey5t.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i, c; s)\n\t{\n\t\tif(c == 's')\n\t\t{\n\t\t\tif(i + 2 < s.length)\n\t\t\t{\n\t\t\t\tif(s[i + 1] == 't' && s[i + 2] == 'd')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i, c; s) {\n\t\tif(c == 's') {\n\t\t\tif(i + 2 < s.length && s[i + 1] == 't' && s[i + 2] == 'd') {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\treturn s.count(\"std\");\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123565,
      "stdout": "",
      "stderr": "/tmp/tmpko3qq03g.d(10): Error: no property `count` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpko3qq03g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tint pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != -1) {\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123565,
      "stdout": "",
      "stderr": "/tmp/tmpb_sffccy.d(12): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_sffccy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb2wya1j8.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpb2wya1j8.__unittest_L16_C1() [0x427b3a]\n??:? void tmpb2wya1j8.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i, c; s)\n\t{\n\t\tif(c == 's')\n\t\t{\n\t\t\tif(i+2 < s.length && s[i+1] == 't' && s[i+2] == 'd')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptggmhzu1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmptggmhzu1.__unittest_L20_C1() [0x427b3a]\n??:? void tmptggmhzu1.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile((pos = s.find(\"std\", pos)) != -1)\n\t{\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517499,
      "stdout": "",
      "stderr": "/tmp/tmp5cal3edj.d(12): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5cal3edj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgx37czav.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpgx37czav.__unittest_L20_C1() [0x427b3a]\n??:? void tmpgx37czav.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp2xzjqbp8.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x427fc6]\n??:? long tmp2xzjqbp8.count_occurance(immutable(char)[]) [0x427ab9]\n??:? void tmp2xzjqbp8.__unittest_L20_C1() [0x427b1f]\n??:? void tmp2xzjqbp8.__modtest() [0x427c94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong i = 0;\n\twhile(i < s.length)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t\tcount++;\n\t\ti++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpat5aa3nc.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427fb6]\n??:? long tmpat5aa3nc.count_occurance(immutable(char)[]) [0x427aac]\n??:? void tmpat5aa3nc.__unittest_L20_C1() [0x427b13]\n??:? void tmpat5aa3nc.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc23]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab32]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300f8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbd5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab09]\n??:? runModuleUnitTests [0x42b9f9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj0r4vpuh.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpj0r4vpuh.__unittest_L18_C1() [0x427b3a]\n??:? void tmpj0r4vpuh.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile (true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif (pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "/tmp/tmpeqzye4uk.d(14): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeqzye4uk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i, c; s)\n\t{\n\t\tif(c == 's')\n\t\t{\n\t\t\tif(s[i+1] == 't' && s[i+2] == 'd')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpwidkttmk.d(15): Range violation\n----------------\n??:? _d_arrayboundsp [0x427ee6]\n??:? long tmpwidkttmk.count_occurance(immutable(char)[]) [0x427a7e]\n??:? void tmpwidkttmk.__unittest_L23_C1() [0x427b64]\n??:? void tmpwidkttmk.__modtest() [0x427bb8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbcf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa62]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa39]\n??:? runModuleUnitTests [0x42b9a5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9i38f33p.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp9i38f33p.__unittest_L18_C1() [0x427b3a]\n??:? void tmp9i38f33p.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcf4gepkt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpcf4gepkt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpcf4gepkt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong result = 0;\n\tlong i = 0;\n\twhile (i < s.length) \n\t{\n\t\tif (s[i..i+3] == \"std\") \n\t\t{\n\t\t\tresult++;\n\t\t\ti += 3;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpipjslb0h.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427fce]\n??:? long tmpipjslb0h.count_occurance(immutable(char)[]) [0x427ab0]\n??:? void tmpipjslb0h.__unittest_L26_C1() [0x427b52]\n??:? void tmpipjslb0h.__modtest() [0x427c9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab4a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430110]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab21]\n??:? runModuleUnitTests [0x42ba11]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tint pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != -1) \n\t{\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "/tmp/tmpwvphatnh.d(12): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwvphatnh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tfor(long i = 0; i < s.length - 2; i++)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1a5j32s4.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f0d]\n??:? void tmp1a5j32s4.__unittest_L18_C1() [0x427b2e]\n??:? void tmp1a5j32s4.__modtest() [0x427c8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab11]\n??:? runModuleUnitTests [0x42ba01]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9i38f33p.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp9i38f33p.__unittest_L18_C1() [0x427b3a]\n??:? void tmp9i38f33p.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\t\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\t\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0s4rey5t.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp0s4rey5t.__unittest_L20_C1() [0x427b3a]\n??:? void tmp0s4rey5t.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != -1)\n\t{\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "/tmp/tmp_6zpkpr2.d(12): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_6zpkpr2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9i38f33p.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp9i38f33p.__unittest_L18_C1() [0x427b3a]\n??:? void tmp9i38f33p.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i+2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy5g9_2i9.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy5g9_2i9.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy5g9_2i9.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp5lie6u7g.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x427fc6]\n??:? long tmp5lie6u7g.count_occurance(immutable(char)[]) [0x427ab9]\n??:? void tmp5lie6u7g.__unittest_L18_C1() [0x427b1f]\n??:? void tmp5lie6u7g.__modtest() [0x427c94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i;0..s.length-2)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpih9jlctq.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpih9jlctq.__unittest_L18_C1() [0x427b3a]\n??:? void tmpih9jlctq.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile((pos = s.find(\"std\", pos)) != -1)\n\t{\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517499,
      "stdout": "",
      "stderr": "/tmp/tmp5cal3edj.d(12): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5cal3edj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile (true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif (pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "/tmp/tmpeqzye4uk.d(14): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeqzye4uk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\t\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\t\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0s4rey5t.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp0s4rey5t.__unittest_L20_C1() [0x427b3a]\n??:? void tmp0s4rey5t.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != -1) \n\t{\n\t\tcount++;\n\t\tpos += 3;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "/tmp/tmp8wf6j5hd.d(12): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8wf6j5hd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tauto pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "/tmp/tmpezmtd7f9.d(14): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpezmtd7f9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9i38f33p.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp9i38f33p.__unittest_L18_C1() [0x427b3a]\n??:? void tmp9i38f33p.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tfor (size_t i = 0; i < s.length; i++)\n\t{\n\t\tif (s[i .. i + 3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7p9q41n4.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x427fbe]\n??:? long tmp7p9q41n4.count_occurance(immutable(char)[]) [0x427ab1]\n??:? void tmp7p9q41n4.__unittest_L18_C1() [0x427b17]\n??:? void tmp7p9q41n4.__modtest() [0x427c8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab11]\n??:? runModuleUnitTests [0x42ba01]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tauto i = 0;\n\twhile (i < s.length) {\n\t\tif (s[i..i+3] == \"std\") {\n\t\t\tcount++;\n\t\t\ti += 3;\n\t\t} else {\n\t\t\ti++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp0gpzvnnk.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x427fce]\n??:? long tmp0gpzvnnk.count_occurance(immutable(char)[]) [0x427ab7]\n??:? void tmp0gpzvnnk.__unittest_L22_C1() [0x427b52]\n??:? void tmp0gpzvnnk.__modtest() [0x427c9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab4a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430110]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab21]\n??:? runModuleUnitTests [0x42ba11]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj0r4vpuh.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpj0r4vpuh.__unittest_L18_C1() [0x427b3a]\n??:? void tmpj0r4vpuh.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i] == 's' && s[i+1] == 't' && s[i+2] == 'd')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmphtc4lf6r.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x427ee6]\n??:? long tmphtc4lf6r.count_occurance(immutable(char)[]) [0x427a57]\n??:? void tmphtc4lf6r.__unittest_L18_C1() [0x427b8c]\n??:? void tmphtc4lf6r.__modtest() [0x427bb8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbcf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa62]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa39]\n??:? runModuleUnitTests [0x42b9a5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517499,
      "stdout": "",
      "stderr": "/tmp/tmp081u1dj1.d(14): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp081u1dj1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != string.npos) \n\t{\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "/tmp/tmpj865udqg.d(12): Error: no property `find` for type `string`\n/tmp/tmpj865udqg.d(12): Error: no property `npos` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj865udqg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj0r4vpuh.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpj0r4vpuh.__unittest_L18_C1() [0x427b3a]\n??:? void tmpj0r4vpuh.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i+2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmkc91aop.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpmkc91aop.__unittest_L18_C1() [0x427b3a]\n??:? void tmpmkc91aop.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope void delegate()) [0x42835f]\n??:? _d_run_main [0x4282ca]\n??:? main [0x427cab]\n??:? __libc_start_main [0x6a77554]\n1/1 unittests FAILED\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tint i = 0;\n\twhile(i < s.length)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t\ti += 2;\n\t\t}\n\t\ti++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpvs13x08v.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427fc6]\n??:? long tmpvs13x08v.count_occurance(immutable(char)[]) [0x427ab3]\n??:? void tmpvs13x08v.__unittest_L23_C1() [0x427b1f]\n??:? void tmpvs13x08v.__modtest() [0x427c94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tint i = 0;\n\twhile(i < s.length)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t\ti += 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmplgfmtomd.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427fce]\n??:? long tmplgfmtomd.count_occurance(immutable(char)[]) [0x427ab7]\n??:? void tmplgfmtomd.__unittest_L26_C1() [0x427b27]\n??:? void tmplgfmtomd.__modtest() [0x427c9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab4a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430110]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab21]\n??:? runModuleUnitTests [0x42ba11]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_run_main(int, ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj0r4vpuh.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpj0r4vpuh.__unittest_L18_C1() [0x427b3a]\n??:? void tmpj0r4vpuh.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3) \n\t{\n\t\tif (s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfbjblg54.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpfbjblg54.__unittest_L20_C1() [0x427b3a]\n??:? void tmpfbjblg54.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tsize_t pos = 0;\n\twhile((pos = s.find(\"std\", pos)) != string.npos)\n\t{\n\t\tcount++;\n\t\tpos += 3;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "/tmp/tmpe3r1t27w.d(12): Error: no property `find` for type `string`\n/tmp/tmpe3r1t27w.d(12): Error: no property `npos` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe3r1t27w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj0r4vpuh.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpj0r4vpuh.__unittest_L18_C1() [0x427b3a]\n??:? void tmpj0r4vpuh.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptggmhzu1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmptggmhzu1.__unittest_L20_C1() [0x427b3a]\n??:? void tmptggmhzu1.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\t\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\t\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0s4rey5t.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp0s4rey5t.__unittest_L20_C1() [0x427b3a]\n??:? void tmp0s4rey5t.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\t\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\t\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0s4rey5t.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp0s4rey5t.__unittest_L20_C1() [0x427b3a]\n??:? void tmp0s4rey5t.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517499,
      "stdout": "",
      "stderr": "/tmp/tmp081u1dj1.d(14): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp081u1dj1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i] == 's' && s[i+1] == 't' && s[i+2] == 'd')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmphtc4lf6r.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x427ee6]\n??:? long tmphtc4lf6r.count_occurance(immutable(char)[]) [0x427a57]\n??:? void tmphtc4lf6r.__unittest_L18_C1() [0x427b8c]\n??:? void tmphtc4lf6r.__modtest() [0x427bb8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbcf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa62]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa39]\n??:? runModuleUnitTests [0x42b9a5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgx37czav.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpgx37czav.__unittest_L20_C1() [0x427b3a]\n??:? void tmpgx37czav.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcf4gepkt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpcf4gepkt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpcf4gepkt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tint i = 0;\n\twhile(i < s.length)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t\ti += 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmplgfmtomd.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427fce]\n??:? long tmplgfmtomd.count_occurance(immutable(char)[]) [0x427ab7]\n??:? void tmplgfmtomd.__unittest_L26_C1() [0x427b27]\n??:? void tmplgfmtomd.__modtest() [0x427c9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab4a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430110]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab21]\n??:? runModuleUnitTests [0x42ba11]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_run_main(int, ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != -1) \n\t{\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "/tmp/tmphwp5fulq.d(12): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphwp5fulq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcf4gepkt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpcf4gepkt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpcf4gepkt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tint i = 0;\n\twhile (i < s.length)\n\t{\n\t\tif (s[i..i+2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t\ti += 2;\n\t\t}\n\t\ti++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpy2d7hb33.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427fc6]\n??:? long tmpy2d7hb33.count_occurance(immutable(char)[]) [0x427ab3]\n??:? void tmpy2d7hb33.__unittest_L23_C1() [0x427b1f]\n??:? void tmpy2d7hb33.__modtest() [0x427c94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\telse\n\t\t{\n\t\t\tcount++;\n\t\t\tpos += 3;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123565,
      "stdout": "",
      "stderr": "/tmp/tmp9wfvjppi.d(14): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9wfvjppi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile((pos = s.find(\"std\", pos)) != -1)\n\t{\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517499,
      "stdout": "",
      "stderr": "/tmp/tmp5cal3edj.d(12): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5cal3edj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgx37czav.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpgx37czav.__unittest_L20_C1() [0x427b3a]\n??:? void tmpgx37czav.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj0r4vpuh.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpj0r4vpuh.__unittest_L18_C1() [0x427b3a]\n??:? void tmpj0r4vpuh.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517499,
      "stdout": "",
      "stderr": "/tmp/tmp081u1dj1.d(14): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp081u1dj1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgx37czav.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpgx37czav.__unittest_L20_C1() [0x427b3a]\n??:? void tmpgx37czav.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8kpcxmhd.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp8kpcxmhd.__unittest_L20_C1() [0x427b3a]\n??:? void tmp8kpcxmhd.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tint i = 0;\n\twhile(i < s.length)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t\ti += 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1666123566,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmplgfmtomd.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427fce]\n??:? long tmplgfmtomd.count_occurance(immutable(char)[]) [0x427ab7]\n??:? void tmplgfmtomd.__unittest_L26_C1() [0x427b27]\n??:? void tmplgfmtomd.__modtest() [0x427c9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab4a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430110]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab21]\n??:? runModuleUnitTests [0x42ba11]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_run_main(int, ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfc7xwxz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpbfc7xwxz.__unittest_L20_C1() [0x427b3a]\n??:? void tmpbfc7xwxz.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
      "timestamp": 1665517500,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy4kyiumt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpy4kyiumt.__unittest_L18_C1() [0x427b3a]\n??:? void tmpy4kyiumt.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab19]\n??:? runModuleUnitTests [0x42ba09]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
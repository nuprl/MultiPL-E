{
  "name": "mbpp_782_odd_length_sum",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_782_odd_length_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            if ((j - i + 1) % 2 != 0) { \n                for (int k = i; k <= j; k++) { \n                    sum += arr[k]; \n                } \n            } \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    long n = arr.length; \n    for (long i = 0; i < n; i++) { \n        for (long j = i; j < n; j++) { \n            long len = (j - i + 1); \n            if (len % 2 != 0) \n                sum += (len * (len + 1)) / 2; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkoutim1g.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4280f5]\n??:? void tmpkoutim1g.__unittest_L20_C1() [0x427dc0]\n??:? void tmpkoutim1g.__modtest() [0x427e74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0df]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430105]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430091]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af49]\n??:? runModuleUnitTests [0x42beb5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428544]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tfor(int j = i; j < arr.length; j++)\n\t\t{\n\t\t\tif((j - i + 1) % 2 != 0)\n\t\t\t{\n\t\t\t\tfor(int k = i; k <= j; k++)\n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++)\n\t{\n\t\tfor (long j = i; j < arr.length; j++)\n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0)\n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++)\n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor(long i = 0; i < arr.length; i++) \n\t{\n\t\tfor(long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor(long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tint n = arr.length;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpaozwdos_.d(10): Error: cannot implicitly convert expression `arr.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaozwdos_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) {\n\t\tfor (long j = i; j < arr.length; j++) {\n\t\t\tif ((j - i + 1) % 2 == 1) {\n\t\t\t\tfor (long k = i; k <= j; k++) {\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            if ((j - i + 1) % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpxe3nwpuj.d(13): Error: undefined identifier `sum_of_subarray`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxe3nwpuj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    int n = arr.length; \n    for (int i = 0; i < n; i++) { \n        for (int j = i; j < n; j++) { \n            int len = j - i + 1; \n            if (len % 2 != 0) \n                sum += arr[j]; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "/tmp/tmp0l6036w_.d(10): Error: cannot implicitly convert expression `arr.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0l6036w_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (long i = 0; i < arr.length; i++) \n    { \n        for (long j = i; j < arr.length; j++) \n        { \n            long len = j - i + 1; \n            if (len % 2 != 0) \n                sum += (len * (len + 1) / 2) * arr[i]; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp54w6_8l2.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428135]\n??:? void tmp54w6_8l2.__unittest_L21_C1() [0x427e00]\n??:? void tmp54w6_8l2.__modtest() [0x427eb4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c193]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b026]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301b9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430668]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430145]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42affd]\n??:? runModuleUnitTests [0x42bf69]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285f8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n    long sum = 0;\n    long n = arr.length;\n    for (long i = 0; i < n; i++) \n    {\n        for (long j = i; j < n; j++) \n        {\n            long len = j - i + 1;\n            if (len % 2 != 0) \n            {\n                for (long k = i; k <= j; k++) \n                {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (long i = 0; i < arr.length; i++) \n    { \n        for (long j = i; j < arr.length; j++) \n        { \n            long len = j - i + 1; \n            if (len % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \nlong sum_of_subarray(long[] arr, long start, long end) \n{ \n    long sum = 0; \n    for (long i = start; i <= end; i++) \n        sum += arr[i]; \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            if (((j - i + 1) & 1) == 1) \n                sum += arr[j]; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6kthy_fn.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x4280fd]\n??:? void tmp6kthy_fn.__unittest_L18_C1() [0x427dc8]\n??:? void tmp6kthy_fn.__modtest() [0x427e7c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c15b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430181]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430630]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43010d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc5]\n??:? runModuleUnitTests [0x42bf31]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tfor(int j = i; j < arr.length; j++)\n\t\t{\n\t\t\tif((j - i + 1) % 2 != 0)\n\t\t\t{\n\t\t\t\tfor(int k = i; k <= j; k++)\n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (long i = 0; i < arr.length; i++) { \n        for (long j = i; j < arr.length; j++) { \n            if ((j - i + 1) % 2 != 0) \n                sum += arr[j]; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw6gu_cug.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428105]\n??:? void tmpw6gu_cug.__unittest_L18_C1() [0x427dd0]\n??:? void tmpw6gu_cug.__modtest() [0x427e84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c163]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aff6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430189]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430638]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430115]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afcd]\n??:? runModuleUnitTests [0x42bf39]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285c8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor(int i = 0; i < arr.length; i++) \n\t{\n\t\tfor(int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor(int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tlong len = j - i + 1;\n\t\t\tif (len & 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tsum += arr[i];\n\t}\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i + 1; j < arr.length; j += 2) \n\t\t{\n\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t{\n\t\t\t\tsum += arr[k];\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphu1y7vrs.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x42813d]\n??:? void tmphu1y7vrs.__unittest_L26_C1() [0x427e08]\n??:? void tmphu1y7vrs.__modtest() [0x427ebc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c19b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b02e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430670]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43014d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b005]\n??:? runModuleUnitTests [0x42bf71]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428600]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tfor (int j = i; j < arr.length; j++)\n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0)\n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++)\n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++)\n\t{\n\t\tfor (long j = i; j < arr.length; j++)\n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1)\n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++)\n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (long i = 0; i < arr.length; i++) { \n        long curr_sum = 0; \n        for (long j = i; j < arr.length; j++) { \n            curr_sum += arr[j]; \n            if ((j - i + 1) % 2 != 0) \n                sum += curr_sum; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tfor(int j = i; j < arr.length; j++)\n\t\t{\n\t\t\tif((j - i + 1) % 2 != 0)\n\t\t\t{\n\t\t\t\tfor(int k = i; k <= j; k++)\n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    long n = arr.length; \n    for (long i = 0; i < n; i++) { \n        for (long j = i; j < n; j++) { \n            long len = j - i + 1; \n            if (len % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "/tmp/tmpv6vb8jmx.d(15): Error: undefined identifier `sum_of_subarray`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv6vb8jmx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            int len = (j - i + 1); \n            if (len % 2 != 0) \n                sum += (arr[j] * len); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvhy6bo5k.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428105]\n??:? void tmpvhy6bo5k.__unittest_L19_C1() [0x427dd4]\n??:? void tmpvhy6bo5k.__modtest() [0x427e88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c163]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aff6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430189]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430638]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430115]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afcd]\n??:? runModuleUnitTests [0x42bf39]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285c8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) \n    { \n        for (int j = i; j < arr.length; j++) \n        { \n            if (((j - i + 1) & 1) != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "/tmp/tmpyk_wnqb8.d(15): Error: undefined identifier `sum_of_subarray`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyk_wnqb8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tsum += ((i + 1) * (n - i) + 1) / 2 * arr[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            if ((j - i + 1) % 2 != 0) { \n                for (int k = i; k <= j; k++) { \n                    sum += arr[k]; \n                } \n            } \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tfor(int j = i; j < arr.length; j++)\n\t\t{\n\t\t\tif((j - i + 1) % 2 != 0)\n\t\t\t{\n\t\t\t\tfor(int k = i; k <= j; k++)\n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tsum += ((i + 1) * (n - i) + 1) / 2 * arr[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    long n = arr.length; \n    for (long i = 0; i < n; i++) { \n        for (long j = i; j < n; j++) { \n            long len = j - i + 1; \n            if (len & 1) { \n                for (long k = i; k <= j; k++) { \n                    sum += arr[k]; \n                } \n            } \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) \n    { \n        long curr_sum = 0; \n        for (int j = i; j < arr.length; j++) \n        { \n            curr_sum += arr[j]; \n            if (((j - i + 1) & 1) != 0) \n                sum += curr_sum; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    int n = arr.length; \n    for (int i = 0; i < n; i++) { \n        for (int j = i; j < n; j++) { \n            int len = j - i + 1; \n            if (len % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "/tmp/tmpfzqcs5nt.d(10): Error: cannot implicitly convert expression `arr.length` of type `ulong` to `int`\n/tmp/tmpfzqcs5nt.d(15): Error: undefined identifier `sum_of_subarray`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfzqcs5nt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tint n = arr.length;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "/tmp/tmp_ccha9jj.d(10): Error: cannot implicitly convert expression `arr.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ccha9jj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n\tlong sum = 0; \n\tfor (int i = 0; i < arr.length; i++) { \n\t\tfor (int j = i; j < arr.length; j++) { \n\t\t\tint len = j - i + 1; \n\t\t\tif (len % 2 != 0) \n\t\t\t\tsum += sum_array(arr[i..j]); \n\t\t} \n\t} \n\treturn sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "/tmp/tmpouglwpax.d(14): Error: undefined identifier `sum_array`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpouglwpax.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tlong i = 0;\n\twhile (i < n) {\n\t\tlong j = i;\n\t\twhile (j < n) {\n\t\t\tlong k = i;\n\t\t\twhile (k <= j) {\n\t\t\t\tsum += arr[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8nrbbx5k.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x4280fd]\n??:? void tmp8nrbbx5k.__unittest_L26_C1() [0x427dcc]\n??:? void tmp8nrbbx5k.__modtest() [0x427e80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c15b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430181]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430630]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43010d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc5]\n??:? runModuleUnitTests [0x42bf31]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            if (((j - i + 1) & 1) != 0) { \n                for (int k = i; k <= j; k++) { \n                    sum += arr[k]; \n                } \n            } \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            int len = j - i + 1; \n            if (len % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "/tmp/tmp49k1q6uy.d(14): Error: undefined identifier `sum_of_subarray`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp49k1q6uy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tfor(int j = i; j < arr.length; j++)\n\t\t{\n\t\t\tif((j - i + 1) % 2 == 1)\n\t\t\t{\n\t\t\t\tfor(int k = i; k <= j; k++)\n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) {\n\t\tfor (long j = i; j < arr.length; j++) {\n\t\t\tif ((j - i + 1) % 2 != 0) {\n\t\t\t\tfor (long k = i; k <= j; k++) {\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            if (((j - i + 1) & 1) != 0) \n                sum += arr[j]; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1ek6zeha.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x4280f5]\n??:? void tmp1ek6zeha.__unittest_L18_C1() [0x427dc0]\n??:? void tmp1ek6zeha.__modtest() [0x427e74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c153]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afe6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430179]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430628]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430105]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afbd]\n??:? runModuleUnitTests [0x42bf29]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285b8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tsum += arr[i] * (i + 1) * (arr.length - i);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuma5wqqw.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmpuma5wqqw.__unittest_L16_C1() [0x427dbc]\n??:? void tmpuma5wqqw.__modtest() [0x427e70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c14b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afde]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430171]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430620]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4300fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afb5]\n??:? runModuleUnitTests [0x42bf21]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285b0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) \n    { \n        for (int j = i; j < arr.length; j++) \n        { \n            if ((j - i + 1) % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \nlong sum_of_subarray(long[] arr, int start, int end) \n{ \n    long sum = 0; \n    for (int i = start; i <= end; i++) \n        sum += arr[i]; \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long n = arr.length; \n    long sum = 0; \n    for (long i = 0; i < n; i++) { \n        long curr_sum = 0; \n        for (long j = i; j < n; j++) { \n            curr_sum += arr[j]; \n            if (((j - i + 1) & 1) != 0) \n                sum += curr_sum; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tfor(int j = i; j < arr.length; j++)\n\t\t{\n\t\t\tif((j - i + 1) % 2 != 0)\n\t\t\t{\n\t\t\t\tfor(int k = i; k <= j; k++)\n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n\tlong sum = 0; \n\tfor (int i = 0; i < arr.length; i++) { \n\t\tlong curr_sum = 0; \n\t\tfor (int j = i; j < arr.length; j++) { \n\t\t\tcurr_sum += arr[j]; \n\t\t\tif (((j - i + 1) & 1) != 0) \n\t\t\t\tsum += curr_sum; \n\t\t} \n\t} \n\treturn sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            if (((j - i + 1) & 1) != 0) { \n                for (int k = i; k <= j; k++) { \n                    sum += arr[k]; \n                } \n            } \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    long n = arr.length; \n  \n    // Iterate over all subarrays \n    for (long i = 0; i < n; i++) { \n  \n        // Iterate over all subarrays starting with i \n        for (long j = i; j < n; j++) { \n  \n            // Calculate length of subarray \n            long len = j - i + 1; \n  \n            // Add current subarray if it has odd length \n            if (len % 2 == 1) \n                sum += sum_of_array(arr[i..j]); \n        } \n    } \n  \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "/tmp/tmpc913n_5n.d(23): Error: undefined identifier `sum_of_array`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc913n_5n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            if (((j - i + 1) & 1) == 1) { \n                for (int k = i; k <= j; k++) { \n                    sum += arr[k]; \n                } \n            } \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            if ((j - i + 1) % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \n  \nlong sum_of_subarray(long[] arr, int start, int end) \n{ \n    long sum = 0; \n    for (int i = start; i <= end; i++) \n        sum += arr[i]; \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) {\n\t\tfor (long j = i; j < arr.length; j++) {\n\t\t\tif ((j - i + 1) % 2 == 1) {\n\t\t\t\tfor (long k = i; k <= j; k++) {\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (long i = 0; i < arr.length; i++) \n    { \n        for (long j = i; j < arr.length; j++) \n        { \n            long len = j - i + 1; \n            if (len % 2 != 0) \n                sum += arr[j]; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplrjbex6d.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428105]\n??:? void tmplrjbex6d.__unittest_L21_C1() [0x427dd0]\n??:? void tmplrjbex6d.__modtest() [0x427e84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c163]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aff6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430189]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430638]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430115]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afcd]\n??:? runModuleUnitTests [0x42bf39]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285c8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong len = arr.length;\n\tfor (int i = 0; i < len; i++) \n\t{\n\t\tfor (int j = i; j < len; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) {\n\t\tfor (int j = i; j < arr.length; j++) {\n\t\t\tif ((j - i + 1) % 2 != 0) {\n\t\t\t\tfor (int k = i; k <= j; k++) {\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) {\n\t\tfor (long j = i; j < arr.length; j++) {\n\t\t\tif ((j - i + 1) % 2 != 0) {\n\t\t\t\tfor (long k = i; k <= j; k++) {\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) \n    { \n        long curr_sum = 0; \n        for (int j = i; j < arr.length; j++) \n        { \n            curr_sum += arr[j]; \n            if (((j - i + 1) & 1) != 0) \n                sum += curr_sum; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    long n = arr.length; \n    for (long i = 0; i < n; i++) { \n        for (long j = i; j < n; j++) { \n            long len = j - i + 1; \n            if (len % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "/tmp/tmpv6vb8jmx.d(15): Error: undefined identifier `sum_of_subarray`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv6vb8jmx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tfor (int j = i; j < arr.length; j++)\n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0)\n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++)\n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            int len = j - i + 1; \n            if (len % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "/tmp/tmp49k1q6uy.d(14): Error: undefined identifier `sum_of_subarray`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp49k1q6uy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tsum += ((i + 1) * (n - i) + 1) / 2 * arr[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tint n = arr.length;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i; j < n; j++) \n\t\t{\n\t\t\tint len = j - i + 1;\n\t\t\tif (len % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "/tmp/tmpi59qrxjj.d(10): Error: cannot implicitly convert expression `arr.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi59qrxjj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor(int i = 0; i < arr.length; i++) \n\t{\n\t\tfor(int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor(int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tint n = arr.length;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tfor (int j = i; j < n; j++)\n\t\t{\n\t\t\tint len = j - i + 1;\n\t\t\tif (len % 2 == 1)\n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++)\n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "/tmp/tmpdnj8c969.d(10): Error: cannot implicitly convert expression `arr.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdnj8c969.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) {\n\t\tfor (int j = i; j < arr.length; j++) {\n\t\t\tif ((j - i + 1) % 2 != 0) {\n\t\t\t\tfor (int k = i; k <= j; k++) {\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            if ((j - i + 1) % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \nlong sum_of_subarray(long[] arr, int start, int end) \n{ \n    long sum = 0; \n    for (int i = start; i <= end; i++) \n        sum += arr[i]; \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            if ((j - i + 1) % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \nlong sum_of_subarray(long[] arr, int start, int end) \n{ \n    long sum = 0; \n    for (int i = start; i <= end; i++) \n        sum += arr[i]; \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tlong curr_sum = 0;\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tcurr_sum += arr[j];\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tsum += curr_sum;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tfor (int j = i; j < arr.length; j++)\n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1)\n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++)\n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            int len = j - i + 1; \n            if (len % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \n  \nlong sum_of_subarray(long[] arr, int start, int end) \n{ \n    long sum = 0; \n    for (int i = start; i <= end; i++) \n        sum += arr[i]; \n    return sum; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) {\n\t\tfor (int j = i; j < arr.length; j++) {\n\t\t\tif ((j - i + 1) % 2 == 1) {\n\t\t\t\tfor (int k = i; k <= j; k++) {\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    long n = arr.length; \n    for (long i = 0; i < n; i++) { \n        for (long j = i; j < n; j++) { \n            long len = j - i + 1; \n            if (len % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \nlong sum_of_subarray(long[] arr, long i, long j) \n{ \n    long sum = 0; \n    for (long k = i; k <= j; k++) \n        sum += arr[k]; \n    return sum; \n} \nlong[] arr = new long[100];\nlong n = arr.length;\nlong sum = odd_length_sum(arr); \nConsole.WriteLine(sum);\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "/tmp/tmp1yuoefhe.d(30): Error: function declaration without return type. (Note that constructors are always named `this`)\n/tmp/tmp1yuoefhe.d(30): Error: no identifier for declarator `Console.WriteLine(sum)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1yuoefhe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            if ((j - i + 1) % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \nlong sum_of_subarray(long[] arr, int i, int j) \n{ \n    long sum = 0; \n    for (int k = i; k <= j; k++) \n        sum += arr[k]; \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            if ((j - i + 1) % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \nlong sum_of_subarray(long[] arr, int start, int end) \n{ \n    long sum = 0; \n    for (int i = start; i <= end; i++) \n        sum += arr[i]; \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tlong curr_sum = 0;\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tcurr_sum += arr[j];\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tsum += curr_sum;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (long i = 0; i < arr.length; i++) \n    { \n        for (long j = i; j < arr.length; j++) \n        { \n            if ((j - i + 1) % 2 != 0) \n                sum += arr[j]; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpohkxb7df.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428105]\n??:? void tmpohkxb7df.__unittest_L20_C1() [0x427dd0]\n??:? void tmpohkxb7df.__modtest() [0x427e84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c163]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aff6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430189]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430638]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430115]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afcd]\n??:? runModuleUnitTests [0x42bf39]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285c8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tint n = arr.length;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i; j < n; j++) \n\t\t{\n\t\t\tint len = j - i + 1;\n\t\t\tif (len % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "/tmp/tmpib2ekc98.d(10): Error: cannot implicitly convert expression `arr.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpib2ekc98.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) \n    { \n        long curr_sum = 0; \n        for (int j = i; j < arr.length; j++) \n        { \n            curr_sum += arr[j]; \n            if (((j - i + 1) & 1) != 0) \n                sum += curr_sum; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) {\n\t\tfor (long j = i; j < arr.length; j++) {\n\t\t\tif ((j - i + 1) % 2 != 0) {\n\t\t\t\tfor (long k = i; k <= j; k++) {\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor(int i = 0; i < arr.length; i++) {\n\t\tfor(int j = i; j < arr.length; j++) {\n\t\t\tif((j - i + 1) % 2 != 0) {\n\t\t\t\tfor(int k = i; k <= j; k++) {\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tlong curr_sum = 0;\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tcurr_sum += arr[j];\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tsum += curr_sum;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tsum += sum(arr[i..j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "/tmp/tmpjvznu1ha.d(16): Error: function expected before `()`, not `sum` of type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjvznu1ha.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    int n = arr.length; \n  \n    // Iterate over all subarrays \n    for (int i = 0; i < n; i++) \n    { \n        // Iterate over all subarrays starting with i \n        for (int j = i; j < n; j++) \n        { \n            // Calculate sum of current subarray \n            long curr_sum = 0; \n            for (int k = i; k <= j; k++) \n                curr_sum += arr[k]; \n  \n            // Add current subarray sum to result if \n            // length of current subarray is odd \n            if ((j - i + 1) % 2 != 0) \n                sum += curr_sum; \n        } \n    } \n  \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "/tmp/tmpjl_23k99.d(10): Error: cannot implicitly convert expression `arr.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjl_23k99.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    long n = arr.length; \n    for (long i = 0; i < n; i++) { \n        for (long j = i; j < n; j++) { \n            long len = j - i + 1; \n            if (len % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "/tmp/tmpv6vb8jmx.d(15): Error: undefined identifier `sum_of_subarray`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv6vb8jmx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tint n = arr.length;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpaozwdos_.d(10): Error: cannot implicitly convert expression `arr.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaozwdos_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (long i = 0; i < arr.length; i++) { \n        long curr_sum = 0; \n        for (long j = i; j < arr.length; j++) { \n            curr_sum += arr[j]; \n            if ((j - i + 1) % 2 != 0) \n                sum += curr_sum; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfor (int j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++)\n\t{\n\t\tfor (long j = i; j < arr.length; j++)\n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0)\n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++)\n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) \n    { \n        for (int j = i; j < arr.length; j++) \n        { \n            if ((j - i + 1) % 2 != 0) \n                sum += arr[j]; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8ihaspj2.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4280fd]\n??:? void tmp8ihaspj2.__unittest_L20_C1() [0x427dc8]\n??:? void tmp8ihaspj2.__modtest() [0x427e7c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c15b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430181]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430630]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43010d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc5]\n??:? runModuleUnitTests [0x42bf31]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tsum += arr[i];\n\t}\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < arr.length - i; j++) \n\t\t{\n\t\t\tif (i % 2 != 0) \n\t\t\t{\n\t\t\t\tsum += arr[j] + arr[j + i];\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjgnzek2p.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x428175]\n??:? void tmpjgnzek2p.__unittest_L26_C1() [0x427e40]\n??:? void tmpjgnzek2p.__modtest() [0x427ef4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1d3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b066]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301f9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306a8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430185]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b03d]\n??:? runModuleUnitTests [0x42bfa9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428638]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) \n    { \n        for (int j = i; j < arr.length; j++) \n        { \n            if ((j - i + 1) % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "/tmp/tmpluq_5kut.d(15): Error: undefined identifier `sum_of_subarray`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluq_5kut.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tfor (int j = i; j < arr.length; j++)\n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0)\n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++)\n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tsum += arr[i];\n\t}\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i + 2; j < arr.length; j += 2) \n\t\t{\n\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t{\n\t\t\t\tsum += arr[k];\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    long n = arr.length; \n    for (long i = 0; i < n; i++) { \n        for (long j = i; j < n; j++) { \n            long len = j - i + 1; \n            if (len % 2 != 0) \n                sum += sum_of_subarray(arr, i, j); \n        } \n    } \n    return sum; \n} \nlong sum_of_subarray(long[] arr, long i, long j) \n{ \n    long sum = 0; \n    for (long k = i; k <= j; k++) \n        sum += arr[k]; \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tint j = i;\n\t\twhile (j < arr.length) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t\tj++;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tlong curr_sum = 0;\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tcurr_sum += arr[j];\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tsum += curr_sum;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tsum += ((i + 1) * (n - i) + 1) / 2 * arr[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor(long i = 0; i < arr.length; i++) \n\t{\n\t\tfor(long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif((j - i + 1) % 2 == 1) \n\t\t\t{\n\t\t\t\tfor(long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n    long sum = 0; \n    for (int i = 0; i < arr.length; i++) { \n        for (int j = i; j < arr.length; j++) { \n            int len = j - i + 1; \n            if (len % 2 != 0) \n                sum += arr[j]; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplidpx1ye.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x4280fd]\n??:? void tmplidpx1ye.__unittest_L19_C1() [0x427dcc]\n??:? void tmplidpx1ye.__modtest() [0x427e80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c15b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430181]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430630]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43010d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc5]\n??:? runModuleUnitTests [0x42bf31]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{ \n\tlong sum = 0; \n\tfor (int i = 0; i < arr.length; i++) \n\t{ \n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{ \n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{ \n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t\tsum += arr[k]; \n\t\t\t} \n\t\t} \n\t} \n\treturn sum; \n} \nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tfor (long j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tfor (int j = i; j < arr.length; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tfor (int j = i; j < arr.length; j++)\n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0)\n\t\t\t{\n\t\t\t\tfor (int k = i; k <= j; k++)\n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n\t\n*/\nlong odd_length_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong n = arr.length;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i; j < n; j++) \n\t\t{\n\t\t\tif ((j - i + 1) % 2 != 0) \n\t\t\t{\n\t\t\t\tfor (long k = i; k <= j; k++) \n\t\t\t\t{\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = odd_length_sum;\n\n    assert(candidate([1L, 2L, 4L]) == 14L);\n    assert(candidate([1L, 2L, 1L, 2L]) == 15L);\n    assert(candidate([1L, 7L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666122409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
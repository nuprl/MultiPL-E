{
  "name": "mbpp_72_dif_Square",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_72_dif_Square.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        return false; \n  \n    long double sr = sqrt(n); \n  \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmp5srqfrtk.d(13): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5srqfrtk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmph9_nfczo.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph9_nfczo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmph9_nfczo.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph9_nfczo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpuk7rji33.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuk7rji33.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong sqrt_n = cast(long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tfor (long j = i; j <= sqrt_n; j++) \n\t\t{\n\t\t\tif (i * i - j * j == n) \n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmp_kik3lux.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_kik3lux.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong root = sqrt(n);\n\t\n\tfor (long i = 0; i <= root; i++)\n\t{\n\t\tif (i * i == n)\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmp8tp918_i.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8tp918_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n == 0)\n\t\treturn true;\n\t\n\tlong x = (long)sqrt(n);\n\t\n\tif (x * x == n)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmp0po4d1n_.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0po4d1n_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpq4sxm1ap.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq4sxm1ap.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tif (n == 0) \n\t\treturn true;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\tif (root * root == n) \n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpg0klpvdm.d(16): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg0klpvdm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpq4sxm1ap.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq4sxm1ap.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    for (long i = 1; i * i <= n; i++) \n        if ((n % i == 0) && ((n / i) % 2 == 0)) \n            return true; \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm5hrr_r1.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpm5hrr_r1.__unittest_L17_C1() [0x427a7c]\n??:? void tmpm5hrr_r1.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n % 4 != 0) \n\t\treturn false;\n\t\n\tlong sqrt_n = cast(long)sqrt(n);\n\t\n\tfor (long i = 1; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == cast(long)sqrt(n - i * i)) \n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmp7pwy2o9j.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7pwy2o9j.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7pwy2o9j.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong root = sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmp4iin0lvs.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4iin0lvs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpo9sl4l72.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo9sl4l72.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    long root = (long)sqrt(n); \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpf0zeuro4.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf0zeuro4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\tn = -n;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tif(sqrt_n * sqrt_n == n)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpt6jyi_st.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt6jyi_st.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmp5s9wscun.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5s9wscun.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpexfnarpy.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpexfnarpy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong s = (long)sqrt(n);\n\t\n\treturn (s * s == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmp7q2tngh1.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7q2tngh1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\telse \n\t{\n\t\tlong x = (long)sqrt(n);\n\t\treturn x * x == n;\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmp3vos1q_g.d(16): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3vos1q_g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tif (n == 0 || n == 1) \n\t\treturn true;\n\t\n\tlong i = 2;\n\twhile (i * i <= n) \n\t{\n\t\tif (n % (i * i) == 0) \n\t\t\treturn true;\n\t\ti += 1;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnoct0n_9.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpnoct0n_9.__unittest_L25_C1() [0x427a88]\n??:? void tmpnoct0n_9.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpq4sxm1ap.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq4sxm1ap.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n<0)\n\t\treturn false;\n\t\t\n\tlong x = cast(long)sqrt(n);\n\t\n\treturn (x*x == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmph08dbfh0.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph08dbfh0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    long root = (long)sqrt(n); \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpf0zeuro4.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf0zeuro4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong sqrt_n = sqrt(n);\n\t\n\tfor(long i = 0; i <= sqrt_n; i++)\n\t{\n\t\tif(sqrt(n - i*i) == long(sqrt(n - i*i)))\n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpy0_o1hcu.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpy0_o1hcu.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpy0_o1hcu.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n == 0) \n\t{\n\t\treturn true;\n\t}\n\telse if (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\twhile (n % 2 == 0) \n\t{\n\t\tn /= 2;\n\t}\n\t\n\tif (n % 2 == 1) \n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvnj_750f.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpvnj_750f.__unittest_L31_C1() [0x427a88]\n??:? void tmpvnj_750f.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (i * i == n) \n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp49a8lp6d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmp49a8lp6d.__unittest_L20_C1() [0x427a5c]\n??:? void tmp49a8lp6d.__modtest() [0x427ab0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmph9_nfczo.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph9_nfczo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong s = cast(long)sqrt(n);\n\treturn s * s == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpbbg4x809.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbbg4x809.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n\tif (n < 0) \n\t\tn = -n; \n\t\n\tfor (long i = 1; i * i <= n; i++) \n\t\tif ((n % i == 0) && ((n / i) % 2 == 0)) \n\t\t\treturn true; \n\treturn false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6sqp83l_.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp6sqp83l_.__unittest_L18_C1() [0x427a7c]\n??:? void tmp6sqp83l_.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = (long)sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpqg_kr_ib.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqg_kr_ib.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong root = sqrt(n);\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp3r6oukw1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3r6oukw1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong s = (long)sqrt(n);\n\t\n\treturn s * s == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmprs4xql36.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprs4xql36.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tlong sqrt_n = cast(long)sqrt(n);\n\tif (sqrt_n * sqrt_n == n)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpy06eqsiq.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy06eqsiq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tfor (int i = 1; i <= n; i++) \n\t{\n\t\tif (i * i > n) \n\t\t\treturn false;\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tint j = n / i;\n\t\t\tif (i % 2 == 1 && j % 2 == 1) \n\t\t\t\treturn false;\n\t\t\tif (i % 2 == 0 && j % 2 == 0) \n\t\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmphb3jk0ug.d(19): Error: cannot implicitly convert expression `n / cast(long)i` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphb3jk0ug.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn *= -1;\n\t\n\tif (n == 0) \n\t\treturn true;\n\t\n\tif (n == 1) \n\t\treturn true;\n\t\n\tif (n == 2) \n\t\treturn false;\n\t\n\tif (n % 2 == 0) \n\t\treturn dif_Square(n / 2);\n\t\n\tfor (long i = 3; i <= sqrt(n); i += 2) \n\t{\n\t\tif (n % i == 0) \n\t\t\treturn dif_Square(n / i);\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp7vbm4m8z.d(25): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7vbm4m8z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\telse if (n == 0) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\tlong x = (long)sqrt(n);\n\t\treturn (x * x == n);\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpgb5hu82w.d(20): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgb5hu82w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = (long)sqrt(n);\n\treturn n == root * root;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp4tik6ym7.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4tik6ym7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tlong a, b;\n\tif (n < 0)\n\t\treturn false;\n\telse if (n == 0)\n\t\treturn true;\n\telse\n\t{\n\t\ta = (long)sqrt(n);\n\t\tb = a * a;\n\t\tif (b == n)\n\t\t\treturn true;\n\t\telse\n\t\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpc3h9athk.d(17): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3h9athk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tlong x = (long)sqrt(n);\n\treturn (x*x == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp_yus26dj.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_yus26dj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        return false; \n  \n    long double sr = sqrt(n); \n  \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmp5srqfrtk.d(13): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5srqfrtk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n<0)\n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor(long i=0; i<=sqrt_n; i++)\n\t{\n\t\tif(i*i == n)\n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpeduvnzhz.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeduvnzhz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong s = (long)sqrt(n);\n\t\n\treturn (s * s == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp3rwu9s0z.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3rwu9s0z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmph9_nfczo.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph9_nfczo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tlong x = (long)sqrt(n);\n\treturn (x*x == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp_yus26dj.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_yus26dj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpv_zgya98.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_zgya98.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpuk7rji33.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuk7rji33.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tint root = (int) sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpq5v20135.d(13): Error: C style cast illegal, use `cast(int)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq5v20135.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n\tif (n < 0) \n\t\tn = -n; \n\t\n\twhile (n % 2 == 0) \n\t\tn = n/2; \n\t\n\tif (n % 2 == 1) \n\t\treturn true; \n\treturn false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp06xv_yv8.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp06xv_yv8.__unittest_L20_C1() [0x427a97]\n??:? void tmp06xv_yv8.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpo9sl4l72.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo9sl4l72.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\telse \n\t{\n\t\tlong sq = (long)sqrt(n);\n\t\treturn (sq * sq == n);\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmprtgzz8oq.d(16): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprtgzz8oq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong sqrt_n = sqrt(n);\n\t\n\tif(sqrt_n * sqrt_n == n)\n\t\treturn true;\n\t\n\tfor(long i = 1; i <= sqrt_n; i++)\n\t{\n\t\tif(sqrt(n - i * i) == int(sqrt(n - i * i)))\n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpc70sezmn.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpc70sezmn.d(20): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpc70sezmn.d(20): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\tn = -n;\n\t\n\tlong root = sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmplqv5opub.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplqv5opub.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\tlong sq = (long)sqrt(n);\n\treturn (sq * sq == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmppn3g7axu.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppn3g7axu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpn3xbu6q6.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn3xbu6q6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tif (n == 0 || n == 1) \n\t{\n\t\treturn true;\n\t}\n\t\n\tfor (long i = 2; i <= n / 2; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tlong count = 0;\n\t\t\twhile (n % i == 0) \n\t\t\t{\n\t\t\t\tn = n / i;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\t\n\t\t\tif (i % 4 == 3 && count % 2 != 0) \n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbx1m0pqp.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpbx1m0pqp.__unittest_L40_C1() [0x427aff]\n??:? void tmpbx1m0pqp.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\telse if (n == 0)\n\t\treturn true;\n\telse\n\t{\n\t\tlong sq = (long)sqrt(n);\n\t\treturn (sq * sq == n);\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpaz3ool3x.d(16): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaz3ool3x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tlong sqrt_n = (long)sqrt(n);\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tfor (long j = i; j <= sqrt_n; j++) \n\t\t{\n\t\t\tif (i * i - j * j == n) \n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp8s8u35qb.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8s8u35qb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\t// if n is a perfect square\n\tif (n == sqrt(n) * sqrt(n))\n\t\treturn true;\n\t\n\t// if n is an odd number\n\tif (n & 1)\n\t\treturn false;\n\t\n\t// if n is an even number\n\tfor (long i = 2; i <= sqrt(n); i += 2)\n\t{\n\t\tif (i * i == n)\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpkzp36y2y.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpkzp36y2y.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpkzp36y2y.d(19): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\telse if (n == 0) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\tlong sqrt_n = cast(long) sqrt(n);\n\t\tfor (long i = 1; i <= sqrt_n; i++) \n\t\t{\n\t\t\tif (sqrt(n - i * i) == cast(long) sqrt(n - i * i)) \n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpp6ynjjgz.d(20): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpp6ynjjgz.d(23): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpp6ynjjgz.d(23): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tint i = 1;\n\twhile (i * i < n) \n\t{\n\t\tint j = 1;\n\t\twhile (j * j < n) \n\t\t{\n\t\t\tif (i * i - j * j == n) \n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5q1nidyc.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmp5q1nidyc.__unittest_L26_C1() [0x427a74]\n??:? void tmp5q1nidyc.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong root = sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp68d0wj7q.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp68d0wj7q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\twhile (n % 2 == 0) \n\t\tn >>= 1;\n\t\n\tif (n % 8 == 7) \n\t\treturn false;\n\t\n\tfor (long i = 3; i * i <= n; i += 2) \n\t{\n\t\tlong count = 0;\n\t\twhile (n % i == 0) \n\t\t{\n\t\t\tn /= i;\n\t\t\tcount++;\n\t\t}\n\t\tif (i % 4 == 3 && count % 2 != 0) \n\t\t\treturn false;\n\t}\n\treturn n % 4 != 3;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpl5ie7xll.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427ded]\n??:? void tmpl5ie7xll.__unittest_L32_C1() [0x427b37]\n??:? void tmpl5ie7xll.__modtest() [0x427b6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42823c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tfor (long i = 1; i * i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0 && n / i % 2 == 0) \n\t\t\t\treturn true;\n\t\t\tif (i % 2 == 1 && n / i % 2 == 1) \n\t\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\telse \n\t{\n\t\tlong root = cast(long)sqrt(n);\n\t\treturn root * root == n;\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpnhbk8xd8.d(16): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnhbk8xd8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    return (floor(sqrt(n)) * floor(sqrt(n)) == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpb0r56k_i.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpb0r56k_i.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0r56k_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\telse if (n == 0) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\tlong a = (long)sqrt(n);\n\t\treturn (a * a == n);\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpu0kh58z_.d(20): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu0kh58z_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n\tif (n < 0) \n\t\tn = -n; \n\t\n\twhile (n % 2 == 0) \n\t\tn = n / 2; \n\t\n\tif (n % 2 == 1) \n\t\treturn true; \n\treturn false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhugmwbw.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmplhugmwbw.__unittest_L20_C1() [0x427a97]\n??:? void tmplhugmwbw.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong sq = (long)sqrt(n);\n\t\n\treturn (sq*sq == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpscmqduy_.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpscmqduy_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long) sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp8xjzhvft.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xjzhvft.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmph9_nfczo.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph9_nfczo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong m = (long)sqrt(n);\n\t\n\treturn (m * m == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpe_jzojme.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe_jzojme.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tlong t = n;\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n % 2 == 0)\n\t\tn /= 2;\n\tif (n % 2 == 1)\n\t\treturn false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6gnsc9a8.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp6gnsc9a8.__unittest_L19_C1() [0x427a78]\n??:? void tmp6gnsc9a8.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n % 4 != 0)\n\t\treturn false;\n\t\n\tlong sqrt_n = sqrt(n);\n\t\n\tfor(long i = 1; i <= sqrt_n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tif(i % 2 == 0 && (n / i) % 2 == 0)\n\t\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpywn9e0q3.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpywn9e0q3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpu7vkxblr.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu7vkxblr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpp0aqtn_b.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp0aqtn_b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\telse \n\t{\n\t\tlong x = (long)sqrt(n);\n\t\treturn (x * x == n);\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpshtijiny.d(16): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpshtijiny.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tif (n == 0) \n\t{\n\t\treturn true;\n\t}\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\tif (root * root == n) \n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp6s53utqa.d(20): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6s53utqa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong sqr = (long)sqrt(n);\n\t\n\treturn (sqr * sqr == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpa2j1xs65.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa2j1xs65.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong sqrt_n = cast(long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tfor (long j = i; j <= sqrt_n; j++) \n\t\t{\n\t\t\tif (i * i - j * j == n) \n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmp_kik3lux.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_kik3lux.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong x = (long)sqrt(n);\n\t\n\treturn (x * x == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp4ge01tgz.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ge01tgz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmph9_nfczo.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph9_nfczo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\telse \n\t{\n\t\tlong i = 0;\n\t\twhile (i * i < n) \n\t\t{\n\t\t\tif ((n - i * i) % 2 == 0) \n\t\t\t{\n\t\t\t\tlong j = (n - i * i) / 2;\n\t\t\t\tif (j >= 0 && j == sqrt(j)) \n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpqzfp73uq.d(22): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqzfp73uq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp0nzsjf03.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmp0nzsjf03.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0nzsjf03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn n == root * root;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmplln258lp.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplln258lp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpo9sl4l72.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo9sl4l72.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\twhile (n % 2 == 0) \n\t{\n\t\tn = n / 2;\n\t}\n\t\n\tif (n % 2 == 1) \n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy5lxrcma.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpy5lxrcma.__unittest_L27_C1() [0x427a97]\n??:? void tmpy5lxrcma.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\tif(n == 0)\n\t\treturn true;\n\t\n\tlong s = cast(long)sqrt(n);\n\t\n\tif(s * s == n)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp40ltihgx.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp40ltihgx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\telse if (n == 0) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\tlong sq = (long)sqrt(n);\n\t\treturn (sq * sq == n);\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpmvuf7g6u.d(20): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmvuf7g6u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n    if (n % 4 != 0) \n        return false;\n    else \n    {\n        long a = (long)sqrt(n / 4);\n        return a * a == n / 4;\n    }\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmphd86_3l8.d(14): Error: C style cast illegal, use `cast(long)sqrt(n / 4)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphd86_3l8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tif (sqrt_n * sqrt_n == n) \n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpwt7jwov0.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwt7jwov0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = cast(long)sqrt(n);\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpcv2xkpr2.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcv2xkpr2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong sq = (long)sqrt(n);\n\t\n\treturn (sq*sq == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpznbm79yp.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpznbm79yp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        return false; \n  \n    long double sr = sqrt(n); \n  \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmp5srqfrtk.d(13): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5srqfrtk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = (long)sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpqg_kr_ib.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqg_kr_ib.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpuk7rji33.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuk7rji33.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n == 0) \n\t\treturn true;\n\tif (n < 0) \n\t\tn = -n;\n\tlong root = cast(long)sqrt(n);\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp08cn135d.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp08cn135d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmph9_nfczo.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph9_nfczo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpzeo4d0b_.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzeo4d0b_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong root = sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpw6z4v_41.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw6z4v_41.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    long sqrt_n = (long)sqrt(n); \n    for (long i = 0; i <= sqrt_n; i++) \n        if (i * i == n) \n            return true; \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmptyba08ah.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptyba08ah.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpuk7rji33.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuk7rji33.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    long root = (long)sqrt(n); \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpf0zeuro4.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf0zeuro4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    long root = (long)sqrt(n); \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpf0zeuro4.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf0zeuro4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tif (n == 0) \n\t{\n\t\treturn true;\n\t}\n\tif (n % 2 == 1) \n\t{\n\t\treturn false;\n\t}\n\tlong m = n / 2;\n\tlong i = 1;\n\twhile (i <= m) \n\t{\n\t\tif (i * i == m) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\ti += 1;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgqbepl19.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpgqbepl19.__unittest_L34_C1() [0x427aa8]\n??:? void tmpgqbepl19.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\tlong sqrt_n = (long)sqrt(n);\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i)) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpm3g8fcnf.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmpm3g8fcnf.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm3g8fcnf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpo9sl4l72.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo9sl4l72.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong sqrt_n = cast(long)sqrt(n);\n\t\n\tfor (long i = 1; i <= sqrt_n; i++) \n\t{\n\t\tif (n == i * i) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpfxpmyacd.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxpmyacd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tint i = 0;\n\tlong sq = 0;\n\twhile (sq <= n) \n\t{\n\t\tsq = i * i;\n\t\tif (sq == n)\n\t\t\treturn true;\n\t\ti++;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwbmcuag9.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpwbmcuag9.__unittest_L21_C1() [0x427a58]\n??:? void tmpwbmcuag9.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong sqrt_n = cast(long) sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++)\n\t{\n\t\tif (sqrt(n - i*i) == cast(long) sqrt(n - i*i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpv7rojgn7.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpv7rojgn7.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpv7rojgn7.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn dif_Square(-n);\n\t\n\tlong t = (long)sqrt(n);\n\t\n\treturn t * t == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmprhoww6gc.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprhoww6gc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tlong sqrt_n = sqrt(n);\n\tif (sqrt_n * sqrt_n == n)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp8yx7u5ih.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8yx7u5ih.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpqiwp_qd_.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqiwp_qd_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    // If n is odd, it cannot be represented as the difference of two squares \n    if (n % 2 == 1) \n        return false; \n  \n    // If n is even, then it can be represented as the difference of two squares \n    // if and only if it can be divided by 4. \n    return n % 4 == 0; \n} \n  \n// Driver program to test above function \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2akmvxm_.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp2akmvxm_.__unittest_L20_C1() [0x427a54]\n??:? void tmp2akmvxm_.__modtest() [0x427aa8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpq4sxm1ap.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq4sxm1ap.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n % 4 != 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong sqrt_n = sqrt(n);\n\t\n\tfor (long i = 1; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == long(sqrt(n - i * i))) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpvpreov8z.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpvpreov8z.d(19): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpvpreov8z.d(19): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    long root = (long)sqrt(n); \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpf0zeuro4.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf0zeuro4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\tlong root = sqrt(n);\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp24hmth6t.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp24hmth6t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n % 4 != 0)\n\t\treturn false;\n\t\n\tlong x = (long)sqrt(n / 4);\n\t\n\treturn x * x == n / 4;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpp9dwymuf.d(13): Error: C style cast illegal, use `cast(long)sqrt(n / 4)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp9dwymuf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp0nzsjf03.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmp0nzsjf03.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0nzsjf03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpsvv7ufk0.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsvv7ufk0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    for (int i = 1; i * i <= n; i++) \n        if ((n % i == 0) && ((n / i) % 2 == 0)) \n            return true; \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcsil19dk.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpcsil19dk.__unittest_L17_C1() [0x427a7c]\n??:? void tmpcsil19dk.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong limit = cast(long)sqrt(n);\n\tfor (long i = 1; i <= limit; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tlong divisor = n / i;\n\t\t\tif (divisor % 2 == 0) \n\t\t\t{\n\t\t\t\tlong a = divisor / 2;\n\t\t\t\tlong b = i;\n\t\t\t\tif (a > b) \n\t\t\t\t{\n\t\t\t\t\tlong temp = a;\n\t\t\t\t\ta = b;\n\t\t\t\t\tb = temp;\n\t\t\t\t}\n\t\t\t\tif (a * a + b * b == n) \n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp3d2o38la.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3d2o38la.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp0nzsjf03.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmp0nzsjf03.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0nzsjf03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpuk7rji33.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuk7rji33.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmp5s9wscun.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5s9wscun.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    while (n % 2 == 0) \n        n = n / 2; \n    if (n % 2 == 1) \n        return true; \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpltmbii9s.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpltmbii9s.__unittest_L18_C1() [0x427a97]\n??:? void tmpltmbii9s.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\telse \n\t{\n\t\tlong sqrt_n = cast(long) sqrt(n);\n\t\treturn (sqrt_n * sqrt_n == n);\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpnl447zq3.d(16): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnl447zq3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\telse \n\t{\n\t\tlong a = (long)sqrt(n);\n\t\treturn a * a == n;\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpnggpj2z8.d(16): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnggpj2z8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n<0)\n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\tif(root*root == n)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmprer3g7dk.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprer3g7dk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\tlong sq = (long)sqrt(n);\n\treturn (sq * sq == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp6rg6mzwr.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6rg6mzwr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++)\n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpl7j4e2x0.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmpl7j4e2x0.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl7j4e2x0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp0nzsjf03.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmp0nzsjf03.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0nzsjf03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\tlong root = cast(long)sqrt(n);\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpj8x6dnoc.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj8x6dnoc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\tlong a = (long)sqrt(n);\n\treturn (a * a == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp8ceh05p9.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8ceh05p9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        return dif_Square(-n); \n    long root = (long)sqrt(n); \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp3pb03f91.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3pb03f91.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmph9_nfczo.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph9_nfczo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpg4voceh9.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg4voceh9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = (long)sqrt(n);\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpphd1fk2k.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpphd1fk2k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong m = (long)sqrt(n);\n\t\n\treturn (m * m == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpzwxztewn.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzwxztewn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpcqwgj1vh.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcqwgj1vh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\telse if (n == 0) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\tlong a = (long)sqrt(n);\n\t\treturn a * a == n;\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp_ha_5pqd.d(20): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ha_5pqd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp58m4nhhg.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmp58m4nhhg.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp58m4nhhg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t{\n\t\tn = -n;\n\t}\n\t\n\tif(n == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(n % 2 == 0)\n\t{\n\t\treturn dif_Square(n / 2);\n\t}\n\t\n\tfor(long i = 3; i <= sqrt(n); i += 2)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\treturn dif_Square(n / i);\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpiacfv3tc.d(25): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiacfv3tc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = (long)sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpqg_kr_ib.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqg_kr_ib.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tif (n == 0) \n\t{\n\t\treturn true;\n\t}\n\t\n\tlong i = 1;\n\twhile (i * i < n) \n\t{\n\t\ti++;\n\t}\n\t\n\tif (i * i == n) \n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnm6xb6hv.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmpnm6xb6hv.__unittest_L33_C1() [0x427a6c]\n??:? void tmpnm6xb6hv.__modtest() [0x427ac0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tfor (long i = 1; i * i <= n; i++) \n\t{\n\t\tlong j = n - i * i;\n\t\tif (j < 0) \n\t\t\tbreak;\n\t\t\n\t\tif (j == 0) \n\t\t\treturn true;\n\t\t\n\t\tif (j % 2 == 0) \n\t\t{\n\t\t\tlong k = j / 2;\n\t\t\tif (k % 2 == 0) \n\t\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfaiihgfr.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpfaiihgfr.__unittest_L31_C1() [0x427b02]\n??:? void tmpfaiihgfr.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tif (n == 0) \n\t\treturn true;\n\t\n\tlong m = (long)sqrt(n);\n\t\n\tfor (long i = 1; i <= m; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tlong j = n / i;\n\t\t\tif (i % 2 == 0 && j % 2 == 0) \n\t\t\t\treturn true;\n\t\t\tif (i % 2 == 1 && j % 2 == 1) \n\t\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpgqa5sn5m.d(16): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgqa5sn5m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpsvv7ufk0.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsvv7ufk0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong s = cast(long) sqrt(n);\n\treturn s * s == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmppzk13nmp.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppzk13nmp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpib0q_rhp.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpib0q_rhp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\tlong sqrt_n = (long)sqrt(n);\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i)) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpm3g8fcnf.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmpm3g8fcnf.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm3g8fcnf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        return false; \n  \n    // If n is a perfect square \n    long sqrt_n = (long)sqrt(n); \n    return (sqrt_n*sqrt_n == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp6i8qft2q.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6i8qft2q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong x = (long)sqrt(n);\n\t\n\tif(x * x == n)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpm0lpdb0m.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm0lpdb0m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\tif(root * root == n)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpz5ieyr8y.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz5ieyr8y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong sqrt_n = cast(long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tfor (long j = i; j <= sqrt_n; j++) \n\t\t{\n\t\t\tif (i * i - j * j == n) \n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmp_kik3lux.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_kik3lux.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor(long i = 0; i <= sqrt_n; i++)\n\t{\n\t\tif(i*i == n)\n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpovl2q3po.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpovl2q3po.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tlong x = long(sqrt(n));\n\treturn (x*x == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpa6m8ca8j.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa6m8ca8j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp0h1__g3z.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0h1__g3z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpgrikebet.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgrikebet.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tif (n % 2 == 0) \n\t{\n\t\treturn true;\n\t}\n\t\n\tfor (long i = 3; i <= sqrt(n); i += 2) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpuon4p7vg.d(20): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuon4p7vg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmplhnqyq1f.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplhnqyq1f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\tlong sqrt_n = (long)sqrt(n);\n\tfor (long i = 0; i <= sqrt_n; i++)\n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp0s0ztamc.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmp0s0ztamc.d(15): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0s0ztamc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        return false; \n    long root = (long)sqrt(n); \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpt8ehj94g.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt8ehj94g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    switch (n % 4) \n    { \n    case 0: \n        return true; \n    case 1: \n        return false; \n    case 2: \n        return true; \n    case 3: \n        return false; \n    } \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpyipp915v.d(12): Error: `switch` statement without a `default`; use `final switch` or add `default: assert(0);` or add `default: break;`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyipp915v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    long root = sqrt(n); \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmptyl3ti_4.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptyl3ti_4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        return dif_Square(-n); \n  \n    for (long i = 1; i * i <= n; i++) { \n        long j = sqrt(n - i * i); \n        if (i * i + j * j == n) \n            return true; \n    } \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp2n2hvlzo.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2n2hvlzo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmph9_nfczo.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph9_nfczo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\telse if(n == 0)\n\t\treturn true;\n\telse\n\t{\n\t\tlong sq = cast(long)sqrt(n);\n\t\treturn (sq*sq == n);\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp34wuod5p.d(16): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp34wuod5p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tfor (long i = 0; i <= n; i++) \n\t{\n\t\tif (i * i == n) \n\t\t\treturn true;\n\t\t\n\t\tif (i * i > n) \n\t\t\treturn false;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1155i4s.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmpb1155i4s.__unittest_L24_C1() [0x427a6c]\n??:? void tmpb1155i4s.__modtest() [0x427ac0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\telse \n\t{\n\t\tlong a = sqrt(n);\n\t\treturn (a * a == n);\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp2a3_d84w.d(16): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2a3_d84w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n == 0) \n\t{\n\t\treturn true;\n\t}\n\telse if (n < 0) \n\t{\n\t\treturn dif_Square(-n);\n\t}\n\telse \n\t{\n\t\tlong x = (long)sqrt(n);\n\t\tfor (long i = 1; i <= x; i++) \n\t\t{\n\t\t\tif (i * i == n) \n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp_4qxugc6.d(20): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_4qxugc6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0) return false;\n\tif(n == 0) return true;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmptpa5u3h_.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptpa5u3h_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n<0)\n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor(long i=0;i<=sqrt_n;i++)\n\t{\n\t\tif(i*i==n)\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpg_iy45mn.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg_iy45mn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\t// if n is a perfect square\n\tif (n == 0 || n == 1)\n\t\treturn true;\n\tif (n < 0)\n\t\tn = -n;\n\tlong sqrt_n = cast(long)sqrt(n);\n\tfor (long i = 2; i <= sqrt_n; i++)\n\t{\n\t\tif (i * i == n)\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp7lnio_yx.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7lnio_yx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\tif (root * root == n) \n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmptkzdb0ey.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptkzdb0ey.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong root = sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpnbui1t_x.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnbui1t_x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        return false; \n  \n    long double sr = sqrt(n); \n  \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmp5srqfrtk.d(13): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5srqfrtk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp0nzsjf03.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmp0nzsjf03.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0nzsjf03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tauto sq = cast(long)sqrt(n);\n\treturn (sq*sq == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpb2b0bjbc.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb2b0bjbc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    for (long i = 1; i * i <= n; i++) \n        if ((n % i == 0) && ((n / i) % 2 == 0)) \n            return true; \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm5hrr_r1.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpm5hrr_r1.__unittest_L17_C1() [0x427a7c]\n??:? void tmpm5hrr_r1.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n<0)\n\t\treturn false;\n\telse if(n==0)\n\t\treturn true;\n\telse\n\t{\n\t\tlong a = cast(long)sqrt(n);\n\t\tif(a*a==n)\n\t\t\treturn true;\n\t\telse\n\t\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpw2605uuc.d(16): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw2605uuc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tif(n == 0) \n\t{\n\t\treturn true;\n\t}\n\t\n\tlong i = 1;\n\twhile(i * i < n) \n\t{\n\t\ti++;\n\t}\n\t\n\tif(i * i == n) \n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptbaw0cyh.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmptbaw0cyh.__unittest_L33_C1() [0x427a68]\n??:? void tmptbaw0cyh.__modtest() [0x427abc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tif (n == 0) \n\t\treturn true;\n\t\n\tlong sqrt_n = cast(long)sqrt(n);\n\t\n\tfor (long i = 1; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == cast(long)sqrt(n - i * i)) \n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmptdrzqtj4.d(16): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmptdrzqtj4.d(20): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmptdrzqtj4.d(20): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long) sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp8xjzhvft.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xjzhvft.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\telse if (n == 0) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\tlong sqrt_n = (long)sqrt(n);\n\t\tfor (long i = 1; i <= sqrt_n; i++) \n\t\t{\n\t\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i)) \n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpwdr7bj9v.d(20): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmpwdr7bj9v.d(23): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdr7bj9v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n == 0)\n\t\treturn true;\n\tif (n < 0)\n\t\tn = -n;\n\tlong root = cast(long)sqrt(n);\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp7apso3yl.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7apso3yl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    for (long i = 1; i * i <= n; i++) \n        if ((n % i == 0) && ((n / i) % 2 == 0)) \n            return true; \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm5hrr_r1.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpm5hrr_r1.__unittest_L17_C1() [0x427a7c]\n??:? void tmpm5hrr_r1.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tif (n == 0) \n\t{\n\t\treturn true;\n\t}\n\tif (n == 1) \n\t{\n\t\treturn false;\n\t}\n\tif (n == 2) \n\t{\n\t\treturn true;\n\t}\n\tif (n % 2 == 0) \n\t{\n\t\treturn dif_Square(n / 2);\n\t}\n\tfor (long i = 3; i <= sqrt(n); i += 2) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\treturn dif_Square(n / i);\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpf5s1g6zp.d(30): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf5s1g6zp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    long sqrt_n = (long)sqrt(n); \n    for (long i = 0; i <= sqrt_n; i++) \n        for (long j = 0; j <= sqrt_n; j++) \n            if ((i * i - j * j) == n) \n                return true; \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp6n41_tsz.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6n41_tsz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmptia0kcta.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptia0kcta.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmpo9sl4l72.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo9sl4l72.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tfor (long j = i; j <= sqrt_n; j++) \n\t\t{\n\t\t\tif ((i * i - j * j) == n) \n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmpi0b5wzh4.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi0b5wzh4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n % 4 == 0) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124006,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8da5eufz.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d0d]\n??:? void tmp8da5eufz.__unittest_L19_C1() [0x427a3c]\n??:? void tmp8da5eufz.__modtest() [0x427a90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9e5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a89d]\n??:? runModuleUnitTests [0x42b809]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42815c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n == 0) \n\t\treturn true;\n\tif (n < 0) \n\t\tn = -n;\n\twhile (n % 4 == 0) \n\t\tn /= 4;\n\tif (n % 8 == 7) \n\t\treturn true;\n\tfor (long i = 1; i * i <= n; i++) \n\t{\n\t\tlong t = sqrt(n - i * i);\n\t\tif (t * t == n - i * i) \n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp256c1757.d(20): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp256c1757.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\tif (root * root == n) \n\t{\n\t\treturn true;\n\t}\n\t\n\tfor (long i = 1; i < root; i++) \n\t{\n\t\tif (i * i < n) \n\t\t{\n\t\t\tlong diff = n - i * i;\n\t\t\tlong sqrt_diff = (long)sqrt(diff);\n\t\t\tif (sqrt_diff * sqrt_diff == diff) \n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmplu1rv3ck.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmplu1rv3ck.d(27): Error: C style cast illegal, use `cast(long)sqrt(diff)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplu1rv3ck.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmph9_nfczo.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph9_nfczo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "/tmp/tmph9_nfczo.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph9_nfczo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong s = (long)sqrt(n);\n\t\n\treturn (s * s == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp976ji8bn.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp976ji8bn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tif(sqrt_n * sqrt_n == n)\n\t\treturn true;\n\t\n\tfor(long i = 1; i <= sqrt_n; i++) \n\t{\n\t\tif(sqrt_n * sqrt_n - i * i == n)\n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "/tmp/tmp25cywv8w.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp25cywv8w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
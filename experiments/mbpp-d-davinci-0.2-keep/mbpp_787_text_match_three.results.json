{
  "name": "mbpp_787_text_match_three",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_787_text_match_three.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b{3}\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmppex3loss.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppex3loss.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"a[b]{3}\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp56q6_7mh.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp56q6_7mh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpr77t617f.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr77t617f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpfowgd7g8.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfowgd7g8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+bbb\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmppxgodcju.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppxgodcju.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn (text.length > 4) && (text[0] == 'a') && (text[1] == 'b') && (text[2] == 'b') && (text[3] == 'b');\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122719,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpanzd1vf7.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpanzd1vf7.__unittest_L11_C1() [0x427b81]\n??:? void tmpanzd1vf7.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpcnrkna4i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnrkna4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a...b\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122718,
      "stdout": "",
      "stderr": "/tmp/tmpszl0uj34.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpszl0uj34.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpfowgd7g8.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfowgd7g8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a[b]{3}\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122718,
      "stdout": "",
      "stderr": "/tmp/tmpvzhvufrm.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvzhvufrm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpr77t617f.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr77t617f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\tif(text.length < 4)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tfor(int i = 1; i < 4; i++)\n\t{\n\t\tif(text[i] != 'b')\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122719,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpji5a5iyr.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpji5a5iyr.__unittest_L23_C1() [0x427b49]\n??:? void tmpji5a5iyr.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb77]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43004c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e1]\n??:? runModuleUnitTests [0x42b94d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a[b]{3}\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "/tmp/tmp9rk86xhy.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9rk86xhy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+bbb\") is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122718,
      "stdout": "",
      "stderr": "/tmp/tmphtj530rn.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphtj530rn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b{3}\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmppex3loss.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppex3loss.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a[b]{3}/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpw0i9y8vf.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw0i9y8vf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"a[b]{3}\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp56q6_7mh.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp56q6_7mh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpr77t617f.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr77t617f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpfowgd7g8.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfowgd7g8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpcnrkna4i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnrkna4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a[b]{3}/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpw0i9y8vf.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw0i9y8vf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "/tmp/tmp7t77b0bv.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7t77b0bv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "/tmp/tmp7t77b0bv.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7t77b0bv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a[b]{3}\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122718,
      "stdout": "",
      "stderr": "/tmp/tmpvzhvufrm.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvzhvufrm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a+b{3}\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122718,
      "stdout": "",
      "stderr": "/tmp/tmp9frarhty.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9frarhty.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpfowgd7g8.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfowgd7g8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\tif (text.length < 4) return false;\n\t\n\tif (text[0] != 'a') return false;\n\t\n\tfor (int i = 1; i < 4; i++)\n\t{\n\t\tif (text[i] != 'b') return false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122719,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpitxu4kd5.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpitxu4kd5.__unittest_L20_C1() [0x427b49]\n??:? void tmpitxu4kd5.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb77]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43004c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e1]\n??:? runModuleUnitTests [0x42b94d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpr77t617f.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr77t617f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a(bbb)?\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122718,
      "stdout": "",
      "stderr": "/tmp/tmpc9sj0l3i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc9sj0l3i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpr77t617f.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr77t617f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a[b]{3}/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpw0i9y8vf.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw0i9y8vf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpfowgd7g8.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfowgd7g8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpr77t617f.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr77t617f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpfowgd7g8.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfowgd7g8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpcnrkna4i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnrkna4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"a[b]{3}\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp56q6_7mh.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp56q6_7mh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*bbb\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122718,
      "stdout": "",
      "stderr": "/tmp/tmpupysh7xg.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpupysh7xg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpfowgd7g8.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfowgd7g8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpcnrkna4i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnrkna4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpr77t617f.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr77t617f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a+b+b+b+\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "/tmp/tmp3szk_0i6.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3szk_0i6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpr77t617f.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr77t617f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpr77t617f.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr77t617f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpcnrkna4i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnrkna4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a[b]{3}/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpw0i9y8vf.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw0i9y8vf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "/tmp/tmpu9g4oyqa.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu9g4oyqa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpcnrkna4i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnrkna4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\tint i = 0;\n\tint count = 0;\n\t\n\twhile(i < text.length)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse if(text[i] == 'b')\n\t\t{\n\t\t\tcount--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tif(count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122719,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmynqmfak.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427ded]\n??:? void tmpmynqmfak.__unittest_L38_C1() [0x427b30]\n??:? void tmpmynqmfak.__modtest() [0x427b6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb87]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbad]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43005c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb39]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f1]\n??:? runModuleUnitTests [0x42b95d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a[b]{3}/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpw0i9y8vf.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw0i9y8vf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpcnrkna4i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnrkna4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a[b]{3}\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122718,
      "stdout": "",
      "stderr": "/tmp/tmpp9k_2clo.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp9k_2clo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a/bbb/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122718,
      "stdout": "",
      "stderr": "/tmp/tmpzh2d21xe.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzh2d21xe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpcnrkna4i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnrkna4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpr77t617f.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr77t617f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a[b]{3}/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpw0i9y8vf.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw0i9y8vf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"a[b]{3}\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp56q6_7mh.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp56q6_7mh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\tbool match = false;\n\tif (text.length() >= 4) \n\t{\n\t\tif (text[0] == 'a') \n\t\t{\n\t\t\tif (text[1] == 'b') \n\t\t\t{\n\t\t\t\tif (text[2] == 'b') \n\t\t\t\t{\n\t\t\t\t\tif (text[3] == 'b') \n\t\t\t\t\t{\n\t\t\t\t\t\tmatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn match;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122718,
      "stdout": "",
      "stderr": "/tmp/tmp7gk6fc_o.d(10): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7gk6fc_o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpr77t617f.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr77t617f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a/b/b/b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122718,
      "stdout": "",
      "stderr": "/tmp/tmpv0jcmff6.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv0jcmff6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\tif (text.length < 4)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tfor (int i = 1; i < 4; i++)\n\t{\n\t\tif (text[i] != 'b')\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpndv27sj2.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpndv27sj2.__unittest_L23_C1() [0x427b49]\n??:? void tmpndv27sj2.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb77]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43004c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e1]\n??:? runModuleUnitTests [0x42b94d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpfowgd7g8.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfowgd7g8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpcnrkna4i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnrkna4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpfowgd7g8.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfowgd7g8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a(bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpbctpcxeq.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbctpcxeq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+bbb\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmppxgodcju.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppxgodcju.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a.b.b.b\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122718,
      "stdout": "",
      "stderr": "/tmp/tmpmqqv5dno.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmqqv5dno.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn (text.length > 4) && (text[0] == 'a') && (text[1] == 'b') && (text[2] == 'b') && (text[3] == 'b');\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122719,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpanzd1vf7.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpanzd1vf7.__unittest_L11_C1() [0x427b81]\n??:? void tmpanzd1vf7.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpfowgd7g8.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfowgd7g8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpcnrkna4i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnrkna4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\tif (text.length < 4) \n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[0] != 'a') \n\t{\n\t\treturn false;\n\t}\n\t\n\tfor (int i = 1; i < 4; i++) \n\t{\n\t\tif (text[i] != 'b') \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122719,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkn9pny26.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpkn9pny26.__unittest_L29_C1() [0x427b49]\n??:? void tmpkn9pny26.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb77]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43004c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e1]\n??:? runModuleUnitTests [0x42b94d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpfowgd7g8.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfowgd7g8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpr77t617f.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr77t617f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpcnrkna4i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnrkna4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "/tmp/tmp7t77b0bv.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7t77b0bv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn (text.length == 5 && text[0] == 'a' && text[1] == 'b' && text[2] == 'b' && text[3] == 'b' && text[4] == 'b');\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122719,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppv8_pg6e.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmppv8_pg6e.__unittest_L11_C1() [0x427b88]\n??:? void tmppv8_pg6e.__modtest() [0x427bc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpr77t617f.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr77t617f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn (text == \"a\" ~ \"bbb\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122719,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm3_5hlms.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e75]\n??:? void tmpm3_5hlms.__unittest_L11_C1() [0x427b1c]\n??:? void tmpm3_5hlms.__modtest() [0x427bf4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb1f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb45]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fad1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa05]\n??:? runModuleUnitTests [0x42b8f5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpr77t617f.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr77t617f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpfowgd7g8.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfowgd7g8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*bbb\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "/tmp/tmp7frara0b.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7frara0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpfowgd7g8.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfowgd7g8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a...b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpth800suq.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpth800suq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpcnrkna4i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnrkna4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpcnrkna4i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnrkna4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*bbb\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "/tmp/tmp7frara0b.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7frara0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"a{3}b\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122718,
      "stdout": "",
      "stderr": "/tmp/tmp_579jxjk.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_579jxjk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpfowgd7g8.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfowgd7g8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpfowgd7g8.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfowgd7g8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpcnrkna4i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnrkna4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a?bbb\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122718,
      "stdout": "",
      "stderr": "/tmp/tmp1gizh25q.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1gizh25q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpcnrkna4i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnrkna4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpifmt7uri.d(9): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifmt7uri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmp0p7b6ek0.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p7b6ek0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a[b]{3}/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpw0i9y8vf.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw0i9y8vf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a*b*b*b*\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpfowgd7g8.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfowgd7g8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpcnrkna4i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnrkna4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpcnrkna4i.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnrkna4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n{\n\treturn text.match(\"/a/b/b/b/\");\n}\nunittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666122718,
      "stdout": "",
      "stderr": "/tmp/tmpv0jcmff6.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv0jcmff6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_452_loss_amount",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\n*/\nlong loss_amount(long actual_cost, long sale_amount) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_452_loss_amount.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = loss_amount;\n\n    assert(candidate(1500L, 1200L) == 0L);\n    assert(candidate(100L, 200L) == 100L);\n    assert(candidate(2000L, 5000L) == 3000L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn (actual_cost - sale_amount);\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif (actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn (actual_cost - sale_amount);\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\treturn 0;\n}",
    "{\n\treturn actual_cost - sale_amount;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif (actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\treturn 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost - sale_amount);\n}",
    "{\n\tif (actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn actual_cost - sale_amount;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif (actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tif (actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\treturn 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tif (actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost - sale_amount);\n}",
    "{\n\treturn (actual_cost > sale_amount) ? (actual_cost - sale_amount) : 0;\n}",
    "{\n\treturn max(0L, actual_cost - sale_amount);\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn max(0L, actual_cost - sale_amount);\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif (actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\treturn (actual_cost > sale_amount) ? (actual_cost - sale_amount) : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif (actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tif (actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\treturn 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost - sale_amount);\n}",
    "{\n\tif (actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost - sale_amount);\n}",
    "{\n\treturn actual_cost - sale_amount;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn sale_amount < actual_cost ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn sale_amount < actual_cost ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\treturn actual_cost - sale_amount;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost - sale_amount;\n}",
    "{\n\tif (actual_cost > sale_amount) \n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\treturn 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn sale_amount < actual_cost ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost - sale_amount) > 0 ? (actual_cost - sale_amount) : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\treturn (actual_cost > sale_amount) ? (actual_cost - sale_amount) : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost - sale_amount);\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\treturn 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif (actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn max(0L, actual_cost - sale_amount);\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost - sale_amount);\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\treturn (actual_cost - sale_amount);\n}",
    "{\n\treturn max(0L, actual_cost - sale_amount);\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif (actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tif (actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif (actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif (actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\treturn 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn sale_amount < actual_cost ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn sale_amount < actual_cost ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn sale_amount < actual_cost ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\treturn 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn sale_amount < actual_cost ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}\n/*\n\tWrite a function that gives profit amount on a sale if the given amount has profit else return 0.\n*/\nlong profit_amount(long actual_cost, long sale_amount) \n{\n\tif(actual_cost < sale_amount)\n\t\treturn sale_amount - actual_cost;\n\telse\n\t\treturn 0;\n}\n/*\n\tWrite a function that gives profit percent on a sale if the given amount has profit else return 0.\n*/\nlong profit_percent(long actual_cost, long sale_amount) \n{\n\tif(actual_cost < sale_amount)\n\t\treturn (sale_amount - actual_cost) * 100 / actual_cost;\n\telse\n\t\treturn 0;\n}\n/*\n\tWrite a function that gives loss percent on a sale if the given amount has loss else return 0.\n*/\nlong loss_percent(long actual_cost, long sale_amount) \n{\n\tif(actual_cost > sale_amount)\n\t\treturn (actual_cost - sale_amount) * 100 / actual_cost;\n\telse\n\t\treturn 0;\n}\n/*\n\tWrite a function that gives the discount amount on a sale if the given amount has discount else return 0.\n*/\nlong discount_amount(long actual_cost, long sale_amount) \n{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}\n/*\n\tWrite a function that gives the discount percent on a sale if the given amount has discount else return 0.\n*/\nlong discount_percent(long actual_cost, long sale_amount) \n{\n\tif(actual_cost > sale_amount)\n\t\treturn (actual_cost - sale_amount) * 100 / actual_cost;\n\telse\n\t\treturn 0;\n}\n/*\n\tWrite a function that gives the profit or loss amount on a sale.\n*/\nlong profit_loss_amount(long actual_cost, long sale_amount) \n{\n\treturn abs(actual_cost",
    "{\n\treturn sale_amount > actual_cost ? sale_amount - actual_cost : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tlong loss = 0;\n\tif(actual_cost > sale_amount)\n\t\tloss = actual_cost - sale_amount;\n\treturn loss;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost - sale_amount) > 0 ? (actual_cost - sale_amount) : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t{\n\t\treturn actual_cost - sale_amount;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? (actual_cost - sale_amount) : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn (actual_cost > sale_amount) ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\treturn actual_cost > sale_amount ? actual_cost - sale_amount : 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif (actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\tif (actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\treturn 0;\n}",
    "{\n\tif(actual_cost > sale_amount)\n\t\treturn actual_cost - sale_amount;\n\telse\n\t\treturn 0;\n}",
    "{\n\treturn max(0L, actual_cost - sale_amount);\n}"
  ]
}
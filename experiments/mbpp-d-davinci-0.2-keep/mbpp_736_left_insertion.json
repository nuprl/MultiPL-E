{
  "name": "mbpp_736_left_insertion",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\n\t\n*/\nlong left_insertion(long[] a, long x) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_736_left_insertion.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = left_insertion;\n\n    assert(candidate([1L, 2L, 4L, 5L], 6L) == 4L);\n    assert(candidate([1L, 2L, 4L, 5L], 3L) == 2L);\n    assert(candidate([1L, 2L, 4L, 5L], 7L) == 4L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong n = a.length;\n\tlong i = 0;\n\tlong j = n;\n\twhile (i < j) \n\t{\n\t\tlong k = (i + j) / 2;\n\t\tif (a[k] < x)\n\t\t\ti = k + 1;\n\t\telse\n\t\t\tj = k;\n\t}\n\treturn i;\n}",
    "{\n\tlong left = 0;\n\tlong right = a.length;\n\twhile (left < right) \n\t{\n\t\tlong mid = (left + right) / 2;\n\t\tif (a[mid] < x) \n\t\t{\n\t\t\tleft = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tright = mid;\n\t\t}\n\t}\n\treturn left;\n}",
    "{\n\tlong i = 0;\n\twhile (i < a.length && a[i] < x)\n\t\ti++;\n\treturn i;\n}",
    "{\n\tlong low = 0;\n\tlong high = a.length;\n\tlong mid;\n\twhile (low < high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (a[mid] < x) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong low = 0;\n\tlong high = a.length;\n\twhile (low < high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif (x <= a[mid]) \n\t\t{\n\t\t\thigh = mid;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong n = a.length;\n\tlong i = 0;\n\twhile (i < n) {\n\t\tif (a[i] >= x) {\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn i;\n}",
    "{\n\tlong i = 0;\n\twhile (i < a.length && a[i] < x) \n\t{\n\t\ti++;\n\t}\n\treturn i;\n}",
    "{\n\tlong left = 0;\n\tlong right = a.length;\n\t\n\twhile (left < right) \n\t{\n\t\tlong mid = (left + right) / 2;\n\t\tif (a[mid] < x) \n\t\t{\n\t\t\tleft = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tright = mid;\n\t\t}\n\t}\n\treturn left;\n}",
    "{\n    long low = 0;\n    long high = a.length;\n    long mid;\n    while (low < high) \n    {\n        mid = (low + high) / 2;\n        if (x <= a[mid]) \n        {\n            high = mid;\n        } \n        else \n        {\n            low = mid + 1;\n        }\n    }\n    return low;\n}",
    "{\n\tlong left = 0;\n\tlong right = a.length;\n\tlong mid;\n\twhile (left < right) \n\t{\n\t\tmid = (left + right) / 2;\n\t\tif (a[mid] < x) \n\t\t{\n\t\t\tleft = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tright = mid;\n\t\t}\n\t}\n\treturn left;\n}",
    "{\n\tlong n = a.length;\n\tlong i = 0;\n\tlong j = n;\n\twhile (i < j)\n\t{\n\t\tlong k = (i + j) / 2;\n\t\tif (x > a[k])\n\t\t\ti = k + 1;\n\t\telse\n\t\t\tj = k;\n\t}\n\treturn i;\n}",
    "{\n\tlong low = 0;\n\tlong high = a.length;\n\tlong mid = 0;\n\twhile (low < high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (x <= a[mid]) \n\t\t{\n\t\t\thigh = mid;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong low = 0;\n\tlong high = a.length;\n\twhile (low < high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif (a[mid] < x) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong left = 0;\n\tlong right = a.length;\n\tlong mid = 0;\n\twhile (left < right) \n\t{\n\t\tmid = (left + right) / 2;\n\t\tif (a[mid] < x) \n\t\t{\n\t\t\tleft = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tright = mid;\n\t\t}\n\t}\n\treturn left;\n}",
    "{\n\tlong lo = 0;\n\tlong hi = a.length;\n\twhile (lo < hi) \n\t{\n\t\tlong mid = (lo + hi) / 2;\n\t\tif (x <= a[mid]) \n\t\t{\n\t\t\thi = mid;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlo = mid + 1;\n\t\t}\n\t}\n\treturn lo;\n}",
    "{\n\tlong low = 0;\n\tlong high = a.length;\n\tlong mid = 0;\n\twhile (low < high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (x <= a[mid]) \n\t\t{\n\t\t\thigh = mid;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong low = 0;\n\tlong high = a.length;\n\twhile (low < high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif (x <= a[mid]) \n\t\t{\n\t\t\thigh = mid;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong left = 0;\n\tlong right = a.length;\n\twhile (left < right) \n\t{\n\t\tlong mid = (left + right) / 2;\n\t\tif (a[mid] < x) \n\t\t{\n\t\t\tleft = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tright = mid;\n\t\t}\n\t}\n\treturn left;\n}",
    "{\n\tlong lo = 0;\n\tlong hi = a.length;\n\twhile (lo < hi) \n\t{\n\t\tlong mid = (lo + hi) / 2;\n\t\tif (a[mid] < x) \n\t\t{\n\t\t\tlo = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\thi = mid;\n\t\t}\n\t}\n\treturn lo;\n}",
    "{\n\tlong n = a.length;\n\tlong i = 0;\n\tlong j = n;\n\twhile (i < j) \n\t{\n\t\tlong k = (i + j) / 2;\n\t\tif (a[k] < x) \n\t\t{\n\t\t\ti = k + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = k;\n\t\t}\n\t}\n\treturn i;\n}"
  ]
}
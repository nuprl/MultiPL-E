{
  "name": "mbpp_641_is_nonagonal",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_641_is_nonagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn n * (3 * n - 2);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsxusx6dw.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d15]\n??:? void tmpsxusx6dw.__unittest_L12_C1() [0x427a3e]\n??:? void tmpsxusx6dw.__modtest() [0x427a98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff10]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8a5]\n??:? runModuleUnitTests [0x42b811]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428164]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\t// n = (3*n*n - n)/2\n\t// n = (3*n^2 - n)/2\n\t// 2*n = 3*n^2 - n\n\t// 2*n + n = 3*n^2\n\t// n^2 + 2*n + 1 = 3*n^2\n\t// n^2 - n^2 = 2*n + 1\n\t// 0 = 2*n + 1\n\t// -1 = 2*n\n\t// n = -1/2\n\t// n = -0.5\n\t// n is not an integer\n\t// n is not a nonagonal number\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0b4ww938.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d05]\n??:? void tmp0b4ww938.__unittest_L24_C1() [0x427a2e]\n??:? void tmp0b4ww938.__modtest() [0x427a88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff00]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9dd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a895]\n??:? runModuleUnitTests [0x42b801]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428154]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_prev = 0;\n\tlong nth_prev_prev = 0;\n\tlong nth_prev_prev_prev = 0;\n\t\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tnth_prev_prev_prev = nth_prev_prev;\n\t\tnth_prev_prev = nth_prev;\n\t\tnth_prev = nth;\n\t\tnth = i + nth_prev_prev_prev;\n\t}\n\t\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuw20y2jd.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpuw20y2jd.__unittest_L25_C1() [0x427a86]\n??:? void tmpuw20y2jd.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(8 * n + 1) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpz2d1exp9.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz2d1exp9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth * (nth + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7wzeznb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7wzeznb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn isqrt(8*n + 1) == (8*n + 1) % 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmppx21_yr8.d(10): Error: undefined identifier `isqrt`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppx21_yr8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = n * (3 * n - 2);\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_uz93axk.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d15]\n??:? void tmp_uz93axk.__unittest_L13_C1() [0x427a3e]\n??:? void tmp_uz93axk.__modtest() [0x427a98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff10]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8a5]\n??:? runModuleUnitTests [0x42b811]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428164]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8*n) - 1) / 2;\n\treturn nth == (long)nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp2lq306qy.d(11): Error: C style cast illegal, use `cast(long)nth`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2lq306qy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == long(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp2vpgc2rk.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2vpgc2rk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong i = 0;\n\twhile (nth < n) {\n\t\ti++;\n\t\tnth = i * (3 * i - 1) / 2;\n\t}\n\treturn nth == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpi2t2s77h.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpi2t2s77h.__unittest_L18_C1() [0x427a8a]\n??:? void tmpi2t2s77h.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp21ekqy7w.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp21ekqy7w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long) (sqrt(8.0 * n + 1.0) - 1.0) / 2.0;\n\tlong sum = (nth * (nth + 1)) / 2;\n\treturn (n == sum);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpevox6e6z.d(10): Error: C style cast illegal, use `cast(long)(sqrt(8.00000 * n + 1.00000) - 1.00000)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpevox6e6z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tauto a = cast(long) sqrt(8*n + 1);\n\treturn a*a == 8*n + 1;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp39_7wsxr.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp39_7wsxr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn is_square(8*n + 1);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpar8q2azc.d(10): Error: undefined identifier `is_square`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpar8q2azc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp21ekqy7w.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp21ekqy7w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn n * (3 * n - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp45a9txx4.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp45a9txx4.__unittest_L12_C1() [0x427a4a]\n??:? void tmp45a9txx4.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(8*n + 1) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp8zyxb_y_.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8zyxb_y_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_test = 0;\n\tlong nth_nonagonal_test_2 = 0;\n\tlong nth_nonagonal_test_3 = 0;\n\tlong nth_nonagonal_test_4 = 0;\n\tlong nth_nonagonal_test_5 = 0;\n\tlong nth_nonagonal_test_6 = 0;\n\tlong nth_nonagonal_test_7 = 0;\n\tlong nth_nonagonal_test_8 = 0;\n\tlong nth_nonagonal_test_9 = 0;\n\tlong nth_nonagonal_test_10 = 0;\n\tlong nth_nonagonal_test_11 = 0;\n\tlong nth_nonagonal_test_12 = 0;\n\tlong nth_nonagonal_test_13 = 0;\n\tlong nth_nonagonal_test_14 = 0;\n\tlong nth_nonagonal_test_15 = 0;\n\tlong nth_nonagonal_test_16 = 0;\n\tlong nth_nonagonal_test_17 = 0;\n\tlong nth_nonagonal_test_18 = 0;\n\tlong nth_nonagonal_test_19 = 0;\n\tlong nth_nonagonal_test_20 = 0;\n\tlong nth_nonagonal_test_21 = 0;\n\tlong nth_nonagonal_test_22 = 0;\n\tlong nth_nonagonal_test_23 = 0;\n\tlong nth_nonagonal_test_24 = 0;\n\tlong nth_nonagonal_test_25 = 0;\n\tlong nth_nonagonal_test_26 = 0;\n\tlong nth_nonagonal_test_27 = 0;\n\tlong nth_nonagonal_test_28 = 0;\n\tlong nth_nonagonal_test_29 = 0;\n\tlong nth_nonagonal_test_30 = 0;\n\tlong nth_nonagonal_test_31 = 0;\n\tlong nth_nonagonal_test_32 = 0;\n\tlong nth_nonagonal_test_33 = 0;\n\tlong nth_\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpw2y6gyk3.d(45): Error: semicolon expected, not `unittest`\n/tmp/tmpw2y6gyk3.d(45): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw2y6gyk3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpfqh7vom8.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfqh7vom8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmphbdr6e5g.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphbdr6e5g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmphbdr6e5g.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphbdr6e5g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(8 * n + 1) - 1) / 2;\n\treturn nth == long(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp4f93tbh3.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4f93tbh3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(8*n+1)-1)/2;\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpngurz7yq.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpngurz7yq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn n == (sqrt(8 * n + 1) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp6fblym1m.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6fblym1m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong i = 0;\n\twhile (nth < n) {\n\t\ti++;\n\t\tnth = i * (3 * i - 1) / 2;\n\t}\n\tif (nth == n) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphh6mtekv.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmphh6mtekv.__unittest_L21_C1() [0x427a92]\n??:? void tmphh6mtekv.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sqrt = sqrt(n);\n\tif (n_sqrt * n_sqrt == n)\n\t\treturn n_sqrt;\n\treturn 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpq9asuisj.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq9asuisj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (n > 0) && (n == (sqrt(8*n + 1) + 1) / 2);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpfaxwddrw.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfaxwddrw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_test = 0;\n\tlong nth_nonagonal_test_2 = 0;\n\tlong nth_nonagonal_test_3 = 0;\n\tlong nth_nonagonal_test_4 = 0;\n\tlong nth_nonagonal_test_5 = 0;\n\tlong nth_nonagonal_test_6 = 0;\n\tlong nth_nonagonal_test_7 = 0;\n\tlong nth_nonagonal_test_8 = 0;\n\tlong nth_nonagonal_test_9 = 0;\n\tlong nth_nonagonal_test_10 = 0;\n\tlong nth_nonagonal_test_11 = 0;\n\tlong nth_nonagonal_test_12 = 0;\n\tlong nth_nonagonal_test_13 = 0;\n\tlong nth_nonagonal_test_14 = 0;\n\tlong nth_nonagonal_test_15 = 0;\n\tlong nth_nonagonal_test_16 = 0;\n\tlong nth_nonagonal_test_17 = 0;\n\tlong nth_nonagonal_test_18 = 0;\n\tlong nth_nonagonal_test_19 = 0;\n\tlong nth_nonagonal_test_20 = 0;\n\tlong nth_nonagonal_test_21 = 0;\n\tlong nth_nonagonal_test_22 = 0;\n\tlong nth_nonagonal_test_23 = 0;\n\tlong nth_nonagonal_test_24 = 0;\n\tlong nth_nonagonal_test_25 = 0;\n\tlong nth_nonagonal_test_26 = 0;\n\tlong nth_nonagonal_test_27 = 0;\n\tlong nth_nonagonal_test_28 = 0;\n\tlong nth_nonagonal_test_29 = 0;\n\tlong nth_nonagonal_test_30 = 0;\n\tlong nth_nonagonal_test_31 = 0;\n\tlong nth_nonagonal_test_32 = 0;\n\tlong nth_nonagonal_test_33 = 0;\n\tlong nth_\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpw2y6gyk3.d(45): Error: semicolon expected, not `unittest`\n/tmp/tmpw2y6gyk3.d(45): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw2y6gyk3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(2*n);\n\treturn nth*(nth+1) == 2*n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp640ooonu.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp640ooonu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp21ekqy7w.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp21ekqy7w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\t\n\tif(n <= 0)\n\t\treturn 0;\n\t\n\tnth_nonagonal = n * (3 * n - 2);\n\t\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8r4mvs3m.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8r4mvs3m.__unittest_L19_C1() [0x427a4a]\n??:? void tmp8r4mvs3m.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\t// n = (3*n^2 - n)/2\n\t// n^2 - n - 2*n = 0\n\t// n^2 - 3n = 0\n\t// n(n-3) = 0\n\t// n = 0 or n = 3\n\t// n = 0 is not valid\n\t// n = 3 is valid\n\t// n = 3 is the first nonagonal number\n\t// n = 3 + 3*(n-1)\n\t// n = 3 + 3n - 3\n\t// n = 3n\n\t// n = 3n + 0\n\t// n = 3n + 3*0\n\t// n = 3n + 3*(n-1)\n\t// n = 3n + 3n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n - 3\n\t// n = 6n -\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpm49942f0.d(63): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm49942f0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth * (3 * nth - 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpybeqji1s.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpybeqji1s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == long(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp2vpgc2rk.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2vpgc2rk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_prev = 0;\n\tlong i = 0;\n\twhile (nth < n) {\n\t\tnth_prev = nth;\n\t\tnth = (i * (i + 1)) / 2;\n\t\ti++;\n\t}\n\treturn nth == n ? i : 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu0qt9mcp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpu0qt9mcp.__unittest_L20_C1() [0x427a8a]\n??:? void tmpu0qt9mcp.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n1 = (long)floor(sqrt(2*n));\n\tlong n2 = (long)ceil(sqrt(2*n));\n\t\n\tif (n1*n2 == 2*n)\n\t\treturn n1;\n\telse\n\t\treturn -1;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp5xs9oiyw.d(10): Error: C style cast illegal, use `cast(long)floor(sqrt(2 * n))`\n/tmp/tmp5xs9oiyw.d(11): Error: C style cast illegal, use `cast(long)ceil(sqrt(2 * n))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5xs9oiyw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_sq = 0;\n\tlong nth_sq_plus_1 = 0;\n\t\n\tnth_sq = n * n;\n\tnth_sq_plus_1 = nth_sq + 1;\n\tnth = (nth_sq_plus_1 / 2);\n\t\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzhizycid.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d1d]\n??:? void tmpzhizycid.__unittest_L20_C1() [0x427a46]\n??:? void tmpzhizycid.__modtest() [0x427aa0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff18]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9f5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ad]\n??:? runModuleUnitTests [0x42b819]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42816c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth * (nth + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7wzeznb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7wzeznb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_square = 0;\n\tlong nth_square_plus_one = 0;\n\tlong nth_square_plus_two = 0;\n\tlong nth_square_plus_three = 0;\n\tlong nth_square_plus_four = 0;\n\tlong nth_square_plus_five = 0;\n\tlong nth_square_plus_six = 0;\n\tlong nth_square_plus_seven = 0;\n\tlong nth_square_plus_eight = 0;\n\tlong nth_square_plus_nine = 0;\n\tlong nth_square_plus_ten = 0;\n\tlong nth_square_plus_eleven = 0;\n\tlong nth_square_plus_twelve = 0;\n\tlong nth_square_plus_thirteen = 0;\n\tlong nth_square_plus_fourteen = 0;\n\tlong nth_square_plus_fifteen = 0;\n\tlong nth_square_plus_sixteen = 0;\n\tlong nth_square_plus_seventeen = 0;\n\tlong nth_square_plus_eighteen = 0;\n\tlong nth_square_plus_nineteen = 0;\n\tlong nth_square_plus_twenty = 0;\n\tlong nth_square_plus_twentyone = 0;\n\tlong nth_square_plus_twentytwo = 0;\n\tlong nth_square_plus_twentythree = 0;\n\tlong nth_square_plus_twentyfour = 0;\n\tlong nth_square_plus_twentyfive = 0;\n\tlong nth_square_plus_twentysix = 0;\n\tlong nth_square_plus_twentyseven = 0;\n\tlong nth_square_plus_twentyeight = 0;\n\tlong nth_square_plus_twentynine = 0;\n\tlong nth_square_plus_thirty = 0;\n\tlong nth_square_plus_thirtyone = 0;\n\tlong nth_square_plus_thirtytwo = 0;\n\tlong nth_square_\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpxt69d4ce.d(45): Error: semicolon expected, not `unittest`\n/tmp/tmpxt69d4ce.d(45): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxt69d4ce.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sqrt = sqrt(8 * n + 1);\n\treturn (n_sqrt * n_sqrt == 8 * n + 1);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpo13ujs2j.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo13ujs2j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == floor(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmps07w_jr7.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmps07w_jr7.d(11): Error: `std.math.floor` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4394):     `std.math.floor(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4487):     `std.math.floor(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps07w_jr7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn n == (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpfd7fhfxt.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfd7fhfxt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == long(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp2vpgc2rk.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2vpgc2rk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpfqh7vom8.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfqh7vom8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_count = 0;\n\tlong nth_nonagonal_count_prev = 0;\n\tlong nth_nonagonal_count_prev_prev = 0;\n\tlong nth_nonagonal_count_prev_prev_prev = 0;\n\tlong nth_nonagonal_count_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_count_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_count_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_count_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_count_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_count_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp97kiwalr.d(29): Error: semicolon expected, not `unittest`\n/tmp/tmp97kiwalr.d(29): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp97kiwalr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = n * (3 * n - 2);\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_uz93axk.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d15]\n??:? void tmp_uz93axk.__unittest_L13_C1() [0x427a3e]\n??:? void tmp_uz93axk.__modtest() [0x427a98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff10]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8a5]\n??:? runModuleUnitTests [0x42b811]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428164]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == long(nth) ? nth : 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp7mug1c07.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mug1c07.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp21ekqy7w.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp21ekqy7w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n1 = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn n1 * (n1 + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpijb7gqz5.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpijb7gqz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp21ekqy7w.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp21ekqy7w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)floor(sqrt(2*n + 0.25) - 0.5);\n\treturn nth*(nth+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpz02tngfl.d(10): Error: C style cast illegal, use `cast(long)floor(sqrt(2 * n + 0.25) - 0.5)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz02tngfl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth * (nth + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7wzeznb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7wzeznb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_sqr = 0;\n\t\n\tnth_nonagonal_sqr = (8 * n) + 1;\n\tnth_nonagonal = (long)sqrt(nth_nonagonal_sqr);\n\t\n\tif (nth_nonagonal * nth_nonagonal == nth_nonagonal_sqr)\n\t\treturn nth_nonagonal;\n\telse\n\t\treturn 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmptwhh5pfs.d(14): Error: C style cast illegal, use `cast(long)sqrt(nth_nonagonal_sqr)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwhh5pfs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn isqrt(1 + 8 * n) % 4 == 3;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmps_c8_fc0.d(10): Error: undefined identifier `isqrt`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps_c8_fc0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8*n) - 1) / 2;\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpo6c4d618.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6c4d618.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == long(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp2vpgc2rk.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2vpgc2rk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(8*n + 1) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp8zyxb_y_.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8zyxb_y_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sqrt = sqrt(n);\n\treturn n == n_sqrt * n_sqrt;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpa2kfkrvh.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa2kfkrvh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong i = 1;\n\twhile(nth < n)\n\t{\n\t\tnth += i;\n\t\ti++;\n\t}\n\treturn nth == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp20vqu7fs.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmp20vqu7fs.__unittest_L19_C1() [0x427a6e]\n??:? void tmp20vqu7fs.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == floor(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmps07w_jr7.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmps07w_jr7.d(11): Error: `std.math.floor` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4394):     `std.math.floor(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4487):     `std.math.floor(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps07w_jr7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(8*n+1);\n\treturn nth*(nth+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpjdlbmlh3.d(10): Error: C style cast illegal, use `cast(long)sqrt(8 * n + 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjdlbmlh3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpfqh7vom8.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfqh7vom8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp21ekqy7w.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp21ekqy7w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp21ekqy7w.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp21ekqy7w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8*n) - 1) / 2 == (long)(sqrt(1 + 8*n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp28frlnnk.d(10): Error: C style cast illegal, use `cast(long)(sqrt(1 + 8 * n) - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp28frlnnk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong i = 1;\n\twhile(nth < n)\n\t{\n\t\tnth = (i * (3 * i - 1)) / 2;\n\t\ti++;\n\t}\n\tif(nth == n)\n\t{\n\t\treturn 1;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfbwt342v.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpfbwt342v.__unittest_L26_C1() [0x427a96]\n??:? void tmpfbwt342v.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn is_square(8*n + 1);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpar8q2azc.d(10): Error: undefined identifier `is_square`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpar8q2azc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)floor((sqrt(8*n + 1) - 1) / 2);\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp1af3oxit.d(10): Error: C style cast illegal, use `cast(long)floor((sqrt(8 * n + 1) - 1) / 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1af3oxit.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong m = (sqrt(8*n+1)-1)/2;\n\treturn m*(m+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpq64eyd9a.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq64eyd9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n2 = n * 2;\n\tlong n3 = n2 + 1;\n\tlong n4 = n3 * 2;\n\tlong n5 = n4 + 1;\n\tlong n6 = n5 * 2;\n\tlong n7 = n6 + 1;\n\tlong n8 = n7 * 2;\n\tlong n9 = n8 + 1;\n\tlong n10 = n9 * 2;\n\tlong n11 = n10 + 1;\n\tlong n12 = n11 * 2;\n\tlong n13 = n12 + 1;\n\tlong n14 = n13 * 2;\n\tlong n15 = n14 + 1;\n\tlong n16 = n15 * 2;\n\tlong n17 = n16 + 1;\n\tlong n18 = n17 * 2;\n\tlong n19 = n18 + 1;\n\tlong n20 = n19 * 2;\n\tlong n21 = n20 + 1;\n\tlong n22 = n21 * 2;\n\tlong n23 = n22 + 1;\n\tlong n24 = n23 * 2;\n\tlong n25 = n24 + 1;\n\tlong n26 = n25 * 2;\n\tlong n27 = n26 + 1;\n\tlong n28 = n27 * 2;\n\tlong n29 = n28 + 1;\n\tlong n30 = n29 * 2;\n\tlong n31 = n30 + 1;\n\tlong n32 = n31 * 2;\n\tlong n33 = n32 + 1;\n\tlong n34 = n33 * 2;\n\tlong n35 = n34 + 1;\n\tlong n36 = n35 * 2;\n\tlong n37 = n36 + 1;\n\tlong n38 = n37 * 2;\n\tlong n39 = n38 + 1;\n\tlong n40 = n39 * 2;\n\tlong n41 = n40 + 1;\n\tlong n42 = n41 * 2;\n\tlong n43 = n42 + 1;\n\tlong n44 = n43 * 2;\n\tlong n45 = n44 + 1;\n\tlong n46 = n45 * 2;\n\tlong n47 = n46 + 1;\n\tlong n48\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpgaoaqm_6.d(57): Error: semicolon expected, not `unittest`\n/tmp/tmpgaoaqm_6.d(57): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgaoaqm_6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == (long)nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmprin68mf5.d(11): Error: C style cast illegal, use `cast(long)nth`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprin68mf5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1.0 + 8.0 * n) - 1.0) / 2.0;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmp44bkp1zh.d(10): Error: cannot implicitly convert expression `(sqrt(1.00000 + 8.00000 * cast(double)n) - 1.00000) / 2.00000` of type `double` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp44bkp1zh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == (long)nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmprin68mf5.d(11): Error: C style cast illegal, use `cast(long)nth`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprin68mf5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_sqr = 0;\n\tlong nth_sqr_plus_nth = 0;\n\t\n\tnth_sqr = n * n;\n\tnth_sqr_plus_nth = nth_sqr + n;\n\t\n\tif(nth_sqr_plus_nth % 2 == 0)\n\t{\n\t\tnth = nth_sqr_plus_nth / 2;\n\t}\n\telse\n\t{\n\t\tnth = 0;\n\t}\n\t\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0tyb_irs.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmp0tyb_irs.__unittest_L28_C1() [0x427a8e]\n??:? void tmp0tyb_irs.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n2 = n * 2;\n\tlong n3 = n2 * 3;\n\tlong n4 = n3 * 4;\n\tlong n5 = n4 * 5;\n\tlong n6 = n5 * 6;\n\tlong n7 = n6 * 7;\n\tlong n8 = n7 * 8;\n\tlong n9 = n8 * 9;\n\tlong n10 = n9 * 10;\n\tlong n11 = n10 * 11;\n\tlong n12 = n11 * 12;\n\tlong n13 = n12 * 13;\n\tlong n14 = n13 * 14;\n\tlong n15 = n14 * 15;\n\tlong n16 = n15 * 16;\n\tlong n17 = n16 * 17;\n\tlong n18 = n17 * 18;\n\tlong n19 = n18 * 19;\n\tlong n20 = n19 * 20;\n\tlong n21 = n20 * 21;\n\tlong n22 = n21 * 22;\n\tlong n23 = n22 * 23;\n\tlong n24 = n23 * 24;\n\tlong n25 = n24 * 25;\n\tlong n26 = n25 * 26;\n\tlong n27 = n26 * 27;\n\tlong n28 = n27 * 28;\n\tlong n29 = n28 * 29;\n\tlong n30 = n29 * 30;\n\tlong n31 = n30 * 31;\n\tlong n32 = n31 * 32;\n\tlong n33 = n32 * 33;\n\tlong n34 = n33 * 34;\n\tlong n35 = n34 * 35;\n\tlong n36 = n35 * 36;\n\tlong n37 = n36 * 37;\n\tlong n38 = n37 * 38;\n\tlong n39 = n38 * 39;\n\tlong n40 = n39 * 40;\n\tlong n41 = n40 * 41;\n\tlong n42 = n41 * 42;\n\tlong n43 = n42 * 43;\n\tlong n44 = n43 * 44;\n\tlong n45 = n44 * 45;\n\tlong n46 = n45 * 46;\n\tlong n47 = n46 * 47;\n\tlong n48\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp6xjneost.d(57): Error: semicolon expected, not `unittest`\n/tmp/tmp6xjneost.d(57): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6xjneost.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn n == (sqrt(8*n+1) - 1)/2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpizdx2l16.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpizdx2l16.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == floor(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmps07w_jr7.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmps07w_jr7.d(11): Error: `std.math.floor` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4394):     `std.math.floor(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4487):     `std.math.floor(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps07w_jr7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpfqh7vom8.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfqh7vom8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(8*n + 1) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp8zyxb_y_.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8zyxb_y_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(8*n + 1) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp8zyxb_y_.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8zyxb_y_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8*n) - 1) / 2;\n\treturn a*(a+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpba_s0ldr.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpba_s0ldr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmphbdr6e5g.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphbdr6e5g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp21ekqy7w.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp21ekqy7w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_n = 0;\n\tlong nth_n_1 = 0;\n\tlong nth_n_2 = 0;\n\tlong nth_n_3 = 0;\n\tlong nth_n_4 = 0;\n\tlong nth_n_5 = 0;\n\tlong nth_n_6 = 0;\n\tlong nth_n_7 = 0;\n\tlong nth_n_8 = 0;\n\tlong nth_n_9 = 0;\n\tlong nth_n_10 = 0;\n\tlong nth_n_11 = 0;\n\tlong nth_n_12 = 0;\n\tlong nth_n_13 = 0;\n\tlong nth_n_14 = 0;\n\tlong nth_n_15 = 0;\n\tlong nth_n_16 = 0;\n\tlong nth_n_17 = 0;\n\tlong nth_n_18 = 0;\n\tlong nth_n_19 = 0;\n\tlong nth_n_20 = 0;\n\tlong nth_n_21 = 0;\n\tlong nth_n_22 = 0;\n\tlong nth_n_23 = 0;\n\tlong nth_n_24 = 0;\n\tlong nth_n_25 = 0;\n\tlong nth_n_26 = 0;\n\tlong nth_n_27 = 0;\n\tlong nth_n_28 = 0;\n\tlong nth_n_29 = 0;\n\tlong nth_n_30 = 0;\n\tlong nth_n_31 = 0;\n\tlong nth_n_32 = 0;\n\tlong nth_n_33 = 0;\n\tlong nth_n_34 = 0;\n\tlong nth_n_35 = 0;\n\tlong nth_n_36 = 0;\n\tlong nth_n_37 = 0;\n\tlong nth_n_38 = 0;\n\tlong nth_n_39 = 0;\n\tlong nth_n_40 = 0;\n\tlong nth_n_41 = 0;\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpp2exbwdv.d(53): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp2exbwdv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_check = 0;\n\tlong nth_nonagonal_check_2 = 0;\n\tlong nth_nonagonal_check_3 = 0;\n\tlong nth_nonagonal_check_4 = 0;\n\tlong nth_nonagonal_check_5 = 0;\n\tlong nth_nonagonal_check_6 = 0;\n\tlong nth_nonagonal_check_7 = 0;\n\tlong nth_nonagonal_check_8 = 0;\n\tlong nth_nonagonal_check_9 = 0;\n\tlong nth_nonagonal_check_10 = 0;\n\tlong nth_nonagonal_check_11 = 0;\n\tlong nth_nonagonal_check_12 = 0;\n\tlong nth_nonagonal_check_13 = 0;\n\tlong nth_nonagonal_check_14 = 0;\n\tlong nth_nonagonal_check_15 = 0;\n\tlong nth_nonagonal_check_16 = 0;\n\tlong nth_nonagonal_check_17 = 0;\n\tlong nth_nonagonal_check_18 = 0;\n\tlong nth_nonagonal_check_19 = 0;\n\tlong nth_nonagonal_check_20 = 0;\n\tlong nth_nonagonal_check_21 = 0;\n\tlong nth_nonagonal_check_22 = 0;\n\tlong nth_nonagonal_check_23 = 0;\n\tlong nth_nonagonal_check_24 = 0;\n\tlong nth_nonagonal_check_25 = 0;\n\tlong nth_nonagonal_check_26 = 0;\n\tlong nth_nonagonal_check_27 = 0;\n\tlong nth_nonagonal_check_28 = 0;\n\tlong nth_nonagonal_check_29 = 0;\n\tlong nth_nonagonal_check_30 = 0;\n\tlong nth_nonagonal_check_31 = 0;\n\tlong nth_nonagonal_check_32 = 0;\n\tlong nth_nonagonal_check_33 = 0;\n\tlong nth_\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpv0sd6417.d(45): Error: semicolon expected, not `unittest`\n/tmp/tmpv0sd6417.d(45): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv0sd6417.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == long(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp2vpgc2rk.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2vpgc2rk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp21ekqy7w.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp21ekqy7w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == long(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp2vpgc2rk.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2vpgc2rk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp21ekqy7w.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp21ekqy7w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(2*n);\n\treturn (nth*(nth+1))/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpx830zvq_.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx830zvq_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong i = 0;\n\twhile(nth < n) \n\t{\n\t\tnth += i;\n\t\ti++;\n\t}\n\treturn nth == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_vqu5y7w.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp_vqu5y7w.__unittest_L19_C1() [0x427a72]\n??:? void tmp_vqu5y7w.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == (long)nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmprin68mf5.d(11): Error: C style cast illegal, use `cast(long)nth`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprin68mf5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn n == (3*n*n - 3*n + 1)/2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpurlz9qsj.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmpurlz9qsj.__unittest_L12_C1() [0x427a62]\n??:? void tmpurlz9qsj.__modtest() [0x427abc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn isqrt(1 + 8 * n) % 4 == 3;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmps_c8_fc0.d(10): Error: undefined identifier `isqrt`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps_c8_fc0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == int(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmp_9phh62y.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_9phh62y.d(11): Error: cannot implicitly convert expression `nth` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9phh62y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_prev = 0;\n\tlong nth_nonagonal_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpv7mzqlg4.d(29): Error: semicolon expected, not `unittest`\n/tmp/tmpv7mzqlg4.d(29): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv7mzqlg4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == int(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmp_9phh62y.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_9phh62y.d(11): Error: cannot implicitly convert expression `nth` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9phh62y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth * (3 * nth - 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpybeqji1s.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpybeqji1s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == int(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmp_9phh62y.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_9phh62y.d(11): Error: cannot implicitly convert expression `nth` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9phh62y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth * (nth + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7wzeznb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7wzeznb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn n * (3 * n - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp45a9txx4.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp45a9txx4.__unittest_L12_C1() [0x427a4a]\n??:? void tmp45a9txx4.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn isqrt(1 + 8 * n) % 2 == 1;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpoyyoqx1m.d(10): Error: undefined identifier `isqrt`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoyyoqx1m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(2*n + 0.25) - 0.5;\n\treturn nth*(nth+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpad1xm4ix.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n + 0.25)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpad1xm4ix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(8*n + 1) - 1) / 2;\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpf4z9wpt8.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf4z9wpt8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(8*n + 1) - 1) / 2;\n\treturn (a * (a + 1)) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmp43j50ugw.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43j50ugw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong i = 0;\n\twhile(nth < n) {\n\t\ti++;\n\t\tnth = i * (3 * i - 1) / 2;\n\t}\n\treturn nth == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiqyaedz3.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpiqyaedz3.__unittest_L18_C1() [0x427a8a]\n??:? void tmpiqyaedz3.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong i = 1;\n\twhile (n > 0) \n\t{\n\t\tn -= i;\n\t\ti++;\n\t}\n\treturn n == 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp566rqks0.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmp566rqks0.__unittest_L18_C1() [0x427a5e]\n??:? void tmp566rqks0.__modtest() [0x427ab8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp21ekqy7w.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp21ekqy7w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_sq = 0;\n\t\n\tnth = (sqrt(1 + 8 * n) - 1) / 2;\n\tnth_sq = nth * (nth + 1) / 2;\n\t\n\treturn nth_sq == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpj4bwt17_.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj4bwt17_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth * (nth + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7wzeznb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7wzeznb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong i = 1;\n\twhile(nth < n)\n\t{\n\t\tnth += i;\n\t\ti++;\n\t}\n\treturn nth == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp20vqu7fs.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmp20vqu7fs.__unittest_L19_C1() [0x427a6e]\n??:? void tmp20vqu7fs.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == trunc(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmp8s30irj4.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8s30irj4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (n == (sqrt(8*n + 1) - 1) / 2);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmp7aqiqbxr.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7aqiqbxr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(8*n+1) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmppv71qxxs.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppv71qxxs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong i = 0;\n\twhile(nth < n) \n\t{\n\t\tnth = (i * (3 * i - 1)) / 2;\n\t\ti++;\n\t}\n\tif(nth == n) \n\t{\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo2a70u7k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpo2a70u7k.__unittest_L23_C1() [0x427a92]\n??:? void tmpo2a70u7k.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_ = n;\n\tlong i = 1;\n\twhile (n_ > 0) \n\t{\n\t\tn_ -= i;\n\t\ti++;\n\t}\n\treturn n_ == 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplzm6ooi8.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmplzm6ooi8.__unittest_L19_C1() [0x427a5e]\n??:? void tmplzm6ooi8.__modtest() [0x427ab8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_sqr = 0;\n\tlong nth_sqr_plus_nth = 0;\n\t\n\tnth_sqr = n * n;\n\tnth_sqr_plus_nth = nth_sqr + n;\n\t\n\tif (nth_sqr_plus_nth % 2 == 0) {\n\t\tnth = nth_sqr_plus_nth / 2;\n\t}\n\t\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxpp3jqzc.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpxpp3jqzc.__unittest_L23_C1() [0x427a86]\n??:? void tmpxpp3jqzc.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_n = 0;\n\t\n\twhile(nth_n < n)\n\t{\n\t\tnth++;\n\t\tnth_n = nth * (3 * nth - 1) / 2;\n\t}\n\t\n\tif(nth_n == n)\n\t\treturn nth;\n\telse\n\t\treturn 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8q0e18gf.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmp8q0e18gf.__unittest_L24_C1() [0x427a8e]\n??:? void tmp8q0e18gf.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == long(nth) ? nth : 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp7mug1c07.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mug1c07.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\t//return n == (3*n*n - 3*n + 1) / 2;\n\treturn n == (3*n*n - 3*n + 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqft0vio9.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmpqft0vio9.__unittest_L13_C1() [0x427a62]\n??:? void tmpqft0vio9.__modtest() [0x427abc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmphbdr6e5g.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphbdr6e5g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong i = 1;\n\twhile (nth < n) \n\t{\n\t\tnth += i;\n\t\ti++;\n\t}\n\treturn nth == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt4qc7brx.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmpt4qc7brx.__unittest_L19_C1() [0x427a6e]\n??:? void tmpt4qc7brx.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong i = 1;\n\twhile (nth < n) \n\t{\n\t\tnth += i;\n\t\t++i;\n\t}\n\treturn nth == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfad4yuj0.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmpfad4yuj0.__unittest_L19_C1() [0x427a6e]\n??:? void tmpfad4yuj0.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(8*n + 1) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp8zyxb_y_.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8zyxb_y_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpfqh7vom8.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfqh7vom8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n2 = n * 2;\n\tlong n3 = n2 * 2;\n\tlong n4 = n3 * 2;\n\tlong n5 = n4 * 2;\n\tlong n6 = n5 * 2;\n\tlong n7 = n6 * 2;\n\tlong n8 = n7 * 2;\n\tlong n9 = n8 * 2;\n\tlong n10 = n9 * 2;\n\tlong n11 = n10 * 2;\n\tlong n12 = n11 * 2;\n\tlong n13 = n12 * 2;\n\tlong n14 = n13 * 2;\n\tlong n15 = n14 * 2;\n\tlong n16 = n15 * 2;\n\tlong n17 = n16 * 2;\n\tlong n18 = n17 * 2;\n\tlong n19 = n18 * 2;\n\tlong n20 = n19 * 2;\n\tlong n21 = n20 * 2;\n\tlong n22 = n21 * 2;\n\tlong n23 = n22 * 2;\n\tlong n24 = n23 * 2;\n\tlong n25 = n24 * 2;\n\tlong n26 = n25 * 2;\n\tlong n27 = n26 * 2;\n\tlong n28 = n27 * 2;\n\tlong n29 = n28 * 2;\n\tlong n30 = n29 * 2;\n\tlong n31 = n30 * 2;\n\tlong n32 = n31 * 2;\n\tlong n33 = n32 * 2;\n\tlong n34 = n33 * 2;\n\tlong n35 = n34 * 2;\n\tlong n36 = n35 * 2;\n\tlong n37 = n36 * 2;\n\tlong n38 = n37 * 2;\n\tlong n39 = n38 * 2;\n\tlong n40 = n39 * 2;\n\tlong n41 = n40 * 2;\n\tlong n42 = n41 * 2;\n\tlong n43 = n42 * 2;\n\tlong n44 = n43 * 2;\n\tlong n45 = n44 * 2;\n\tlong n46 = n45 * 2;\n\tlong n47 = n46 * 2;\n\tlong n48\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpj5i0k34k.d(57): Error: semicolon expected, not `unittest`\n/tmp/tmpj5i0k34k.d(57): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj5i0k34k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong root = sqrt(1 + 8 * n);\n\treturn root * root == 1 + 8 * n && root % 2 == 1;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpcq4mh19v.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq4mh19v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(8*n + 1) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp8zyxb_y_.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8zyxb_y_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == long(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp2vpgc2rk.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2vpgc2rk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(2*n);\n\treturn nth*(nth+1) == 2*n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp640ooonu.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp640ooonu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tdouble x = (sqrt(1.0 + 8.0 * n) - 1.0) / 2.0;\n\treturn x == cast(long)x;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9nntvwtv.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp9nntvwtv.__unittest_L13_C1() [0x427a9e]\n??:? void tmp9nntvwtv.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tauto a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a == cast(long)a;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpxkl1qpg4.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxkl1qpg4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_plus_1 = 0;\n\tlong nth_plus_2 = 0;\n\tlong nth_plus_3 = 0;\n\t\n\tnth = (n * (3 * n - 1)) / 2;\n\tnth_plus_1 = ((n + 1) * (3 * (n + 1) - 1)) / 2;\n\tnth_plus_2 = ((n + 2) * (3 * (n + 2) - 1)) / 2;\n\tnth_plus_3 = ((n + 3) * (3 * (n + 3) - 1)) / 2;\n\t\n\tif (nth == nth_plus_1 - nth_plus_2 + nth_plus_3)\n\t{\n\t\treturn nth;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfpqhgsej.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpfpqhgsej.__unittest_L29_C1() [0x427ae2]\n??:? void tmpfpqhgsej.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(8*n + 1) - 1) / 2;\n\treturn x*(x+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpa8aj6cql.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa8aj6cql.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(8*n + 1) - 1)/2;\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpldnz814d.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpldnz814d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = n * (3 * n - 1) / 2;\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgjwfa9ph.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpgjwfa9ph.__unittest_L13_C1() [0x427a4a]\n??:? void tmpgjwfa9ph.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = n * (3 * n - 2);\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_uz93axk.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d15]\n??:? void tmp_uz93axk.__unittest_L13_C1() [0x427a3e]\n??:? void tmp_uz93axk.__modtest() [0x427a98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff10]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8a5]\n??:? runModuleUnitTests [0x42b811]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428164]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_prev = 0;\n\t\n\twhile (nth_nonagonal < n) {\n\t\tnth++;\n\t\tnth_nonagonal_prev = nth_nonagonal;\n\t\tnth_nonagonal = nth * (3 * nth - 1) / 2;\n\t}\n\t\n\tif (nth_nonagonal == n) {\n\t\treturn nth;\n\t}\n\t\n\treturn 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppz8ffe1v.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmppz8ffe1v.__unittest_L26_C1() [0x427a92]\n??:? void tmppz8ffe1v.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong i = 1;\n\twhile(nth < n)\n\t{\n\t\tnth += i;\n\t\t++i;\n\t}\n\treturn nth == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy8o968vw.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmpy8o968vw.__unittest_L19_C1() [0x427a6e]\n??:? void tmpy8o968vw.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpfqh7vom8.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfqh7vom8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8*n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpiq7m3yij.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiq7m3yij.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sqrt = (long)sqrt(n);\n\treturn n_sqrt * (n_sqrt + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpywlf7l_7.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpywlf7l_7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == floor(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmps07w_jr7.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmps07w_jr7.d(11): Error: `std.math.floor` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4394):     `std.math.floor(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4487):     `std.math.floor(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps07w_jr7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn n == (n*(3*n-1))/2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq8rhv6_8.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpq8rhv6_8.__unittest_L12_C1() [0x427a52]\n??:? void tmpq8rhv6_8.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_prev = 0;\n\tlong nth_nonagonal_prev_prev = 0;\n\t\n\tif (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\t\n\twhile (nth < n) \n\t{\n\t\tnth_nonagonal_prev_prev = nth_nonagonal_prev;\n\t\tnth_nonagonal_prev = nth_nonagonal;\n\t\tnth_nonagonal = nth_nonagonal_prev + nth_nonagonal_prev_prev;\n\t\tnth++;\n\t}\n\t\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp788ln8hl.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmp788ln8hl.__unittest_L30_C1() [0x427a82]\n??:? void tmp788ln8hl.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(2*n + 0.25) - 0.5;\n\treturn nth*(nth+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpad1xm4ix.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n + 0.25)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpad1xm4ix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (n > 0) && (n == (sqrt(8*n + 1) + 1) / 2);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpfaxwddrw.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfaxwddrw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(8*n + 1) - 1) / 2;\n\treturn a*(a + 1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpxcx__u26.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxcx__u26.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8*n) - 1) / 2 == (int)(sqrt(1 + 8*n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpeki023i8.d(10): Error: C style cast illegal, use `cast(int)(sqrt(1 + 8 * n) - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeki023i8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == (long)nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmprin68mf5.d(11): Error: C style cast illegal, use `cast(long)nth`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprin68mf5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_square = 0;\n\tlong nth_square_plus_1 = 0;\n\tlong nth_square_minus_1 = 0;\n\t\n\tnth = (long)sqrt(n);\n\tnth_square = nth * nth;\n\tnth_square_plus_1 = (nth + 1) * (nth + 1);\n\tnth_square_minus_1 = (nth - 1) * (nth - 1);\n\t\n\tif (nth_square_plus_1 == n || nth_square_minus_1 == n)\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpm1g382g_.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm1g382g_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong i = 1;\n\twhile (nth < n) {\n\t\tnth = (i * (3 * i - 1)) / 2;\n\t\ti++;\n\t}\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq8lc5i_2.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpq8lc5i_2.__unittest_L18_C1() [0x427a82]\n??:? void tmpq8lc5i_2.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sqrt = (long)sqrt(n);\n\treturn n_sqrt * n_sqrt == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpv99wcie4.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv99wcie4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_prev = 0;\n\tlong nth_prev_prev = 0;\n\t\n\tif (n == 1)\n\t\treturn 1;\n\telse if (n == 2)\n\t\treturn 2;\n\telse if (n == 3)\n\t\treturn 4;\n\telse if (n == 4)\n\t\treturn 7;\n\telse if (n == 5)\n\t\treturn 11;\n\telse if (n == 6)\n\t\treturn 16;\n\telse if (n == 7)\n\t\treturn 22;\n\telse if (n == 8)\n\t\treturn 29;\n\telse if (n == 9)\n\t\treturn 37;\n\telse if (n == 10)\n\t\treturn 46;\n\telse if (n == 11)\n\t\treturn 56;\n\telse if (n == 12)\n\t\treturn 67;\n\telse if (n == 13)\n\t\treturn 79;\n\telse if (n == 14)\n\t\treturn 92;\n\telse if (n == 15)\n\t\treturn 106;\n\telse if (n == 16)\n\t\treturn 121;\n\telse if (n == 17)\n\t\treturn 137;\n\telse if (n == 18)\n\t\treturn 154;\n\telse if (n == 19)\n\t\treturn 172;\n\telse if (n == 20)\n\t\treturn 191;\n\telse if (n == 21)\n\t\treturn 211;\n\telse if (n == 22)\n\t\treturn 232;\n\telse if (n == 23)\n\t\treturn 254;\n\telse if (n == 24)\n\t\treturn 277;\n\telse if (n == 25)\n\t\treturn 301;\n\telse if (n == 26)\n\t\treturn 326;\n\telse if (n == 27)\n\t\treturn 352;\n\telse if (n == 28)\n\t\treturn 379;\n\telse if (n == 29)\n\t\treturn 407;\n\telse if (n == 30)\n\t\treturn 436;\n\telse if (n == 31)\n\t\treturn 466;\n\telse if (n == 32)\n\t\treturn\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpvi9b7tkt.d(78): Error: expression expected, not `unittest`\n/tmp/tmpvi9b7tkt.d(79): Error: found `{` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvi9b7tkt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(8*n+1)-1)/2;\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpngurz7yq.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpngurz7yq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (n == (n * (3 * n - 1)) / 2);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp27vmtoxs.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmp27vmtoxs.__unittest_L12_C1() [0x427a52]\n??:? void tmp27vmtoxs.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpqaww91cb.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaww91cb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong i = 0;\n\twhile(nth < n)\n\t{\n\t\tnth = (i * (i + 1)) / 2;\n\t\ti++;\n\t}\n\treturn nth == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0lrsasox.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmp0lrsasox.__unittest_L19_C1() [0x427a82]\n??:? void tmp0lrsasox.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(8*n+1) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmppv71qxxs.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppv71qxxs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpfqh7vom8.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfqh7vom8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == int(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmp_9phh62y.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_9phh62y.d(11): Error: cannot implicitly convert expression `nth` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9phh62y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(8*n + 1) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp8zyxb_y_.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8zyxb_y_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(8*n + 1) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122790,
      "stdout": "",
      "stderr": "/tmp/tmpavssn_hf.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpavssn_hf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}